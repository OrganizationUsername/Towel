### YamlMime:XRefMap
sorted: true
references:
- uid: Towel
  name: Towel
  href: api/Towel.html
  commentId: N:Towel
  fullName: Towel
  nameWithType: Towel
- uid: Towel.ActionRuntime
  name: ActionRuntime
  href: api/Towel.ActionRuntime.html
  commentId: T:Towel.ActionRuntime
  fullName: Towel.ActionRuntime
  nameWithType: ActionRuntime
- uid: Towel.ActionRuntime.Do
  name: Do()
  href: api/Towel.ActionRuntime.html#Towel_ActionRuntime_Do
  commentId: M:Towel.ActionRuntime.Do
  fullName: Towel.ActionRuntime.Do()
  nameWithType: ActionRuntime.Do()
- uid: Towel.ActionRuntime.Do*
  name: Do
  href: api/Towel.ActionRuntime.html#Towel_ActionRuntime_Do_
  commentId: Overload:Towel.ActionRuntime.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime.Do
  nameWithType: ActionRuntime.Do
- uid: Towel.ActionRuntime.op_Implicit(Action)~Towel.ActionRuntime
  name: Implicit(Action to ActionRuntime)
  href: api/Towel.ActionRuntime.html#Towel_ActionRuntime_op_Implicit_Action__Towel_ActionRuntime
  commentId: M:Towel.ActionRuntime.op_Implicit(Action)~Towel.ActionRuntime
  name.vb: Widening(Action to ActionRuntime)
  fullName: Towel.ActionRuntime.Implicit(Action to Towel.ActionRuntime)
  fullName.vb: Towel.ActionRuntime.Widening(Action to Towel.ActionRuntime)
  nameWithType: ActionRuntime.Implicit(Action to ActionRuntime)
  nameWithType.vb: ActionRuntime.Widening(Action to ActionRuntime)
- uid: Towel.ActionRuntime.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime.html#Towel_ActionRuntime_op_Implicit_
  commentId: Overload:Towel.ActionRuntime.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime.Implicit
  fullName.vb: Towel.ActionRuntime.Widening
  nameWithType: ActionRuntime.Implicit
  nameWithType.vb: ActionRuntime.Widening
- uid: Towel.ActionRuntime`1
  name: ActionRuntime<T1>
  href: api/Towel.ActionRuntime-1.html
  commentId: T:Towel.ActionRuntime`1
  name.vb: ActionRuntime(Of T1)
  fullName: Towel.ActionRuntime<T1>
  fullName.vb: Towel.ActionRuntime(Of T1)
  nameWithType: ActionRuntime<T1>
  nameWithType.vb: ActionRuntime(Of T1)
- uid: Towel.ActionRuntime`1.Do(`0)
  name: Do(T1)
  href: api/Towel.ActionRuntime-1.html#Towel_ActionRuntime_1_Do__0_
  commentId: M:Towel.ActionRuntime`1.Do(`0)
  fullName: Towel.ActionRuntime<T1>.Do(T1)
  fullName.vb: Towel.ActionRuntime(Of T1).Do(T1)
  nameWithType: ActionRuntime<T1>.Do(T1)
  nameWithType.vb: ActionRuntime(Of T1).Do(T1)
- uid: Towel.ActionRuntime`1.Do*
  name: Do
  href: api/Towel.ActionRuntime-1.html#Towel_ActionRuntime_1_Do_
  commentId: Overload:Towel.ActionRuntime`1.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1>.Do
  fullName.vb: Towel.ActionRuntime(Of T1).Do
  nameWithType: ActionRuntime<T1>.Do
  nameWithType.vb: ActionRuntime(Of T1).Do
- uid: Towel.ActionRuntime`1.op_Implicit(Action{`0})~Towel.ActionRuntime{`0}
  name: Implicit(Action<T1> to ActionRuntime<T1>)
  href: api/Towel.ActionRuntime-1.html#Towel_ActionRuntime_1_op_Implicit_Action__0___Towel_ActionRuntime__0_
  commentId: M:Towel.ActionRuntime`1.op_Implicit(Action{`0})~Towel.ActionRuntime{`0}
  name.vb: Widening(Action(Of T1) to ActionRuntime(Of T1))
  fullName: Towel.ActionRuntime<T1>.Implicit(Action<T1> to Towel.ActionRuntime<T1>)
  fullName.vb: Towel.ActionRuntime(Of T1).Widening(Action(Of T1) to Towel.ActionRuntime(Of T1))
  nameWithType: ActionRuntime<T1>.Implicit(Action<T1> to ActionRuntime<T1>)
  nameWithType.vb: ActionRuntime(Of T1).Widening(Action(Of T1) to ActionRuntime(Of T1))
- uid: Towel.ActionRuntime`1.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-1.html#Towel_ActionRuntime_1_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1).Widening
  nameWithType: ActionRuntime<T1>.Implicit
  nameWithType.vb: ActionRuntime(Of T1).Widening
- uid: Towel.ActionRuntime`2
  name: ActionRuntime<T1, T2>
  href: api/Towel.ActionRuntime-2.html
  commentId: T:Towel.ActionRuntime`2
  name.vb: ActionRuntime(Of T1, T2)
  fullName: Towel.ActionRuntime<T1, T2>
  fullName.vb: Towel.ActionRuntime(Of T1, T2)
  nameWithType: ActionRuntime<T1, T2>
  nameWithType.vb: ActionRuntime(Of T1, T2)
- uid: Towel.ActionRuntime`2.Do(`0,`1)
  name: Do(T1, T2)
  href: api/Towel.ActionRuntime-2.html#Towel_ActionRuntime_2_Do__0__1_
  commentId: M:Towel.ActionRuntime`2.Do(`0,`1)
  fullName: Towel.ActionRuntime<T1, T2>.Do(T1, T2)
  fullName.vb: Towel.ActionRuntime(Of T1, T2).Do(T1, T2)
  nameWithType: ActionRuntime<T1, T2>.Do(T1, T2)
  nameWithType.vb: ActionRuntime(Of T1, T2).Do(T1, T2)
- uid: Towel.ActionRuntime`2.Do*
  name: Do
  href: api/Towel.ActionRuntime-2.html#Towel_ActionRuntime_2_Do_
  commentId: Overload:Towel.ActionRuntime`2.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2).Do
  nameWithType: ActionRuntime<T1, T2>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2).Do
- uid: Towel.ActionRuntime`2.op_Implicit(Action{`0,`1})~Towel.ActionRuntime{`0,`1}
  name: Implicit(Action<T1, T2> to ActionRuntime<T1, T2>)
  href: api/Towel.ActionRuntime-2.html#Towel_ActionRuntime_2_op_Implicit_Action__0__1___Towel_ActionRuntime__0__1_
  commentId: M:Towel.ActionRuntime`2.op_Implicit(Action{`0,`1})~Towel.ActionRuntime{`0,`1}
  name.vb: Widening(Action(Of T1, T2) to ActionRuntime(Of T1, T2))
  fullName: Towel.ActionRuntime<T1, T2>.Implicit(Action<T1, T2> to Towel.ActionRuntime<T1, T2>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2).Widening(Action(Of T1, T2) to Towel.ActionRuntime(Of T1, T2))
  nameWithType: ActionRuntime<T1, T2>.Implicit(Action<T1, T2> to ActionRuntime<T1, T2>)
  nameWithType.vb: ActionRuntime(Of T1, T2).Widening(Action(Of T1, T2) to ActionRuntime(Of T1, T2))
- uid: Towel.ActionRuntime`2.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-2.html#Towel_ActionRuntime_2_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2).Widening
  nameWithType: ActionRuntime<T1, T2>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2).Widening
- uid: Towel.ActionRuntime`3
  name: ActionRuntime<T1, T2, T3>
  href: api/Towel.ActionRuntime-3.html
  commentId: T:Towel.ActionRuntime`3
  name.vb: ActionRuntime(Of T1, T2, T3)
  fullName: Towel.ActionRuntime<T1, T2, T3>
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3)
  nameWithType: ActionRuntime<T1, T2, T3>
  nameWithType.vb: ActionRuntime(Of T1, T2, T3)
- uid: Towel.ActionRuntime`3.Do(`0,`1,`2)
  name: Do(T1, T2, T3)
  href: api/Towel.ActionRuntime-3.html#Towel_ActionRuntime_3_Do__0__1__2_
  commentId: M:Towel.ActionRuntime`3.Do(`0,`1,`2)
  fullName: Towel.ActionRuntime<T1, T2, T3>.Do(T1, T2, T3)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3).Do(T1, T2, T3)
  nameWithType: ActionRuntime<T1, T2, T3>.Do(T1, T2, T3)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3).Do(T1, T2, T3)
- uid: Towel.ActionRuntime`3.Do*
  name: Do
  href: api/Towel.ActionRuntime-3.html#Towel_ActionRuntime_3_Do_
  commentId: Overload:Towel.ActionRuntime`3.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2, T3>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3).Do
  nameWithType: ActionRuntime<T1, T2, T3>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2, T3).Do
- uid: Towel.ActionRuntime`3.op_Implicit(Action{`0,`1,`2})~Towel.ActionRuntime{`0,`1,`2}
  name: Implicit(Action<T1, T2, T3> to ActionRuntime<T1, T2, T3>)
  href: api/Towel.ActionRuntime-3.html#Towel_ActionRuntime_3_op_Implicit_Action__0__1__2___Towel_ActionRuntime__0__1__2_
  commentId: M:Towel.ActionRuntime`3.op_Implicit(Action{`0,`1,`2})~Towel.ActionRuntime{`0,`1,`2}
  name.vb: Widening(Action(Of T1, T2, T3) to ActionRuntime(Of T1, T2, T3))
  fullName: Towel.ActionRuntime<T1, T2, T3>.Implicit(Action<T1, T2, T3> to Towel.ActionRuntime<T1, T2, T3>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3).Widening(Action(Of T1, T2, T3) to Towel.ActionRuntime(Of T1, T2, T3))
  nameWithType: ActionRuntime<T1, T2, T3>.Implicit(Action<T1, T2, T3> to ActionRuntime<T1, T2, T3>)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3).Widening(Action(Of T1, T2, T3) to ActionRuntime(Of T1, T2, T3))
- uid: Towel.ActionRuntime`3.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-3.html#Towel_ActionRuntime_3_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2, T3>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3).Widening
  nameWithType: ActionRuntime<T1, T2, T3>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2, T3).Widening
- uid: Towel.ActionRuntime`4
  name: ActionRuntime<T1, T2, T3, T4>
  href: api/Towel.ActionRuntime-4.html
  commentId: T:Towel.ActionRuntime`4
  name.vb: ActionRuntime(Of T1, T2, T3, T4)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4>
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4)
  nameWithType: ActionRuntime<T1, T2, T3, T4>
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4)
- uid: Towel.ActionRuntime`4.Do(`0,`1,`2,`3)
  name: Do(T1, T2, T3, T4)
  href: api/Towel.ActionRuntime-4.html#Towel_ActionRuntime_4_Do__0__1__2__3_
  commentId: M:Towel.ActionRuntime`4.Do(`0,`1,`2,`3)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4>.Do(T1, T2, T3, T4)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4).Do(T1, T2, T3, T4)
  nameWithType: ActionRuntime<T1, T2, T3, T4>.Do(T1, T2, T3, T4)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4).Do(T1, T2, T3, T4)
- uid: Towel.ActionRuntime`4.Do*
  name: Do
  href: api/Towel.ActionRuntime-4.html#Towel_ActionRuntime_4_Do_
  commentId: Overload:Towel.ActionRuntime`4.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2, T3, T4>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4).Do
  nameWithType: ActionRuntime<T1, T2, T3, T4>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4).Do
- uid: Towel.ActionRuntime`4.op_Implicit(Action{`0,`1,`2,`3})~Towel.ActionRuntime{`0,`1,`2,`3}
  name: Implicit(Action<T1, T2, T3, T4> to ActionRuntime<T1, T2, T3, T4>)
  href: api/Towel.ActionRuntime-4.html#Towel_ActionRuntime_4_op_Implicit_Action__0__1__2__3___Towel_ActionRuntime__0__1__2__3_
  commentId: M:Towel.ActionRuntime`4.op_Implicit(Action{`0,`1,`2,`3})~Towel.ActionRuntime{`0,`1,`2,`3}
  name.vb: Widening(Action(Of T1, T2, T3, T4) to ActionRuntime(Of T1, T2, T3, T4))
  fullName: Towel.ActionRuntime<T1, T2, T3, T4>.Implicit(Action<T1, T2, T3, T4> to Towel.ActionRuntime<T1, T2, T3, T4>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4).Widening(Action(Of T1, T2, T3, T4) to Towel.ActionRuntime(Of T1, T2, T3, T4))
  nameWithType: ActionRuntime<T1, T2, T3, T4>.Implicit(Action<T1, T2, T3, T4> to ActionRuntime<T1, T2, T3, T4>)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4).Widening(Action(Of T1, T2, T3, T4) to ActionRuntime(Of T1, T2, T3, T4))
- uid: Towel.ActionRuntime`4.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-4.html#Towel_ActionRuntime_4_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2, T3, T4>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4).Widening
  nameWithType: ActionRuntime<T1, T2, T3, T4>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4).Widening
- uid: Towel.ActionRuntime`5
  name: ActionRuntime<T1, T2, T3, T4, T5>
  href: api/Towel.ActionRuntime-5.html
  commentId: T:Towel.ActionRuntime`5
  name.vb: ActionRuntime(Of T1, T2, T3, T4, T5)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5>
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5>
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5)
- uid: Towel.ActionRuntime`5.Do(`0,`1,`2,`3,`4)
  name: Do(T1, T2, T3, T4, T5)
  href: api/Towel.ActionRuntime-5.html#Towel_ActionRuntime_5_Do__0__1__2__3__4_
  commentId: M:Towel.ActionRuntime`5.Do(`0,`1,`2,`3,`4)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5>.Do(T1, T2, T3, T4, T5)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5).Do(T1, T2, T3, T4, T5)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5>.Do(T1, T2, T3, T4, T5)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5).Do(T1, T2, T3, T4, T5)
- uid: Towel.ActionRuntime`5.Do*
  name: Do
  href: api/Towel.ActionRuntime-5.html#Towel_ActionRuntime_5_Do_
  commentId: Overload:Towel.ActionRuntime`5.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5).Do
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5).Do
- uid: Towel.ActionRuntime`5.op_Implicit(Action{`0,`1,`2,`3,`4})~Towel.ActionRuntime{`0,`1,`2,`3,`4}
  name: Implicit(Action<T1, T2, T3, T4, T5> to ActionRuntime<T1, T2, T3, T4, T5>)
  href: api/Towel.ActionRuntime-5.html#Towel_ActionRuntime_5_op_Implicit_Action__0__1__2__3__4___Towel_ActionRuntime__0__1__2__3__4_
  commentId: M:Towel.ActionRuntime`5.op_Implicit(Action{`0,`1,`2,`3,`4})~Towel.ActionRuntime{`0,`1,`2,`3,`4}
  name.vb: Widening(Action(Of T1, T2, T3, T4, T5) to ActionRuntime(Of T1, T2, T3, T4, T5))
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5>.Implicit(Action<T1, T2, T3, T4, T5> to Towel.ActionRuntime<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5).Widening(Action(Of T1, T2, T3, T4, T5) to Towel.ActionRuntime(Of T1, T2, T3, T4, T5))
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5>.Implicit(Action<T1, T2, T3, T4, T5> to ActionRuntime<T1, T2, T3, T4, T5>)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5).Widening(Action(Of T1, T2, T3, T4, T5) to ActionRuntime(Of T1, T2, T3, T4, T5))
- uid: Towel.ActionRuntime`5.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-5.html#Towel_ActionRuntime_5_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`5.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5).Widening
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5).Widening
- uid: Towel.ActionRuntime`6
  name: ActionRuntime<T1, T2, T3, T4, T5, T6>
  href: api/Towel.ActionRuntime-6.html
  commentId: T:Towel.ActionRuntime`6
  name.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6)
- uid: Towel.ActionRuntime`6.Do(`0,`1,`2,`3,`4,`5)
  name: Do(T1, T2, T3, T4, T5, T6)
  href: api/Towel.ActionRuntime-6.html#Towel_ActionRuntime_6_Do__0__1__2__3__4__5_
  commentId: M:Towel.ActionRuntime`6.Do(`0,`1,`2,`3,`4,`5)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>.Do(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6).Do(T1, T2, T3, T4, T5, T6)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6>.Do(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6).Do(T1, T2, T3, T4, T5, T6)
- uid: Towel.ActionRuntime`6.Do*
  name: Do
  href: api/Towel.ActionRuntime-6.html#Towel_ActionRuntime_6_Do_
  commentId: Overload:Towel.ActionRuntime`6.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6).Do
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6).Do
- uid: Towel.ActionRuntime`6.op_Implicit(Action{`0,`1,`2,`3,`4,`5})~Towel.ActionRuntime{`0,`1,`2,`3,`4,`5}
  name: Implicit(Action<T1, T2, T3, T4, T5, T6> to ActionRuntime<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.ActionRuntime-6.html#Towel_ActionRuntime_6_op_Implicit_Action__0__1__2__3__4__5___Towel_ActionRuntime__0__1__2__3__4__5_
  commentId: M:Towel.ActionRuntime`6.op_Implicit(Action{`0,`1,`2,`3,`4,`5})~Towel.ActionRuntime{`0,`1,`2,`3,`4,`5}
  name.vb: Widening(Action(Of T1, T2, T3, T4, T5, T6) to ActionRuntime(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>.Implicit(Action<T1, T2, T3, T4, T5, T6> to Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6).Widening(Action(Of T1, T2, T3, T4, T5, T6) to Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6))
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6>.Implicit(Action<T1, T2, T3, T4, T5, T6> to ActionRuntime<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6).Widening(Action(Of T1, T2, T3, T4, T5, T6) to ActionRuntime(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.ActionRuntime`6.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-6.html#Towel_ActionRuntime_6_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`6.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6).Widening
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6).Widening
- uid: Towel.ActionRuntime`7
  name: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>
  href: api/Towel.ActionRuntime-7.html
  commentId: T:Towel.ActionRuntime`7
  name.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.ActionRuntime`7.Do(`0,`1,`2,`3,`4,`5,`6)
  name: Do(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.ActionRuntime-7.html#Towel_ActionRuntime_7_Do__0__1__2__3__4__5__6_
  commentId: M:Towel.ActionRuntime`7.Do(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Do(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Do(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.ActionRuntime`7.Do*
  name: Do
  href: api/Towel.ActionRuntime-7.html#Towel_ActionRuntime_7_Do_
  commentId: Overload:Towel.ActionRuntime`7.Do
  isSpec: "True"
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Do
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Do
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Do
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Do
- uid: Towel.ActionRuntime`7.op_Implicit(Action{`0,`1,`2,`3,`4,`5,`6})~Towel.ActionRuntime{`0,`1,`2,`3,`4,`5,`6}
  name: Implicit(Action<T1, T2, T3, T4, T5, T6, T7> to ActionRuntime<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.ActionRuntime-7.html#Towel_ActionRuntime_7_op_Implicit_Action__0__1__2__3__4__5__6___Towel_ActionRuntime__0__1__2__3__4__5__6_
  commentId: M:Towel.ActionRuntime`7.op_Implicit(Action{`0,`1,`2,`3,`4,`5,`6})~Towel.ActionRuntime{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Widening(Action(Of T1, T2, T3, T4, T5, T6, T7) to ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Implicit(Action<T1, T2, T3, T4, T5, T6, T7> to Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Widening(Action(Of T1, T2, T3, T4, T5, T6, T7) to Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Implicit(Action<T1, T2, T3, T4, T5, T6, T7> to ActionRuntime<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Widening(Action(Of T1, T2, T3, T4, T5, T6, T7) to ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.ActionRuntime`7.op_Implicit*
  name: Implicit
  href: api/Towel.ActionRuntime-7.html#Towel_ActionRuntime_7_op_Implicit_
  commentId: Overload:Towel.ActionRuntime`7.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Implicit
  fullName.vb: Towel.ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Widening
  nameWithType: ActionRuntime<T1, T2, T3, T4, T5, T6, T7>.Implicit
  nameWithType.vb: ActionRuntime(Of T1, T2, T3, T4, T5, T6, T7).Widening
- uid: Towel.CommandLine
  name: CommandLine
  href: api/Towel.CommandLine.html
  commentId: T:Towel.CommandLine
  fullName: Towel.CommandLine
  nameWithType: CommandLine
- uid: Towel.CommandLine.HandleArguments(System.String[])
  name: HandleArguments(String[])
  href: api/Towel.CommandLine.html#Towel_CommandLine_HandleArguments_System_String___
  commentId: M:Towel.CommandLine.HandleArguments(System.String[])
  name.vb: HandleArguments(String())
  fullName: Towel.CommandLine.HandleArguments(System.String[])
  fullName.vb: Towel.CommandLine.HandleArguments(System.String())
  nameWithType: CommandLine.HandleArguments(String[])
  nameWithType.vb: CommandLine.HandleArguments(String())
- uid: Towel.CommandLine.HandleArguments*
  name: HandleArguments
  href: api/Towel.CommandLine.html#Towel_CommandLine_HandleArguments_
  commentId: Overload:Towel.CommandLine.HandleArguments
  isSpec: "True"
  fullName: Towel.CommandLine.HandleArguments
  nameWithType: CommandLine.HandleArguments
- uid: Towel.CompareResult
  name: CompareResult
  href: api/Towel.CompareResult.html
  commentId: T:Towel.CompareResult
  fullName: Towel.CompareResult
  nameWithType: CompareResult
- uid: Towel.CompareResult.Equal
  name: Equal
  href: api/Towel.CompareResult.html#Towel_CompareResult_Equal
  commentId: F:Towel.CompareResult.Equal
  fullName: Towel.CompareResult.Equal
  nameWithType: CompareResult.Equal
- uid: Towel.CompareResult.Greater
  name: Greater
  href: api/Towel.CompareResult.html#Towel_CompareResult_Greater
  commentId: F:Towel.CompareResult.Greater
  fullName: Towel.CompareResult.Greater
  nameWithType: CompareResult.Greater
- uid: Towel.CompareResult.Less
  name: Less
  href: api/Towel.CompareResult.html#Towel_CompareResult_Less
  commentId: F:Towel.CompareResult.Less
  fullName: Towel.CompareResult.Less
  nameWithType: CompareResult.Less
- uid: Towel.ConsoleHelper
  name: ConsoleHelper
  href: api/Towel.ConsoleHelper.html
  commentId: T:Towel.ConsoleHelper
  fullName: Towel.ConsoleHelper
  nameWithType: ConsoleHelper
- uid: Towel.ConsoleHelper.AnimatedEllipsis(Func{System.Boolean},Action,System.Int32)
  name: AnimatedEllipsis(Func<Boolean>, Action, Int32)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_AnimatedEllipsis_Func_System_Boolean__Action_System_Int32_
  commentId: M:Towel.ConsoleHelper.AnimatedEllipsis(Func{System.Boolean},Action,System.Int32)
  name.vb: AnimatedEllipsis(Func(Of Boolean), Action, Int32)
  fullName: Towel.ConsoleHelper.AnimatedEllipsis(Func<System.Boolean>, Action, System.Int32)
  fullName.vb: Towel.ConsoleHelper.AnimatedEllipsis(Func(Of System.Boolean), Action, System.Int32)
  nameWithType: ConsoleHelper.AnimatedEllipsis(Func<Boolean>, Action, Int32)
  nameWithType.vb: ConsoleHelper.AnimatedEllipsis(Func(Of Boolean), Action, Int32)
- uid: Towel.ConsoleHelper.AnimatedEllipsis*
  name: AnimatedEllipsis
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_AnimatedEllipsis_
  commentId: Overload:Towel.ConsoleHelper.AnimatedEllipsis
  isSpec: "True"
  fullName: Towel.ConsoleHelper.AnimatedEllipsis
  nameWithType: ConsoleHelper.AnimatedEllipsis
- uid: Towel.ConsoleHelper.FlushInputBuffer(System.Boolean)
  name: FlushInputBuffer(Boolean)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_FlushInputBuffer_System_Boolean_
  commentId: M:Towel.ConsoleHelper.FlushInputBuffer(System.Boolean)
  fullName: Towel.ConsoleHelper.FlushInputBuffer(System.Boolean)
  nameWithType: ConsoleHelper.FlushInputBuffer(Boolean)
- uid: Towel.ConsoleHelper.FlushInputBuffer*
  name: FlushInputBuffer
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_FlushInputBuffer_
  commentId: Overload:Towel.ConsoleHelper.FlushInputBuffer
  isSpec: "True"
  fullName: Towel.ConsoleHelper.FlushInputBuffer
  nameWithType: ConsoleHelper.FlushInputBuffer
- uid: Towel.ConsoleHelper.GetInput*
  name: GetInput
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_GetInput_
  commentId: Overload:Towel.ConsoleHelper.GetInput
  isSpec: "True"
  fullName: Towel.ConsoleHelper.GetInput
  nameWithType: ConsoleHelper.GetInput
- uid: Towel.ConsoleHelper.GetInput``1(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Func{System.String,System.ValueTuple{System.Boolean,``0}}},System.Nullable{Predicate{``0}})
  name: GetInput<T>(Nullable<String>, Nullable<String>, Nullable<Func<String, (Boolean Success, T Value)>>, Nullable<Predicate<T>>)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_GetInput__1_System_Nullable_System_String__System_Nullable_System_String__System_Nullable_Func_System_String_System_ValueTuple_System_Boolean___0____System_Nullable_Predicate___0___
  commentId: M:Towel.ConsoleHelper.GetInput``1(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Func{System.String,System.ValueTuple{System.Boolean,``0}}},System.Nullable{Predicate{``0}})
  name.vb: GetInput(Of T)(Nullable(Of String), Nullable(Of String), Nullable(Of Func(Of String, (Success As Boolean, Value As T))), Nullable(Of Predicate(Of T)))
  fullName: Towel.ConsoleHelper.GetInput<T>(System.Nullable<System.String>, System.Nullable<System.String>, System.Nullable<Func<System.String, System.ValueTuple<System.Boolean, T>>>, System.Nullable<Predicate<T>>)
  fullName.vb: Towel.ConsoleHelper.GetInput(Of T)(System.Nullable(Of System.String), System.Nullable(Of System.String), System.Nullable(Of Func(Of System.String, System.ValueTuple(Of System.Boolean, T))), System.Nullable(Of Predicate(Of T)))
  nameWithType: ConsoleHelper.GetInput<T>(Nullable<String>, Nullable<String>, Nullable<Func<String, (Boolean Success, T Value)>>, Nullable<Predicate<T>>)
  nameWithType.vb: ConsoleHelper.GetInput(Of T)(Nullable(Of String), Nullable(Of String), Nullable(Of Func(Of String, (Success As Boolean, Value As T))), Nullable(Of Predicate(Of T)))
- uid: Towel.ConsoleHelper.HiddenReadLine(System.Char)
  name: HiddenReadLine(Char)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_HiddenReadLine_System_Char_
  commentId: M:Towel.ConsoleHelper.HiddenReadLine(System.Char)
  fullName: Towel.ConsoleHelper.HiddenReadLine(System.Char)
  nameWithType: ConsoleHelper.HiddenReadLine(Char)
- uid: Towel.ConsoleHelper.HiddenReadLine*
  name: HiddenReadLine
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_HiddenReadLine_
  commentId: Overload:Towel.ConsoleHelper.HiddenReadLine
  isSpec: "True"
  fullName: Towel.ConsoleHelper.HiddenReadLine
  nameWithType: ConsoleHelper.HiddenReadLine
- uid: Towel.ConsoleHelper.IntMenu(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{System.String},System.ValueTuple{System.String,Action}[])
  name: IntMenu(Nullable<String>, Nullable<String>, Nullable<String>, (String DisplayName, Action Action)[])
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_IntMenu_System_Nullable_System_String__System_Nullable_System_String__System_Nullable_System_String__System_ValueTuple_System_String_Action____
  commentId: M:Towel.ConsoleHelper.IntMenu(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{System.String},System.ValueTuple{System.String,Action}[])
  name.vb: IntMenu(Nullable(Of String), Nullable(Of String), Nullable(Of String), (DisplayName As String, Action As Action)())
  fullName: Towel.ConsoleHelper.IntMenu(System.Nullable<System.String>, System.Nullable<System.String>, System.Nullable<System.String>, System.ValueTuple<System.String, Action>[])
  fullName.vb: Towel.ConsoleHelper.IntMenu(System.Nullable(Of System.String), System.Nullable(Of System.String), System.Nullable(Of System.String), System.ValueTuple(Of System.String, Action)())
  nameWithType: ConsoleHelper.IntMenu(Nullable<String>, Nullable<String>, Nullable<String>, (String DisplayName, Action Action)[])
  nameWithType.vb: ConsoleHelper.IntMenu(Nullable(Of String), Nullable(Of String), Nullable(Of String), (DisplayName As String, Action As Action)())
- uid: Towel.ConsoleHelper.IntMenu(System.ValueTuple{System.String,Action}[])
  name: IntMenu((String DisplayName, Action Action)[])
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_IntMenu_System_ValueTuple_System_String_Action____
  commentId: M:Towel.ConsoleHelper.IntMenu(System.ValueTuple{System.String,Action}[])
  name.vb: IntMenu((DisplayName As String, Action As Action)())
  fullName: Towel.ConsoleHelper.IntMenu(System.ValueTuple<System.String, Action>[])
  fullName.vb: Towel.ConsoleHelper.IntMenu(System.ValueTuple(Of System.String, Action)())
  nameWithType: ConsoleHelper.IntMenu((String DisplayName, Action Action)[])
  nameWithType.vb: ConsoleHelper.IntMenu((DisplayName As String, Action As Action)())
- uid: Towel.ConsoleHelper.IntMenu*
  name: IntMenu
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_IntMenu_
  commentId: Overload:Towel.ConsoleHelper.IntMenu
  isSpec: "True"
  fullName: Towel.ConsoleHelper.IntMenu
  nameWithType: ConsoleHelper.IntMenu
- uid: Towel.ConsoleHelper.PressToContinue(ConsoleKey)
  name: PressToContinue(ConsoleKey)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_PressToContinue_ConsoleKey_
  commentId: M:Towel.ConsoleHelper.PressToContinue(ConsoleKey)
  fullName: Towel.ConsoleHelper.PressToContinue(ConsoleKey)
  nameWithType: ConsoleHelper.PressToContinue(ConsoleKey)
- uid: Towel.ConsoleHelper.PressToContinue*
  name: PressToContinue
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_PressToContinue_
  commentId: Overload:Towel.ConsoleHelper.PressToContinue
  isSpec: "True"
  fullName: Towel.ConsoleHelper.PressToContinue
  nameWithType: ConsoleHelper.PressToContinue
- uid: Towel.ConsoleHelper.ProgressBar(Action{Action{System.Double}},System.Int32,System.Char,System.Char,System.Char,System.Char,System.Char,System.Boolean)
  name: ProgressBar(Action<Action<Double>>, Int32, Char, Char, Char, Char, Char, Boolean)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_ProgressBar_Action_Action_System_Double___System_Int32_System_Char_System_Char_System_Char_System_Char_System_Char_System_Boolean_
  commentId: M:Towel.ConsoleHelper.ProgressBar(Action{Action{System.Double}},System.Int32,System.Char,System.Char,System.Char,System.Char,System.Char,System.Boolean)
  name.vb: ProgressBar(Action(Of Action(Of Double)), Int32, Char, Char, Char, Char, Char, Boolean)
  fullName: Towel.ConsoleHelper.ProgressBar(Action<Action<System.Double>>, System.Int32, System.Char, System.Char, System.Char, System.Char, System.Char, System.Boolean)
  fullName.vb: Towel.ConsoleHelper.ProgressBar(Action(Of Action(Of System.Double)), System.Int32, System.Char, System.Char, System.Char, System.Char, System.Char, System.Boolean)
  nameWithType: ConsoleHelper.ProgressBar(Action<Action<Double>>, Int32, Char, Char, Char, Char, Char, Boolean)
  nameWithType.vb: ConsoleHelper.ProgressBar(Action(Of Action(Of Double)), Int32, Char, Char, Char, Char, Char, Boolean)
- uid: Towel.ConsoleHelper.ProgressBar*
  name: ProgressBar
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_ProgressBar_
  commentId: Overload:Towel.ConsoleHelper.ProgressBar
  isSpec: "True"
  fullName: Towel.ConsoleHelper.ProgressBar
  nameWithType: ConsoleHelper.ProgressBar
- uid: Towel.ConsoleHelper.PromptPressToContinue(System.Nullable{System.String},ConsoleKey)
  name: PromptPressToContinue(Nullable<String>, ConsoleKey)
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_PromptPressToContinue_System_Nullable_System_String__ConsoleKey_
  commentId: M:Towel.ConsoleHelper.PromptPressToContinue(System.Nullable{System.String},ConsoleKey)
  name.vb: PromptPressToContinue(Nullable(Of String), ConsoleKey)
  fullName: Towel.ConsoleHelper.PromptPressToContinue(System.Nullable<System.String>, ConsoleKey)
  fullName.vb: Towel.ConsoleHelper.PromptPressToContinue(System.Nullable(Of System.String), ConsoleKey)
  nameWithType: ConsoleHelper.PromptPressToContinue(Nullable<String>, ConsoleKey)
  nameWithType.vb: ConsoleHelper.PromptPressToContinue(Nullable(Of String), ConsoleKey)
- uid: Towel.ConsoleHelper.PromptPressToContinue*
  name: PromptPressToContinue
  href: api/Towel.ConsoleHelper.html#Towel_ConsoleHelper_PromptPressToContinue_
  commentId: Overload:Towel.ConsoleHelper.PromptPressToContinue
  isSpec: "True"
  fullName: Towel.ConsoleHelper.PromptPressToContinue
  nameWithType: ConsoleHelper.PromptPressToContinue
- uid: Towel.Constant`1
  name: Constant<T>
  href: api/Towel.Constant-1.html
  commentId: T:Towel.Constant`1
  name.vb: Constant(Of T)
  fullName: Towel.Constant<T>
  fullName.vb: Towel.Constant(Of T)
  nameWithType: Constant<T>
  nameWithType.vb: Constant(Of T)
- uid: Towel.Constant`1.ComputePi(System.Nullable{Predicate{`0}})
  name: ComputePi(Nullable<Predicate<T>>)
  href: api/Towel.Constant-1.html#Towel_Constant_1_ComputePi_System_Nullable_Predicate__0___
  commentId: M:Towel.Constant`1.ComputePi(System.Nullable{Predicate{`0}})
  name.vb: ComputePi(Nullable(Of Predicate(Of T)))
  fullName: Towel.Constant<T>.ComputePi(System.Nullable<Predicate<T>>)
  fullName.vb: Towel.Constant(Of T).ComputePi(System.Nullable(Of Predicate(Of T)))
  nameWithType: Constant<T>.ComputePi(Nullable<Predicate<T>>)
  nameWithType.vb: Constant(Of T).ComputePi(Nullable(Of Predicate(Of T)))
- uid: Towel.Constant`1.ComputePi*
  name: ComputePi
  href: api/Towel.Constant-1.html#Towel_Constant_1_ComputePi_
  commentId: Overload:Towel.Constant`1.ComputePi
  isSpec: "True"
  fullName: Towel.Constant<T>.ComputePi
  fullName.vb: Towel.Constant(Of T).ComputePi
  nameWithType: Constant<T>.ComputePi
  nameWithType.vb: Constant(Of T).ComputePi
- uid: Towel.Constant`1.Four
  name: Four
  href: api/Towel.Constant-1.html#Towel_Constant_1_Four
  commentId: P:Towel.Constant`1.Four
  fullName: Towel.Constant<T>.Four
  fullName.vb: Towel.Constant(Of T).Four
  nameWithType: Constant<T>.Four
  nameWithType.vb: Constant(Of T).Four
- uid: Towel.Constant`1.Four*
  name: Four
  href: api/Towel.Constant-1.html#Towel_Constant_1_Four_
  commentId: Overload:Towel.Constant`1.Four
  isSpec: "True"
  fullName: Towel.Constant<T>.Four
  fullName.vb: Towel.Constant(Of T).Four
  nameWithType: Constant<T>.Four
  nameWithType.vb: Constant(Of T).Four
- uid: Towel.Constant`1.FourOverPiSquared
  name: FourOverPiSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_FourOverPiSquared
  commentId: P:Towel.Constant`1.FourOverPiSquared
  fullName: Towel.Constant<T>.FourOverPiSquared
  fullName.vb: Towel.Constant(Of T).FourOverPiSquared
  nameWithType: Constant<T>.FourOverPiSquared
  nameWithType.vb: Constant(Of T).FourOverPiSquared
- uid: Towel.Constant`1.FourOverPiSquared*
  name: FourOverPiSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_FourOverPiSquared_
  commentId: Overload:Towel.Constant`1.FourOverPiSquared
  isSpec: "True"
  fullName: Towel.Constant<T>.FourOverPiSquared
  fullName.vb: Towel.Constant(Of T).FourOverPiSquared
  nameWithType: Constant<T>.FourOverPiSquared
  nameWithType.vb: Constant(Of T).FourOverPiSquared
- uid: Towel.Constant`1.FourOverπSquared
  name: FourOverπSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_FourOver_Squared
  commentId: P:Towel.Constant`1.FourOverπSquared
  fullName: Towel.Constant<T>.FourOverπSquared
  fullName.vb: Towel.Constant(Of T).FourOverπSquared
  nameWithType: Constant<T>.FourOverπSquared
  nameWithType.vb: Constant(Of T).FourOverπSquared
- uid: Towel.Constant`1.FourOverπSquared*
  name: FourOverπSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_FourOver_Squared_
  commentId: Overload:Towel.Constant`1.FourOverπSquared
  isSpec: "True"
  fullName: Towel.Constant<T>.FourOverπSquared
  fullName.vb: Towel.Constant(Of T).FourOverπSquared
  nameWithType: Constant<T>.FourOverπSquared
  nameWithType.vb: Constant(Of T).FourOverπSquared
- uid: Towel.Constant`1.Negative4OverPiSquared
  name: Negative4OverPiSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_Negative4OverPiSquared
  commentId: P:Towel.Constant`1.Negative4OverPiSquared
  fullName: Towel.Constant<T>.Negative4OverPiSquared
  fullName.vb: Towel.Constant(Of T).Negative4OverPiSquared
  nameWithType: Constant<T>.Negative4OverPiSquared
  nameWithType.vb: Constant(Of T).Negative4OverPiSquared
- uid: Towel.Constant`1.Negative4OverPiSquared*
  name: Negative4OverPiSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_Negative4OverPiSquared_
  commentId: Overload:Towel.Constant`1.Negative4OverPiSquared
  isSpec: "True"
  fullName: Towel.Constant<T>.Negative4OverPiSquared
  fullName.vb: Towel.Constant(Of T).Negative4OverPiSquared
  nameWithType: Constant<T>.Negative4OverPiSquared
  nameWithType.vb: Constant(Of T).Negative4OverPiSquared
- uid: Towel.Constant`1.Negative4OverπSquared
  name: Negative4OverπSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_Negative4Over_Squared
  commentId: P:Towel.Constant`1.Negative4OverπSquared
  fullName: Towel.Constant<T>.Negative4OverπSquared
  fullName.vb: Towel.Constant(Of T).Negative4OverπSquared
  nameWithType: Constant<T>.Negative4OverπSquared
  nameWithType.vb: Constant(Of T).Negative4OverπSquared
- uid: Towel.Constant`1.Negative4OverπSquared*
  name: Negative4OverπSquared
  href: api/Towel.Constant-1.html#Towel_Constant_1_Negative4Over_Squared_
  commentId: Overload:Towel.Constant`1.Negative4OverπSquared
  isSpec: "True"
  fullName: Towel.Constant<T>.Negative4OverπSquared
  fullName.vb: Towel.Constant(Of T).Negative4OverπSquared
  nameWithType: Constant<T>.Negative4OverπSquared
  nameWithType.vb: Constant(Of T).Negative4OverπSquared
- uid: Towel.Constant`1.NegativeOne
  name: NegativeOne
  href: api/Towel.Constant-1.html#Towel_Constant_1_NegativeOne
  commentId: P:Towel.Constant`1.NegativeOne
  fullName: Towel.Constant<T>.NegativeOne
  fullName.vb: Towel.Constant(Of T).NegativeOne
  nameWithType: Constant<T>.NegativeOne
  nameWithType.vb: Constant(Of T).NegativeOne
- uid: Towel.Constant`1.NegativeOne*
  name: NegativeOne
  href: api/Towel.Constant-1.html#Towel_Constant_1_NegativeOne_
  commentId: Overload:Towel.Constant`1.NegativeOne
  isSpec: "True"
  fullName: Towel.Constant<T>.NegativeOne
  fullName.vb: Towel.Constant(Of T).NegativeOne
  nameWithType: Constant<T>.NegativeOne
  nameWithType.vb: Constant(Of T).NegativeOne
- uid: Towel.Constant`1.One
  name: One
  href: api/Towel.Constant-1.html#Towel_Constant_1_One
  commentId: P:Towel.Constant`1.One
  fullName: Towel.Constant<T>.One
  fullName.vb: Towel.Constant(Of T).One
  nameWithType: Constant<T>.One
  nameWithType.vb: Constant(Of T).One
- uid: Towel.Constant`1.One*
  name: One
  href: api/Towel.Constant-1.html#Towel_Constant_1_One_
  commentId: Overload:Towel.Constant`1.One
  isSpec: "True"
  fullName: Towel.Constant<T>.One
  fullName.vb: Towel.Constant(Of T).One
  nameWithType: Constant<T>.One
  nameWithType.vb: Constant(Of T).One
- uid: Towel.Constant`1.Pi
  name: Pi
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi
  commentId: P:Towel.Constant`1.Pi
  fullName: Towel.Constant<T>.Pi
  fullName.vb: Towel.Constant(Of T).Pi
  nameWithType: Constant<T>.Pi
  nameWithType.vb: Constant(Of T).Pi
- uid: Towel.Constant`1.Pi*
  name: Pi
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi_
  commentId: Overload:Towel.Constant`1.Pi
  isSpec: "True"
  fullName: Towel.Constant<T>.Pi
  fullName.vb: Towel.Constant(Of T).Pi
  nameWithType: Constant<T>.Pi
  nameWithType.vb: Constant(Of T).Pi
- uid: Towel.Constant`1.Pi2
  name: Pi2
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi2
  commentId: P:Towel.Constant`1.Pi2
  fullName: Towel.Constant<T>.Pi2
  fullName.vb: Towel.Constant(Of T).Pi2
  nameWithType: Constant<T>.Pi2
  nameWithType.vb: Constant(Of T).Pi2
- uid: Towel.Constant`1.Pi2*
  name: Pi2
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi2_
  commentId: Overload:Towel.Constant`1.Pi2
  isSpec: "True"
  fullName: Towel.Constant<T>.Pi2
  fullName.vb: Towel.Constant(Of T).Pi2
  nameWithType: Constant<T>.Pi2
  nameWithType.vb: Constant(Of T).Pi2
- uid: Towel.Constant`1.Pi3Over2
  name: Pi3Over2
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi3Over2
  commentId: P:Towel.Constant`1.Pi3Over2
  fullName: Towel.Constant<T>.Pi3Over2
  fullName.vb: Towel.Constant(Of T).Pi3Over2
  nameWithType: Constant<T>.Pi3Over2
  nameWithType.vb: Constant(Of T).Pi3Over2
- uid: Towel.Constant`1.Pi3Over2*
  name: Pi3Over2
  href: api/Towel.Constant-1.html#Towel_Constant_1_Pi3Over2_
  commentId: Overload:Towel.Constant`1.Pi3Over2
  isSpec: "True"
  fullName: Towel.Constant<T>.Pi3Over2
  fullName.vb: Towel.Constant(Of T).Pi3Over2
  nameWithType: Constant<T>.Pi3Over2
  nameWithType.vb: Constant(Of T).Pi3Over2
- uid: Towel.Constant`1.PiOver2
  name: PiOver2
  href: api/Towel.Constant-1.html#Towel_Constant_1_PiOver2
  commentId: P:Towel.Constant`1.PiOver2
  fullName: Towel.Constant<T>.PiOver2
  fullName.vb: Towel.Constant(Of T).PiOver2
  nameWithType: Constant<T>.PiOver2
  nameWithType.vb: Constant(Of T).PiOver2
- uid: Towel.Constant`1.PiOver2*
  name: PiOver2
  href: api/Towel.Constant-1.html#Towel_Constant_1_PiOver2_
  commentId: Overload:Towel.Constant`1.PiOver2
  isSpec: "True"
  fullName: Towel.Constant<T>.PiOver2
  fullName.vb: Towel.Constant(Of T).PiOver2
  nameWithType: Constant<T>.PiOver2
  nameWithType.vb: Constant(Of T).PiOver2
- uid: Towel.Constant`1.Ten
  name: Ten
  href: api/Towel.Constant-1.html#Towel_Constant_1_Ten
  commentId: P:Towel.Constant`1.Ten
  fullName: Towel.Constant<T>.Ten
  fullName.vb: Towel.Constant(Of T).Ten
  nameWithType: Constant<T>.Ten
  nameWithType.vb: Constant(Of T).Ten
- uid: Towel.Constant`1.Ten*
  name: Ten
  href: api/Towel.Constant-1.html#Towel_Constant_1_Ten_
  commentId: Overload:Towel.Constant`1.Ten
  isSpec: "True"
  fullName: Towel.Constant<T>.Ten
  fullName.vb: Towel.Constant(Of T).Ten
  nameWithType: Constant<T>.Ten
  nameWithType.vb: Constant(Of T).Ten
- uid: Towel.Constant`1.Three
  name: Three
  href: api/Towel.Constant-1.html#Towel_Constant_1_Three
  commentId: P:Towel.Constant`1.Three
  fullName: Towel.Constant<T>.Three
  fullName.vb: Towel.Constant(Of T).Three
  nameWithType: Constant<T>.Three
  nameWithType.vb: Constant(Of T).Three
- uid: Towel.Constant`1.Three*
  name: Three
  href: api/Towel.Constant-1.html#Towel_Constant_1_Three_
  commentId: Overload:Towel.Constant`1.Three
  isSpec: "True"
  fullName: Towel.Constant<T>.Three
  fullName.vb: Towel.Constant(Of T).Three
  nameWithType: Constant<T>.Three
  nameWithType.vb: Constant(Of T).Three
- uid: Towel.Constant`1.Two
  name: Two
  href: api/Towel.Constant-1.html#Towel_Constant_1_Two
  commentId: P:Towel.Constant`1.Two
  fullName: Towel.Constant<T>.Two
  fullName.vb: Towel.Constant(Of T).Two
  nameWithType: Constant<T>.Two
  nameWithType.vb: Constant(Of T).Two
- uid: Towel.Constant`1.Two*
  name: Two
  href: api/Towel.Constant-1.html#Towel_Constant_1_Two_
  commentId: Overload:Towel.Constant`1.Two
  isSpec: "True"
  fullName: Towel.Constant<T>.Two
  fullName.vb: Towel.Constant(Of T).Two
  nameWithType: Constant<T>.Two
  nameWithType.vb: Constant(Of T).Two
- uid: Towel.Constant`1.Zero
  name: Zero
  href: api/Towel.Constant-1.html#Towel_Constant_1_Zero
  commentId: P:Towel.Constant`1.Zero
  fullName: Towel.Constant<T>.Zero
  fullName.vb: Towel.Constant(Of T).Zero
  nameWithType: Constant<T>.Zero
  nameWithType.vb: Constant(Of T).Zero
- uid: Towel.Constant`1.Zero*
  name: Zero
  href: api/Towel.Constant-1.html#Towel_Constant_1_Zero_
  commentId: Overload:Towel.Constant`1.Zero
  isSpec: "True"
  fullName: Towel.Constant<T>.Zero
  fullName.vb: Towel.Constant(Of T).Zero
  nameWithType: Constant<T>.Zero
  nameWithType.vb: Constant(Of T).Zero
- uid: Towel.Constant`1.π
  name: π
  href: api/Towel.Constant-1.html#Towel_Constant_1__
  commentId: P:Towel.Constant`1.π
  fullName: Towel.Constant<T>.π
  fullName.vb: Towel.Constant(Of T).π
  nameWithType: Constant<T>.π
  nameWithType.vb: Constant(Of T).π
- uid: Towel.Constant`1.π*
  name: π
  href: api/Towel.Constant-1.html#Towel_Constant_1___
  commentId: Overload:Towel.Constant`1.π
  isSpec: "True"
  fullName: Towel.Constant<T>.π
  fullName.vb: Towel.Constant(Of T).π
  nameWithType: Constant<T>.π
  nameWithType.vb: Constant(Of T).π
- uid: Towel.Constant`1.π2
  name: π2
  href: api/Towel.Constant-1.html#Towel_Constant_1__2
  commentId: P:Towel.Constant`1.π2
  fullName: Towel.Constant<T>.π2
  fullName.vb: Towel.Constant(Of T).π2
  nameWithType: Constant<T>.π2
  nameWithType.vb: Constant(Of T).π2
- uid: Towel.Constant`1.π2*
  name: π2
  href: api/Towel.Constant-1.html#Towel_Constant_1__2_
  commentId: Overload:Towel.Constant`1.π2
  isSpec: "True"
  fullName: Towel.Constant<T>.π2
  fullName.vb: Towel.Constant(Of T).π2
  nameWithType: Constant<T>.π2
  nameWithType.vb: Constant(Of T).π2
- uid: Towel.Constant`1.π3Over2
  name: π3Over2
  href: api/Towel.Constant-1.html#Towel_Constant_1__3Over2
  commentId: P:Towel.Constant`1.π3Over2
  fullName: Towel.Constant<T>.π3Over2
  fullName.vb: Towel.Constant(Of T).π3Over2
  nameWithType: Constant<T>.π3Over2
  nameWithType.vb: Constant(Of T).π3Over2
- uid: Towel.Constant`1.π3Over2*
  name: π3Over2
  href: api/Towel.Constant-1.html#Towel_Constant_1__3Over2_
  commentId: Overload:Towel.Constant`1.π3Over2
  isSpec: "True"
  fullName: Towel.Constant<T>.π3Over2
  fullName.vb: Towel.Constant(Of T).π3Over2
  nameWithType: Constant<T>.π3Over2
  nameWithType.vb: Constant(Of T).π3Over2
- uid: Towel.Constant`1.πOver2
  name: πOver2
  href: api/Towel.Constant-1.html#Towel_Constant_1__Over2
  commentId: P:Towel.Constant`1.πOver2
  fullName: Towel.Constant<T>.πOver2
  fullName.vb: Towel.Constant(Of T).πOver2
  nameWithType: Constant<T>.πOver2
  nameWithType.vb: Constant(Of T).πOver2
- uid: Towel.Constant`1.πOver2*
  name: πOver2
  href: api/Towel.Constant-1.html#Towel_Constant_1__Over2_
  commentId: Overload:Towel.Constant`1.πOver2
  isSpec: "True"
  fullName: Towel.Constant<T>.πOver2
  fullName.vb: Towel.Constant(Of T).πOver2
  nameWithType: Constant<T>.πOver2
  nameWithType.vb: Constant(Of T).πOver2
- uid: Towel.CorruptedDataStructureException
  name: CorruptedDataStructureException
  href: api/Towel.CorruptedDataStructureException.html
  commentId: T:Towel.CorruptedDataStructureException
  fullName: Towel.CorruptedDataStructureException
  nameWithType: CorruptedDataStructureException
- uid: Towel.CorruptedDataStructureException.#ctor
  name: CorruptedDataStructureException()
  href: api/Towel.CorruptedDataStructureException.html#Towel_CorruptedDataStructureException__ctor
  commentId: M:Towel.CorruptedDataStructureException.#ctor
  fullName: Towel.CorruptedDataStructureException.CorruptedDataStructureException()
  nameWithType: CorruptedDataStructureException.CorruptedDataStructureException()
- uid: Towel.CorruptedDataStructureException.#ctor(System.String)
  name: CorruptedDataStructureException(String)
  href: api/Towel.CorruptedDataStructureException.html#Towel_CorruptedDataStructureException__ctor_System_String_
  commentId: M:Towel.CorruptedDataStructureException.#ctor(System.String)
  fullName: Towel.CorruptedDataStructureException.CorruptedDataStructureException(System.String)
  nameWithType: CorruptedDataStructureException.CorruptedDataStructureException(String)
- uid: Towel.CorruptedDataStructureException.#ctor(System.String,Exception)
  name: CorruptedDataStructureException(String, Exception)
  href: api/Towel.CorruptedDataStructureException.html#Towel_CorruptedDataStructureException__ctor_System_String_Exception_
  commentId: M:Towel.CorruptedDataStructureException.#ctor(System.String,Exception)
  fullName: Towel.CorruptedDataStructureException.CorruptedDataStructureException(System.String, Exception)
  nameWithType: CorruptedDataStructureException.CorruptedDataStructureException(String, Exception)
- uid: Towel.CorruptedDataStructureException.#ctor*
  name: CorruptedDataStructureException
  href: api/Towel.CorruptedDataStructureException.html#Towel_CorruptedDataStructureException__ctor_
  commentId: Overload:Towel.CorruptedDataStructureException.#ctor
  isSpec: "True"
  fullName: Towel.CorruptedDataStructureException.CorruptedDataStructureException
  nameWithType: CorruptedDataStructureException.CorruptedDataStructureException
- uid: Towel.DataStructures
  name: Towel.DataStructures
  href: api/Towel.DataStructures.html
  commentId: N:Towel.DataStructures
  fullName: Towel.DataStructures
  nameWithType: Towel.DataStructures
- uid: Towel.DataStructures.Array`1
  name: Array<T>
  href: api/Towel.DataStructures.Array-1.html
  commentId: T:Towel.DataStructures.Array`1
  name.vb: Array(Of T)
  fullName: Towel.DataStructures.Array<T>
  fullName.vb: Towel.DataStructures.Array(Of T)
  nameWithType: Array<T>
  nameWithType.vb: Array(Of T)
- uid: Towel.DataStructures.Array`1.#ctor(`0[])
  name: Array(T[])
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1__ctor__0___
  commentId: M:Towel.DataStructures.Array`1.#ctor(`0[])
  name.vb: Array(T())
  fullName: Towel.DataStructures.Array<T>.Array(T[])
  fullName.vb: Towel.DataStructures.Array(Of T).Array(T())
  nameWithType: Array<T>.Array(T[])
  nameWithType.vb: Array(Of T).Array(T())
- uid: Towel.DataStructures.Array`1.#ctor(System.Int32)
  name: Array(Int32)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1__ctor_System_Int32_
  commentId: M:Towel.DataStructures.Array`1.#ctor(System.Int32)
  fullName: Towel.DataStructures.Array<T>.Array(System.Int32)
  fullName.vb: Towel.DataStructures.Array(Of T).Array(System.Int32)
  nameWithType: Array<T>.Array(Int32)
  nameWithType.vb: Array(Of T).Array(Int32)
- uid: Towel.DataStructures.Array`1.#ctor*
  name: Array
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1__ctor_
  commentId: Overload:Towel.DataStructures.Array`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.Array
  fullName.vb: Towel.DataStructures.Array(Of T).Array
  nameWithType: Array<T>.Array
  nameWithType.vb: Array(Of T).Array
- uid: Towel.DataStructures.Array`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Clone
  commentId: M:Towel.DataStructures.Array`1.Clone
  fullName: Towel.DataStructures.Array<T>.Clone()
  fullName.vb: Towel.DataStructures.Array(Of T).Clone()
  nameWithType: Array<T>.Clone()
  nameWithType.vb: Array(Of T).Clone()
- uid: Towel.DataStructures.Array`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Clone_
  commentId: Overload:Towel.DataStructures.Array`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.Clone
  fullName.vb: Towel.DataStructures.Array(Of T).Clone
  nameWithType: Array<T>.Clone
  nameWithType.vb: Array(Of T).Clone
- uid: Towel.DataStructures.Array`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_GetEnumerator
  commentId: M:Towel.DataStructures.Array`1.GetEnumerator
  fullName: Towel.DataStructures.Array<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.Array(Of T).GetEnumerator()
  nameWithType: Array<T>.GetEnumerator()
  nameWithType.vb: Array(Of T).GetEnumerator()
- uid: Towel.DataStructures.Array`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.Array`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.Array(Of T).GetEnumerator
  nameWithType: Array<T>.GetEnumerator
  nameWithType.vb: Array(Of T).GetEnumerator
- uid: Towel.DataStructures.Array`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Item_System_Int32_
  commentId: P:Towel.DataStructures.Array`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.DataStructures.Array<T>.Item[System.Int32]
  fullName.vb: Towel.DataStructures.Array(Of T).Item(System.Int32)
  nameWithType: Array<T>.Item[Int32]
  nameWithType.vb: Array(Of T).Item(Int32)
- uid: Towel.DataStructures.Array`1.Item*
  name: Item
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Item_
  commentId: Overload:Towel.DataStructures.Array`1.Item
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.Item
  fullName.vb: Towel.DataStructures.Array(Of T).Item
  nameWithType: Array<T>.Item
  nameWithType.vb: Array(Of T).Item
- uid: Towel.DataStructures.Array`1.Length
  name: Length
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Length
  commentId: P:Towel.DataStructures.Array`1.Length
  fullName: Towel.DataStructures.Array<T>.Length
  fullName.vb: Towel.DataStructures.Array(Of T).Length
  nameWithType: Array<T>.Length
  nameWithType.vb: Array(Of T).Length
- uid: Towel.DataStructures.Array`1.Length*
  name: Length
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Length_
  commentId: Overload:Towel.DataStructures.Array`1.Length
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.Length
  fullName.vb: Towel.DataStructures.Array(Of T).Length
  nameWithType: Array<T>.Length
  nameWithType.vb: Array(Of T).Length
- uid: Towel.DataStructures.Array`1.op_Implicit(`0[])~Towel.DataStructures.Array{`0}
  name: Implicit(T[] to Array<T>)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_op_Implicit__0____Towel_DataStructures_Array__0_
  commentId: M:Towel.DataStructures.Array`1.op_Implicit(`0[])~Towel.DataStructures.Array{`0}
  name.vb: Widening(T() to Array(Of T))
  fullName: Towel.DataStructures.Array<T>.Implicit(T[] to Towel.DataStructures.Array<T>)
  fullName.vb: Towel.DataStructures.Array(Of T).Widening(T() to Towel.DataStructures.Array(Of T))
  nameWithType: Array<T>.Implicit(T[] to Array<T>)
  nameWithType.vb: Array(Of T).Widening(T() to Array(Of T))
- uid: Towel.DataStructures.Array`1.op_Implicit(Towel.DataStructures.Array{`0})~`0[]
  name: Implicit(Array<T> to T[])
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_op_Implicit_Towel_DataStructures_Array__0____0__
  commentId: M:Towel.DataStructures.Array`1.op_Implicit(Towel.DataStructures.Array{`0})~`0[]
  name.vb: Widening(Array(Of T) to T())
  fullName: Towel.DataStructures.Array<T>.Implicit(Towel.DataStructures.Array<T> to T[])
  fullName.vb: Towel.DataStructures.Array(Of T).Widening(Towel.DataStructures.Array(Of T) to T())
  nameWithType: Array<T>.Implicit(Array<T> to T[])
  nameWithType.vb: Array(Of T).Widening(Array(Of T) to T())
- uid: Towel.DataStructures.Array`1.op_Implicit*
  name: Implicit
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_op_Implicit_
  commentId: Overload:Towel.DataStructures.Array`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.DataStructures.Array<T>.Implicit
  fullName.vb: Towel.DataStructures.Array(Of T).Widening
  nameWithType: Array<T>.Implicit
  nameWithType.vb: Array(Of T).Widening
- uid: Towel.DataStructures.Array`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.Array`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.Array<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.Array(Of T).Stepper(Action(Of T))
  nameWithType: Array<T>.Stepper(Action<T>)
  nameWithType.vb: Array(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.Array`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Array`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.Array<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Array(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: Array<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: Array(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.Array`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.Array`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.Array<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.Array(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: Array<T>.Stepper(StepRef<T>)
  nameWithType.vb: Array(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.Array`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.Array`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.Array<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.Array(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: Array<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: Array(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.Array`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_Stepper_
  commentId: Overload:Towel.DataStructures.Array`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.Stepper
  fullName.vb: Towel.DataStructures.Array(Of T).Stepper
  nameWithType: Array<T>.Stepper
  nameWithType.vb: Array(Of T).Stepper
- uid: Towel.DataStructures.Array`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_ToArray
  commentId: M:Towel.DataStructures.Array`1.ToArray
  fullName: Towel.DataStructures.Array<T>.ToArray()
  fullName.vb: Towel.DataStructures.Array(Of T).ToArray()
  nameWithType: Array<T>.ToArray()
  nameWithType.vb: Array(Of T).ToArray()
- uid: Towel.DataStructures.Array`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Array-1.html#Towel_DataStructures_Array_1_ToArray_
  commentId: Overload:Towel.DataStructures.Array`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Array<T>.ToArray
  fullName.vb: Towel.DataStructures.Array(Of T).ToArray
  nameWithType: Array<T>.ToArray
  nameWithType.vb: Array(Of T).ToArray
- uid: Towel.DataStructures.ArrayJagged`1
  name: ArrayJagged<T>
  href: api/Towel.DataStructures.ArrayJagged-1.html
  commentId: T:Towel.DataStructures.ArrayJagged`1
  name.vb: ArrayJagged(Of T)
  fullName: Towel.DataStructures.ArrayJagged<T>
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T)
  nameWithType: ArrayJagged<T>
  nameWithType.vb: ArrayJagged(Of T)
- uid: Towel.DataStructures.ArrayJagged`1.#ctor(System.Int32)
  name: ArrayJagged(Int32)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1__ctor_System_Int32_
  commentId: M:Towel.DataStructures.ArrayJagged`1.#ctor(System.Int32)
  fullName: Towel.DataStructures.ArrayJagged<T>.ArrayJagged(System.Int32)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).ArrayJagged(System.Int32)
  nameWithType: ArrayJagged<T>.ArrayJagged(Int32)
  nameWithType.vb: ArrayJagged(Of T).ArrayJagged(Int32)
- uid: Towel.DataStructures.ArrayJagged`1.#ctor(System.UInt64)
  name: ArrayJagged(UInt64)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1__ctor_System_UInt64_
  commentId: M:Towel.DataStructures.ArrayJagged`1.#ctor(System.UInt64)
  fullName: Towel.DataStructures.ArrayJagged<T>.ArrayJagged(System.UInt64)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).ArrayJagged(System.UInt64)
  nameWithType: ArrayJagged<T>.ArrayJagged(UInt64)
  nameWithType.vb: ArrayJagged(Of T).ArrayJagged(UInt64)
- uid: Towel.DataStructures.ArrayJagged`1.#ctor*
  name: ArrayJagged
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1__ctor_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.ArrayJagged
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).ArrayJagged
  nameWithType: ArrayJagged<T>.ArrayJagged
  nameWithType.vb: ArrayJagged(Of T).ArrayJagged
- uid: Towel.DataStructures.ArrayJagged`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Clone
  commentId: M:Towel.DataStructures.ArrayJagged`1.Clone
  fullName: Towel.DataStructures.ArrayJagged<T>.Clone()
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Clone()
  nameWithType: ArrayJagged<T>.Clone()
  nameWithType.vb: ArrayJagged(Of T).Clone()
- uid: Towel.DataStructures.ArrayJagged`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Clone_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.Clone
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Clone
  nameWithType: ArrayJagged<T>.Clone
  nameWithType.vb: ArrayJagged(Of T).Clone
- uid: Towel.DataStructures.ArrayJagged`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_GetEnumerator
  commentId: M:Towel.DataStructures.ArrayJagged`1.GetEnumerator
  fullName: Towel.DataStructures.ArrayJagged<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).GetEnumerator()
  nameWithType: ArrayJagged<T>.GetEnumerator()
  nameWithType.vb: ArrayJagged(Of T).GetEnumerator()
- uid: Towel.DataStructures.ArrayJagged`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).GetEnumerator
  nameWithType: ArrayJagged<T>.GetEnumerator
  nameWithType.vb: ArrayJagged(Of T).GetEnumerator
- uid: Towel.DataStructures.ArrayJagged`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Item_System_Int32_
  commentId: P:Towel.DataStructures.ArrayJagged`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.DataStructures.ArrayJagged<T>.Item[System.Int32]
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Item(System.Int32)
  nameWithType: ArrayJagged<T>.Item[Int32]
  nameWithType.vb: ArrayJagged(Of T).Item(Int32)
- uid: Towel.DataStructures.ArrayJagged`1.Item(System.UInt64)
  name: Item[UInt64]
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Item_System_UInt64_
  commentId: P:Towel.DataStructures.ArrayJagged`1.Item(System.UInt64)
  name.vb: Item(UInt64)
  fullName: Towel.DataStructures.ArrayJagged<T>.Item[System.UInt64]
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Item(System.UInt64)
  nameWithType: ArrayJagged<T>.Item[UInt64]
  nameWithType.vb: ArrayJagged(Of T).Item(UInt64)
- uid: Towel.DataStructures.ArrayJagged`1.Item*
  name: Item
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Item_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.Item
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.Item
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Item
  nameWithType: ArrayJagged<T>.Item
  nameWithType.vb: ArrayJagged(Of T).Item
- uid: Towel.DataStructures.ArrayJagged`1.Length
  name: Length
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Length
  commentId: P:Towel.DataStructures.ArrayJagged`1.Length
  fullName: Towel.DataStructures.ArrayJagged<T>.Length
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Length
  nameWithType: ArrayJagged<T>.Length
  nameWithType.vb: ArrayJagged(Of T).Length
- uid: Towel.DataStructures.ArrayJagged`1.Length*
  name: Length
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Length_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.Length
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.Length
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Length
  nameWithType: ArrayJagged<T>.Length
  nameWithType.vb: ArrayJagged(Of T).Length
- uid: Towel.DataStructures.ArrayJagged`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.ArrayJagged`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.ArrayJagged<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Stepper(Action(Of T))
  nameWithType: ArrayJagged<T>.Stepper(Action<T>)
  nameWithType.vb: ArrayJagged(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.ArrayJagged`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ArrayJagged`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ArrayJagged<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: ArrayJagged<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: ArrayJagged(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.ArrayJagged`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ArrayJagged`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.ArrayJagged<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: ArrayJagged<T>.Stepper(StepRef<T>)
  nameWithType.vb: ArrayJagged(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.ArrayJagged`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ArrayJagged`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.ArrayJagged<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: ArrayJagged<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: ArrayJagged(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.ArrayJagged`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.ArrayJagged-1.html#Towel_DataStructures_ArrayJagged_1_Stepper_
  commentId: Overload:Towel.DataStructures.ArrayJagged`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.ArrayJagged<T>.Stepper
  fullName.vb: Towel.DataStructures.ArrayJagged(Of T).Stepper
  nameWithType: ArrayJagged<T>.Stepper
  nameWithType.vb: ArrayJagged(Of T).Stepper
- uid: Towel.DataStructures.AvlTree
  name: AvlTree
  href: api/Towel.DataStructures.AvlTree.html
  commentId: T:Towel.DataStructures.AvlTree
  fullName: Towel.DataStructures.AvlTree
  nameWithType: AvlTree
- uid: Towel.DataStructures.AvlTreeLinked`2
  name: AvlTreeLinked<T, _Compare>
  href: api/Towel.DataStructures.AvlTreeLinked-2.html
  commentId: T:Towel.DataStructures.AvlTreeLinked`2
  name.vb: AvlTreeLinked(Of T, _Compare)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare)
  nameWithType: AvlTreeLinked<T, _Compare>
  nameWithType.vb: AvlTreeLinked(Of T, _Compare)
- uid: Towel.DataStructures.AvlTreeLinked`2.#ctor(`1)
  name: AvlTreeLinked(_Compare)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2__ctor__1_
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.#ctor(`1)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.AvlTreeLinked(_Compare)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).AvlTreeLinked(_Compare)
  nameWithType: AvlTreeLinked<T, _Compare>.AvlTreeLinked(_Compare)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).AvlTreeLinked(_Compare)
- uid: Towel.DataStructures.AvlTreeLinked`2.#ctor*
  name: AvlTreeLinked
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2__ctor_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.AvlTreeLinked
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).AvlTreeLinked
  nameWithType: AvlTreeLinked<T, _Compare>.AvlTreeLinked
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).AvlTreeLinked
- uid: Towel.DataStructures.AvlTreeLinked`2.Clear
  name: Clear()
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Clear
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.Clear
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Clear()
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Clear()
  nameWithType: AvlTreeLinked<T, _Compare>.Clear()
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Clear()
- uid: Towel.DataStructures.AvlTreeLinked`2.Clear*
  name: Clear
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Clear_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Clear
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Clear
  nameWithType: AvlTreeLinked<T, _Compare>.Clear
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Clear
- uid: Towel.DataStructures.AvlTreeLinked`2.Clone
  name: Clone()
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Clone
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.Clone
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Clone()
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Clone()
  nameWithType: AvlTreeLinked<T, _Compare>.Clone()
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Clone()
- uid: Towel.DataStructures.AvlTreeLinked`2.Clone*
  name: Clone
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Clone_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Clone
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Clone
  nameWithType: AvlTreeLinked<T, _Compare>.Clone
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Clone
- uid: Towel.DataStructures.AvlTreeLinked`2.Compare
  name: Compare
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Compare
  commentId: P:Towel.DataStructures.AvlTreeLinked`2.Compare
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Compare
  nameWithType: AvlTreeLinked<T, _Compare>.Compare
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Compare
- uid: Towel.DataStructures.AvlTreeLinked`2.Compare*
  name: Compare
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Compare_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.Compare
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Compare
  nameWithType: AvlTreeLinked<T, _Compare>.Compare
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Compare
- uid: Towel.DataStructures.AvlTreeLinked`2.Contains(`0)
  name: Contains(T)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Contains__0_
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.Contains(`0)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Contains(T)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Contains(T)
  nameWithType: AvlTreeLinked<T, _Compare>.Contains(T)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Contains(T)
- uid: Towel.DataStructures.AvlTreeLinked`2.Contains(Func{`0,Towel.CompareResult})
  name: Contains(Func<T, CompareResult>)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Contains_Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.Contains(Func{`0,Towel.CompareResult})
  name.vb: Contains(Func(Of T, CompareResult))
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Contains(Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Contains(Func(Of T, Towel.CompareResult))
  nameWithType: AvlTreeLinked<T, _Compare>.Contains(Func<T, CompareResult>)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Contains(Func(Of T, CompareResult))
- uid: Towel.DataStructures.AvlTreeLinked`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Contains_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Contains
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Contains
  nameWithType: AvlTreeLinked<T, _Compare>.Contains
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Contains
- uid: Towel.DataStructures.AvlTreeLinked`2.Contains``1(``0)
  name: Contains<Sift>(Sift)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Contains__1___0_
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.Contains``1(``0)
  name.vb: Contains(Of Sift)(Sift)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Contains<Sift>(Sift)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Contains(Of Sift)(Sift)
  nameWithType: AvlTreeLinked<T, _Compare>.Contains<Sift>(Sift)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Contains(Of Sift)(Sift)
- uid: Towel.DataStructures.AvlTreeLinked`2.Count
  name: Count
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Count
  commentId: P:Towel.DataStructures.AvlTreeLinked`2.Count
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Count
  nameWithType: AvlTreeLinked<T, _Compare>.Count
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Count
- uid: Towel.DataStructures.AvlTreeLinked`2.Count*
  name: Count
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_Count_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.Count
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).Count
  nameWithType: AvlTreeLinked<T, _Compare>.Count
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).Count
- uid: Towel.DataStructures.AvlTreeLinked`2.CurrentGreatest
  name: CurrentGreatest
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_CurrentGreatest
  commentId: P:Towel.DataStructures.AvlTreeLinked`2.CurrentGreatest
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).CurrentGreatest
  nameWithType: AvlTreeLinked<T, _Compare>.CurrentGreatest
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.AvlTreeLinked`2.CurrentGreatest*
  name: CurrentGreatest
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_CurrentGreatest_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.CurrentGreatest
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).CurrentGreatest
  nameWithType: AvlTreeLinked<T, _Compare>.CurrentGreatest
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.AvlTreeLinked`2.CurrentLeast
  name: CurrentLeast
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_CurrentLeast
  commentId: P:Towel.DataStructures.AvlTreeLinked`2.CurrentLeast
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).CurrentLeast
  nameWithType: AvlTreeLinked<T, _Compare>.CurrentLeast
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.AvlTreeLinked`2.CurrentLeast*
  name: CurrentLeast
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_CurrentLeast_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.CurrentLeast
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).CurrentLeast
  nameWithType: AvlTreeLinked<T, _Compare>.CurrentLeast
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.AvlTreeLinked`2.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: AvlTreeLinked<T, _Compare>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.AvlTreeLinked`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryAdd_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryAdd
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryAdd
  nameWithType: AvlTreeLinked<T, _Compare>.TryAdd
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryAdd
- uid: Towel.DataStructures.AvlTreeLinked`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryGet__0__System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryGet(out T, out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryGet(ByRef T, ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: AvlTreeLinked<T, _Compare>.TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.AvlTreeLinked`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryGet_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryGet
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryGet
  nameWithType: AvlTreeLinked<T, _Compare>.TryGet
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryGet
- uid: Towel.DataStructures.AvlTreeLinked`2.TryGet``1(`0@,System.Nullable{Exception}@,``0)
  name: TryGet<Sift>(out T, out Nullable<Exception>, Sift)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryGet__1__0__System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryGet``1(`0@,System.Nullable{Exception}@,``0)
  name.vb: TryGet(Of Sift)(ByRef T, ByRef Nullable(Of Exception), Sift)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryGet<Sift>(out T, out System.Nullable<Exception>, Sift)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryGet(Of Sift)(ByRef T, ByRef System.Nullable(Of Exception), Sift)
  nameWithType: AvlTreeLinked<T, _Compare>.TryGet<Sift>(out T, out Nullable<Exception>, Sift)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryGet(Of Sift)(ByRef T, ByRef Nullable(Of Exception), Sift)
- uid: Towel.DataStructures.AvlTreeLinked`2.TryRemove(`0,System.Nullable{Exception}@)
  name: TryRemove(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryRemove__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryRemove(`0,System.Nullable{Exception}@)
  name.vb: TryRemove(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryRemove(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryRemove(T, ByRef System.Nullable(Of Exception))
  nameWithType: AvlTreeLinked<T, _Compare>.TryRemove(T, out Nullable<Exception>)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryRemove(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.AvlTreeLinked`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryRemove_System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryRemove(out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryRemove(ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: AvlTreeLinked<T, _Compare>.TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.AvlTreeLinked`2.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryRemove_
  commentId: Overload:Towel.DataStructures.AvlTreeLinked`2.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryRemove
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryRemove
  nameWithType: AvlTreeLinked<T, _Compare>.TryRemove
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryRemove
- uid: Towel.DataStructures.AvlTreeLinked`2.TryRemove``1(System.Nullable{Exception}@,``0)
  name: TryRemove<Sift>(out Nullable<Exception>, Sift)
  href: api/Towel.DataStructures.AvlTreeLinked-2.html#Towel_DataStructures_AvlTreeLinked_2_TryRemove__1_System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.AvlTreeLinked`2.TryRemove``1(System.Nullable{Exception}@,``0)
  name.vb: TryRemove(Of Sift)(ByRef Nullable(Of Exception), Sift)
  fullName: Towel.DataStructures.AvlTreeLinked<T, _Compare>.TryRemove<Sift>(out System.Nullable<Exception>, Sift)
  fullName.vb: Towel.DataStructures.AvlTreeLinked(Of T, _Compare).TryRemove(Of Sift)(ByRef System.Nullable(Of Exception), Sift)
  nameWithType: AvlTreeLinked<T, _Compare>.TryRemove<Sift>(out Nullable<Exception>, Sift)
  nameWithType.vb: AvlTreeLinked(Of T, _Compare).TryRemove(Of Sift)(ByRef Nullable(Of Exception), Sift)
- uid: Towel.DataStructures.DataStructure
  name: DataStructure
  href: api/Towel.DataStructures.DataStructure.html
  commentId: T:Towel.DataStructures.DataStructure
  fullName: Towel.DataStructures.DataStructure
  nameWithType: DataStructure
- uid: Towel.DataStructures.DataStructure.Add*
  name: Add
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Add_
  commentId: Overload:Towel.DataStructures.DataStructure.Add
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.Add
  nameWithType: DataStructure.Add
- uid: Towel.DataStructures.DataStructure.Add``1(Towel.DataStructures.DataStructure.IAddable{``0},``0)
  name: Add<T>(DataStructure.IAddable<T>, T)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Add__1_Towel_DataStructures_DataStructure_IAddable___0____0_
  commentId: M:Towel.DataStructures.DataStructure.Add``1(Towel.DataStructures.DataStructure.IAddable{``0},``0)
  name.vb: Add(Of T)(DataStructure.IAddable(Of T), T)
  fullName: Towel.DataStructures.DataStructure.Add<T>(Towel.DataStructures.DataStructure.IAddable<T>, T)
  fullName.vb: Towel.DataStructures.DataStructure.Add(Of T)(Towel.DataStructures.DataStructure.IAddable(Of T), T)
  nameWithType: DataStructure.Add<T>(DataStructure.IAddable<T>, T)
  nameWithType.vb: DataStructure.Add(Of T)(DataStructure.IAddable(Of T), T)
- uid: Towel.DataStructures.DataStructure.IAddable`1
  name: DataStructure.IAddable<T>
  href: api/Towel.DataStructures.DataStructure.IAddable-1.html
  commentId: T:Towel.DataStructures.DataStructure.IAddable`1
  name.vb: DataStructure.IAddable(Of T)
  fullName: Towel.DataStructures.DataStructure.IAddable<T>
  fullName.vb: Towel.DataStructures.DataStructure.IAddable(Of T)
  nameWithType: DataStructure.IAddable<T>
  nameWithType.vb: DataStructure.IAddable(Of T)
- uid: Towel.DataStructures.DataStructure.IAddable`1.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.DataStructure.IAddable-1.html#Towel_DataStructures_DataStructure_IAddable_1_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.DataStructure.IAddable`1.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.DataStructure.IAddable<T>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.DataStructure.IAddable(Of T).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: DataStructure.IAddable<T>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: DataStructure.IAddable(Of T).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.DataStructure.IAddable`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.DataStructure.IAddable-1.html#Towel_DataStructures_DataStructure_IAddable_1_TryAdd_
  commentId: Overload:Towel.DataStructures.DataStructure.IAddable`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IAddable<T>.TryAdd
  fullName.vb: Towel.DataStructures.DataStructure.IAddable(Of T).TryAdd
  nameWithType: DataStructure.IAddable<T>.TryAdd
  nameWithType.vb: DataStructure.IAddable(Of T).TryAdd
- uid: Towel.DataStructures.DataStructure.IAuditable`1
  name: DataStructure.IAuditable<T>
  href: api/Towel.DataStructures.DataStructure.IAuditable-1.html
  commentId: T:Towel.DataStructures.DataStructure.IAuditable`1
  name.vb: DataStructure.IAuditable(Of T)
  fullName: Towel.DataStructures.DataStructure.IAuditable<T>
  fullName.vb: Towel.DataStructures.DataStructure.IAuditable(Of T)
  nameWithType: DataStructure.IAuditable<T>
  nameWithType.vb: DataStructure.IAuditable(Of T)
- uid: Towel.DataStructures.DataStructure.IAuditable`1.Contains(`0)
  name: Contains(T)
  href: api/Towel.DataStructures.DataStructure.IAuditable-1.html#Towel_DataStructures_DataStructure_IAuditable_1_Contains__0_
  commentId: M:Towel.DataStructures.DataStructure.IAuditable`1.Contains(`0)
  fullName: Towel.DataStructures.DataStructure.IAuditable<T>.Contains(T)
  fullName.vb: Towel.DataStructures.DataStructure.IAuditable(Of T).Contains(T)
  nameWithType: DataStructure.IAuditable<T>.Contains(T)
  nameWithType.vb: DataStructure.IAuditable(Of T).Contains(T)
- uid: Towel.DataStructures.DataStructure.IAuditable`1.Contains*
  name: Contains
  href: api/Towel.DataStructures.DataStructure.IAuditable-1.html#Towel_DataStructures_DataStructure_IAuditable_1_Contains_
  commentId: Overload:Towel.DataStructures.DataStructure.IAuditable`1.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IAuditable<T>.Contains
  fullName.vb: Towel.DataStructures.DataStructure.IAuditable(Of T).Contains
  nameWithType: DataStructure.IAuditable<T>.Contains
  nameWithType.vb: DataStructure.IAuditable(Of T).Contains
- uid: Towel.DataStructures.DataStructure.IClearable
  name: DataStructure.IClearable
  href: api/Towel.DataStructures.DataStructure.IClearable.html
  commentId: T:Towel.DataStructures.DataStructure.IClearable
  fullName: Towel.DataStructures.DataStructure.IClearable
  nameWithType: DataStructure.IClearable
- uid: Towel.DataStructures.DataStructure.IClearable.Clear
  name: Clear()
  href: api/Towel.DataStructures.DataStructure.IClearable.html#Towel_DataStructures_DataStructure_IClearable_Clear
  commentId: M:Towel.DataStructures.DataStructure.IClearable.Clear
  fullName: Towel.DataStructures.DataStructure.IClearable.Clear()
  nameWithType: DataStructure.IClearable.Clear()
- uid: Towel.DataStructures.DataStructure.IClearable.Clear*
  name: Clear
  href: api/Towel.DataStructures.DataStructure.IClearable.html#Towel_DataStructures_DataStructure_IClearable_Clear_
  commentId: Overload:Towel.DataStructures.DataStructure.IClearable.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IClearable.Clear
  nameWithType: DataStructure.IClearable.Clear
- uid: Towel.DataStructures.DataStructure.IComparing`2
  name: DataStructure.IComparing<T, _Compare>
  href: api/Towel.DataStructures.DataStructure.IComparing-2.html
  commentId: T:Towel.DataStructures.DataStructure.IComparing`2
  name.vb: DataStructure.IComparing(Of T, _Compare)
  fullName: Towel.DataStructures.DataStructure.IComparing<T, _Compare>
  fullName.vb: Towel.DataStructures.DataStructure.IComparing(Of T, _Compare)
  nameWithType: DataStructure.IComparing<T, _Compare>
  nameWithType.vb: DataStructure.IComparing(Of T, _Compare)
- uid: Towel.DataStructures.DataStructure.IComparing`2.Compare
  name: Compare
  href: api/Towel.DataStructures.DataStructure.IComparing-2.html#Towel_DataStructures_DataStructure_IComparing_2_Compare
  commentId: P:Towel.DataStructures.DataStructure.IComparing`2.Compare
  fullName: Towel.DataStructures.DataStructure.IComparing<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.DataStructure.IComparing(Of T, _Compare).Compare
  nameWithType: DataStructure.IComparing<T, _Compare>.Compare
  nameWithType.vb: DataStructure.IComparing(Of T, _Compare).Compare
- uid: Towel.DataStructures.DataStructure.IComparing`2.Compare*
  name: Compare
  href: api/Towel.DataStructures.DataStructure.IComparing-2.html#Towel_DataStructures_DataStructure_IComparing_2_Compare_
  commentId: Overload:Towel.DataStructures.DataStructure.IComparing`2.Compare
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IComparing<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.DataStructure.IComparing(Of T, _Compare).Compare
  nameWithType: DataStructure.IComparing<T, _Compare>.Compare
  nameWithType.vb: DataStructure.IComparing(Of T, _Compare).Compare
- uid: Towel.DataStructures.DataStructure.ICountable
  name: DataStructure.ICountable
  href: api/Towel.DataStructures.DataStructure.ICountable.html
  commentId: T:Towel.DataStructures.DataStructure.ICountable
  fullName: Towel.DataStructures.DataStructure.ICountable
  nameWithType: DataStructure.ICountable
- uid: Towel.DataStructures.DataStructure.ICountable.Count
  name: Count
  href: api/Towel.DataStructures.DataStructure.ICountable.html#Towel_DataStructures_DataStructure_ICountable_Count
  commentId: P:Towel.DataStructures.DataStructure.ICountable.Count
  fullName: Towel.DataStructures.DataStructure.ICountable.Count
  nameWithType: DataStructure.ICountable.Count
- uid: Towel.DataStructures.DataStructure.ICountable.Count*
  name: Count
  href: api/Towel.DataStructures.DataStructure.ICountable.html#Towel_DataStructures_DataStructure_ICountable_Count_
  commentId: Overload:Towel.DataStructures.DataStructure.ICountable.Count
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.ICountable.Count
  nameWithType: DataStructure.ICountable.Count
- uid: Towel.DataStructures.DataStructure.IEquating`1
  name: DataStructure.IEquating<T>
  href: api/Towel.DataStructures.DataStructure.IEquating-1.html
  commentId: T:Towel.DataStructures.DataStructure.IEquating`1
  name.vb: DataStructure.IEquating(Of T)
  fullName: Towel.DataStructures.DataStructure.IEquating<T>
  fullName.vb: Towel.DataStructures.DataStructure.IEquating(Of T)
  nameWithType: DataStructure.IEquating<T>
  nameWithType.vb: DataStructure.IEquating(Of T)
- uid: Towel.DataStructures.DataStructure.IEquating`1.Equate
  name: Equate
  href: api/Towel.DataStructures.DataStructure.IEquating-1.html#Towel_DataStructures_DataStructure_IEquating_1_Equate
  commentId: P:Towel.DataStructures.DataStructure.IEquating`1.Equate
  fullName: Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName.vb: Towel.DataStructures.DataStructure.IEquating(Of T).Equate
  nameWithType: DataStructure.IEquating<T>.Equate
  nameWithType.vb: DataStructure.IEquating(Of T).Equate
- uid: Towel.DataStructures.DataStructure.IEquating`1.Equate*
  name: Equate
  href: api/Towel.DataStructures.DataStructure.IEquating-1.html#Towel_DataStructures_DataStructure_IEquating_1_Equate_
  commentId: Overload:Towel.DataStructures.DataStructure.IEquating`1.Equate
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName.vb: Towel.DataStructures.DataStructure.IEquating(Of T).Equate
  nameWithType: DataStructure.IEquating<T>.Equate
  nameWithType.vb: DataStructure.IEquating(Of T).Equate
- uid: Towel.DataStructures.DataStructure.IHashing`1
  name: DataStructure.IHashing<T>
  href: api/Towel.DataStructures.DataStructure.IHashing-1.html
  commentId: T:Towel.DataStructures.DataStructure.IHashing`1
  name.vb: DataStructure.IHashing(Of T)
  fullName: Towel.DataStructures.DataStructure.IHashing<T>
  fullName.vb: Towel.DataStructures.DataStructure.IHashing(Of T)
  nameWithType: DataStructure.IHashing<T>
  nameWithType.vb: DataStructure.IHashing(Of T)
- uid: Towel.DataStructures.DataStructure.IHashing`1.Hash
  name: Hash
  href: api/Towel.DataStructures.DataStructure.IHashing-1.html#Towel_DataStructures_DataStructure_IHashing_1_Hash
  commentId: P:Towel.DataStructures.DataStructure.IHashing`1.Hash
  fullName: Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName.vb: Towel.DataStructures.DataStructure.IHashing(Of T).Hash
  nameWithType: DataStructure.IHashing<T>.Hash
  nameWithType.vb: DataStructure.IHashing(Of T).Hash
- uid: Towel.DataStructures.DataStructure.IHashing`1.Hash*
  name: Hash
  href: api/Towel.DataStructures.DataStructure.IHashing-1.html#Towel_DataStructures_DataStructure_IHashing_1_Hash_
  commentId: Overload:Towel.DataStructures.DataStructure.IHashing`1.Hash
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName.vb: Towel.DataStructures.DataStructure.IHashing(Of T).Hash
  nameWithType: DataStructure.IHashing<T>.Hash
  nameWithType.vb: DataStructure.IHashing(Of T).Hash
- uid: Towel.DataStructures.DataStructure.IRemovable`1
  name: DataStructure.IRemovable<T>
  href: api/Towel.DataStructures.DataStructure.IRemovable-1.html
  commentId: T:Towel.DataStructures.DataStructure.IRemovable`1
  name.vb: DataStructure.IRemovable(Of T)
  fullName: Towel.DataStructures.DataStructure.IRemovable<T>
  fullName.vb: Towel.DataStructures.DataStructure.IRemovable(Of T)
  nameWithType: DataStructure.IRemovable<T>
  nameWithType.vb: DataStructure.IRemovable(Of T)
- uid: Towel.DataStructures.DataStructure.IRemovable`1.TryRemove(`0,System.Nullable{Exception}@)
  name: TryRemove(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.DataStructure.IRemovable-1.html#Towel_DataStructures_DataStructure_IRemovable_1_TryRemove__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.DataStructure.IRemovable`1.TryRemove(`0,System.Nullable{Exception}@)
  name.vb: TryRemove(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.DataStructure.IRemovable<T>.TryRemove(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.DataStructure.IRemovable(Of T).TryRemove(T, ByRef System.Nullable(Of Exception))
  nameWithType: DataStructure.IRemovable<T>.TryRemove(T, out Nullable<Exception>)
  nameWithType.vb: DataStructure.IRemovable(Of T).TryRemove(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.DataStructure.IRemovable`1.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.DataStructure.IRemovable-1.html#Towel_DataStructures_DataStructure_IRemovable_1_TryRemove_
  commentId: Overload:Towel.DataStructures.DataStructure.IRemovable`1.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IRemovable<T>.TryRemove
  fullName.vb: Towel.DataStructures.DataStructure.IRemovable(Of T).TryRemove
  nameWithType: DataStructure.IRemovable<T>.TryRemove
  nameWithType.vb: DataStructure.IRemovable(Of T).TryRemove
- uid: Towel.DataStructures.DataStructure.IStepperRef`1
  name: DataStructure.IStepperRef<T>
  href: api/Towel.DataStructures.DataStructure.IStepperRef-1.html
  commentId: T:Towel.DataStructures.DataStructure.IStepperRef`1
  name.vb: DataStructure.IStepperRef(Of T)
  fullName: Towel.DataStructures.DataStructure.IStepperRef<T>
  fullName.vb: Towel.DataStructures.DataStructure.IStepperRef(Of T)
  nameWithType: DataStructure.IStepperRef<T>
  nameWithType.vb: DataStructure.IStepperRef(Of T)
- uid: Towel.DataStructures.DataStructure.IStepperRef`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.DataStructure.IStepperRef-1.html#Towel_DataStructures_DataStructure_IStepperRef_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.DataStructure.IStepperRef`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.DataStructure.IStepperRef<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.DataStructure.IStepperRef(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: DataStructure.IStepperRef<T>.Stepper(StepRef<T>)
  nameWithType.vb: DataStructure.IStepperRef(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.DataStructure.IStepperRef`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.DataStructure.IStepperRef-1.html#Towel_DataStructures_DataStructure_IStepperRef_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.DataStructure.IStepperRef`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.DataStructure.IStepperRef<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.DataStructure.IStepperRef(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: DataStructure.IStepperRef<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: DataStructure.IStepperRef(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.DataStructure.IStepperRef`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.DataStructure.IStepperRef-1.html#Towel_DataStructures_DataStructure_IStepperRef_1_Stepper_
  commentId: Overload:Towel.DataStructures.DataStructure.IStepperRef`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.IStepperRef<T>.Stepper
  fullName.vb: Towel.DataStructures.DataStructure.IStepperRef(Of T).Stepper
  nameWithType: DataStructure.IStepperRef<T>.Stepper
  nameWithType.vb: DataStructure.IStepperRef(Of T).Stepper
- uid: Towel.DataStructures.DataStructure.Remove*
  name: Remove
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Remove_
  commentId: Overload:Towel.DataStructures.DataStructure.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.Remove
  nameWithType: DataStructure.Remove
- uid: Towel.DataStructures.DataStructure.Remove``1(Towel.DataStructures.DataStructure.IRemovable{``0},``0)
  name: Remove<T>(DataStructure.IRemovable<T>, T)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Remove__1_Towel_DataStructures_DataStructure_IRemovable___0____0_
  commentId: M:Towel.DataStructures.DataStructure.Remove``1(Towel.DataStructures.DataStructure.IRemovable{``0},``0)
  name.vb: Remove(Of T)(DataStructure.IRemovable(Of T), T)
  fullName: Towel.DataStructures.DataStructure.Remove<T>(Towel.DataStructures.DataStructure.IRemovable<T>, T)
  fullName.vb: Towel.DataStructures.DataStructure.Remove(Of T)(Towel.DataStructures.DataStructure.IRemovable(Of T), T)
  nameWithType: DataStructure.Remove<T>(DataStructure.IRemovable<T>, T)
  nameWithType.vb: DataStructure.Remove(Of T)(DataStructure.IRemovable(Of T), T)
- uid: Towel.DataStructures.DataStructure.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Stepper_
  commentId: Overload:Towel.DataStructures.DataStructure.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.Stepper
  nameWithType: DataStructure.Stepper
- uid: Towel.DataStructures.DataStructure.Stepper``1(Towel.DataStructures.IDataStructure{``0})
  name: Stepper<T>(IDataStructure<T>)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_Stepper__1_Towel_DataStructures_IDataStructure___0__
  commentId: M:Towel.DataStructures.DataStructure.Stepper``1(Towel.DataStructures.IDataStructure{``0})
  name.vb: Stepper(Of T)(IDataStructure(Of T))
  fullName: Towel.DataStructures.DataStructure.Stepper<T>(Towel.DataStructures.IDataStructure<T>)
  fullName.vb: Towel.DataStructures.DataStructure.Stepper(Of T)(Towel.DataStructures.IDataStructure(Of T))
  nameWithType: DataStructure.Stepper<T>(IDataStructure<T>)
  nameWithType.vb: DataStructure.Stepper(Of T)(IDataStructure(Of T))
- uid: Towel.DataStructures.DataStructure.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_StepperBreak_
  commentId: Overload:Towel.DataStructures.DataStructure.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.StepperBreak
  nameWithType: DataStructure.StepperBreak
- uid: Towel.DataStructures.DataStructure.StepperBreak``1(Towel.DataStructures.IDataStructure{``0})
  name: StepperBreak<T>(IDataStructure<T>)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_StepperBreak__1_Towel_DataStructures_IDataStructure___0__
  commentId: M:Towel.DataStructures.DataStructure.StepperBreak``1(Towel.DataStructures.IDataStructure{``0})
  name.vb: StepperBreak(Of T)(IDataStructure(Of T))
  fullName: Towel.DataStructures.DataStructure.StepperBreak<T>(Towel.DataStructures.IDataStructure<T>)
  fullName.vb: Towel.DataStructures.DataStructure.StepperBreak(Of T)(Towel.DataStructures.IDataStructure(Of T))
  nameWithType: DataStructure.StepperBreak<T>(IDataStructure<T>)
  nameWithType.vb: DataStructure.StepperBreak(Of T)(IDataStructure(Of T))
- uid: Towel.DataStructures.DataStructure.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_TryAdd_
  commentId: Overload:Towel.DataStructures.DataStructure.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.TryAdd
  nameWithType: DataStructure.TryAdd
- uid: Towel.DataStructures.DataStructure.TryAdd``1(Towel.DataStructures.DataStructure.IAddable{``0},``0)
  name: TryAdd<T>(DataStructure.IAddable<T>, T)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_TryAdd__1_Towel_DataStructures_DataStructure_IAddable___0____0_
  commentId: M:Towel.DataStructures.DataStructure.TryAdd``1(Towel.DataStructures.DataStructure.IAddable{``0},``0)
  name.vb: TryAdd(Of T)(DataStructure.IAddable(Of T), T)
  fullName: Towel.DataStructures.DataStructure.TryAdd<T>(Towel.DataStructures.DataStructure.IAddable<T>, T)
  fullName.vb: Towel.DataStructures.DataStructure.TryAdd(Of T)(Towel.DataStructures.DataStructure.IAddable(Of T), T)
  nameWithType: DataStructure.TryAdd<T>(DataStructure.IAddable<T>, T)
  nameWithType.vb: DataStructure.TryAdd(Of T)(DataStructure.IAddable(Of T), T)
- uid: Towel.DataStructures.DataStructure.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_TryRemove_
  commentId: Overload:Towel.DataStructures.DataStructure.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.DataStructure.TryRemove
  nameWithType: DataStructure.TryRemove
- uid: Towel.DataStructures.DataStructure.TryRemove``1(Towel.DataStructures.DataStructure.IRemovable{``0},``0)
  name: TryRemove<T>(DataStructure.IRemovable<T>, T)
  href: api/Towel.DataStructures.DataStructure.html#Towel_DataStructures_DataStructure_TryRemove__1_Towel_DataStructures_DataStructure_IRemovable___0____0_
  commentId: M:Towel.DataStructures.DataStructure.TryRemove``1(Towel.DataStructures.DataStructure.IRemovable{``0},``0)
  name.vb: TryRemove(Of T)(DataStructure.IRemovable(Of T), T)
  fullName: Towel.DataStructures.DataStructure.TryRemove<T>(Towel.DataStructures.DataStructure.IRemovable<T>, T)
  fullName.vb: Towel.DataStructures.DataStructure.TryRemove(Of T)(Towel.DataStructures.DataStructure.IRemovable(Of T), T)
  nameWithType: DataStructure.TryRemove<T>(DataStructure.IRemovable<T>, T)
  nameWithType.vb: DataStructure.TryRemove(Of T)(DataStructure.IRemovable(Of T), T)
- uid: Towel.DataStructures.GraphMap`1
  name: GraphMap<T>
  href: api/Towel.DataStructures.GraphMap-1.html
  commentId: T:Towel.DataStructures.GraphMap`1
  name.vb: GraphMap(Of T)
  fullName: Towel.DataStructures.GraphMap<T>
  fullName.vb: Towel.DataStructures.GraphMap(Of T)
  nameWithType: GraphMap<T>
  nameWithType.vb: GraphMap(Of T)
- uid: Towel.DataStructures.GraphMap`1.#ctor
  name: GraphMap()
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1__ctor
  commentId: M:Towel.DataStructures.GraphMap`1.#ctor
  fullName: Towel.DataStructures.GraphMap<T>.GraphMap()
  fullName.vb: Towel.DataStructures.GraphMap(Of T).GraphMap()
  nameWithType: GraphMap<T>.GraphMap()
  nameWithType.vb: GraphMap(Of T).GraphMap()
- uid: Towel.DataStructures.GraphMap`1.#ctor(Func{`0,`0,System.Boolean},Func{`0,System.Int32})
  name: GraphMap(Func<T, T, Boolean>, Func<T, Int32>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1__ctor_Func__0__0_System_Boolean__Func__0_System_Int32__
  commentId: M:Towel.DataStructures.GraphMap`1.#ctor(Func{`0,`0,System.Boolean},Func{`0,System.Int32})
  name.vb: GraphMap(Func(Of T, T, Boolean), Func(Of T, Int32))
  fullName: Towel.DataStructures.GraphMap<T>.GraphMap(Func<T, T, System.Boolean>, Func<T, System.Int32>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).GraphMap(Func(Of T, T, System.Boolean), Func(Of T, System.Int32))
  nameWithType: GraphMap<T>.GraphMap(Func<T, T, Boolean>, Func<T, Int32>)
  nameWithType.vb: GraphMap(Of T).GraphMap(Func(Of T, T, Boolean), Func(Of T, Int32))
- uid: Towel.DataStructures.GraphMap`1.#ctor*
  name: GraphMap
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1__ctor_
  commentId: Overload:Towel.DataStructures.GraphMap`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.GraphMap
  fullName.vb: Towel.DataStructures.GraphMap(Of T).GraphMap
  nameWithType: GraphMap<T>.GraphMap
  nameWithType.vb: GraphMap(Of T).GraphMap
- uid: Towel.DataStructures.GraphMap`1.Add(`0,`0)
  name: Add(T, T)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Add__0__0_
  commentId: M:Towel.DataStructures.GraphMap`1.Add(`0,`0)
  fullName: Towel.DataStructures.GraphMap<T>.Add(T, T)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Add(T, T)
  nameWithType: GraphMap<T>.Add(T, T)
  nameWithType.vb: GraphMap(Of T).Add(T, T)
- uid: Towel.DataStructures.GraphMap`1.Add*
  name: Add
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Add_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Add
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Add
  nameWithType: GraphMap<T>.Add
  nameWithType.vb: GraphMap(Of T).Add
- uid: Towel.DataStructures.GraphMap`1.Adjacent(`0,`0)
  name: Adjacent(T, T)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Adjacent__0__0_
  commentId: M:Towel.DataStructures.GraphMap`1.Adjacent(`0,`0)
  fullName: Towel.DataStructures.GraphMap<T>.Adjacent(T, T)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Adjacent(T, T)
  nameWithType: GraphMap<T>.Adjacent(T, T)
  nameWithType.vb: GraphMap(Of T).Adjacent(T, T)
- uid: Towel.DataStructures.GraphMap`1.Adjacent*
  name: Adjacent
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Adjacent_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Adjacent
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Adjacent
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Adjacent
  nameWithType: GraphMap<T>.Adjacent
  nameWithType.vb: GraphMap(Of T).Adjacent
- uid: Towel.DataStructures.GraphMap`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Clear
  commentId: M:Towel.DataStructures.GraphMap`1.Clear
  fullName: Towel.DataStructures.GraphMap<T>.Clear()
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Clear()
  nameWithType: GraphMap<T>.Clear()
  nameWithType.vb: GraphMap(Of T).Clear()
- uid: Towel.DataStructures.GraphMap`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Clear_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Clear
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Clear
  nameWithType: GraphMap<T>.Clear
  nameWithType.vb: GraphMap(Of T).Clear
- uid: Towel.DataStructures.GraphMap`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Clone
  commentId: M:Towel.DataStructures.GraphMap`1.Clone
  fullName: Towel.DataStructures.GraphMap<T>.Clone()
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Clone()
  nameWithType: GraphMap<T>.Clone()
  nameWithType.vb: GraphMap(Of T).Clone()
- uid: Towel.DataStructures.GraphMap`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Clone_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Clone
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Clone
  nameWithType: GraphMap<T>.Clone
  nameWithType.vb: GraphMap(Of T).Clone
- uid: Towel.DataStructures.GraphMap`1.EdgeCount
  name: EdgeCount
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_EdgeCount
  commentId: P:Towel.DataStructures.GraphMap`1.EdgeCount
  fullName: Towel.DataStructures.GraphMap<T>.EdgeCount
  fullName.vb: Towel.DataStructures.GraphMap(Of T).EdgeCount
  nameWithType: GraphMap<T>.EdgeCount
  nameWithType.vb: GraphMap(Of T).EdgeCount
- uid: Towel.DataStructures.GraphMap`1.EdgeCount*
  name: EdgeCount
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_EdgeCount_
  commentId: Overload:Towel.DataStructures.GraphMap`1.EdgeCount
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.EdgeCount
  fullName.vb: Towel.DataStructures.GraphMap(Of T).EdgeCount
  nameWithType: GraphMap<T>.EdgeCount
  nameWithType.vb: GraphMap(Of T).EdgeCount
- uid: Towel.DataStructures.GraphMap`1.Neighbors(`0,Action{`0})
  name: Neighbors(T, Action<T>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Neighbors__0_Action__0__
  commentId: M:Towel.DataStructures.GraphMap`1.Neighbors(`0,Action{`0})
  name.vb: Neighbors(T, Action(Of T))
  fullName: Towel.DataStructures.GraphMap<T>.Neighbors(T, Action<T>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Neighbors(T, Action(Of T))
  nameWithType: GraphMap<T>.Neighbors(T, Action<T>)
  nameWithType.vb: GraphMap(Of T).Neighbors(T, Action(Of T))
- uid: Towel.DataStructures.GraphMap`1.Neighbors*
  name: Neighbors
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Neighbors_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Neighbors
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Neighbors
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Neighbors
  nameWithType: GraphMap<T>.Neighbors
  nameWithType.vb: GraphMap(Of T).Neighbors
- uid: Towel.DataStructures.GraphMap`1.NodeCount
  name: NodeCount
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_NodeCount
  commentId: P:Towel.DataStructures.GraphMap`1.NodeCount
  fullName: Towel.DataStructures.GraphMap<T>.NodeCount
  fullName.vb: Towel.DataStructures.GraphMap(Of T).NodeCount
  nameWithType: GraphMap<T>.NodeCount
  nameWithType.vb: GraphMap(Of T).NodeCount
- uid: Towel.DataStructures.GraphMap`1.NodeCount*
  name: NodeCount
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_NodeCount_
  commentId: Overload:Towel.DataStructures.GraphMap`1.NodeCount
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.NodeCount
  fullName.vb: Towel.DataStructures.GraphMap(Of T).NodeCount
  nameWithType: GraphMap<T>.NodeCount
  nameWithType.vb: GraphMap(Of T).NodeCount
- uid: Towel.DataStructures.GraphMap`1.Remove(`0,`0)
  name: Remove(T, T)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Remove__0__0_
  commentId: M:Towel.DataStructures.GraphMap`1.Remove(`0,`0)
  fullName: Towel.DataStructures.GraphMap<T>.Remove(T, T)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Remove(T, T)
  nameWithType: GraphMap<T>.Remove(T, T)
  nameWithType.vb: GraphMap(Of T).Remove(T, T)
- uid: Towel.DataStructures.GraphMap`1.Remove*
  name: Remove
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Remove_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Remove
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Remove
  nameWithType: GraphMap<T>.Remove
  nameWithType.vb: GraphMap(Of T).Remove
- uid: Towel.DataStructures.GraphMap`1.Stepper(Action{`0,`0})
  name: Stepper(Action<T, T>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Stepper_Action__0__0__
  commentId: M:Towel.DataStructures.GraphMap`1.Stepper(Action{`0,`0})
  name.vb: Stepper(Action(Of T, T))
  fullName: Towel.DataStructures.GraphMap<T>.Stepper(Action<T, T>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Stepper(Action(Of T, T))
  nameWithType: GraphMap<T>.Stepper(Action<T, T>)
  nameWithType.vb: GraphMap(Of T).Stepper(Action(Of T, T))
- uid: Towel.DataStructures.GraphMap`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.GraphMap`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.GraphMap<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Stepper(Action(Of T))
  nameWithType: GraphMap<T>.Stepper(Action<T>)
  nameWithType.vb: GraphMap(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.GraphMap`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name: Stepper(Func<T, T, StepStatus>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Stepper_Func__0__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.GraphMap`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, T, StepStatus))
  fullName: Towel.DataStructures.GraphMap<T>.Stepper(Func<T, T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Stepper(Func(Of T, T, Towel.StepStatus))
  nameWithType: GraphMap<T>.Stepper(Func<T, T, StepStatus>)
  nameWithType.vb: GraphMap(Of T).Stepper(Func(Of T, T, StepStatus))
- uid: Towel.DataStructures.GraphMap`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.GraphMap`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.GraphMap<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: GraphMap<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: GraphMap(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.GraphMap`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_Stepper_
  commentId: Overload:Towel.DataStructures.GraphMap`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.Stepper
  fullName.vb: Towel.DataStructures.GraphMap(Of T).Stepper
  nameWithType: GraphMap<T>.Stepper
  nameWithType.vb: GraphMap(Of T).Stepper
- uid: Towel.DataStructures.GraphMap`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_ToArray
  commentId: M:Towel.DataStructures.GraphMap`1.ToArray
  fullName: Towel.DataStructures.GraphMap<T>.ToArray()
  fullName.vb: Towel.DataStructures.GraphMap(Of T).ToArray()
  nameWithType: GraphMap<T>.ToArray()
  nameWithType.vb: GraphMap(Of T).ToArray()
- uid: Towel.DataStructures.GraphMap`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_ToArray_
  commentId: Overload:Towel.DataStructures.GraphMap`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.ToArray
  fullName.vb: Towel.DataStructures.GraphMap(Of T).ToArray
  nameWithType: GraphMap<T>.ToArray
  nameWithType.vb: GraphMap(Of T).ToArray
- uid: Towel.DataStructures.GraphMap`1.TryAdd(`0,Exception@)
  name: TryAdd(T, out Exception)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_TryAdd__0_Exception__
  commentId: M:Towel.DataStructures.GraphMap`1.TryAdd(`0,Exception@)
  name.vb: TryAdd(T, ByRef Exception)
  fullName: Towel.DataStructures.GraphMap<T>.TryAdd(T, out Exception)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).TryAdd(T, ByRef Exception)
  nameWithType: GraphMap<T>.TryAdd(T, out Exception)
  nameWithType.vb: GraphMap(Of T).TryAdd(T, ByRef Exception)
- uid: Towel.DataStructures.GraphMap`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_TryAdd_
  commentId: Overload:Towel.DataStructures.GraphMap`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.TryAdd
  fullName.vb: Towel.DataStructures.GraphMap(Of T).TryAdd
  nameWithType: GraphMap<T>.TryAdd
  nameWithType.vb: GraphMap(Of T).TryAdd
- uid: Towel.DataStructures.GraphMap`1.TryRemove(`0,Exception@)
  name: TryRemove(T, out Exception)
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_TryRemove__0_Exception__
  commentId: M:Towel.DataStructures.GraphMap`1.TryRemove(`0,Exception@)
  name.vb: TryRemove(T, ByRef Exception)
  fullName: Towel.DataStructures.GraphMap<T>.TryRemove(T, out Exception)
  fullName.vb: Towel.DataStructures.GraphMap(Of T).TryRemove(T, ByRef Exception)
  nameWithType: GraphMap<T>.TryRemove(T, out Exception)
  nameWithType.vb: GraphMap(Of T).TryRemove(T, ByRef Exception)
- uid: Towel.DataStructures.GraphMap`1.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.GraphMap-1.html#Towel_DataStructures_GraphMap_1_TryRemove_
  commentId: Overload:Towel.DataStructures.GraphMap`1.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.GraphMap<T>.TryRemove
  fullName.vb: Towel.DataStructures.GraphMap(Of T).TryRemove
  nameWithType: GraphMap<T>.TryRemove
  nameWithType.vb: GraphMap(Of T).TryRemove
- uid: Towel.DataStructures.GraphSetOmnitree`1
  name: GraphSetOmnitree<T>
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html
  commentId: T:Towel.DataStructures.GraphSetOmnitree`1
  name.vb: GraphSetOmnitree(Of T)
  fullName: Towel.DataStructures.GraphSetOmnitree<T>
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T)
  nameWithType: GraphSetOmnitree<T>
  nameWithType.vb: GraphSetOmnitree(Of T)
- uid: Towel.DataStructures.GraphSetOmnitree`1.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,`0,Towel.CompareResult}},System.Nullable{Func{`0,System.Int32}})
  name: GraphSetOmnitree(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, T, CompareResult>>, Nullable<Func<T, Int32>>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1__ctor_System_Nullable_Func__0__0_System_Boolean___System_Nullable_Func__0__0_Towel_CompareResult___System_Nullable_Func__0_System_Int32___
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,`0,Towel.CompareResult}},System.Nullable{Func{`0,System.Int32}})
  name.vb: GraphSetOmnitree(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.GraphSetOmnitree(System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, T, Towel.CompareResult>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).GraphSetOmnitree(System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, T, Towel.CompareResult)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: GraphSetOmnitree<T>.GraphSetOmnitree(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, T, CompareResult>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: GraphSetOmnitree(Of T).GraphSetOmnitree(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.DataStructures.GraphSetOmnitree`1.#ctor*
  name: GraphSetOmnitree
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1__ctor_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.GraphSetOmnitree
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).GraphSetOmnitree
  nameWithType: GraphSetOmnitree<T>.GraphSetOmnitree
  nameWithType.vb: GraphSetOmnitree(Of T).GraphSetOmnitree
- uid: Towel.DataStructures.GraphSetOmnitree`1.Add(`0,`0)
  name: Add(T, T)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Add__0__0_
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Add(`0,`0)
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Add(T, T)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Add(T, T)
  nameWithType: GraphSetOmnitree<T>.Add(T, T)
  nameWithType.vb: GraphSetOmnitree(Of T).Add(T, T)
- uid: Towel.DataStructures.GraphSetOmnitree`1.Add*
  name: Add
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Add_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Add
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Add
  nameWithType: GraphSetOmnitree<T>.Add
  nameWithType.vb: GraphSetOmnitree(Of T).Add
- uid: Towel.DataStructures.GraphSetOmnitree`1.Adjacent(`0,`0)
  name: Adjacent(T, T)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Adjacent__0__0_
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Adjacent(`0,`0)
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Adjacent(T, T)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Adjacent(T, T)
  nameWithType: GraphSetOmnitree<T>.Adjacent(T, T)
  nameWithType.vb: GraphSetOmnitree(Of T).Adjacent(T, T)
- uid: Towel.DataStructures.GraphSetOmnitree`1.Adjacent*
  name: Adjacent
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Adjacent_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Adjacent
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Adjacent
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Adjacent
  nameWithType: GraphSetOmnitree<T>.Adjacent
  nameWithType.vb: GraphSetOmnitree(Of T).Adjacent
- uid: Towel.DataStructures.GraphSetOmnitree`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Clear
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Clear
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Clear()
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Clear()
  nameWithType: GraphSetOmnitree<T>.Clear()
  nameWithType.vb: GraphSetOmnitree(Of T).Clear()
- uid: Towel.DataStructures.GraphSetOmnitree`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Clear_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Clear
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Clear
  nameWithType: GraphSetOmnitree<T>.Clear
  nameWithType.vb: GraphSetOmnitree(Of T).Clear
- uid: Towel.DataStructures.GraphSetOmnitree`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Clone
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Clone
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Clone()
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Clone()
  nameWithType: GraphSetOmnitree<T>.Clone()
  nameWithType.vb: GraphSetOmnitree(Of T).Clone()
- uid: Towel.DataStructures.GraphSetOmnitree`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Clone_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Clone
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Clone
  nameWithType: GraphSetOmnitree<T>.Clone
  nameWithType.vb: GraphSetOmnitree(Of T).Clone
- uid: Towel.DataStructures.GraphSetOmnitree`1.Edge
  name: GraphSetOmnitree<T>.Edge
  href: api/Towel.DataStructures.GraphSetOmnitree-1.Edge.html
  commentId: T:Towel.DataStructures.GraphSetOmnitree`1.Edge
  name.vb: GraphSetOmnitree(Of T).Edge
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Edge
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Edge
  nameWithType: GraphSetOmnitree<T>.Edge
  nameWithType.vb: GraphSetOmnitree(Of T).Edge
- uid: Towel.DataStructures.GraphSetOmnitree`1.Edge.End
  name: End
  href: api/Towel.DataStructures.GraphSetOmnitree-1.Edge.html#Towel_DataStructures_GraphSetOmnitree_1_Edge_End
  commentId: P:Towel.DataStructures.GraphSetOmnitree`1.Edge.End
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Edge.End
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Edge.End
  nameWithType: GraphSetOmnitree<T>.Edge.End
  nameWithType.vb: GraphSetOmnitree(Of T).Edge.End
- uid: Towel.DataStructures.GraphSetOmnitree`1.Edge.End*
  name: End
  href: api/Towel.DataStructures.GraphSetOmnitree-1.Edge.html#Towel_DataStructures_GraphSetOmnitree_1_Edge_End_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Edge.End
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Edge.End
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Edge.End
  nameWithType: GraphSetOmnitree<T>.Edge.End
  nameWithType.vb: GraphSetOmnitree(Of T).Edge.End
- uid: Towel.DataStructures.GraphSetOmnitree`1.Edge.Start
  name: Start
  href: api/Towel.DataStructures.GraphSetOmnitree-1.Edge.html#Towel_DataStructures_GraphSetOmnitree_1_Edge_Start
  commentId: P:Towel.DataStructures.GraphSetOmnitree`1.Edge.Start
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Edge.Start
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Edge.Start
  nameWithType: GraphSetOmnitree<T>.Edge.Start
  nameWithType.vb: GraphSetOmnitree(Of T).Edge.Start
- uid: Towel.DataStructures.GraphSetOmnitree`1.Edge.Start*
  name: Start
  href: api/Towel.DataStructures.GraphSetOmnitree-1.Edge.html#Towel_DataStructures_GraphSetOmnitree_1_Edge_Start_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Edge.Start
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Edge.Start
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Edge.Start
  nameWithType: GraphSetOmnitree<T>.Edge.Start
  nameWithType.vb: GraphSetOmnitree(Of T).Edge.Start
- uid: Towel.DataStructures.GraphSetOmnitree`1.EdgeCount
  name: EdgeCount
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_EdgeCount
  commentId: P:Towel.DataStructures.GraphSetOmnitree`1.EdgeCount
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.EdgeCount
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).EdgeCount
  nameWithType: GraphSetOmnitree<T>.EdgeCount
  nameWithType.vb: GraphSetOmnitree(Of T).EdgeCount
- uid: Towel.DataStructures.GraphSetOmnitree`1.EdgeCount*
  name: EdgeCount
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_EdgeCount_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.EdgeCount
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.EdgeCount
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).EdgeCount
  nameWithType: GraphSetOmnitree<T>.EdgeCount
  nameWithType.vb: GraphSetOmnitree(Of T).EdgeCount
- uid: Towel.DataStructures.GraphSetOmnitree`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_GetEnumerator
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.GetEnumerator
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).GetEnumerator()
  nameWithType: GraphSetOmnitree<T>.GetEnumerator()
  nameWithType.vb: GraphSetOmnitree(Of T).GetEnumerator()
- uid: Towel.DataStructures.GraphSetOmnitree`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).GetEnumerator
  nameWithType: GraphSetOmnitree<T>.GetEnumerator
  nameWithType.vb: GraphSetOmnitree(Of T).GetEnumerator
- uid: Towel.DataStructures.GraphSetOmnitree`1.Neighbors(`0,Action{`0})
  name: Neighbors(T, Action<T>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Neighbors__0_Action__0__
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Neighbors(`0,Action{`0})
  name.vb: Neighbors(T, Action(Of T))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Neighbors(T, Action<T>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Neighbors(T, Action(Of T))
  nameWithType: GraphSetOmnitree<T>.Neighbors(T, Action<T>)
  nameWithType.vb: GraphSetOmnitree(Of T).Neighbors(T, Action(Of T))
- uid: Towel.DataStructures.GraphSetOmnitree`1.Neighbors*
  name: Neighbors
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Neighbors_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Neighbors
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Neighbors
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Neighbors
  nameWithType: GraphSetOmnitree<T>.Neighbors
  nameWithType.vb: GraphSetOmnitree(Of T).Neighbors
- uid: Towel.DataStructures.GraphSetOmnitree`1.NodeCount
  name: NodeCount
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_NodeCount
  commentId: P:Towel.DataStructures.GraphSetOmnitree`1.NodeCount
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.NodeCount
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).NodeCount
  nameWithType: GraphSetOmnitree<T>.NodeCount
  nameWithType.vb: GraphSetOmnitree(Of T).NodeCount
- uid: Towel.DataStructures.GraphSetOmnitree`1.NodeCount*
  name: NodeCount
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_NodeCount_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.NodeCount
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.NodeCount
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).NodeCount
  nameWithType: GraphSetOmnitree<T>.NodeCount
  nameWithType.vb: GraphSetOmnitree(Of T).NodeCount
- uid: Towel.DataStructures.GraphSetOmnitree`1.Remove(`0,`0)
  name: Remove(T, T)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Remove__0__0_
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Remove(`0,`0)
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Remove(T, T)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Remove(T, T)
  nameWithType: GraphSetOmnitree<T>.Remove(T, T)
  nameWithType.vb: GraphSetOmnitree(Of T).Remove(T, T)
- uid: Towel.DataStructures.GraphSetOmnitree`1.Remove*
  name: Remove
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Remove_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Remove
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Remove
  nameWithType: GraphSetOmnitree<T>.Remove
  nameWithType.vb: GraphSetOmnitree(Of T).Remove
- uid: Towel.DataStructures.GraphSetOmnitree`1.Stepper(Action{`0,`0})
  name: Stepper(Action<T, T>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Stepper_Action__0__0__
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Stepper(Action{`0,`0})
  name.vb: Stepper(Action(Of T, T))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Stepper(Action<T, T>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Stepper(Action(Of T, T))
  nameWithType: GraphSetOmnitree<T>.Stepper(Action<T, T>)
  nameWithType.vb: GraphSetOmnitree(Of T).Stepper(Action(Of T, T))
- uid: Towel.DataStructures.GraphSetOmnitree`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Stepper(Action(Of T))
  nameWithType: GraphSetOmnitree<T>.Stepper(Action<T>)
  nameWithType.vb: GraphSetOmnitree(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.GraphSetOmnitree`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name: Stepper(Func<T, T, StepStatus>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Stepper_Func__0__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, T, StepStatus))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Stepper(Func<T, T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Stepper(Func(Of T, T, Towel.StepStatus))
  nameWithType: GraphSetOmnitree<T>.Stepper(Func<T, T, StepStatus>)
  nameWithType.vb: GraphSetOmnitree(Of T).Stepper(Func(Of T, T, StepStatus))
- uid: Towel.DataStructures.GraphSetOmnitree`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: GraphSetOmnitree<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: GraphSetOmnitree(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.GraphSetOmnitree`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_Stepper_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.Stepper
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).Stepper
  nameWithType: GraphSetOmnitree<T>.Stepper
  nameWithType.vb: GraphSetOmnitree(Of T).Stepper
- uid: Towel.DataStructures.GraphSetOmnitree`1.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: GraphSetOmnitree<T>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: GraphSetOmnitree(Of T).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.GraphSetOmnitree`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_TryAdd_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.TryAdd
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).TryAdd
  nameWithType: GraphSetOmnitree<T>.TryAdd
  nameWithType.vb: GraphSetOmnitree(Of T).TryAdd
- uid: Towel.DataStructures.GraphSetOmnitree`1.TryRemove(`0,System.Nullable{Exception}@)
  name: TryRemove(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_TryRemove__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.GraphSetOmnitree`1.TryRemove(`0,System.Nullable{Exception}@)
  name.vb: TryRemove(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.TryRemove(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).TryRemove(T, ByRef System.Nullable(Of Exception))
  nameWithType: GraphSetOmnitree<T>.TryRemove(T, out Nullable<Exception>)
  nameWithType.vb: GraphSetOmnitree(Of T).TryRemove(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.GraphSetOmnitree`1.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.GraphSetOmnitree-1.html#Towel_DataStructures_GraphSetOmnitree_1_TryRemove_
  commentId: Overload:Towel.DataStructures.GraphSetOmnitree`1.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.GraphSetOmnitree<T>.TryRemove
  fullName.vb: Towel.DataStructures.GraphSetOmnitree(Of T).TryRemove
  nameWithType: GraphSetOmnitree<T>.TryRemove
  nameWithType.vb: GraphSetOmnitree(Of T).TryRemove
- uid: Towel.DataStructures.HeapArray`1
  name: HeapArray<T>
  href: api/Towel.DataStructures.HeapArray-1.html
  commentId: T:Towel.DataStructures.HeapArray`1
  name.vb: HeapArray(Of T)
  fullName: Towel.DataStructures.HeapArray<T>
  fullName.vb: Towel.DataStructures.HeapArray(Of T)
  nameWithType: HeapArray<T>
  nameWithType.vb: HeapArray(Of T)
- uid: Towel.DataStructures.HeapArray`1.#ctor(System.Nullable{Func{`0,`0,Towel.CompareResult}},System.Nullable{System.Int32})
  name: HeapArray(Nullable<Func<T, T, CompareResult>>, Nullable<Int32>)
  href: api/Towel.DataStructures.HeapArray-1.html#Towel_DataStructures_HeapArray_1__ctor_System_Nullable_Func__0__0_Towel_CompareResult___System_Nullable_System_Int32__
  commentId: M:Towel.DataStructures.HeapArray`1.#ctor(System.Nullable{Func{`0,`0,Towel.CompareResult}},System.Nullable{System.Int32})
  name.vb: HeapArray(Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Int32))
  fullName: Towel.DataStructures.HeapArray<T>.HeapArray(System.Nullable<Func<T, T, Towel.CompareResult>>, System.Nullable<System.Int32>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T).HeapArray(System.Nullable(Of Func(Of T, T, Towel.CompareResult)), System.Nullable(Of System.Int32))
  nameWithType: HeapArray<T>.HeapArray(Nullable<Func<T, T, CompareResult>>, Nullable<Int32>)
  nameWithType.vb: HeapArray(Of T).HeapArray(Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Int32))
- uid: Towel.DataStructures.HeapArray`1.#ctor*
  name: HeapArray
  href: api/Towel.DataStructures.HeapArray-1.html#Towel_DataStructures_HeapArray_1__ctor_
  commentId: Overload:Towel.DataStructures.HeapArray`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T>.HeapArray
  fullName.vb: Towel.DataStructures.HeapArray(Of T).HeapArray
  nameWithType: HeapArray<T>.HeapArray
  nameWithType.vb: HeapArray(Of T).HeapArray
- uid: Towel.DataStructures.HeapArray`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.HeapArray-1.html#Towel_DataStructures_HeapArray_1_Clone
  commentId: M:Towel.DataStructures.HeapArray`1.Clone
  fullName: Towel.DataStructures.HeapArray<T>.Clone()
  fullName.vb: Towel.DataStructures.HeapArray(Of T).Clone()
  nameWithType: HeapArray<T>.Clone()
  nameWithType.vb: HeapArray(Of T).Clone()
- uid: Towel.DataStructures.HeapArray`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.HeapArray-1.html#Towel_DataStructures_HeapArray_1_Clone_
  commentId: Overload:Towel.DataStructures.HeapArray`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T>.Clone
  fullName.vb: Towel.DataStructures.HeapArray(Of T).Clone
  nameWithType: HeapArray<T>.Clone
  nameWithType.vb: HeapArray(Of T).Clone
- uid: Towel.DataStructures.HeapArray`2
  name: HeapArray<T, _Compare>
  href: api/Towel.DataStructures.HeapArray-2.html
  commentId: T:Towel.DataStructures.HeapArray`2
  name.vb: HeapArray(Of T, _Compare)
  fullName: Towel.DataStructures.HeapArray<T, _Compare>
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare)
  nameWithType: HeapArray<T, _Compare>
  nameWithType.vb: HeapArray(Of T, _Compare)
- uid: Towel.DataStructures.HeapArray`2.#ctor(`1,System.Nullable{System.Int32})
  name: HeapArray(_Compare, Nullable<Int32>)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2__ctor__1_System_Nullable_System_Int32__
  commentId: M:Towel.DataStructures.HeapArray`2.#ctor(`1,System.Nullable{System.Int32})
  name.vb: HeapArray(_Compare, Nullable(Of Int32))
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.HeapArray(_Compare, System.Nullable<System.Int32>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).HeapArray(_Compare, System.Nullable(Of System.Int32))
  nameWithType: HeapArray<T, _Compare>.HeapArray(_Compare, Nullable<Int32>)
  nameWithType.vb: HeapArray(Of T, _Compare).HeapArray(_Compare, Nullable(Of Int32))
- uid: Towel.DataStructures.HeapArray`2.#ctor*
  name: HeapArray
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2__ctor_
  commentId: Overload:Towel.DataStructures.HeapArray`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.HeapArray
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).HeapArray
  nameWithType: HeapArray<T, _Compare>.HeapArray
  nameWithType.vb: HeapArray(Of T, _Compare).HeapArray
- uid: Towel.DataStructures.HeapArray`2.Clear
  name: Clear()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Clear
  commentId: M:Towel.DataStructures.HeapArray`2.Clear
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Clear()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Clear()
  nameWithType: HeapArray<T, _Compare>.Clear()
  nameWithType.vb: HeapArray(Of T, _Compare).Clear()
- uid: Towel.DataStructures.HeapArray`2.Clear*
  name: Clear
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Clear_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Clear
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Clear
  nameWithType: HeapArray<T, _Compare>.Clear
  nameWithType.vb: HeapArray(Of T, _Compare).Clear
- uid: Towel.DataStructures.HeapArray`2.Clone
  name: Clone()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Clone
  commentId: M:Towel.DataStructures.HeapArray`2.Clone
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Clone()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Clone()
  nameWithType: HeapArray<T, _Compare>.Clone()
  nameWithType.vb: HeapArray(Of T, _Compare).Clone()
- uid: Towel.DataStructures.HeapArray`2.Clone*
  name: Clone
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Clone_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Clone
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Clone
  nameWithType: HeapArray<T, _Compare>.Clone
  nameWithType.vb: HeapArray(Of T, _Compare).Clone
- uid: Towel.DataStructures.HeapArray`2.Compare
  name: Compare
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Compare
  commentId: P:Towel.DataStructures.HeapArray`2.Compare
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Compare
  nameWithType: HeapArray<T, _Compare>.Compare
  nameWithType.vb: HeapArray(Of T, _Compare).Compare
- uid: Towel.DataStructures.HeapArray`2.Compare*
  name: Compare
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Compare_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Compare
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Compare
  nameWithType: HeapArray<T, _Compare>.Compare
  nameWithType.vb: HeapArray(Of T, _Compare).Compare
- uid: Towel.DataStructures.HeapArray`2.Count
  name: Count
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Count
  commentId: P:Towel.DataStructures.HeapArray`2.Count
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Count
  nameWithType: HeapArray<T, _Compare>.Count
  nameWithType.vb: HeapArray(Of T, _Compare).Count
- uid: Towel.DataStructures.HeapArray`2.Count*
  name: Count
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Count_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Count
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Count
  nameWithType: HeapArray<T, _Compare>.Count
  nameWithType.vb: HeapArray(Of T, _Compare).Count
- uid: Towel.DataStructures.HeapArray`2.CurrentCapacity
  name: CurrentCapacity
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_CurrentCapacity
  commentId: P:Towel.DataStructures.HeapArray`2.CurrentCapacity
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.CurrentCapacity
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).CurrentCapacity
  nameWithType: HeapArray<T, _Compare>.CurrentCapacity
  nameWithType.vb: HeapArray(Of T, _Compare).CurrentCapacity
- uid: Towel.DataStructures.HeapArray`2.CurrentCapacity*
  name: CurrentCapacity
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_CurrentCapacity_
  commentId: Overload:Towel.DataStructures.HeapArray`2.CurrentCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.CurrentCapacity
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).CurrentCapacity
  nameWithType: HeapArray<T, _Compare>.CurrentCapacity
  nameWithType.vb: HeapArray(Of T, _Compare).CurrentCapacity
- uid: Towel.DataStructures.HeapArray`2.Dequeue
  name: Dequeue()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Dequeue
  commentId: M:Towel.DataStructures.HeapArray`2.Dequeue
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Dequeue()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Dequeue()
  nameWithType: HeapArray<T, _Compare>.Dequeue()
  nameWithType.vb: HeapArray(Of T, _Compare).Dequeue()
- uid: Towel.DataStructures.HeapArray`2.Dequeue*
  name: Dequeue
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Dequeue_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Dequeue
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Dequeue
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Dequeue
  nameWithType: HeapArray<T, _Compare>.Dequeue
  nameWithType.vb: HeapArray(Of T, _Compare).Dequeue
- uid: Towel.DataStructures.HeapArray`2.Enqueue(`0)
  name: Enqueue(T)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Enqueue__0_
  commentId: M:Towel.DataStructures.HeapArray`2.Enqueue(`0)
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Enqueue(T)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Enqueue(T)
  nameWithType: HeapArray<T, _Compare>.Enqueue(T)
  nameWithType.vb: HeapArray(Of T, _Compare).Enqueue(T)
- uid: Towel.DataStructures.HeapArray`2.Enqueue*
  name: Enqueue
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Enqueue_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Enqueue
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Enqueue
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Enqueue
  nameWithType: HeapArray<T, _Compare>.Enqueue
  nameWithType.vb: HeapArray(Of T, _Compare).Enqueue
- uid: Towel.DataStructures.HeapArray`2.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_GetEnumerator
  commentId: M:Towel.DataStructures.HeapArray`2.GetEnumerator
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.GetEnumerator()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).GetEnumerator()
  nameWithType: HeapArray<T, _Compare>.GetEnumerator()
  nameWithType.vb: HeapArray(Of T, _Compare).GetEnumerator()
- uid: Towel.DataStructures.HeapArray`2.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_GetEnumerator_
  commentId: Overload:Towel.DataStructures.HeapArray`2.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.GetEnumerator
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).GetEnumerator
  nameWithType: HeapArray<T, _Compare>.GetEnumerator
  nameWithType.vb: HeapArray(Of T, _Compare).GetEnumerator
- uid: Towel.DataStructures.HeapArray`2.MinimumCapacity
  name: MinimumCapacity
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_MinimumCapacity
  commentId: P:Towel.DataStructures.HeapArray`2.MinimumCapacity
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.MinimumCapacity
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).MinimumCapacity
  nameWithType: HeapArray<T, _Compare>.MinimumCapacity
  nameWithType.vb: HeapArray(Of T, _Compare).MinimumCapacity
- uid: Towel.DataStructures.HeapArray`2.MinimumCapacity*
  name: MinimumCapacity
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_MinimumCapacity_
  commentId: Overload:Towel.DataStructures.HeapArray`2.MinimumCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.MinimumCapacity
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).MinimumCapacity
  nameWithType: HeapArray<T, _Compare>.MinimumCapacity
  nameWithType.vb: HeapArray(Of T, _Compare).MinimumCapacity
- uid: Towel.DataStructures.HeapArray`2.Peek
  name: Peek()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Peek
  commentId: M:Towel.DataStructures.HeapArray`2.Peek
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Peek()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Peek()
  nameWithType: HeapArray<T, _Compare>.Peek()
  nameWithType.vb: HeapArray(Of T, _Compare).Peek()
- uid: Towel.DataStructures.HeapArray`2.Peek*
  name: Peek
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Peek_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Peek
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Peek
  nameWithType: HeapArray<T, _Compare>.Peek
  nameWithType.vb: HeapArray(Of T, _Compare).Peek
- uid: Towel.DataStructures.HeapArray`2.Requeue(`0)
  name: Requeue(T)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Requeue__0_
  commentId: M:Towel.DataStructures.HeapArray`2.Requeue(`0)
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Requeue(T)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Requeue(T)
  nameWithType: HeapArray<T, _Compare>.Requeue(T)
  nameWithType.vb: HeapArray(Of T, _Compare).Requeue(T)
- uid: Towel.DataStructures.HeapArray`2.Requeue*
  name: Requeue
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Requeue_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Requeue
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Requeue
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Requeue
  nameWithType: HeapArray<T, _Compare>.Requeue
  nameWithType.vb: HeapArray(Of T, _Compare).Requeue
- uid: Towel.DataStructures.HeapArray`2.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Stepper_Action__0__
  commentId: M:Towel.DataStructures.HeapArray`2.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Stepper(Action(Of T))
  nameWithType: HeapArray<T, _Compare>.Stepper(Action<T>)
  nameWithType.vb: HeapArray(Of T, _Compare).Stepper(Action(Of T))
- uid: Towel.DataStructures.HeapArray`2.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.HeapArray`2.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: HeapArray<T, _Compare>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: HeapArray(Of T, _Compare).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.HeapArray`2.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.HeapArray`2.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Stepper(Towel.StepRef(Of T))
  nameWithType: HeapArray<T, _Compare>.Stepper(StepRef<T>)
  nameWithType.vb: HeapArray(Of T, _Compare).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.HeapArray`2.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.HeapArray`2.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: HeapArray<T, _Compare>.Stepper(StepRefBreak<T>)
  nameWithType.vb: HeapArray(Of T, _Compare).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.HeapArray`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_Stepper_
  commentId: Overload:Towel.DataStructures.HeapArray`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.Stepper
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).Stepper
  nameWithType: HeapArray<T, _Compare>.Stepper
  nameWithType.vb: HeapArray(Of T, _Compare).Stepper
- uid: Towel.DataStructures.HeapArray`2.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_ToArray
  commentId: M:Towel.DataStructures.HeapArray`2.ToArray
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.ToArray()
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).ToArray()
  nameWithType: HeapArray<T, _Compare>.ToArray()
  nameWithType.vb: HeapArray(Of T, _Compare).ToArray()
- uid: Towel.DataStructures.HeapArray`2.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.HeapArray-2.html#Towel_DataStructures_HeapArray_2_ToArray_
  commentId: Overload:Towel.DataStructures.HeapArray`2.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.HeapArray<T, _Compare>.ToArray
  fullName.vb: Towel.DataStructures.HeapArray(Of T, _Compare).ToArray
  nameWithType: HeapArray<T, _Compare>.ToArray
  nameWithType.vb: HeapArray(Of T, _Compare).ToArray
- uid: Towel.DataStructures.IArray`1
  name: IArray<T>
  href: api/Towel.DataStructures.IArray-1.html
  commentId: T:Towel.DataStructures.IArray`1
  name.vb: IArray(Of T)
  fullName: Towel.DataStructures.IArray<T>
  fullName.vb: Towel.DataStructures.IArray(Of T)
  nameWithType: IArray<T>
  nameWithType.vb: IArray(Of T)
- uid: Towel.DataStructures.IArray`2
  name: IArray<T, Index>
  href: api/Towel.DataStructures.IArray-2.html
  commentId: T:Towel.DataStructures.IArray`2
  name.vb: IArray(Of T, Index)
  fullName: Towel.DataStructures.IArray<T, Index>
  fullName.vb: Towel.DataStructures.IArray(Of T, Index)
  nameWithType: IArray<T, Index>
  nameWithType.vb: IArray(Of T, Index)
- uid: Towel.DataStructures.IArray`2.Item(`1)
  name: Item[Index]
  href: api/Towel.DataStructures.IArray-2.html#Towel_DataStructures_IArray_2_Item__1_
  commentId: P:Towel.DataStructures.IArray`2.Item(`1)
  name.vb: Item(Index)
  fullName: Towel.DataStructures.IArray<T, Index>.Item[Index]
  fullName.vb: Towel.DataStructures.IArray(Of T, Index).Item(Index)
  nameWithType: IArray<T, Index>.Item[Index]
  nameWithType.vb: IArray(Of T, Index).Item(Index)
- uid: Towel.DataStructures.IArray`2.Item*
  name: Item
  href: api/Towel.DataStructures.IArray-2.html#Towel_DataStructures_IArray_2_Item_
  commentId: Overload:Towel.DataStructures.IArray`2.Item
  isSpec: "True"
  fullName: Towel.DataStructures.IArray<T, Index>.Item
  fullName.vb: Towel.DataStructures.IArray(Of T, Index).Item
  nameWithType: IArray<T, Index>.Item
  nameWithType.vb: IArray(Of T, Index).Item
- uid: Towel.DataStructures.IArray`2.Length
  name: Length
  href: api/Towel.DataStructures.IArray-2.html#Towel_DataStructures_IArray_2_Length
  commentId: P:Towel.DataStructures.IArray`2.Length
  fullName: Towel.DataStructures.IArray<T, Index>.Length
  fullName.vb: Towel.DataStructures.IArray(Of T, Index).Length
  nameWithType: IArray<T, Index>.Length
  nameWithType.vb: IArray(Of T, Index).Length
- uid: Towel.DataStructures.IArray`2.Length*
  name: Length
  href: api/Towel.DataStructures.IArray-2.html#Towel_DataStructures_IArray_2_Length_
  commentId: Overload:Towel.DataStructures.IArray`2.Length
  isSpec: "True"
  fullName: Towel.DataStructures.IArray<T, Index>.Length
  fullName.vb: Towel.DataStructures.IArray(Of T, Index).Length
  nameWithType: IArray<T, Index>.Length
  nameWithType.vb: IArray(Of T, Index).Length
- uid: Towel.DataStructures.IAvlTree`2
  name: IAvlTree<T, _Compare>
  href: api/Towel.DataStructures.IAvlTree-2.html
  commentId: T:Towel.DataStructures.IAvlTree`2
  name.vb: IAvlTree(Of T, _Compare)
  fullName: Towel.DataStructures.IAvlTree<T, _Compare>
  fullName.vb: Towel.DataStructures.IAvlTree(Of T, _Compare)
  nameWithType: IAvlTree<T, _Compare>
  nameWithType.vb: IAvlTree(Of T, _Compare)
- uid: Towel.DataStructures.IDataStructure`1
  name: IDataStructure<T>
  href: api/Towel.DataStructures.IDataStructure-1.html
  commentId: T:Towel.DataStructures.IDataStructure`1
  name.vb: IDataStructure(Of T)
  fullName: Towel.DataStructures.IDataStructure<T>
  fullName.vb: Towel.DataStructures.IDataStructure(Of T)
  nameWithType: IDataStructure<T>
  nameWithType.vb: IDataStructure(Of T)
- uid: Towel.DataStructures.IDataStructure`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.IDataStructure-1.html#Towel_DataStructures_IDataStructure_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.IDataStructure`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.IDataStructure<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.IDataStructure(Of T).Stepper(Action(Of T))
  nameWithType: IDataStructure<T>.Stepper(Action<T>)
  nameWithType.vb: IDataStructure(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.IDataStructure`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.IDataStructure-1.html#Towel_DataStructures_IDataStructure_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.IDataStructure`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.IDataStructure<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.IDataStructure(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: IDataStructure<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: IDataStructure(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.IDataStructure`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.IDataStructure-1.html#Towel_DataStructures_IDataStructure_1_Stepper_
  commentId: Overload:Towel.DataStructures.IDataStructure`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.IDataStructure<T>.Stepper
  fullName.vb: Towel.DataStructures.IDataStructure(Of T).Stepper
  nameWithType: IDataStructure<T>.Stepper
  nameWithType.vb: IDataStructure(Of T).Stepper
- uid: Towel.DataStructures.IGraph`1
  name: IGraph<T>
  href: api/Towel.DataStructures.IGraph-1.html
  commentId: T:Towel.DataStructures.IGraph`1
  name.vb: IGraph(Of T)
  fullName: Towel.DataStructures.IGraph<T>
  fullName.vb: Towel.DataStructures.IGraph(Of T)
  nameWithType: IGraph<T>
  nameWithType.vb: IGraph(Of T)
- uid: Towel.DataStructures.IGraph`1.Add(`0,`0)
  name: Add(T, T)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Add__0__0_
  commentId: M:Towel.DataStructures.IGraph`1.Add(`0,`0)
  fullName: Towel.DataStructures.IGraph<T>.Add(T, T)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Add(T, T)
  nameWithType: IGraph<T>.Add(T, T)
  nameWithType.vb: IGraph(Of T).Add(T, T)
- uid: Towel.DataStructures.IGraph`1.Add*
  name: Add
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Add_
  commentId: Overload:Towel.DataStructures.IGraph`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.Add
  fullName.vb: Towel.DataStructures.IGraph(Of T).Add
  nameWithType: IGraph<T>.Add
  nameWithType.vb: IGraph(Of T).Add
- uid: Towel.DataStructures.IGraph`1.Adjacent(`0,`0)
  name: Adjacent(T, T)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Adjacent__0__0_
  commentId: M:Towel.DataStructures.IGraph`1.Adjacent(`0,`0)
  fullName: Towel.DataStructures.IGraph<T>.Adjacent(T, T)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Adjacent(T, T)
  nameWithType: IGraph<T>.Adjacent(T, T)
  nameWithType.vb: IGraph(Of T).Adjacent(T, T)
- uid: Towel.DataStructures.IGraph`1.Adjacent*
  name: Adjacent
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Adjacent_
  commentId: Overload:Towel.DataStructures.IGraph`1.Adjacent
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.Adjacent
  fullName.vb: Towel.DataStructures.IGraph(Of T).Adjacent
  nameWithType: IGraph<T>.Adjacent
  nameWithType.vb: IGraph(Of T).Adjacent
- uid: Towel.DataStructures.IGraph`1.EdgeCount
  name: EdgeCount
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_EdgeCount
  commentId: P:Towel.DataStructures.IGraph`1.EdgeCount
  fullName: Towel.DataStructures.IGraph<T>.EdgeCount
  fullName.vb: Towel.DataStructures.IGraph(Of T).EdgeCount
  nameWithType: IGraph<T>.EdgeCount
  nameWithType.vb: IGraph(Of T).EdgeCount
- uid: Towel.DataStructures.IGraph`1.EdgeCount*
  name: EdgeCount
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_EdgeCount_
  commentId: Overload:Towel.DataStructures.IGraph`1.EdgeCount
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.EdgeCount
  fullName.vb: Towel.DataStructures.IGraph(Of T).EdgeCount
  nameWithType: IGraph<T>.EdgeCount
  nameWithType.vb: IGraph(Of T).EdgeCount
- uid: Towel.DataStructures.IGraph`1.Neighbors(`0,Action{`0})
  name: Neighbors(T, Action<T>)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Neighbors__0_Action__0__
  commentId: M:Towel.DataStructures.IGraph`1.Neighbors(`0,Action{`0})
  name.vb: Neighbors(T, Action(Of T))
  fullName: Towel.DataStructures.IGraph<T>.Neighbors(T, Action<T>)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Neighbors(T, Action(Of T))
  nameWithType: IGraph<T>.Neighbors(T, Action<T>)
  nameWithType.vb: IGraph(Of T).Neighbors(T, Action(Of T))
- uid: Towel.DataStructures.IGraph`1.Neighbors*
  name: Neighbors
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Neighbors_
  commentId: Overload:Towel.DataStructures.IGraph`1.Neighbors
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.Neighbors
  fullName.vb: Towel.DataStructures.IGraph(Of T).Neighbors
  nameWithType: IGraph<T>.Neighbors
  nameWithType.vb: IGraph(Of T).Neighbors
- uid: Towel.DataStructures.IGraph`1.NodeCount
  name: NodeCount
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_NodeCount
  commentId: P:Towel.DataStructures.IGraph`1.NodeCount
  fullName: Towel.DataStructures.IGraph<T>.NodeCount
  fullName.vb: Towel.DataStructures.IGraph(Of T).NodeCount
  nameWithType: IGraph<T>.NodeCount
  nameWithType.vb: IGraph(Of T).NodeCount
- uid: Towel.DataStructures.IGraph`1.NodeCount*
  name: NodeCount
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_NodeCount_
  commentId: Overload:Towel.DataStructures.IGraph`1.NodeCount
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.NodeCount
  fullName.vb: Towel.DataStructures.IGraph(Of T).NodeCount
  nameWithType: IGraph<T>.NodeCount
  nameWithType.vb: IGraph(Of T).NodeCount
- uid: Towel.DataStructures.IGraph`1.Remove(`0,`0)
  name: Remove(T, T)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Remove__0__0_
  commentId: M:Towel.DataStructures.IGraph`1.Remove(`0,`0)
  fullName: Towel.DataStructures.IGraph<T>.Remove(T, T)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Remove(T, T)
  nameWithType: IGraph<T>.Remove(T, T)
  nameWithType.vb: IGraph(Of T).Remove(T, T)
- uid: Towel.DataStructures.IGraph`1.Remove*
  name: Remove
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Remove_
  commentId: Overload:Towel.DataStructures.IGraph`1.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.Remove
  fullName.vb: Towel.DataStructures.IGraph(Of T).Remove
  nameWithType: IGraph<T>.Remove
  nameWithType.vb: IGraph(Of T).Remove
- uid: Towel.DataStructures.IGraph`1.Stepper(Action{`0,`0})
  name: Stepper(Action<T, T>)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Stepper_Action__0__0__
  commentId: M:Towel.DataStructures.IGraph`1.Stepper(Action{`0,`0})
  name.vb: Stepper(Action(Of T, T))
  fullName: Towel.DataStructures.IGraph<T>.Stepper(Action<T, T>)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Stepper(Action(Of T, T))
  nameWithType: IGraph<T>.Stepper(Action<T, T>)
  nameWithType.vb: IGraph(Of T).Stepper(Action(Of T, T))
- uid: Towel.DataStructures.IGraph`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name: Stepper(Func<T, T, StepStatus>)
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Stepper_Func__0__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.IGraph`1.Stepper(Func{`0,`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, T, StepStatus))
  fullName: Towel.DataStructures.IGraph<T>.Stepper(Func<T, T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.IGraph(Of T).Stepper(Func(Of T, T, Towel.StepStatus))
  nameWithType: IGraph<T>.Stepper(Func<T, T, StepStatus>)
  nameWithType.vb: IGraph(Of T).Stepper(Func(Of T, T, StepStatus))
- uid: Towel.DataStructures.IGraph`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.IGraph-1.html#Towel_DataStructures_IGraph_1_Stepper_
  commentId: Overload:Towel.DataStructures.IGraph`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.IGraph<T>.Stepper
  fullName.vb: Towel.DataStructures.IGraph(Of T).Stepper
  nameWithType: IGraph<T>.Stepper
  nameWithType.vb: IGraph(Of T).Stepper
- uid: Towel.DataStructures.IHeap`2
  name: IHeap<T, _Compare>
  href: api/Towel.DataStructures.IHeap-2.html
  commentId: T:Towel.DataStructures.IHeap`2
  name.vb: IHeap(Of T, _Compare)
  fullName: Towel.DataStructures.IHeap<T, _Compare>
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare)
  nameWithType: IHeap<T, _Compare>
  nameWithType.vb: IHeap(Of T, _Compare)
- uid: Towel.DataStructures.IHeap`2.Dequeue
  name: Dequeue()
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Dequeue
  commentId: M:Towel.DataStructures.IHeap`2.Dequeue
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Dequeue()
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Dequeue()
  nameWithType: IHeap<T, _Compare>.Dequeue()
  nameWithType.vb: IHeap(Of T, _Compare).Dequeue()
- uid: Towel.DataStructures.IHeap`2.Dequeue*
  name: Dequeue
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Dequeue_
  commentId: Overload:Towel.DataStructures.IHeap`2.Dequeue
  isSpec: "True"
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Dequeue
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Dequeue
  nameWithType: IHeap<T, _Compare>.Dequeue
  nameWithType.vb: IHeap(Of T, _Compare).Dequeue
- uid: Towel.DataStructures.IHeap`2.Enqueue(`0)
  name: Enqueue(T)
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Enqueue__0_
  commentId: M:Towel.DataStructures.IHeap`2.Enqueue(`0)
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Enqueue(T)
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Enqueue(T)
  nameWithType: IHeap<T, _Compare>.Enqueue(T)
  nameWithType.vb: IHeap(Of T, _Compare).Enqueue(T)
- uid: Towel.DataStructures.IHeap`2.Enqueue*
  name: Enqueue
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Enqueue_
  commentId: Overload:Towel.DataStructures.IHeap`2.Enqueue
  isSpec: "True"
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Enqueue
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Enqueue
  nameWithType: IHeap<T, _Compare>.Enqueue
  nameWithType.vb: IHeap(Of T, _Compare).Enqueue
- uid: Towel.DataStructures.IHeap`2.Peek
  name: Peek()
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Peek
  commentId: M:Towel.DataStructures.IHeap`2.Peek
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Peek()
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Peek()
  nameWithType: IHeap<T, _Compare>.Peek()
  nameWithType.vb: IHeap(Of T, _Compare).Peek()
- uid: Towel.DataStructures.IHeap`2.Peek*
  name: Peek
  href: api/Towel.DataStructures.IHeap-2.html#Towel_DataStructures_IHeap_2_Peek_
  commentId: Overload:Towel.DataStructures.IHeap`2.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.IHeap<T, _Compare>.Peek
  fullName.vb: Towel.DataStructures.IHeap(Of T, _Compare).Peek
  nameWithType: IHeap<T, _Compare>.Peek
  nameWithType.vb: IHeap(Of T, _Compare).Peek
- uid: Towel.DataStructures.IList`1
  name: IList<T>
  href: api/Towel.DataStructures.IList-1.html
  commentId: T:Towel.DataStructures.IList`1
  name.vb: IList(Of T)
  fullName: Towel.DataStructures.IList<T>
  fullName.vb: Towel.DataStructures.IList(Of T)
  nameWithType: IList<T>
  nameWithType.vb: IList(Of T)
- uid: Towel.DataStructures.IList`1.RemoveAll*
  name: RemoveAll
  href: api/Towel.DataStructures.IList-1.html#Towel_DataStructures_IList_1_RemoveAll_
  commentId: Overload:Towel.DataStructures.IList`1.RemoveAll
  isSpec: "True"
  fullName: Towel.DataStructures.IList<T>.RemoveAll
  fullName.vb: Towel.DataStructures.IList(Of T).RemoveAll
  nameWithType: IList<T>.RemoveAll
  nameWithType.vb: IList(Of T).RemoveAll
- uid: Towel.DataStructures.IList`1.RemoveAll``1(``0)
  name: RemoveAll<Predicate>(Predicate)
  href: api/Towel.DataStructures.IList-1.html#Towel_DataStructures_IList_1_RemoveAll__1___0_
  commentId: M:Towel.DataStructures.IList`1.RemoveAll``1(``0)
  name.vb: RemoveAll(Of Predicate)(Predicate)
  fullName: Towel.DataStructures.IList<T>.RemoveAll<Predicate>(Predicate)
  fullName.vb: Towel.DataStructures.IList(Of T).RemoveAll(Of Predicate)(Predicate)
  nameWithType: IList<T>.RemoveAll<Predicate>(Predicate)
  nameWithType.vb: IList(Of T).RemoveAll(Of Predicate)(Predicate)
- uid: Towel.DataStructures.IList`1.TryRemoveFirst*
  name: TryRemoveFirst
  href: api/Towel.DataStructures.IList-1.html#Towel_DataStructures_IList_1_TryRemoveFirst_
  commentId: Overload:Towel.DataStructures.IList`1.TryRemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.IList<T>.TryRemoveFirst
  fullName.vb: Towel.DataStructures.IList(Of T).TryRemoveFirst
  nameWithType: IList<T>.TryRemoveFirst
  nameWithType.vb: IList(Of T).TryRemoveFirst
- uid: Towel.DataStructures.IList`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name: TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  href: api/Towel.DataStructures.IList-1.html#Towel_DataStructures_IList_1_TryRemoveFirst__1_System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.IList`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name.vb: TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
  fullName: Towel.DataStructures.IList<T>.TryRemoveFirst<Predicate>(out System.Nullable<Exception>, Predicate)
  fullName.vb: Towel.DataStructures.IList(Of T).TryRemoveFirst(Of Predicate)(ByRef System.Nullable(Of Exception), Predicate)
  nameWithType: IList<T>.TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  nameWithType.vb: IList(Of T).TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
- uid: Towel.DataStructures.IMap`2
  name: IMap<T, K>
  href: api/Towel.DataStructures.IMap-2.html
  commentId: T:Towel.DataStructures.IMap`2
  name.vb: IMap(Of T, K)
  fullName: Towel.DataStructures.IMap<T, K>
  fullName.vb: Towel.DataStructures.IMap(Of T, K)
  nameWithType: IMap<T, K>
  nameWithType.vb: IMap(Of T, K)
- uid: Towel.DataStructures.IMap`2.Item(`1)
  name: Item[K]
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Item__1_
  commentId: P:Towel.DataStructures.IMap`2.Item(`1)
  name.vb: Item(K)
  fullName: Towel.DataStructures.IMap<T, K>.Item[K]
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Item(K)
  nameWithType: IMap<T, K>.Item[K]
  nameWithType.vb: IMap(Of T, K).Item(K)
- uid: Towel.DataStructures.IMap`2.Item*
  name: Item
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Item_
  commentId: Overload:Towel.DataStructures.IMap`2.Item
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.Item
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Item
  nameWithType: IMap<T, K>.Item
  nameWithType.vb: IMap(Of T, K).Item
- uid: Towel.DataStructures.IMap`2.Keys(Action{`1})
  name: Keys(Action<K>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Keys_Action__1__
  commentId: M:Towel.DataStructures.IMap`2.Keys(Action{`1})
  name.vb: Keys(Action(Of K))
  fullName: Towel.DataStructures.IMap<T, K>.Keys(Action<K>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Keys(Action(Of K))
  nameWithType: IMap<T, K>.Keys(Action<K>)
  nameWithType.vb: IMap(Of T, K).Keys(Action(Of K))
- uid: Towel.DataStructures.IMap`2.Keys(Func{`1,Towel.StepStatus})
  name: Keys(Func<K, StepStatus>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Keys_Func__1_Towel_StepStatus__
  commentId: M:Towel.DataStructures.IMap`2.Keys(Func{`1,Towel.StepStatus})
  name.vb: Keys(Func(Of K, StepStatus))
  fullName: Towel.DataStructures.IMap<T, K>.Keys(Func<K, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Keys(Func(Of K, Towel.StepStatus))
  nameWithType: IMap<T, K>.Keys(Func<K, StepStatus>)
  nameWithType.vb: IMap(Of T, K).Keys(Func(Of K, StepStatus))
- uid: Towel.DataStructures.IMap`2.Keys*
  name: Keys
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Keys_
  commentId: Overload:Towel.DataStructures.IMap`2.Keys
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.Keys
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Keys
  nameWithType: IMap<T, K>.Keys
  nameWithType.vb: IMap(Of T, K).Keys
- uid: Towel.DataStructures.IMap`2.Set(`1,`0)
  name: Set(K, T)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Set__1__0_
  commentId: M:Towel.DataStructures.IMap`2.Set(`1,`0)
  fullName: Towel.DataStructures.IMap<T, K>.Set(K, T)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Set(K, T)
  nameWithType: IMap<T, K>.Set(K, T)
  nameWithType.vb: IMap(Of T, K).Set(K, T)
- uid: Towel.DataStructures.IMap`2.Set*
  name: Set
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Set_
  commentId: Overload:Towel.DataStructures.IMap`2.Set
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.Set
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Set
  nameWithType: IMap<T, K>.Set
  nameWithType.vb: IMap(Of T, K).Set
- uid: Towel.DataStructures.IMap`2.Stepper(Action{`0,`1})
  name: Stepper(Action<T, K>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Stepper_Action__0__1__
  commentId: M:Towel.DataStructures.IMap`2.Stepper(Action{`0,`1})
  name.vb: Stepper(Action(Of T, K))
  fullName: Towel.DataStructures.IMap<T, K>.Stepper(Action<T, K>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Stepper(Action(Of T, K))
  nameWithType: IMap<T, K>.Stepper(Action<T, K>)
  nameWithType.vb: IMap(Of T, K).Stepper(Action(Of T, K))
- uid: Towel.DataStructures.IMap`2.Stepper(Func{`0,`1,Towel.StepStatus})
  name: Stepper(Func<T, K, StepStatus>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Stepper_Func__0__1_Towel_StepStatus__
  commentId: M:Towel.DataStructures.IMap`2.Stepper(Func{`0,`1,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, K, StepStatus))
  fullName: Towel.DataStructures.IMap<T, K>.Stepper(Func<T, K, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Stepper(Func(Of T, K, Towel.StepStatus))
  nameWithType: IMap<T, K>.Stepper(Func<T, K, StepStatus>)
  nameWithType.vb: IMap(Of T, K).Stepper(Func(Of T, K, StepStatus))
- uid: Towel.DataStructures.IMap`2.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.IMap`2.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.IMap<T, K>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Stepper(Towel.StepRef(Of T))
  nameWithType: IMap<T, K>.Stepper(StepRef<T>)
  nameWithType.vb: IMap(Of T, K).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.IMap`2.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.IMap`2.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.IMap<T, K>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: IMap<T, K>.Stepper(StepRefBreak<T>)
  nameWithType.vb: IMap(Of T, K).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.IMap`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_Stepper_
  commentId: Overload:Towel.DataStructures.IMap`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.Stepper
  fullName.vb: Towel.DataStructures.IMap(Of T, K).Stepper
  nameWithType: IMap<T, K>.Stepper
  nameWithType.vb: IMap(Of T, K).Stepper
- uid: Towel.DataStructures.IMap`2.TryAdd(`1,`0,System.Nullable{Exception}@)
  name: TryAdd(K, T, out Nullable<Exception>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_TryAdd__1__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.IMap`2.TryAdd(`1,`0,System.Nullable{Exception}@)
  name.vb: TryAdd(K, T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.IMap<T, K>.TryAdd(K, T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).TryAdd(K, T, ByRef System.Nullable(Of Exception))
  nameWithType: IMap<T, K>.TryAdd(K, T, out Nullable<Exception>)
  nameWithType.vb: IMap(Of T, K).TryAdd(K, T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.IMap`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_TryAdd_
  commentId: Overload:Towel.DataStructures.IMap`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.TryAdd
  fullName.vb: Towel.DataStructures.IMap(Of T, K).TryAdd
  nameWithType: IMap<T, K>.TryAdd
  nameWithType.vb: IMap(Of T, K).TryAdd
- uid: Towel.DataStructures.IMap`2.TryGet(`1,`0@,System.Nullable{Exception}@)
  name: TryGet(K, out T, out Nullable<Exception>)
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_TryGet__1__0__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.IMap`2.TryGet(`1,`0@,System.Nullable{Exception}@)
  name.vb: TryGet(K, ByRef T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.IMap<T, K>.TryGet(K, out T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.IMap(Of T, K).TryGet(K, ByRef T, ByRef System.Nullable(Of Exception))
  nameWithType: IMap<T, K>.TryGet(K, out T, out Nullable<Exception>)
  nameWithType.vb: IMap(Of T, K).TryGet(K, ByRef T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.IMap`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.IMap-2.html#Towel_DataStructures_IMap_2_TryGet_
  commentId: Overload:Towel.DataStructures.IMap`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.IMap<T, K>.TryGet
  fullName.vb: Towel.DataStructures.IMap(Of T, K).TryGet
  nameWithType: IMap<T, K>.TryGet
  nameWithType.vb: IMap(Of T, K).TryGet
- uid: Towel.DataStructures.IOmnitree`1
  name: IOmnitree<T>
  href: api/Towel.DataStructures.IOmnitree-1.html
  commentId: T:Towel.DataStructures.IOmnitree`1
  name.vb: IOmnitree(Of T)
  fullName: Towel.DataStructures.IOmnitree<T>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T)
  nameWithType: IOmnitree<T>
  nameWithType.vb: IOmnitree(Of T)
- uid: Towel.DataStructures.IOmnitree`1.Remove(`0,Func{`0,`0,System.Boolean})
  name: Remove(T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.IOmnitree-1.html#Towel_DataStructures_IOmnitree_1_Remove__0_Func__0__0_System_Boolean__
  commentId: M:Towel.DataStructures.IOmnitree`1.Remove(`0,Func{`0,`0,System.Boolean})
  name.vb: Remove(T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.IOmnitree<T>.Remove(T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.IOmnitree(Of T).Remove(T, Func(Of T, T, System.Boolean))
  nameWithType: IOmnitree<T>.Remove(T, Func<T, T, Boolean>)
  nameWithType.vb: IOmnitree(Of T).Remove(T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.IOmnitree`1.Remove*
  name: Remove
  href: api/Towel.DataStructures.IOmnitree-1.html#Towel_DataStructures_IOmnitree_1_Remove_
  commentId: Overload:Towel.DataStructures.IOmnitree`1.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitree<T>.Remove
  fullName.vb: Towel.DataStructures.IOmnitree(Of T).Remove
  nameWithType: IOmnitree<T>.Remove
  nameWithType.vb: IOmnitree(Of T).Remove
- uid: Towel.DataStructures.IOmnitree`2
  name: IOmnitree<T, Axis1>
  href: api/Towel.DataStructures.IOmnitree-2.html
  commentId: T:Towel.DataStructures.IOmnitree`2
  name.vb: IOmnitree(Of T, Axis1)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1)
  nameWithType: IOmnitree<T, Axis1>
  nameWithType.vb: IOmnitree(Of T, Axis1)
- uid: Towel.DataStructures.IOmnitree`3
  name: IOmnitree<T, Axis1, Axis2>
  href: api/Towel.DataStructures.IOmnitree-3.html
  commentId: T:Towel.DataStructures.IOmnitree`3
  name.vb: IOmnitree(Of T, Axis1, Axis2)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2)
  nameWithType: IOmnitree<T, Axis1, Axis2>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2)
- uid: Towel.DataStructures.IOmnitree`4
  name: IOmnitree<T, Axis1, Axis2, Axis3>
  href: api/Towel.DataStructures.IOmnitree-4.html
  commentId: T:Towel.DataStructures.IOmnitree`4
  name.vb: IOmnitree(Of T, Axis1, Axis2, Axis3)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2, Axis3>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2, Axis3)
  nameWithType: IOmnitree<T, Axis1, Axis2, Axis3>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2, Axis3)
- uid: Towel.DataStructures.IOmnitree`5
  name: IOmnitree<T, Axis1, Axis2, Axis3, Axis4>
  href: api/Towel.DataStructures.IOmnitree-5.html
  commentId: T:Towel.DataStructures.IOmnitree`5
  name.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2, Axis3, Axis4>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4)
  nameWithType: IOmnitree<T, Axis1, Axis2, Axis3, Axis4>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4)
- uid: Towel.DataStructures.IOmnitree`6
  name: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5>
  href: api/Towel.DataStructures.IOmnitree-6.html
  commentId: T:Towel.DataStructures.IOmnitree`6
  name.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)
  nameWithType: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)
- uid: Towel.DataStructures.IOmnitree`7
  name: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>
  href: api/Towel.DataStructures.IOmnitree-7.html
  commentId: T:Towel.DataStructures.IOmnitree`7
  name.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)
  nameWithType: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)
- uid: Towel.DataStructures.IOmnitree`8
  name: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>
  href: api/Towel.DataStructures.IOmnitree-8.html
  commentId: T:Towel.DataStructures.IOmnitree`8
  name.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)
  fullName: Towel.DataStructures.IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>
  fullName.vb: Towel.DataStructures.IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)
  nameWithType: IOmnitree<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>
  nameWithType.vb: IOmnitree(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)
- uid: Towel.DataStructures.IOmnitreePoints`2
  name: IOmnitreePoints<T, Axis1>
  href: api/Towel.DataStructures.IOmnitreePoints-2.html
  commentId: T:Towel.DataStructures.IOmnitreePoints`2
  name.vb: IOmnitreePoints(Of T, Axis1)
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1)
  nameWithType: IOmnitreePoints<T, Axis1>
  nameWithType.vb: IOmnitreePoints(Of T, Axis1)
- uid: Towel.DataStructures.IOmnitreePoints`2.CountSubSpace(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: CountSubSpace(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_CountSubSpace_Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.CountSubSpace(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: CountSubSpace(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.CountSubSpace(Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).CountSubSpace(Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1))
  nameWithType: IOmnitreePoints<T, Axis1>.CountSubSpace(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).CountSubSpace(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
- uid: Towel.DataStructures.IOmnitreePoints`2.CountSubSpace*
  name: CountSubSpace
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_CountSubSpace_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.CountSubSpace
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.CountSubSpace
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).CountSubSpace
  nameWithType: IOmnitreePoints<T, Axis1>.CountSubSpace
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).CountSubSpace
- uid: Towel.DataStructures.IOmnitreePoints`2.Dimensions
  name: Dimensions
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Dimensions
  commentId: P:Towel.DataStructures.IOmnitreePoints`2.Dimensions
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Dimensions
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Dimensions
  nameWithType: IOmnitreePoints<T, Axis1>.Dimensions
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Dimensions
- uid: Towel.DataStructures.IOmnitreePoints`2.Dimensions*
  name: Dimensions
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Dimensions_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Dimensions
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Dimensions
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Dimensions
  nameWithType: IOmnitreePoints<T, Axis1>.Dimensions
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Dimensions
- uid: Towel.DataStructures.IOmnitreePoints`2.Item(`1)
  name: Item[Axis1]
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Item__1_
  commentId: P:Towel.DataStructures.IOmnitreePoints`2.Item(`1)
  name.vb: Item(Axis1)
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Item[Axis1]
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Item(Axis1)
  nameWithType: IOmnitreePoints<T, Axis1>.Item[Axis1]
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Item(Axis1)
- uid: Towel.DataStructures.IOmnitreePoints`2.Item*
  name: Item
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Item_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Item
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Item
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Item
  nameWithType: IOmnitreePoints<T, Axis1>.Item
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Item
- uid: Towel.DataStructures.IOmnitreePoints`2.Locate
  name: Locate
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Locate
  commentId: P:Towel.DataStructures.IOmnitreePoints`2.Locate
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Locate
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Locate
  nameWithType: IOmnitreePoints<T, Axis1>.Locate
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Locate
- uid: Towel.DataStructures.IOmnitreePoints`2.Locate*
  name: Locate
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Locate_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Locate
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Locate
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Locate
  nameWithType: IOmnitreePoints<T, Axis1>.Locate
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Locate
- uid: Towel.DataStructures.IOmnitreePoints`2.Remove(`1)
  name: Remove(Axis1)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Remove__1_
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Remove(`1)
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Remove(Axis1)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Remove(Axis1)
  nameWithType: IOmnitreePoints<T, Axis1>.Remove(Axis1)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Remove(Axis1)
- uid: Towel.DataStructures.IOmnitreePoints`2.Remove(`1,Predicate{`0})
  name: Remove(Axis1, Predicate<T>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Remove__1_Predicate__0__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Remove(`1,Predicate{`0})
  name.vb: Remove(Axis1, Predicate(Of T))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Remove(Axis1, Predicate<T>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Remove(Axis1, Predicate(Of T))
  nameWithType: IOmnitreePoints<T, Axis1>.Remove(Axis1, Predicate<T>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Remove(Axis1, Predicate(Of T))
- uid: Towel.DataStructures.IOmnitreePoints`2.Remove(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: Remove(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Remove_Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Remove(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: Remove(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Remove(Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Remove(Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1))
  nameWithType: IOmnitreePoints<T, Axis1>.Remove(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Remove(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
- uid: Towel.DataStructures.IOmnitreePoints`2.Remove(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Predicate{`0})
  name: Remove(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>, Predicate<T>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Remove_Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Predicate__0__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Remove(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Predicate{`0})
  name.vb: Remove(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1), Predicate(Of T))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Remove(Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>, Predicate<T>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Remove(Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1), Predicate(Of T))
  nameWithType: IOmnitreePoints<T, Axis1>.Remove(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>, Predicate<T>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Remove(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1), Predicate(Of T))
- uid: Towel.DataStructures.IOmnitreePoints`2.Remove*
  name: Remove
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Remove_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Remove
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Remove
  nameWithType: IOmnitreePoints<T, Axis1>.Remove
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Remove
- uid: Towel.DataStructures.IOmnitreePoints`2.Stepper(Action{`0},`1)
  name: Stepper(Action<T>, Axis1)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Stepper_Action__0___1_
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Stepper(Action{`0},`1)
  name.vb: Stepper(Action(Of T), Axis1)
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Stepper(Action<T>, Axis1)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Stepper(Action(Of T), Axis1)
  nameWithType: IOmnitreePoints<T, Axis1>.Stepper(Action<T>, Axis1)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Stepper(Action(Of T), Axis1)
- uid: Towel.DataStructures.IOmnitreePoints`2.Stepper(Action{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: Stepper(Action<T>, Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Stepper_Action__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Stepper(Action{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: Stepper(Action(Of T), Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Stepper(Action<T>, Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Stepper(Action(Of T), Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1))
  nameWithType: IOmnitreePoints<T, Axis1>.Stepper(Action<T>, Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Stepper(Action(Of T), Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
- uid: Towel.DataStructures.IOmnitreePoints`2.Stepper(Func{`0,Towel.StepStatus},`1)
  name: Stepper(Func<T, StepStatus>, Axis1)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Stepper_Func__0_Towel_StepStatus___1_
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Stepper(Func{`0,Towel.StepStatus},`1)
  name.vb: Stepper(Func(Of T, StepStatus), Axis1)
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Stepper(Func<T, Towel.StepStatus>, Axis1)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Stepper(Func(Of T, Towel.StepStatus), Axis1)
  nameWithType: IOmnitreePoints<T, Axis1>.Stepper(Func<T, StepStatus>, Axis1)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Stepper(Func(Of T, StepStatus), Axis1)
- uid: Towel.DataStructures.IOmnitreePoints`2.Stepper(Func{`0,Towel.StepStatus},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: Stepper(Func<T, StepStatus>, Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Stepper_Func__0_Towel_StepStatus__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Stepper(Func{`0,Towel.StepStatus},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: Stepper(Func(Of T, StepStatus), Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Stepper(Func<T, Towel.StepStatus>, Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Stepper(Func(Of T, Towel.StepStatus), Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1))
  nameWithType: IOmnitreePoints<T, Axis1>.Stepper(Func<T, StepStatus>, Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Stepper(Func(Of T, StepStatus), Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
- uid: Towel.DataStructures.IOmnitreePoints`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Stepper_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Stepper
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Stepper
  nameWithType: IOmnitreePoints<T, Axis1>.Stepper
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Stepper
- uid: Towel.DataStructures.IOmnitreePoints`2.Update
  name: Update()
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Update
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Update
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Update()
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Update()
  nameWithType: IOmnitreePoints<T, Axis1>.Update()
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Update()
- uid: Towel.DataStructures.IOmnitreePoints`2.Update(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: Update(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Update_Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.IOmnitreePoints`2.Update(Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: Update(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Update(Towel.DataStructures.Omnitree.Bound<Axis1>, Towel.DataStructures.Omnitree.Bound<Axis1>)
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Update(Towel.DataStructures.Omnitree.Bound(Of Axis1), Towel.DataStructures.Omnitree.Bound(Of Axis1))
  nameWithType: IOmnitreePoints<T, Axis1>.Update(Omnitree.Bound<Axis1>, Omnitree.Bound<Axis1>)
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Update(Omnitree.Bound(Of Axis1), Omnitree.Bound(Of Axis1))
- uid: Towel.DataStructures.IOmnitreePoints`2.Update*
  name: Update
  href: api/Towel.DataStructures.IOmnitreePoints-2.html#Towel_DataStructures_IOmnitreePoints_2_Update_
  commentId: Overload:Towel.DataStructures.IOmnitreePoints`2.Update
  isSpec: "True"
  fullName: Towel.DataStructures.IOmnitreePoints<T, Axis1>.Update
  fullName.vb: Towel.DataStructures.IOmnitreePoints(Of T, Axis1).Update
  nameWithType: IOmnitreePoints<T, Axis1>.Update
  nameWithType.vb: IOmnitreePoints(Of T, Axis1).Update
- uid: Towel.DataStructures.IQueue`1
  name: IQueue<T>
  href: api/Towel.DataStructures.IQueue-1.html
  commentId: T:Towel.DataStructures.IQueue`1
  name.vb: IQueue(Of T)
  fullName: Towel.DataStructures.IQueue<T>
  fullName.vb: Towel.DataStructures.IQueue(Of T)
  nameWithType: IQueue<T>
  nameWithType.vb: IQueue(Of T)
- uid: Towel.DataStructures.IQueue`1.Dequeue
  name: Dequeue()
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Dequeue
  commentId: M:Towel.DataStructures.IQueue`1.Dequeue
  fullName: Towel.DataStructures.IQueue<T>.Dequeue()
  fullName.vb: Towel.DataStructures.IQueue(Of T).Dequeue()
  nameWithType: IQueue<T>.Dequeue()
  nameWithType.vb: IQueue(Of T).Dequeue()
- uid: Towel.DataStructures.IQueue`1.Dequeue*
  name: Dequeue
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Dequeue_
  commentId: Overload:Towel.DataStructures.IQueue`1.Dequeue
  isSpec: "True"
  fullName: Towel.DataStructures.IQueue<T>.Dequeue
  fullName.vb: Towel.DataStructures.IQueue(Of T).Dequeue
  nameWithType: IQueue<T>.Dequeue
  nameWithType.vb: IQueue(Of T).Dequeue
- uid: Towel.DataStructures.IQueue`1.Enqueue(`0)
  name: Enqueue(T)
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Enqueue__0_
  commentId: M:Towel.DataStructures.IQueue`1.Enqueue(`0)
  fullName: Towel.DataStructures.IQueue<T>.Enqueue(T)
  fullName.vb: Towel.DataStructures.IQueue(Of T).Enqueue(T)
  nameWithType: IQueue<T>.Enqueue(T)
  nameWithType.vb: IQueue(Of T).Enqueue(T)
- uid: Towel.DataStructures.IQueue`1.Enqueue*
  name: Enqueue
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Enqueue_
  commentId: Overload:Towel.DataStructures.IQueue`1.Enqueue
  isSpec: "True"
  fullName: Towel.DataStructures.IQueue<T>.Enqueue
  fullName.vb: Towel.DataStructures.IQueue(Of T).Enqueue
  nameWithType: IQueue<T>.Enqueue
  nameWithType.vb: IQueue(Of T).Enqueue
- uid: Towel.DataStructures.IQueue`1.Newest
  name: Newest
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Newest
  commentId: P:Towel.DataStructures.IQueue`1.Newest
  fullName: Towel.DataStructures.IQueue<T>.Newest
  fullName.vb: Towel.DataStructures.IQueue(Of T).Newest
  nameWithType: IQueue<T>.Newest
  nameWithType.vb: IQueue(Of T).Newest
- uid: Towel.DataStructures.IQueue`1.Newest*
  name: Newest
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Newest_
  commentId: Overload:Towel.DataStructures.IQueue`1.Newest
  isSpec: "True"
  fullName: Towel.DataStructures.IQueue<T>.Newest
  fullName.vb: Towel.DataStructures.IQueue(Of T).Newest
  nameWithType: IQueue<T>.Newest
  nameWithType.vb: IQueue(Of T).Newest
- uid: Towel.DataStructures.IQueue`1.Oldest
  name: Oldest
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Oldest
  commentId: P:Towel.DataStructures.IQueue`1.Oldest
  fullName: Towel.DataStructures.IQueue<T>.Oldest
  fullName.vb: Towel.DataStructures.IQueue(Of T).Oldest
  nameWithType: IQueue<T>.Oldest
  nameWithType.vb: IQueue(Of T).Oldest
- uid: Towel.DataStructures.IQueue`1.Oldest*
  name: Oldest
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Oldest_
  commentId: Overload:Towel.DataStructures.IQueue`1.Oldest
  isSpec: "True"
  fullName: Towel.DataStructures.IQueue<T>.Oldest
  fullName.vb: Towel.DataStructures.IQueue(Of T).Oldest
  nameWithType: IQueue<T>.Oldest
  nameWithType.vb: IQueue(Of T).Oldest
- uid: Towel.DataStructures.IQueue`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Peek
  commentId: M:Towel.DataStructures.IQueue`1.Peek
  fullName: Towel.DataStructures.IQueue<T>.Peek()
  fullName.vb: Towel.DataStructures.IQueue(Of T).Peek()
  nameWithType: IQueue<T>.Peek()
  nameWithType.vb: IQueue(Of T).Peek()
- uid: Towel.DataStructures.IQueue`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.IQueue-1.html#Towel_DataStructures_IQueue_1_Peek_
  commentId: Overload:Towel.DataStructures.IQueue`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.IQueue<T>.Peek
  fullName.vb: Towel.DataStructures.IQueue(Of T).Peek
  nameWithType: IQueue<T>.Peek
  nameWithType.vb: IQueue(Of T).Peek
- uid: Towel.DataStructures.IRedBlackTree`2
  name: IRedBlackTree<T, _Compare>
  href: api/Towel.DataStructures.IRedBlackTree-2.html
  commentId: T:Towel.DataStructures.IRedBlackTree`2
  name.vb: IRedBlackTree(Of T, _Compare)
  fullName: Towel.DataStructures.IRedBlackTree<T, _Compare>
  fullName.vb: Towel.DataStructures.IRedBlackTree(Of T, _Compare)
  nameWithType: IRedBlackTree<T, _Compare>
  nameWithType.vb: IRedBlackTree(Of T, _Compare)
- uid: Towel.DataStructures.ISet`1
  name: ISet<T>
  href: api/Towel.DataStructures.ISet-1.html
  commentId: T:Towel.DataStructures.ISet`1
  name.vb: ISet(Of T)
  fullName: Towel.DataStructures.ISet<T>
  fullName.vb: Towel.DataStructures.ISet(Of T)
  nameWithType: ISet<T>
  nameWithType.vb: ISet(Of T)
- uid: Towel.DataStructures.ISortedBinaryTree`2
  name: ISortedBinaryTree<T, _Compare>
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html
  commentId: T:Towel.DataStructures.ISortedBinaryTree`2
  name.vb: ISortedBinaryTree(Of T, _Compare)
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare)
  nameWithType: ISortedBinaryTree<T, _Compare>
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare)
- uid: Towel.DataStructures.ISortedBinaryTree`2.Contains(Func{`0,Towel.CompareResult})
  name: Contains(Func<T, CompareResult>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Contains_Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Contains(Func{`0,Towel.CompareResult})
  name.vb: Contains(Func(Of T, CompareResult))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Contains(Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Contains(Func(Of T, Towel.CompareResult))
  nameWithType: ISortedBinaryTree<T, _Compare>.Contains(Func<T, CompareResult>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Contains(Func(Of T, CompareResult))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Contains_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Contains
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Contains
  nameWithType: ISortedBinaryTree<T, _Compare>.Contains
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Contains
- uid: Towel.DataStructures.ISortedBinaryTree`2.CurrentGreatest
  name: CurrentGreatest
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_CurrentGreatest
  commentId: P:Towel.DataStructures.ISortedBinaryTree`2.CurrentGreatest
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).CurrentGreatest
  nameWithType: ISortedBinaryTree<T, _Compare>.CurrentGreatest
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.ISortedBinaryTree`2.CurrentGreatest*
  name: CurrentGreatest
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_CurrentGreatest_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.CurrentGreatest
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).CurrentGreatest
  nameWithType: ISortedBinaryTree<T, _Compare>.CurrentGreatest
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.ISortedBinaryTree`2.CurrentLeast
  name: CurrentLeast
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_CurrentLeast
  commentId: P:Towel.DataStructures.ISortedBinaryTree`2.CurrentLeast
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).CurrentLeast
  nameWithType: ISortedBinaryTree<T, _Compare>.CurrentLeast
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.ISortedBinaryTree`2.CurrentLeast*
  name: CurrentLeast
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_CurrentLeast_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.CurrentLeast
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).CurrentLeast
  nameWithType: ISortedBinaryTree<T, _Compare>.CurrentLeast
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Action{`0})
  name: Stepper(T, T, Action<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper__0__0_Action__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Action{`0})
  name.vb: Stepper(T, T, Action(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(T, T, Action<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Action(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(T, T, Action<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Action(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Func{`0,Towel.StepStatus})
  name: Stepper(T, T, Func<T, StepStatus>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper__0__0_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Func{`0,Towel.StepStatus})
  name.vb: Stepper(T, T, Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(T, T, Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Func(Of T, Towel.StepStatus))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(T, T, Func<T, StepStatus>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Func(Of T, StepStatus))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Towel.StepRef{`0})
  name: Stepper(T, T, StepRef<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper__0__0_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Towel.StepRef{`0})
  name.vb: Stepper(T, T, StepRef(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(T, T, Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Towel.StepRef(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(T, T, StepRef<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(T, T, StepRef(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Towel.StepRefBreak{`0})
  name: Stepper(T, T, StepRefBreak<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper__0__0_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(`0,`0,Towel.StepRefBreak{`0})
  name.vb: Stepper(T, T, StepRefBreak(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(T, T, Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(T, T, Towel.StepRefBreak(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(T, T, StepRefBreak<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(T, T, StepRefBreak(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(Towel.StepRef(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(StepRef<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper(StepRefBreak<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_Stepper_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.Stepper
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).Stepper
  nameWithType: ISortedBinaryTree<T, _Compare>.Stepper
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).Stepper
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Action{`0})
  name: StepperReverse(T, T, Action<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse__0__0_Action__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Action{`0})
  name.vb: StepperReverse(T, T, Action(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Action<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Action(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Action<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Action(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Func{`0,Towel.StepStatus})
  name: StepperReverse(T, T, Func<T, StepStatus>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse__0__0_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Func{`0,Towel.StepStatus})
  name.vb: StepperReverse(T, T, Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Func(Of T, Towel.StepStatus))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Func<T, StepStatus>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Func(Of T, StepStatus))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Towel.StepRef{`0})
  name: StepperReverse(T, T, StepRef<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse__0__0_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Towel.StepRef{`0})
  name.vb: StepperReverse(T, T, StepRef(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Towel.StepRef(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, StepRef<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, StepRef(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Towel.StepRefBreak{`0})
  name: StepperReverse(T, T, StepRefBreak<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse__0__0_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(`0,`0,Towel.StepRefBreak{`0})
  name.vb: StepperReverse(T, T, StepRefBreak(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, Towel.StepRefBreak(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(T, T, StepRefBreak<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(T, T, StepRefBreak(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Action{`0})
  name: StepperReverse(Action<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse_Action__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Action{`0})
  name.vb: StepperReverse(Action(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(Action<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(Action(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(Action<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(Action(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Func{`0,Towel.StepStatus})
  name: StepperReverse(Func<T, StepStatus>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Func{`0,Towel.StepStatus})
  name.vb: StepperReverse(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(Func(Of T, Towel.StepStatus))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(Func<T, StepStatus>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(Func(Of T, StepStatus))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Towel.StepRef{`0})
  name: StepperReverse(StepRef<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Towel.StepRef{`0})
  name.vb: StepperReverse(StepRef(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(Towel.StepRef(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(StepRef<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(StepRef(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Towel.StepRefBreak{`0})
  name: StepperReverse(StepRefBreak<T>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse(Towel.StepRefBreak{`0})
  name.vb: StepperReverse(StepRefBreak(Of T))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse(Towel.StepRefBreak(Of T))
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse(StepRefBreak<T>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse(StepRefBreak(Of T))
- uid: Towel.DataStructures.ISortedBinaryTree`2.StepperReverse*
  name: StepperReverse
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_StepperReverse_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.StepperReverse
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.StepperReverse
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).StepperReverse
  nameWithType: ISortedBinaryTree<T, _Compare>.StepperReverse
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).StepperReverse
- uid: Towel.DataStructures.ISortedBinaryTree`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_TryGet__0__System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.TryGet(out T, out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).TryGet(ByRef T, ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: ISortedBinaryTree<T, _Compare>.TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.ISortedBinaryTree`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_TryGet_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.TryGet
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).TryGet
  nameWithType: ISortedBinaryTree<T, _Compare>.TryGet
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).TryGet
- uid: Towel.DataStructures.ISortedBinaryTree`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_TryRemove_System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.ISortedBinaryTree`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.TryRemove(out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).TryRemove(ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: ISortedBinaryTree<T, _Compare>.TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.ISortedBinaryTree`2.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.ISortedBinaryTree-2.html#Towel_DataStructures_ISortedBinaryTree_2_TryRemove_
  commentId: Overload:Towel.DataStructures.ISortedBinaryTree`2.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.ISortedBinaryTree<T, _Compare>.TryRemove
  fullName.vb: Towel.DataStructures.ISortedBinaryTree(Of T, _Compare).TryRemove
  nameWithType: ISortedBinaryTree<T, _Compare>.TryRemove
  nameWithType.vb: ISortedBinaryTree(Of T, _Compare).TryRemove
- uid: Towel.DataStructures.IStack`1
  name: IStack<T>
  href: api/Towel.DataStructures.IStack-1.html
  commentId: T:Towel.DataStructures.IStack`1
  name.vb: IStack(Of T)
  fullName: Towel.DataStructures.IStack<T>
  fullName.vb: Towel.DataStructures.IStack(Of T)
  nameWithType: IStack<T>
  nameWithType.vb: IStack(Of T)
- uid: Towel.DataStructures.IStack`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Peek
  commentId: M:Towel.DataStructures.IStack`1.Peek
  fullName: Towel.DataStructures.IStack<T>.Peek()
  fullName.vb: Towel.DataStructures.IStack(Of T).Peek()
  nameWithType: IStack<T>.Peek()
  nameWithType.vb: IStack(Of T).Peek()
- uid: Towel.DataStructures.IStack`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Peek_
  commentId: Overload:Towel.DataStructures.IStack`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.IStack<T>.Peek
  fullName.vb: Towel.DataStructures.IStack(Of T).Peek
  nameWithType: IStack<T>.Peek
  nameWithType.vb: IStack(Of T).Peek
- uid: Towel.DataStructures.IStack`1.Pop
  name: Pop()
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Pop
  commentId: M:Towel.DataStructures.IStack`1.Pop
  fullName: Towel.DataStructures.IStack<T>.Pop()
  fullName.vb: Towel.DataStructures.IStack(Of T).Pop()
  nameWithType: IStack<T>.Pop()
  nameWithType.vb: IStack(Of T).Pop()
- uid: Towel.DataStructures.IStack`1.Pop*
  name: Pop
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Pop_
  commentId: Overload:Towel.DataStructures.IStack`1.Pop
  isSpec: "True"
  fullName: Towel.DataStructures.IStack<T>.Pop
  fullName.vb: Towel.DataStructures.IStack(Of T).Pop
  nameWithType: IStack<T>.Pop
  nameWithType.vb: IStack(Of T).Pop
- uid: Towel.DataStructures.IStack`1.Push(`0)
  name: Push(T)
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Push__0_
  commentId: M:Towel.DataStructures.IStack`1.Push(`0)
  fullName: Towel.DataStructures.IStack<T>.Push(T)
  fullName.vb: Towel.DataStructures.IStack(Of T).Push(T)
  nameWithType: IStack<T>.Push(T)
  nameWithType.vb: IStack(Of T).Push(T)
- uid: Towel.DataStructures.IStack`1.Push*
  name: Push
  href: api/Towel.DataStructures.IStack-1.html#Towel_DataStructures_IStack_1_Push_
  commentId: Overload:Towel.DataStructures.IStack`1.Push
  isSpec: "True"
  fullName: Towel.DataStructures.IStack<T>.Push
  fullName.vb: Towel.DataStructures.IStack(Of T).Push
  nameWithType: IStack<T>.Push
  nameWithType.vb: IStack(Of T).Push
- uid: Towel.DataStructures.ITree`1
  name: ITree<T>
  href: api/Towel.DataStructures.ITree-1.html
  commentId: T:Towel.DataStructures.ITree`1
  name.vb: ITree(Of T)
  fullName: Towel.DataStructures.ITree<T>
  fullName.vb: Towel.DataStructures.ITree(Of T)
  nameWithType: ITree<T>
  nameWithType.vb: ITree(Of T)
- uid: Towel.DataStructures.ITree`1.Add(`0,`0)
  name: Add(T, T)
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Add__0__0_
  commentId: M:Towel.DataStructures.ITree`1.Add(`0,`0)
  fullName: Towel.DataStructures.ITree<T>.Add(T, T)
  fullName.vb: Towel.DataStructures.ITree(Of T).Add(T, T)
  nameWithType: ITree<T>.Add(T, T)
  nameWithType.vb: ITree(Of T).Add(T, T)
- uid: Towel.DataStructures.ITree`1.Add*
  name: Add
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Add_
  commentId: Overload:Towel.DataStructures.ITree`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.ITree<T>.Add
  fullName.vb: Towel.DataStructures.ITree(Of T).Add
  nameWithType: ITree<T>.Add
  nameWithType.vb: ITree(Of T).Add
- uid: Towel.DataStructures.ITree`1.Children(`0,Action{`0})
  name: Children(T, Action<T>)
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Children__0_Action__0__
  commentId: M:Towel.DataStructures.ITree`1.Children(`0,Action{`0})
  name.vb: Children(T, Action(Of T))
  fullName: Towel.DataStructures.ITree<T>.Children(T, Action<T>)
  fullName.vb: Towel.DataStructures.ITree(Of T).Children(T, Action(Of T))
  nameWithType: ITree<T>.Children(T, Action<T>)
  nameWithType.vb: ITree(Of T).Children(T, Action(Of T))
- uid: Towel.DataStructures.ITree`1.Children*
  name: Children
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Children_
  commentId: Overload:Towel.DataStructures.ITree`1.Children
  isSpec: "True"
  fullName: Towel.DataStructures.ITree<T>.Children
  fullName.vb: Towel.DataStructures.ITree(Of T).Children
  nameWithType: ITree<T>.Children
  nameWithType.vb: ITree(Of T).Children
- uid: Towel.DataStructures.ITree`1.Head
  name: Head
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Head
  commentId: P:Towel.DataStructures.ITree`1.Head
  fullName: Towel.DataStructures.ITree<T>.Head
  fullName.vb: Towel.DataStructures.ITree(Of T).Head
  nameWithType: ITree<T>.Head
  nameWithType.vb: ITree(Of T).Head
- uid: Towel.DataStructures.ITree`1.Head*
  name: Head
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_Head_
  commentId: Overload:Towel.DataStructures.ITree`1.Head
  isSpec: "True"
  fullName: Towel.DataStructures.ITree<T>.Head
  fullName.vb: Towel.DataStructures.ITree(Of T).Head
  nameWithType: ITree<T>.Head
  nameWithType.vb: ITree(Of T).Head
- uid: Towel.DataStructures.ITree`1.IsChildOf(`0,`0)
  name: IsChildOf(T, T)
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_IsChildOf__0__0_
  commentId: M:Towel.DataStructures.ITree`1.IsChildOf(`0,`0)
  fullName: Towel.DataStructures.ITree<T>.IsChildOf(T, T)
  fullName.vb: Towel.DataStructures.ITree(Of T).IsChildOf(T, T)
  nameWithType: ITree<T>.IsChildOf(T, T)
  nameWithType.vb: ITree(Of T).IsChildOf(T, T)
- uid: Towel.DataStructures.ITree`1.IsChildOf*
  name: IsChildOf
  href: api/Towel.DataStructures.ITree-1.html#Towel_DataStructures_ITree_1_IsChildOf_
  commentId: Overload:Towel.DataStructures.ITree`1.IsChildOf
  isSpec: "True"
  fullName: Towel.DataStructures.ITree<T>.IsChildOf
  fullName.vb: Towel.DataStructures.ITree(Of T).IsChildOf
  nameWithType: ITree<T>.IsChildOf
  nameWithType.vb: ITree(Of T).IsChildOf
- uid: Towel.DataStructures.ITrie`1
  name: ITrie<T>
  href: api/Towel.DataStructures.ITrie-1.html
  commentId: T:Towel.DataStructures.ITrie`1
  name.vb: ITrie(Of T)
  fullName: Towel.DataStructures.ITrie<T>
  fullName.vb: Towel.DataStructures.ITrie(Of T)
  nameWithType: ITrie<T>
  nameWithType.vb: ITrie(Of T)
- uid: Towel.DataStructures.ITrie`1.Contains(Action{Action{`0}})
  name: Contains(Action<Action<T>>)
  href: api/Towel.DataStructures.ITrie-1.html#Towel_DataStructures_ITrie_1_Contains_Action_Action__0___
  commentId: M:Towel.DataStructures.ITrie`1.Contains(Action{Action{`0}})
  name.vb: Contains(Action(Of Action(Of T)))
  fullName: Towel.DataStructures.ITrie<T>.Contains(Action<Action<T>>)
  fullName.vb: Towel.DataStructures.ITrie(Of T).Contains(Action(Of Action(Of T)))
  nameWithType: ITrie<T>.Contains(Action<Action<T>>)
  nameWithType.vb: ITrie(Of T).Contains(Action(Of Action(Of T)))
- uid: Towel.DataStructures.ITrie`1.Contains*
  name: Contains
  href: api/Towel.DataStructures.ITrie-1.html#Towel_DataStructures_ITrie_1_Contains_
  commentId: Overload:Towel.DataStructures.ITrie`1.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T>.Contains
  fullName.vb: Towel.DataStructures.ITrie(Of T).Contains
  nameWithType: ITrie<T>.Contains
  nameWithType.vb: ITrie(Of T).Contains
- uid: Towel.DataStructures.ITrie`2
  name: ITrie<T, D>
  href: api/Towel.DataStructures.ITrie-2.html
  commentId: T:Towel.DataStructures.ITrie`2
  name.vb: ITrie(Of T, D)
  fullName: Towel.DataStructures.ITrie<T, D>
  fullName.vb: Towel.DataStructures.ITrie(Of T, D)
  nameWithType: ITrie<T, D>
  nameWithType.vb: ITrie(Of T, D)
- uid: Towel.DataStructures.ITrie`2.Contains(Action{Action{`0}})
  name: Contains(Action<Action<T>>)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_Contains_Action_Action__0___
  commentId: M:Towel.DataStructures.ITrie`2.Contains(Action{Action{`0}})
  name.vb: Contains(Action(Of Action(Of T)))
  fullName: Towel.DataStructures.ITrie<T, D>.Contains(Action<Action<T>>)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).Contains(Action(Of Action(Of T)))
  nameWithType: ITrie<T, D>.Contains(Action<Action<T>>)
  nameWithType.vb: ITrie(Of T, D).Contains(Action(Of Action(Of T)))
- uid: Towel.DataStructures.ITrie`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_Contains_
  commentId: Overload:Towel.DataStructures.ITrie`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T, D>.Contains
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).Contains
  nameWithType: ITrie<T, D>.Contains
  nameWithType.vb: ITrie(Of T, D).Contains
- uid: Towel.DataStructures.ITrie`2.Stepper(Action{Action{Action{`0}},`1})
  name: Stepper(Action<Action<Action<T>>, D>)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_Stepper_Action_Action_Action__0____1__
  commentId: M:Towel.DataStructures.ITrie`2.Stepper(Action{Action{Action{`0}},`1})
  name.vb: Stepper(Action(Of Action(Of Action(Of T)), D))
  fullName: Towel.DataStructures.ITrie<T, D>.Stepper(Action<Action<Action<T>>, D>)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).Stepper(Action(Of Action(Of Action(Of T)), D))
  nameWithType: ITrie<T, D>.Stepper(Action<Action<Action<T>>, D>)
  nameWithType.vb: ITrie(Of T, D).Stepper(Action(Of Action(Of Action(Of T)), D))
- uid: Towel.DataStructures.ITrie`2.Stepper(Func{Action{Action{`0}},`1,Towel.StepStatus})
  name: Stepper(Func<Action<Action<T>>, D, StepStatus>)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_Stepper_Func_Action_Action__0____1_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ITrie`2.Stepper(Func{Action{Action{`0}},`1,Towel.StepStatus})
  name.vb: Stepper(Func(Of Action(Of Action(Of T)), D, StepStatus))
  fullName: Towel.DataStructures.ITrie<T, D>.Stepper(Func<Action<Action<T>>, D, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), D, Towel.StepStatus))
  nameWithType: ITrie<T, D>.Stepper(Func<Action<Action<T>>, D, StepStatus>)
  nameWithType.vb: ITrie(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), D, StepStatus))
- uid: Towel.DataStructures.ITrie`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_Stepper_
  commentId: Overload:Towel.DataStructures.ITrie`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T, D>.Stepper
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).Stepper
  nameWithType: ITrie<T, D>.Stepper
  nameWithType.vb: ITrie(Of T, D).Stepper
- uid: Towel.DataStructures.ITrie`2.TryAdd(`1,Action{Action{`0}},Exception@)
  name: TryAdd(D, Action<Action<T>>, out Exception)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryAdd__1_Action_Action__0___Exception__
  commentId: M:Towel.DataStructures.ITrie`2.TryAdd(`1,Action{Action{`0}},Exception@)
  name.vb: TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
  fullName: Towel.DataStructures.ITrie<T, D>.TryAdd(D, Action<Action<T>>, out Exception)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
  nameWithType: ITrie<T, D>.TryAdd(D, Action<Action<T>>, out Exception)
  nameWithType.vb: ITrie(Of T, D).TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
- uid: Towel.DataStructures.ITrie`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryAdd_
  commentId: Overload:Towel.DataStructures.ITrie`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T, D>.TryAdd
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryAdd
  nameWithType: ITrie<T, D>.TryAdd
  nameWithType.vb: ITrie(Of T, D).TryAdd
- uid: Towel.DataStructures.ITrie`2.TryGet(Action{Action{`0}},`1@,Exception@)
  name: TryGet(Action<Action<T>>, out D, out Exception)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryGet_Action_Action__0____1__Exception__
  commentId: M:Towel.DataStructures.ITrie`2.TryGet(Action{Action{`0}},`1@,Exception@)
  name.vb: TryGet(Action(Of Action(Of T)), ByRef D, ByRef Exception)
  fullName: Towel.DataStructures.ITrie<T, D>.TryGet(Action<Action<T>>, out D, out Exception)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryGet(Action(Of Action(Of T)), ByRef D, ByRef Exception)
  nameWithType: ITrie<T, D>.TryGet(Action<Action<T>>, out D, out Exception)
  nameWithType.vb: ITrie(Of T, D).TryGet(Action(Of Action(Of T)), ByRef D, ByRef Exception)
- uid: Towel.DataStructures.ITrie`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryGet_
  commentId: Overload:Towel.DataStructures.ITrie`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T, D>.TryGet
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryGet
  nameWithType: ITrie<T, D>.TryGet
  nameWithType.vb: ITrie(Of T, D).TryGet
- uid: Towel.DataStructures.ITrie`2.TryRemove(Action{Action{`0}},Exception@)
  name: TryRemove(Action<Action<T>>, out Exception)
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryRemove_Action_Action__0___Exception__
  commentId: M:Towel.DataStructures.ITrie`2.TryRemove(Action{Action{`0}},Exception@)
  name.vb: TryRemove(Action(Of Action(Of T)), ByRef Exception)
  fullName: Towel.DataStructures.ITrie<T, D>.TryRemove(Action<Action<T>>, out Exception)
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryRemove(Action(Of Action(Of T)), ByRef Exception)
  nameWithType: ITrie<T, D>.TryRemove(Action<Action<T>>, out Exception)
  nameWithType.vb: ITrie(Of T, D).TryRemove(Action(Of Action(Of T)), ByRef Exception)
- uid: Towel.DataStructures.ITrie`2.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.ITrie-2.html#Towel_DataStructures_ITrie_2_TryRemove_
  commentId: Overload:Towel.DataStructures.ITrie`2.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.ITrie<T, D>.TryRemove
  fullName.vb: Towel.DataStructures.ITrie(Of T, D).TryRemove
  nameWithType: ITrie<T, D>.TryRemove
  nameWithType.vb: ITrie(Of T, D).TryRemove
- uid: Towel.DataStructures.Link
  name: Link
  href: api/Towel.DataStructures.Link.html
  commentId: T:Towel.DataStructures.Link
  fullName: Towel.DataStructures.Link
  nameWithType: Link
- uid: Towel.DataStructures.Link.Size
  name: Size
  href: api/Towel.DataStructures.Link.html#Towel_DataStructures_Link_Size
  commentId: P:Towel.DataStructures.Link.Size
  fullName: Towel.DataStructures.Link.Size
  nameWithType: Link.Size
- uid: Towel.DataStructures.Link.Size*
  name: Size
  href: api/Towel.DataStructures.Link.html#Towel_DataStructures_Link_Size_
  commentId: Overload:Towel.DataStructures.Link.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link.Size
  nameWithType: Link.Size
- uid: Towel.DataStructures.Link`1
  name: Link<T1>
  href: api/Towel.DataStructures.Link-1.html
  commentId: T:Towel.DataStructures.Link`1
  name.vb: Link(Of T1)
  fullName: Towel.DataStructures.Link<T1>
  fullName.vb: Towel.DataStructures.Link(Of T1)
  nameWithType: Link<T1>
  nameWithType.vb: Link(Of T1)
- uid: Towel.DataStructures.Link`1.#ctor(`0)
  name: Link(T1)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1__ctor__0_
  commentId: M:Towel.DataStructures.Link`1.#ctor(`0)
  fullName: Towel.DataStructures.Link<T1>.Link(T1)
  fullName.vb: Towel.DataStructures.Link(Of T1).Link(T1)
  nameWithType: Link<T1>.Link(T1)
  nameWithType.vb: Link(Of T1).Link(T1)
- uid: Towel.DataStructures.Link`1.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1__ctor_
  commentId: Overload:Towel.DataStructures.Link`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1).Link
  nameWithType: Link<T1>.Link
  nameWithType.vb: Link(Of T1).Link
- uid: Towel.DataStructures.Link`1._1
  name: _1
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1__1
  commentId: P:Towel.DataStructures.Link`1._1
  fullName: Towel.DataStructures.Link<T1>._1
  fullName.vb: Towel.DataStructures.Link(Of T1)._1
  nameWithType: Link<T1>._1
  nameWithType.vb: Link(Of T1)._1
- uid: Towel.DataStructures.Link`1._1*
  name: _1
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1__1_
  commentId: Overload:Towel.DataStructures.Link`1._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>._1
  fullName.vb: Towel.DataStructures.Link(Of T1)._1
  nameWithType: Link<T1>._1
  nameWithType.vb: Link(Of T1)._1
- uid: Towel.DataStructures.Link`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Clone
  commentId: M:Towel.DataStructures.Link`1.Clone
  fullName: Towel.DataStructures.Link<T1>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1).Clone()
  nameWithType: Link<T1>.Clone()
  nameWithType.vb: Link(Of T1).Clone()
- uid: Towel.DataStructures.Link`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Clone_
  commentId: Overload:Towel.DataStructures.Link`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1).Clone
  nameWithType: Link<T1>.Clone
  nameWithType.vb: Link(Of T1).Clone
- uid: Towel.DataStructures.Link`1.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`1.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`1.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Contains_
  commentId: Overload:Towel.DataStructures.Link`1.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1).Contains
  nameWithType: Link<T1>.Contains
  nameWithType.vb: Link(Of T1).Contains
- uid: Towel.DataStructures.Link`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`1.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1).Equals(System.Object)
  nameWithType: Link<T1>.Equals(Object)
  nameWithType.vb: Link(Of T1).Equals(Object)
- uid: Towel.DataStructures.Link`1.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Equals_
  commentId: Overload:Towel.DataStructures.Link`1.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1).Equals
  nameWithType: Link<T1>.Equals
  nameWithType.vb: Link(Of T1).Equals
- uid: Towel.DataStructures.Link`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_GetHashCode
  commentId: M:Towel.DataStructures.Link`1.GetHashCode
  fullName: Towel.DataStructures.Link<T1>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1).GetHashCode()
  nameWithType: Link<T1>.GetHashCode()
  nameWithType.vb: Link(Of T1).GetHashCode()
- uid: Towel.DataStructures.Link`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`1.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1).GetHashCode
  nameWithType: Link<T1>.GetHashCode
  nameWithType.vb: Link(Of T1).GetHashCode
- uid: Towel.DataStructures.Link`1.op_Explicit(System.Tuple{`0})~Towel.DataStructures.Link{`0}
  name: Explicit(System.Tuple<T1> to Link<T1>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_op_Explicit_System_Tuple__0___Towel_DataStructures_Link__0_
  commentId: M:Towel.DataStructures.Link`1.op_Explicit(System.Tuple{`0})~Towel.DataStructures.Link{`0}
  name.vb: Narrowing(System.Tuple(Of T1) to Link(Of T1))
  fullName: Towel.DataStructures.Link<T1>.Explicit(System.Tuple<T1> to Towel.DataStructures.Link<T1>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Narrowing(System.Tuple(Of T1) to Towel.DataStructures.Link(Of T1))
  nameWithType: Link<T1>.Explicit(System.Tuple<T1> to Link<T1>)
  nameWithType.vb: Link(Of T1).Narrowing(System.Tuple(Of T1) to Link(Of T1))
- uid: Towel.DataStructures.Link`1.op_Explicit(System.ValueTuple{`0})~Towel.DataStructures.Link{`0}
  name: Explicit(System.ValueTuple<T1> to Link<T1>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_op_Explicit_System_ValueTuple__0___Towel_DataStructures_Link__0_
  commentId: M:Towel.DataStructures.Link`1.op_Explicit(System.ValueTuple{`0})~Towel.DataStructures.Link{`0}
  name.vb: Narrowing(System.ValueTuple(Of T1) to Link(Of T1))
  fullName: Towel.DataStructures.Link<T1>.Explicit(System.ValueTuple<T1> to Towel.DataStructures.Link<T1>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Narrowing(System.ValueTuple(Of T1) to Towel.DataStructures.Link(Of T1))
  nameWithType: Link<T1>.Explicit(System.ValueTuple<T1> to Link<T1>)
  nameWithType.vb: Link(Of T1).Narrowing(System.ValueTuple(Of T1) to Link(Of T1))
- uid: Towel.DataStructures.Link`1.op_Explicit(Towel.DataStructures.Link{`0})~System.Tuple{`0}
  name: Explicit(Link<T1> to System.Tuple<T1>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_op_Explicit_Towel_DataStructures_Link__0___System_Tuple__0_
  commentId: M:Towel.DataStructures.Link`1.op_Explicit(Towel.DataStructures.Link{`0})~System.Tuple{`0}
  name.vb: Narrowing(Link(Of T1) to System.Tuple(Of T1))
  fullName: Towel.DataStructures.Link<T1>.Explicit(Towel.DataStructures.Link<T1> to System.Tuple<T1>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Narrowing(Towel.DataStructures.Link(Of T1) to System.Tuple(Of T1))
  nameWithType: Link<T1>.Explicit(Link<T1> to System.Tuple<T1>)
  nameWithType.vb: Link(Of T1).Narrowing(Link(Of T1) to System.Tuple(Of T1))
- uid: Towel.DataStructures.Link`1.op_Explicit(Towel.DataStructures.Link{`0})~System.ValueTuple{`0}
  name: Explicit(Link<T1> to System.ValueTuple<T1>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_op_Explicit_Towel_DataStructures_Link__0___System_ValueTuple__0_
  commentId: M:Towel.DataStructures.Link`1.op_Explicit(Towel.DataStructures.Link{`0})~System.ValueTuple{`0}
  name.vb: Narrowing(Link(Of T1) to System.ValueTuple(Of T1))
  fullName: Towel.DataStructures.Link<T1>.Explicit(Towel.DataStructures.Link<T1> to System.ValueTuple<T1>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Narrowing(Towel.DataStructures.Link(Of T1) to System.ValueTuple(Of T1))
  nameWithType: Link<T1>.Explicit(Link<T1> to System.ValueTuple<T1>)
  nameWithType.vb: Link(Of T1).Narrowing(Link(Of T1) to System.ValueTuple(Of T1))
- uid: Towel.DataStructures.Link`1.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`1.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1).Narrowing
  nameWithType: Link<T1>.Explicit
  nameWithType.vb: Link(Of T1).Narrowing
- uid: Towel.DataStructures.Link`1.Size
  name: Size
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Size
  commentId: P:Towel.DataStructures.Link`1.Size
  fullName: Towel.DataStructures.Link<T1>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1).Size
  nameWithType: Link<T1>.Size
  nameWithType.vb: Link(Of T1).Size
- uid: Towel.DataStructures.Link`1.Size*
  name: Size
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Size_
  commentId: Overload:Towel.DataStructures.Link`1.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1).Size
  nameWithType: Link<T1>.Size
  nameWithType.vb: Link(Of T1).Size
- uid: Towel.DataStructures.Link`1.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`1.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Stepper(Action(Of System.Object))
  nameWithType: Link<T1>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`1.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`1.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Stepper_
  commentId: Overload:Towel.DataStructures.Link`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1).Stepper
  nameWithType: Link<T1>.Stepper
  nameWithType.vb: Link(Of T1).Stepper
- uid: Towel.DataStructures.Link`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_ToArray
  commentId: M:Towel.DataStructures.Link`1.ToArray
  fullName: Towel.DataStructures.Link<T1>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1).ToArray()
  nameWithType: Link<T1>.ToArray()
  nameWithType.vb: Link(Of T1).ToArray()
- uid: Towel.DataStructures.Link`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_ToArray_
  commentId: Overload:Towel.DataStructures.Link`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1).ToArray
  nameWithType: Link<T1>.ToArray
  nameWithType.vb: Link(Of T1).ToArray
- uid: Towel.DataStructures.Link`1.Types
  name: Types()
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Types
  commentId: M:Towel.DataStructures.Link`1.Types
  fullName: Towel.DataStructures.Link<T1>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1).Types()
  nameWithType: Link<T1>.Types()
  nameWithType.vb: Link(Of T1).Types()
- uid: Towel.DataStructures.Link`1.Types*
  name: Types
  href: api/Towel.DataStructures.Link-1.html#Towel_DataStructures_Link_1_Types_
  commentId: Overload:Towel.DataStructures.Link`1.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1).Types
  nameWithType: Link<T1>.Types
  nameWithType.vb: Link(Of T1).Types
- uid: Towel.DataStructures.Link`2
  name: Link<T1, T2>
  href: api/Towel.DataStructures.Link-2.html
  commentId: T:Towel.DataStructures.Link`2
  name.vb: Link(Of T1, T2)
  fullName: Towel.DataStructures.Link<T1, T2>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2)
  nameWithType: Link<T1, T2>
  nameWithType.vb: Link(Of T1, T2)
- uid: Towel.DataStructures.Link`2.#ctor(`0,`1)
  name: Link(T1, T2)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__ctor__0__1_
  commentId: M:Towel.DataStructures.Link`2.#ctor(`0,`1)
  fullName: Towel.DataStructures.Link<T1, T2>.Link(T1, T2)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Link(T1, T2)
  nameWithType: Link<T1, T2>.Link(T1, T2)
  nameWithType.vb: Link(Of T1, T2).Link(T1, T2)
- uid: Towel.DataStructures.Link`2.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__ctor_
  commentId: Overload:Towel.DataStructures.Link`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Link
  nameWithType: Link<T1, T2>.Link
  nameWithType.vb: Link(Of T1, T2).Link
- uid: Towel.DataStructures.Link`2._1
  name: _1
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__1
  commentId: P:Towel.DataStructures.Link`2._1
  fullName: Towel.DataStructures.Link<T1, T2>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2)._1
  nameWithType: Link<T1, T2>._1
  nameWithType.vb: Link(Of T1, T2)._1
- uid: Towel.DataStructures.Link`2._1*
  name: _1
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__1_
  commentId: Overload:Towel.DataStructures.Link`2._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2)._1
  nameWithType: Link<T1, T2>._1
  nameWithType.vb: Link(Of T1, T2)._1
- uid: Towel.DataStructures.Link`2._2
  name: _2
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__2
  commentId: P:Towel.DataStructures.Link`2._2
  fullName: Towel.DataStructures.Link<T1, T2>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2)._2
  nameWithType: Link<T1, T2>._2
  nameWithType.vb: Link(Of T1, T2)._2
- uid: Towel.DataStructures.Link`2._2*
  name: _2
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2__2_
  commentId: Overload:Towel.DataStructures.Link`2._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2)._2
  nameWithType: Link<T1, T2>._2
  nameWithType.vb: Link(Of T1, T2)._2
- uid: Towel.DataStructures.Link`2.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Clone
  commentId: M:Towel.DataStructures.Link`2.Clone
  fullName: Towel.DataStructures.Link<T1, T2>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Clone()
  nameWithType: Link<T1, T2>.Clone()
  nameWithType.vb: Link(Of T1, T2).Clone()
- uid: Towel.DataStructures.Link`2.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Clone_
  commentId: Overload:Towel.DataStructures.Link`2.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Clone
  nameWithType: Link<T1, T2>.Clone
  nameWithType.vb: Link(Of T1, T2).Clone
- uid: Towel.DataStructures.Link`2.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`2.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Contains_
  commentId: Overload:Towel.DataStructures.Link`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Contains
  nameWithType: Link<T1, T2>.Contains
  nameWithType.vb: Link(Of T1, T2).Contains
- uid: Towel.DataStructures.Link`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`2.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Equals(System.Object)
  nameWithType: Link<T1, T2>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2).Equals(Object)
- uid: Towel.DataStructures.Link`2.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Equals_
  commentId: Overload:Towel.DataStructures.Link`2.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Equals
  nameWithType: Link<T1, T2>.Equals
  nameWithType.vb: Link(Of T1, T2).Equals
- uid: Towel.DataStructures.Link`2.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_GetHashCode
  commentId: M:Towel.DataStructures.Link`2.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).GetHashCode()
  nameWithType: Link<T1, T2>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2).GetHashCode()
- uid: Towel.DataStructures.Link`2.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`2.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).GetHashCode
  nameWithType: Link<T1, T2>.GetHashCode
  nameWithType.vb: Link(Of T1, T2).GetHashCode
- uid: Towel.DataStructures.Link`2.op_Explicit(System.Tuple{`0,`1})~Towel.DataStructures.Link{`0,`1}
  name: Explicit(System.Tuple<T1, T2> to Link<T1, T2>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_op_Explicit_System_Tuple__0__1___Towel_DataStructures_Link__0__1_
  commentId: M:Towel.DataStructures.Link`2.op_Explicit(System.Tuple{`0,`1})~Towel.DataStructures.Link{`0,`1}
  name.vb: Narrowing(System.Tuple(Of T1, T2) to Link(Of T1, T2))
  fullName: Towel.DataStructures.Link<T1, T2>.Explicit(System.Tuple<T1, T2> to Towel.DataStructures.Link<T1, T2>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Narrowing(System.Tuple(Of T1, T2) to Towel.DataStructures.Link(Of T1, T2))
  nameWithType: Link<T1, T2>.Explicit(System.Tuple<T1, T2> to Link<T1, T2>)
  nameWithType.vb: Link(Of T1, T2).Narrowing(System.Tuple(Of T1, T2) to Link(Of T1, T2))
- uid: Towel.DataStructures.Link`2.op_Explicit(System.ValueTuple{`0,`1})~Towel.DataStructures.Link{`0,`1}
  name: Explicit(System.ValueTuple<T1, T2> to Link<T1, T2>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_op_Explicit_System_ValueTuple__0__1___Towel_DataStructures_Link__0__1_
  commentId: M:Towel.DataStructures.Link`2.op_Explicit(System.ValueTuple{`0,`1})~Towel.DataStructures.Link{`0,`1}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2) to Link(Of T1, T2))
  fullName: Towel.DataStructures.Link<T1, T2>.Explicit(System.ValueTuple<T1, T2> to Towel.DataStructures.Link<T1, T2>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Narrowing(System.ValueTuple(Of T1, T2) to Towel.DataStructures.Link(Of T1, T2))
  nameWithType: Link<T1, T2>.Explicit(System.ValueTuple<T1, T2> to Link<T1, T2>)
  nameWithType.vb: Link(Of T1, T2).Narrowing(System.ValueTuple(Of T1, T2) to Link(Of T1, T2))
- uid: Towel.DataStructures.Link`2.op_Explicit(Towel.DataStructures.Link{`0,`1})~System.Tuple{`0,`1}
  name: Explicit(Link<T1, T2> to System.Tuple<T1, T2>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_op_Explicit_Towel_DataStructures_Link__0__1___System_Tuple__0__1_
  commentId: M:Towel.DataStructures.Link`2.op_Explicit(Towel.DataStructures.Link{`0,`1})~System.Tuple{`0,`1}
  name.vb: Narrowing(Link(Of T1, T2) to System.Tuple(Of T1, T2))
  fullName: Towel.DataStructures.Link<T1, T2>.Explicit(Towel.DataStructures.Link<T1, T2> to System.Tuple<T1, T2>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Narrowing(Towel.DataStructures.Link(Of T1, T2) to System.Tuple(Of T1, T2))
  nameWithType: Link<T1, T2>.Explicit(Link<T1, T2> to System.Tuple<T1, T2>)
  nameWithType.vb: Link(Of T1, T2).Narrowing(Link(Of T1, T2) to System.Tuple(Of T1, T2))
- uid: Towel.DataStructures.Link`2.op_Explicit(Towel.DataStructures.Link{`0,`1})~System.ValueTuple{`0,`1}
  name: Explicit(Link<T1, T2> to System.ValueTuple<T1, T2>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_op_Explicit_Towel_DataStructures_Link__0__1___System_ValueTuple__0__1_
  commentId: M:Towel.DataStructures.Link`2.op_Explicit(Towel.DataStructures.Link{`0,`1})~System.ValueTuple{`0,`1}
  name.vb: Narrowing(Link(Of T1, T2) to System.ValueTuple(Of T1, T2))
  fullName: Towel.DataStructures.Link<T1, T2>.Explicit(Towel.DataStructures.Link<T1, T2> to System.ValueTuple<T1, T2>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Narrowing(Towel.DataStructures.Link(Of T1, T2) to System.ValueTuple(Of T1, T2))
  nameWithType: Link<T1, T2>.Explicit(Link<T1, T2> to System.ValueTuple<T1, T2>)
  nameWithType.vb: Link(Of T1, T2).Narrowing(Link(Of T1, T2) to System.ValueTuple(Of T1, T2))
- uid: Towel.DataStructures.Link`2.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`2.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Narrowing
  nameWithType: Link<T1, T2>.Explicit
  nameWithType.vb: Link(Of T1, T2).Narrowing
- uid: Towel.DataStructures.Link`2.Size
  name: Size
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Size
  commentId: P:Towel.DataStructures.Link`2.Size
  fullName: Towel.DataStructures.Link<T1, T2>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Size
  nameWithType: Link<T1, T2>.Size
  nameWithType.vb: Link(Of T1, T2).Size
- uid: Towel.DataStructures.Link`2.Size*
  name: Size
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Size_
  commentId: Overload:Towel.DataStructures.Link`2.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Size
  nameWithType: Link<T1, T2>.Size
  nameWithType.vb: Link(Of T1, T2).Size
- uid: Towel.DataStructures.Link`2.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`2.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`2.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`2.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Stepper_
  commentId: Overload:Towel.DataStructures.Link`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Stepper
  nameWithType: Link<T1, T2>.Stepper
  nameWithType.vb: Link(Of T1, T2).Stepper
- uid: Towel.DataStructures.Link`2.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_ToArray
  commentId: M:Towel.DataStructures.Link`2.ToArray
  fullName: Towel.DataStructures.Link<T1, T2>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).ToArray()
  nameWithType: Link<T1, T2>.ToArray()
  nameWithType.vb: Link(Of T1, T2).ToArray()
- uid: Towel.DataStructures.Link`2.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_ToArray_
  commentId: Overload:Towel.DataStructures.Link`2.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).ToArray
  nameWithType: Link<T1, T2>.ToArray
  nameWithType.vb: Link(Of T1, T2).ToArray
- uid: Towel.DataStructures.Link`2.Types
  name: Types()
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Types
  commentId: M:Towel.DataStructures.Link`2.Types
  fullName: Towel.DataStructures.Link<T1, T2>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Types()
  nameWithType: Link<T1, T2>.Types()
  nameWithType.vb: Link(Of T1, T2).Types()
- uid: Towel.DataStructures.Link`2.Types*
  name: Types
  href: api/Towel.DataStructures.Link-2.html#Towel_DataStructures_Link_2_Types_
  commentId: Overload:Towel.DataStructures.Link`2.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2).Types
  nameWithType: Link<T1, T2>.Types
  nameWithType.vb: Link(Of T1, T2).Types
- uid: Towel.DataStructures.Link`3
  name: Link<T1, T2, T3>
  href: api/Towel.DataStructures.Link-3.html
  commentId: T:Towel.DataStructures.Link`3
  name.vb: Link(Of T1, T2, T3)
  fullName: Towel.DataStructures.Link<T1, T2, T3>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)
  nameWithType: Link<T1, T2, T3>
  nameWithType.vb: Link(Of T1, T2, T3)
- uid: Towel.DataStructures.Link`3.#ctor(`0,`1,`2)
  name: Link(T1, T2, T3)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__ctor__0__1__2_
  commentId: M:Towel.DataStructures.Link`3.#ctor(`0,`1,`2)
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Link(T1, T2, T3)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Link(T1, T2, T3)
  nameWithType: Link<T1, T2, T3>.Link(T1, T2, T3)
  nameWithType.vb: Link(Of T1, T2, T3).Link(T1, T2, T3)
- uid: Towel.DataStructures.Link`3.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__ctor_
  commentId: Overload:Towel.DataStructures.Link`3.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Link
  nameWithType: Link<T1, T2, T3>.Link
  nameWithType.vb: Link(Of T1, T2, T3).Link
- uid: Towel.DataStructures.Link`3._1
  name: _1
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__1
  commentId: P:Towel.DataStructures.Link`3._1
  fullName: Towel.DataStructures.Link<T1, T2, T3>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._1
  nameWithType: Link<T1, T2, T3>._1
  nameWithType.vb: Link(Of T1, T2, T3)._1
- uid: Towel.DataStructures.Link`3._1*
  name: _1
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__1_
  commentId: Overload:Towel.DataStructures.Link`3._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._1
  nameWithType: Link<T1, T2, T3>._1
  nameWithType.vb: Link(Of T1, T2, T3)._1
- uid: Towel.DataStructures.Link`3._2
  name: _2
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__2
  commentId: P:Towel.DataStructures.Link`3._2
  fullName: Towel.DataStructures.Link<T1, T2, T3>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._2
  nameWithType: Link<T1, T2, T3>._2
  nameWithType.vb: Link(Of T1, T2, T3)._2
- uid: Towel.DataStructures.Link`3._2*
  name: _2
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__2_
  commentId: Overload:Towel.DataStructures.Link`3._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._2
  nameWithType: Link<T1, T2, T3>._2
  nameWithType.vb: Link(Of T1, T2, T3)._2
- uid: Towel.DataStructures.Link`3._3
  name: _3
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__3
  commentId: P:Towel.DataStructures.Link`3._3
  fullName: Towel.DataStructures.Link<T1, T2, T3>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._3
  nameWithType: Link<T1, T2, T3>._3
  nameWithType.vb: Link(Of T1, T2, T3)._3
- uid: Towel.DataStructures.Link`3._3*
  name: _3
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3__3_
  commentId: Overload:Towel.DataStructures.Link`3._3
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3)._3
  nameWithType: Link<T1, T2, T3>._3
  nameWithType.vb: Link(Of T1, T2, T3)._3
- uid: Towel.DataStructures.Link`3.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Clone
  commentId: M:Towel.DataStructures.Link`3.Clone
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Clone()
  nameWithType: Link<T1, T2, T3>.Clone()
  nameWithType.vb: Link(Of T1, T2, T3).Clone()
- uid: Towel.DataStructures.Link`3.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Clone_
  commentId: Overload:Towel.DataStructures.Link`3.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Clone
  nameWithType: Link<T1, T2, T3>.Clone
  nameWithType.vb: Link(Of T1, T2, T3).Clone
- uid: Towel.DataStructures.Link`3.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`3.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2, T3>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2, T3).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`3.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Contains_
  commentId: Overload:Towel.DataStructures.Link`3.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Contains
  nameWithType: Link<T1, T2, T3>.Contains
  nameWithType.vb: Link(Of T1, T2, T3).Contains
- uid: Towel.DataStructures.Link`3.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`3.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Equals(System.Object)
  nameWithType: Link<T1, T2, T3>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2, T3).Equals(Object)
- uid: Towel.DataStructures.Link`3.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Equals_
  commentId: Overload:Towel.DataStructures.Link`3.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Equals
  nameWithType: Link<T1, T2, T3>.Equals
  nameWithType.vb: Link(Of T1, T2, T3).Equals
- uid: Towel.DataStructures.Link`3.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_GetHashCode
  commentId: M:Towel.DataStructures.Link`3.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2, T3>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).GetHashCode()
  nameWithType: Link<T1, T2, T3>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2, T3).GetHashCode()
- uid: Towel.DataStructures.Link`3.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`3.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).GetHashCode
  nameWithType: Link<T1, T2, T3>.GetHashCode
  nameWithType.vb: Link(Of T1, T2, T3).GetHashCode
- uid: Towel.DataStructures.Link`3.op_Explicit(System.Tuple{`0,`1,`2})~Towel.DataStructures.Link{`0,`1,`2}
  name: Explicit(System.Tuple<T1, T2, T3> to Link<T1, T2, T3>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_op_Explicit_System_Tuple__0__1__2___Towel_DataStructures_Link__0__1__2_
  commentId: M:Towel.DataStructures.Link`3.op_Explicit(System.Tuple{`0,`1,`2})~Towel.DataStructures.Link{`0,`1,`2}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3) to Link(Of T1, T2, T3))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Explicit(System.Tuple<T1, T2, T3> to Towel.DataStructures.Link<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Narrowing(System.Tuple(Of T1, T2, T3) to Towel.DataStructures.Link(Of T1, T2, T3))
  nameWithType: Link<T1, T2, T3>.Explicit(System.Tuple<T1, T2, T3> to Link<T1, T2, T3>)
  nameWithType.vb: Link(Of T1, T2, T3).Narrowing(System.Tuple(Of T1, T2, T3) to Link(Of T1, T2, T3))
- uid: Towel.DataStructures.Link`3.op_Explicit(System.ValueTuple{`0,`1,`2})~Towel.DataStructures.Link{`0,`1,`2}
  name: Explicit(System.ValueTuple<T1, T2, T3> to Link<T1, T2, T3>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_op_Explicit_System_ValueTuple__0__1__2___Towel_DataStructures_Link__0__1__2_
  commentId: M:Towel.DataStructures.Link`3.op_Explicit(System.ValueTuple{`0,`1,`2})~Towel.DataStructures.Link{`0,`1,`2}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3) to Link(Of T1, T2, T3))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Explicit(System.ValueTuple<T1, T2, T3> to Towel.DataStructures.Link<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Narrowing(System.ValueTuple(Of T1, T2, T3) to Towel.DataStructures.Link(Of T1, T2, T3))
  nameWithType: Link<T1, T2, T3>.Explicit(System.ValueTuple<T1, T2, T3> to Link<T1, T2, T3>)
  nameWithType.vb: Link(Of T1, T2, T3).Narrowing(System.ValueTuple(Of T1, T2, T3) to Link(Of T1, T2, T3))
- uid: Towel.DataStructures.Link`3.op_Explicit(Towel.DataStructures.Link{`0,`1,`2})~System.Tuple{`0,`1,`2}
  name: Explicit(Link<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_op_Explicit_Towel_DataStructures_Link__0__1__2___System_Tuple__0__1__2_
  commentId: M:Towel.DataStructures.Link`3.op_Explicit(Towel.DataStructures.Link{`0,`1,`2})~System.Tuple{`0,`1,`2}
  name.vb: Narrowing(Link(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Explicit(Towel.DataStructures.Link<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
  nameWithType: Link<T1, T2, T3>.Explicit(Link<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  nameWithType.vb: Link(Of T1, T2, T3).Narrowing(Link(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
- uid: Towel.DataStructures.Link`3.op_Explicit(Towel.DataStructures.Link{`0,`1,`2})~System.ValueTuple{`0,`1,`2}
  name: Explicit(Link<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_op_Explicit_Towel_DataStructures_Link__0__1__2___System_ValueTuple__0__1__2_
  commentId: M:Towel.DataStructures.Link`3.op_Explicit(Towel.DataStructures.Link{`0,`1,`2})~System.ValueTuple{`0,`1,`2}
  name.vb: Narrowing(Link(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Explicit(Towel.DataStructures.Link<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
  nameWithType: Link<T1, T2, T3>.Explicit(Link<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  nameWithType.vb: Link(Of T1, T2, T3).Narrowing(Link(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
- uid: Towel.DataStructures.Link`3.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`3.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Narrowing
  nameWithType: Link<T1, T2, T3>.Explicit
  nameWithType.vb: Link(Of T1, T2, T3).Narrowing
- uid: Towel.DataStructures.Link`3.Size
  name: Size
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Size
  commentId: P:Towel.DataStructures.Link`3.Size
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Size
  nameWithType: Link<T1, T2, T3>.Size
  nameWithType.vb: Link(Of T1, T2, T3).Size
- uid: Towel.DataStructures.Link`3.Size*
  name: Size
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Size_
  commentId: Overload:Towel.DataStructures.Link`3.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Size
  nameWithType: Link<T1, T2, T3>.Size
  nameWithType.vb: Link(Of T1, T2, T3).Size
- uid: Towel.DataStructures.Link`3.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`3.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2, T3>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2, T3).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`3.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`3.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2, T3>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2, T3).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`3.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Stepper_
  commentId: Overload:Towel.DataStructures.Link`3.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Stepper
  nameWithType: Link<T1, T2, T3>.Stepper
  nameWithType.vb: Link(Of T1, T2, T3).Stepper
- uid: Towel.DataStructures.Link`3.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_ToArray
  commentId: M:Towel.DataStructures.Link`3.ToArray
  fullName: Towel.DataStructures.Link<T1, T2, T3>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).ToArray()
  nameWithType: Link<T1, T2, T3>.ToArray()
  nameWithType.vb: Link(Of T1, T2, T3).ToArray()
- uid: Towel.DataStructures.Link`3.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_ToArray_
  commentId: Overload:Towel.DataStructures.Link`3.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).ToArray
  nameWithType: Link<T1, T2, T3>.ToArray
  nameWithType.vb: Link(Of T1, T2, T3).ToArray
- uid: Towel.DataStructures.Link`3.Types
  name: Types()
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Types
  commentId: M:Towel.DataStructures.Link`3.Types
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Types()
  nameWithType: Link<T1, T2, T3>.Types()
  nameWithType.vb: Link(Of T1, T2, T3).Types()
- uid: Towel.DataStructures.Link`3.Types*
  name: Types
  href: api/Towel.DataStructures.Link-3.html#Towel_DataStructures_Link_3_Types_
  commentId: Overload:Towel.DataStructures.Link`3.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3).Types
  nameWithType: Link<T1, T2, T3>.Types
  nameWithType.vb: Link(Of T1, T2, T3).Types
- uid: Towel.DataStructures.Link`4
  name: Link<T1, T2, T3, T4>
  href: api/Towel.DataStructures.Link-4.html
  commentId: T:Towel.DataStructures.Link`4
  name.vb: Link(Of T1, T2, T3, T4)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)
  nameWithType: Link<T1, T2, T3, T4>
  nameWithType.vb: Link(Of T1, T2, T3, T4)
- uid: Towel.DataStructures.Link`4.#ctor(`0,`1,`2,`3)
  name: Link(T1, T2, T3, T4)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__ctor__0__1__2__3_
  commentId: M:Towel.DataStructures.Link`4.#ctor(`0,`1,`2,`3)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Link(T1, T2, T3, T4)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Link(T1, T2, T3, T4)
  nameWithType: Link<T1, T2, T3, T4>.Link(T1, T2, T3, T4)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Link(T1, T2, T3, T4)
- uid: Towel.DataStructures.Link`4.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__ctor_
  commentId: Overload:Towel.DataStructures.Link`4.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Link
  nameWithType: Link<T1, T2, T3, T4>.Link
  nameWithType.vb: Link(Of T1, T2, T3, T4).Link
- uid: Towel.DataStructures.Link`4._1
  name: _1
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__1
  commentId: P:Towel.DataStructures.Link`4._1
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._1
  nameWithType: Link<T1, T2, T3, T4>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4)._1
- uid: Towel.DataStructures.Link`4._1*
  name: _1
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__1_
  commentId: Overload:Towel.DataStructures.Link`4._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._1
  nameWithType: Link<T1, T2, T3, T4>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4)._1
- uid: Towel.DataStructures.Link`4._2
  name: _2
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__2
  commentId: P:Towel.DataStructures.Link`4._2
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._2
  nameWithType: Link<T1, T2, T3, T4>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4)._2
- uid: Towel.DataStructures.Link`4._2*
  name: _2
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__2_
  commentId: Overload:Towel.DataStructures.Link`4._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._2
  nameWithType: Link<T1, T2, T3, T4>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4)._2
- uid: Towel.DataStructures.Link`4._3
  name: _3
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__3
  commentId: P:Towel.DataStructures.Link`4._3
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._3
  nameWithType: Link<T1, T2, T3, T4>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4)._3
- uid: Towel.DataStructures.Link`4._3*
  name: _3
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__3_
  commentId: Overload:Towel.DataStructures.Link`4._3
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._3
  nameWithType: Link<T1, T2, T3, T4>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4)._3
- uid: Towel.DataStructures.Link`4._4
  name: _4
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__4
  commentId: P:Towel.DataStructures.Link`4._4
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._4
  nameWithType: Link<T1, T2, T3, T4>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4)._4
- uid: Towel.DataStructures.Link`4._4*
  name: _4
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4__4_
  commentId: Overload:Towel.DataStructures.Link`4._4
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4)._4
  nameWithType: Link<T1, T2, T3, T4>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4)._4
- uid: Towel.DataStructures.Link`4.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Clone
  commentId: M:Towel.DataStructures.Link`4.Clone
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Clone()
  nameWithType: Link<T1, T2, T3, T4>.Clone()
  nameWithType.vb: Link(Of T1, T2, T3, T4).Clone()
- uid: Towel.DataStructures.Link`4.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Clone_
  commentId: Overload:Towel.DataStructures.Link`4.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Clone
  nameWithType: Link<T1, T2, T3, T4>.Clone
  nameWithType.vb: Link(Of T1, T2, T3, T4).Clone
- uid: Towel.DataStructures.Link`4.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`4.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2, T3, T4>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`4.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Contains_
  commentId: Overload:Towel.DataStructures.Link`4.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Contains
  nameWithType: Link<T1, T2, T3, T4>.Contains
  nameWithType.vb: Link(Of T1, T2, T3, T4).Contains
- uid: Towel.DataStructures.Link`4.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`4.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Equals(System.Object)
  nameWithType: Link<T1, T2, T3, T4>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Equals(Object)
- uid: Towel.DataStructures.Link`4.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Equals_
  commentId: Overload:Towel.DataStructures.Link`4.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Equals
  nameWithType: Link<T1, T2, T3, T4>.Equals
  nameWithType.vb: Link(Of T1, T2, T3, T4).Equals
- uid: Towel.DataStructures.Link`4.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_GetHashCode
  commentId: M:Towel.DataStructures.Link`4.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).GetHashCode()
  nameWithType: Link<T1, T2, T3, T4>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2, T3, T4).GetHashCode()
- uid: Towel.DataStructures.Link`4.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`4.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).GetHashCode
  nameWithType: Link<T1, T2, T3, T4>.GetHashCode
  nameWithType.vb: Link(Of T1, T2, T3, T4).GetHashCode
- uid: Towel.DataStructures.Link`4.op_Explicit(System.Tuple{`0,`1,`2,`3})~Towel.DataStructures.Link{`0,`1,`2,`3}
  name: Explicit(System.Tuple<T1, T2, T3, T4> to Link<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_op_Explicit_System_Tuple__0__1__2__3___Towel_DataStructures_Link__0__1__2__3_
  commentId: M:Towel.DataStructures.Link`4.op_Explicit(System.Tuple{`0,`1,`2,`3})~Towel.DataStructures.Link{`0,`1,`2,`3}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4) to Link(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Explicit(System.Tuple<T1, T2, T3, T4> to Towel.DataStructures.Link<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Narrowing(System.Tuple(Of T1, T2, T3, T4) to Towel.DataStructures.Link(Of T1, T2, T3, T4))
  nameWithType: Link<T1, T2, T3, T4>.Explicit(System.Tuple<T1, T2, T3, T4> to Link<T1, T2, T3, T4>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Narrowing(System.Tuple(Of T1, T2, T3, T4) to Link(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.Link`4.op_Explicit(System.ValueTuple{`0,`1,`2,`3})~Towel.DataStructures.Link{`0,`1,`2,`3}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4> to Link<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_op_Explicit_System_ValueTuple__0__1__2__3___Towel_DataStructures_Link__0__1__2__3_
  commentId: M:Towel.DataStructures.Link`4.op_Explicit(System.ValueTuple{`0,`1,`2,`3})~Towel.DataStructures.Link{`0,`1,`2,`3}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to Link(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Explicit(System.ValueTuple<T1, T2, T3, T4> to Towel.DataStructures.Link<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to Towel.DataStructures.Link(Of T1, T2, T3, T4))
  nameWithType: Link<T1, T2, T3, T4>.Explicit(System.ValueTuple<T1, T2, T3, T4> to Link<T1, T2, T3, T4>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to Link(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.Link`4.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3})~System.Tuple{`0,`1,`2,`3}
  name: Explicit(Link<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_op_Explicit_Towel_DataStructures_Link__0__1__2__3___System_Tuple__0__1__2__3_
  commentId: M:Towel.DataStructures.Link`4.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3})~System.Tuple{`0,`1,`2,`3}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
  nameWithType: Link<T1, T2, T3, T4>.Explicit(Link<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Narrowing(Link(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.Link`4.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3})~System.ValueTuple{`0,`1,`2,`3}
  name: Explicit(Link<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_op_Explicit_Towel_DataStructures_Link__0__1__2__3___System_ValueTuple__0__1__2__3_
  commentId: M:Towel.DataStructures.Link`4.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3})~System.ValueTuple{`0,`1,`2,`3}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
  nameWithType: Link<T1, T2, T3, T4>.Explicit(Link<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Narrowing(Link(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.Link`4.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`4.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Narrowing
  nameWithType: Link<T1, T2, T3, T4>.Explicit
  nameWithType.vb: Link(Of T1, T2, T3, T4).Narrowing
- uid: Towel.DataStructures.Link`4.Size
  name: Size
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Size
  commentId: P:Towel.DataStructures.Link`4.Size
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Size
  nameWithType: Link<T1, T2, T3, T4>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4).Size
- uid: Towel.DataStructures.Link`4.Size*
  name: Size
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Size_
  commentId: Overload:Towel.DataStructures.Link`4.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Size
  nameWithType: Link<T1, T2, T3, T4>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4).Size
- uid: Towel.DataStructures.Link`4.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`4.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2, T3, T4>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`4.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`4.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2, T3, T4>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2, T3, T4).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`4.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Stepper_
  commentId: Overload:Towel.DataStructures.Link`4.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Stepper
  nameWithType: Link<T1, T2, T3, T4>.Stepper
  nameWithType.vb: Link(Of T1, T2, T3, T4).Stepper
- uid: Towel.DataStructures.Link`4.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_ToArray
  commentId: M:Towel.DataStructures.Link`4.ToArray
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).ToArray()
  nameWithType: Link<T1, T2, T3, T4>.ToArray()
  nameWithType.vb: Link(Of T1, T2, T3, T4).ToArray()
- uid: Towel.DataStructures.Link`4.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_ToArray_
  commentId: Overload:Towel.DataStructures.Link`4.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).ToArray
  nameWithType: Link<T1, T2, T3, T4>.ToArray
  nameWithType.vb: Link(Of T1, T2, T3, T4).ToArray
- uid: Towel.DataStructures.Link`4.Types
  name: Types()
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Types
  commentId: M:Towel.DataStructures.Link`4.Types
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Types()
  nameWithType: Link<T1, T2, T3, T4>.Types()
  nameWithType.vb: Link(Of T1, T2, T3, T4).Types()
- uid: Towel.DataStructures.Link`4.Types*
  name: Types
  href: api/Towel.DataStructures.Link-4.html#Towel_DataStructures_Link_4_Types_
  commentId: Overload:Towel.DataStructures.Link`4.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4).Types
  nameWithType: Link<T1, T2, T3, T4>.Types
  nameWithType.vb: Link(Of T1, T2, T3, T4).Types
- uid: Towel.DataStructures.Link`5
  name: Link<T1, T2, T3, T4, T5>
  href: api/Towel.DataStructures.Link-5.html
  commentId: T:Towel.DataStructures.Link`5
  name.vb: Link(Of T1, T2, T3, T4, T5)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)
  nameWithType: Link<T1, T2, T3, T4, T5>
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)
- uid: Towel.DataStructures.Link`5.#ctor(`0,`1,`2,`3,`4)
  name: Link(T1, T2, T3, T4, T5)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__ctor__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Link`5.#ctor(`0,`1,`2,`3,`4)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Link(T1, T2, T3, T4, T5)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Link(T1, T2, T3, T4, T5)
  nameWithType: Link<T1, T2, T3, T4, T5>.Link(T1, T2, T3, T4, T5)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Link(T1, T2, T3, T4, T5)
- uid: Towel.DataStructures.Link`5.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__ctor_
  commentId: Overload:Towel.DataStructures.Link`5.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Link
  nameWithType: Link<T1, T2, T3, T4, T5>.Link
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Link
- uid: Towel.DataStructures.Link`5._1
  name: _1
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__1
  commentId: P:Towel.DataStructures.Link`5._1
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._1
  nameWithType: Link<T1, T2, T3, T4, T5>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._1
- uid: Towel.DataStructures.Link`5._1*
  name: _1
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__1_
  commentId: Overload:Towel.DataStructures.Link`5._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._1
  nameWithType: Link<T1, T2, T3, T4, T5>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._1
- uid: Towel.DataStructures.Link`5._2
  name: _2
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__2
  commentId: P:Towel.DataStructures.Link`5._2
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._2
  nameWithType: Link<T1, T2, T3, T4, T5>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._2
- uid: Towel.DataStructures.Link`5._2*
  name: _2
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__2_
  commentId: Overload:Towel.DataStructures.Link`5._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._2
  nameWithType: Link<T1, T2, T3, T4, T5>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._2
- uid: Towel.DataStructures.Link`5._3
  name: _3
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__3
  commentId: P:Towel.DataStructures.Link`5._3
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._3
  nameWithType: Link<T1, T2, T3, T4, T5>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._3
- uid: Towel.DataStructures.Link`5._3*
  name: _3
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__3_
  commentId: Overload:Towel.DataStructures.Link`5._3
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._3
  nameWithType: Link<T1, T2, T3, T4, T5>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._3
- uid: Towel.DataStructures.Link`5._4
  name: _4
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__4
  commentId: P:Towel.DataStructures.Link`5._4
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._4
  nameWithType: Link<T1, T2, T3, T4, T5>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._4
- uid: Towel.DataStructures.Link`5._4*
  name: _4
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__4_
  commentId: Overload:Towel.DataStructures.Link`5._4
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._4
  nameWithType: Link<T1, T2, T3, T4, T5>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._4
- uid: Towel.DataStructures.Link`5._5
  name: _5
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__5
  commentId: P:Towel.DataStructures.Link`5._5
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._5
  nameWithType: Link<T1, T2, T3, T4, T5>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._5
- uid: Towel.DataStructures.Link`5._5*
  name: _5
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5__5_
  commentId: Overload:Towel.DataStructures.Link`5._5
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5)._5
  nameWithType: Link<T1, T2, T3, T4, T5>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5)._5
- uid: Towel.DataStructures.Link`5.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Clone
  commentId: M:Towel.DataStructures.Link`5.Clone
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Clone()
  nameWithType: Link<T1, T2, T3, T4, T5>.Clone()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Clone()
- uid: Towel.DataStructures.Link`5.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Clone_
  commentId: Overload:Towel.DataStructures.Link`5.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Clone
  nameWithType: Link<T1, T2, T3, T4, T5>.Clone
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Clone
- uid: Towel.DataStructures.Link`5.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`5.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2, T3, T4, T5>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`5.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Contains_
  commentId: Overload:Towel.DataStructures.Link`5.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Contains
  nameWithType: Link<T1, T2, T3, T4, T5>.Contains
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Contains
- uid: Towel.DataStructures.Link`5.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`5.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Equals(System.Object)
  nameWithType: Link<T1, T2, T3, T4, T5>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Equals(Object)
- uid: Towel.DataStructures.Link`5.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Equals_
  commentId: Overload:Towel.DataStructures.Link`5.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Equals
  nameWithType: Link<T1, T2, T3, T4, T5>.Equals
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Equals
- uid: Towel.DataStructures.Link`5.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_GetHashCode
  commentId: M:Towel.DataStructures.Link`5.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).GetHashCode()
  nameWithType: Link<T1, T2, T3, T4, T5>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).GetHashCode()
- uid: Towel.DataStructures.Link`5.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`5.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).GetHashCode
  nameWithType: Link<T1, T2, T3, T4, T5>.GetHashCode
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).GetHashCode
- uid: Towel.DataStructures.Link`5.op_Explicit(System.Tuple{`0,`1,`2,`3,`4})~Towel.DataStructures.Link{`0,`1,`2,`3,`4}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5> to Link<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_op_Explicit_System_Tuple__0__1__2__3__4___Towel_DataStructures_Link__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Link`5.op_Explicit(System.Tuple{`0,`1,`2,`3,`4})~Towel.DataStructures.Link{`0,`1,`2,`3,`4}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to Link(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Explicit(System.Tuple<T1, T2, T3, T4, T5> to Towel.DataStructures.Link<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5))
  nameWithType: Link<T1, T2, T3, T4, T5>.Explicit(System.Tuple<T1, T2, T3, T4, T5> to Link<T1, T2, T3, T4, T5>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to Link(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.Link`5.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4})~Towel.DataStructures.Link{`0,`1,`2,`3,`4}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to Link<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_op_Explicit_System_ValueTuple__0__1__2__3__4___Towel_DataStructures_Link__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Link`5.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4})~Towel.DataStructures.Link{`0,`1,`2,`3,`4}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to Link(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to Towel.DataStructures.Link<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5))
  nameWithType: Link<T1, T2, T3, T4, T5>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to Link<T1, T2, T3, T4, T5>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to Link(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.Link`5.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4})~System.Tuple{`0,`1,`2,`3,`4}
  name: Explicit(Link<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4___System_Tuple__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Link`5.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4})~System.Tuple{`0,`1,`2,`3,`4}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
  nameWithType: Link<T1, T2, T3, T4, T5>.Explicit(Link<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Narrowing(Link(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.Link`5.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4})~System.ValueTuple{`0,`1,`2,`3,`4}
  name: Explicit(Link<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4___System_ValueTuple__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Link`5.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4})~System.ValueTuple{`0,`1,`2,`3,`4}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
  nameWithType: Link<T1, T2, T3, T4, T5>.Explicit(Link<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Narrowing(Link(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.Link`5.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`5.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Narrowing
  nameWithType: Link<T1, T2, T3, T4, T5>.Explicit
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Narrowing
- uid: Towel.DataStructures.Link`5.Size
  name: Size
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Size
  commentId: P:Towel.DataStructures.Link`5.Size
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Size
  nameWithType: Link<T1, T2, T3, T4, T5>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Size
- uid: Towel.DataStructures.Link`5.Size*
  name: Size
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Size_
  commentId: Overload:Towel.DataStructures.Link`5.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Size
  nameWithType: Link<T1, T2, T3, T4, T5>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Size
- uid: Towel.DataStructures.Link`5.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`5.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2, T3, T4, T5>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`5.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`5.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2, T3, T4, T5>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`5.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Stepper_
  commentId: Overload:Towel.DataStructures.Link`5.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Stepper
  nameWithType: Link<T1, T2, T3, T4, T5>.Stepper
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Stepper
- uid: Towel.DataStructures.Link`5.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_ToArray
  commentId: M:Towel.DataStructures.Link`5.ToArray
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).ToArray()
  nameWithType: Link<T1, T2, T3, T4, T5>.ToArray()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).ToArray()
- uid: Towel.DataStructures.Link`5.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_ToArray_
  commentId: Overload:Towel.DataStructures.Link`5.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).ToArray
  nameWithType: Link<T1, T2, T3, T4, T5>.ToArray
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).ToArray
- uid: Towel.DataStructures.Link`5.Types
  name: Types()
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Types
  commentId: M:Towel.DataStructures.Link`5.Types
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Types()
  nameWithType: Link<T1, T2, T3, T4, T5>.Types()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Types()
- uid: Towel.DataStructures.Link`5.Types*
  name: Types
  href: api/Towel.DataStructures.Link-5.html#Towel_DataStructures_Link_5_Types_
  commentId: Overload:Towel.DataStructures.Link`5.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5).Types
  nameWithType: Link<T1, T2, T3, T4, T5>.Types
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5).Types
- uid: Towel.DataStructures.Link`6
  name: Link<T1, T2, T3, T4, T5, T6>
  href: api/Towel.DataStructures.Link-6.html
  commentId: T:Towel.DataStructures.Link`6
  name.vb: Link(Of T1, T2, T3, T4, T5, T6)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)
  nameWithType: Link<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)
- uid: Towel.DataStructures.Link`6.#ctor(`0,`1,`2,`3,`4,`5)
  name: Link(T1, T2, T3, T4, T5, T6)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__ctor__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Link`6.#ctor(`0,`1,`2,`3,`4,`5)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Link(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Link(T1, T2, T3, T4, T5, T6)
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Link(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Link(T1, T2, T3, T4, T5, T6)
- uid: Towel.DataStructures.Link`6.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__ctor_
  commentId: Overload:Towel.DataStructures.Link`6.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Link
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Link
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Link
- uid: Towel.DataStructures.Link`6._1
  name: _1
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__1
  commentId: P:Towel.DataStructures.Link`6._1
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._1
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._1
- uid: Towel.DataStructures.Link`6._1*
  name: _1
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__1_
  commentId: Overload:Towel.DataStructures.Link`6._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._1
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._1
- uid: Towel.DataStructures.Link`6._2
  name: _2
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__2
  commentId: P:Towel.DataStructures.Link`6._2
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._2
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._2
- uid: Towel.DataStructures.Link`6._2*
  name: _2
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__2_
  commentId: Overload:Towel.DataStructures.Link`6._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._2
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._2
- uid: Towel.DataStructures.Link`6._3
  name: _3
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__3
  commentId: P:Towel.DataStructures.Link`6._3
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._3
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._3
- uid: Towel.DataStructures.Link`6._3*
  name: _3
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__3_
  commentId: Overload:Towel.DataStructures.Link`6._3
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._3
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._3
- uid: Towel.DataStructures.Link`6._4
  name: _4
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__4
  commentId: P:Towel.DataStructures.Link`6._4
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._4
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._4
- uid: Towel.DataStructures.Link`6._4*
  name: _4
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__4_
  commentId: Overload:Towel.DataStructures.Link`6._4
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._4
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._4
- uid: Towel.DataStructures.Link`6._5
  name: _5
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__5
  commentId: P:Towel.DataStructures.Link`6._5
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._5
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._5
- uid: Towel.DataStructures.Link`6._5*
  name: _5
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__5_
  commentId: Overload:Towel.DataStructures.Link`6._5
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._5
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._5
- uid: Towel.DataStructures.Link`6._6
  name: _6
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__6
  commentId: P:Towel.DataStructures.Link`6._6
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._6
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._6
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._6
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._6
- uid: Towel.DataStructures.Link`6._6*
  name: _6
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6__6_
  commentId: Overload:Towel.DataStructures.Link`6._6
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>._6
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6)._6
  nameWithType: Link<T1, T2, T3, T4, T5, T6>._6
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6)._6
- uid: Towel.DataStructures.Link`6.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Clone
  commentId: M:Towel.DataStructures.Link`6.Clone
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Clone()
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Clone()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Clone()
- uid: Towel.DataStructures.Link`6.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Clone_
  commentId: Overload:Towel.DataStructures.Link`6.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Clone
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Clone
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Clone
- uid: Towel.DataStructures.Link`6.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`6.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`6.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Contains_
  commentId: Overload:Towel.DataStructures.Link`6.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Contains
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Contains
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Contains
- uid: Towel.DataStructures.Link`6.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`6.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Equals(System.Object)
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Equals(Object)
- uid: Towel.DataStructures.Link`6.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Equals_
  commentId: Overload:Towel.DataStructures.Link`6.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Equals
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Equals
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Equals
- uid: Towel.DataStructures.Link`6.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_GetHashCode
  commentId: M:Towel.DataStructures.Link`6.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).GetHashCode()
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).GetHashCode()
- uid: Towel.DataStructures.Link`6.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`6.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).GetHashCode
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.GetHashCode
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).GetHashCode
- uid: Towel.DataStructures.Link`6.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to Link<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_op_Explicit_System_Tuple__0__1__2__3__4__5___Towel_DataStructures_Link__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Link`6.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to Link(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to Link<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to Link(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.Link`6.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to Link<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_op_Explicit_System_ValueTuple__0__1__2__3__4__5___Towel_DataStructures_Link__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Link`6.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to Link(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to Link<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to Link(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.Link`6.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5})~System.Tuple{`0,`1,`2,`3,`4,`5}
  name: Explicit(Link<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4__5___System_Tuple__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Link`6.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5})~System.Tuple{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Explicit(Link<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Narrowing(Link(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.Link`6.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5})~System.ValueTuple{`0,`1,`2,`3,`4,`5}
  name: Explicit(Link<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4__5___System_ValueTuple__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Link`6.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5})~System.ValueTuple{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Explicit(Link<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Narrowing(Link(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.Link`6.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`6.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Narrowing
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Explicit
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Narrowing
- uid: Towel.DataStructures.Link`6.Size
  name: Size
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Size
  commentId: P:Towel.DataStructures.Link`6.Size
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Size
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Size
- uid: Towel.DataStructures.Link`6.Size*
  name: Size
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Size_
  commentId: Overload:Towel.DataStructures.Link`6.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Size
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Size
- uid: Towel.DataStructures.Link`6.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`6.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`6.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`6.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`6.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Stepper_
  commentId: Overload:Towel.DataStructures.Link`6.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Stepper
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Stepper
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Stepper
- uid: Towel.DataStructures.Link`6.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_ToArray
  commentId: M:Towel.DataStructures.Link`6.ToArray
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).ToArray()
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.ToArray()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).ToArray()
- uid: Towel.DataStructures.Link`6.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_ToArray_
  commentId: Overload:Towel.DataStructures.Link`6.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).ToArray
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.ToArray
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).ToArray
- uid: Towel.DataStructures.Link`6.Types
  name: Types()
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Types
  commentId: M:Towel.DataStructures.Link`6.Types
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Types()
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Types()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Types()
- uid: Towel.DataStructures.Link`6.Types*
  name: Types
  href: api/Towel.DataStructures.Link-6.html#Towel_DataStructures_Link_6_Types_
  commentId: Overload:Towel.DataStructures.Link`6.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6).Types
  nameWithType: Link<T1, T2, T3, T4, T5, T6>.Types
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6).Types
- uid: Towel.DataStructures.Link`7
  name: Link<T1, T2, T3, T4, T5, T6, T7>
  href: api/Towel.DataStructures.Link-7.html
  commentId: T:Towel.DataStructures.Link`7
  name.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.DataStructures.Link`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  name: Link(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__ctor__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Link`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Link(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Link(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Link(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Link(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.DataStructures.Link`7.#ctor*
  name: Link
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__ctor_
  commentId: Overload:Towel.DataStructures.Link`7.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Link
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Link
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Link
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Link
- uid: Towel.DataStructures.Link`7._1
  name: _1
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__1
  commentId: P:Towel.DataStructures.Link`7._1
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._1
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._1
- uid: Towel.DataStructures.Link`7._1*
  name: _1
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__1_
  commentId: Overload:Towel.DataStructures.Link`7._1
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._1
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._1
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._1
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._1
- uid: Towel.DataStructures.Link`7._2
  name: _2
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__2
  commentId: P:Towel.DataStructures.Link`7._2
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._2
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._2
- uid: Towel.DataStructures.Link`7._2*
  name: _2
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__2_
  commentId: Overload:Towel.DataStructures.Link`7._2
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._2
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._2
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._2
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._2
- uid: Towel.DataStructures.Link`7._3
  name: _3
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__3
  commentId: P:Towel.DataStructures.Link`7._3
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._3
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._3
- uid: Towel.DataStructures.Link`7._3*
  name: _3
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__3_
  commentId: Overload:Towel.DataStructures.Link`7._3
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._3
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._3
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._3
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._3
- uid: Towel.DataStructures.Link`7._4
  name: _4
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__4
  commentId: P:Towel.DataStructures.Link`7._4
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._4
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._4
- uid: Towel.DataStructures.Link`7._4*
  name: _4
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__4_
  commentId: Overload:Towel.DataStructures.Link`7._4
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._4
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._4
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._4
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._4
- uid: Towel.DataStructures.Link`7._5
  name: _5
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__5
  commentId: P:Towel.DataStructures.Link`7._5
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._5
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._5
- uid: Towel.DataStructures.Link`7._5*
  name: _5
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__5_
  commentId: Overload:Towel.DataStructures.Link`7._5
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._5
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._5
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._5
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._5
- uid: Towel.DataStructures.Link`7._6
  name: _6
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__6
  commentId: P:Towel.DataStructures.Link`7._6
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._6
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._6
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._6
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._6
- uid: Towel.DataStructures.Link`7._6*
  name: _6
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__6_
  commentId: Overload:Towel.DataStructures.Link`7._6
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._6
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._6
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._6
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._6
- uid: Towel.DataStructures.Link`7._7
  name: _7
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__7
  commentId: P:Towel.DataStructures.Link`7._7
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._7
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._7
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._7
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._7
- uid: Towel.DataStructures.Link`7._7*
  name: _7
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7__7_
  commentId: Overload:Towel.DataStructures.Link`7._7
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>._7
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7)._7
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>._7
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7)._7
- uid: Towel.DataStructures.Link`7.Clone
  name: Clone()
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Clone
  commentId: M:Towel.DataStructures.Link`7.Clone
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Clone()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Clone()
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Clone()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Clone()
- uid: Towel.DataStructures.Link`7.Clone*
  name: Clone
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Clone_
  commentId: Overload:Towel.DataStructures.Link`7.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Clone
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Clone
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Clone
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Clone
- uid: Towel.DataStructures.Link`7.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Link`7.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.Link`7.Contains*
  name: Contains
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Contains_
  commentId: Overload:Towel.DataStructures.Link`7.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Contains
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Contains
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Contains
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Contains
- uid: Towel.DataStructures.Link`7.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Equals_System_Object_
  commentId: M:Towel.DataStructures.Link`7.Equals(System.Object)
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Equals(System.Object)
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Equals(Object)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Equals(Object)
- uid: Towel.DataStructures.Link`7.Equals*
  name: Equals
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Equals_
  commentId: Overload:Towel.DataStructures.Link`7.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Equals
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Equals
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Equals
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Equals
- uid: Towel.DataStructures.Link`7.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_GetHashCode
  commentId: M:Towel.DataStructures.Link`7.GetHashCode
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.GetHashCode()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode()
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.GetHashCode()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode()
- uid: Towel.DataStructures.Link`7.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_GetHashCode_
  commentId: Overload:Towel.DataStructures.Link`7.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.GetHashCode
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.GetHashCode
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode
- uid: Towel.DataStructures.Link`7.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to Link<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_op_Explicit_System_Tuple__0__1__2__3__4__5__6___Towel_DataStructures_Link__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Link`7.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to Link(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to Link<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to Link(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.Link`7.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to Link<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_op_Explicit_System_ValueTuple__0__1__2__3__4__5__6___Towel_DataStructures_Link__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Link`7.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to Link(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to Link<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to Link(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.Link`7.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6})~System.Tuple{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(Link<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4__5__6___System_Tuple__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Link`7.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6})~System.Tuple{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(Link<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Link(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.Link`7.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6})~System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(Link<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_op_Explicit_Towel_DataStructures_Link__0__1__2__3__4__5__6___System_ValueTuple__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Link`7.op_Explicit(Towel.DataStructures.Link{`0,`1,`2,`3,`4,`5,`6})~System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(Link(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Explicit(Link<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Link(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.Link`7.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_op_Explicit_
  commentId: Overload:Towel.DataStructures.Link`7.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Explicit
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Explicit
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Narrowing
- uid: Towel.DataStructures.Link`7.Size
  name: Size
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Size
  commentId: P:Towel.DataStructures.Link`7.Size
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Size
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Size
- uid: Towel.DataStructures.Link`7.Size*
  name: Size
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Size_
  commentId: Overload:Towel.DataStructures.Link`7.Size
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Size
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Size
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Size
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Size
- uid: Towel.DataStructures.Link`7.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.Link`7.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Action(Of System.Object))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Stepper(Action<Object>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Action(Of Object))
- uid: Towel.DataStructures.Link`7.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.Link`7.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.Link`7.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Stepper_
  commentId: Overload:Towel.DataStructures.Link`7.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Stepper
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Stepper
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Stepper
- uid: Towel.DataStructures.Link`7.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_ToArray
  commentId: M:Towel.DataStructures.Link`7.ToArray
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.ToArray()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).ToArray()
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.ToArray()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).ToArray()
- uid: Towel.DataStructures.Link`7.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_ToArray_
  commentId: Overload:Towel.DataStructures.Link`7.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.ToArray
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).ToArray
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.ToArray
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).ToArray
- uid: Towel.DataStructures.Link`7.Types
  name: Types()
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Types
  commentId: M:Towel.DataStructures.Link`7.Types
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Types()
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Types()
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Types()
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Types()
- uid: Towel.DataStructures.Link`7.Types*
  name: Types
  href: api/Towel.DataStructures.Link-7.html#Towel_DataStructures_Link_7_Types_
  commentId: Overload:Towel.DataStructures.Link`7.Types
  isSpec: "True"
  fullName: Towel.DataStructures.Link<T1, T2, T3, T4, T5, T6, T7>.Types
  fullName.vb: Towel.DataStructures.Link(Of T1, T2, T3, T4, T5, T6, T7).Types
  nameWithType: Link<T1, T2, T3, T4, T5, T6, T7>.Types
  nameWithType.vb: Link(Of T1, T2, T3, T4, T5, T6, T7).Types
- uid: Towel.DataStructures.LinkStruct`1
  name: LinkStruct<T1>
  href: api/Towel.DataStructures.LinkStruct-1.html
  commentId: T:Towel.DataStructures.LinkStruct`1
  name.vb: LinkStruct(Of T1)
  fullName: Towel.DataStructures.LinkStruct<T1>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1)
  nameWithType: LinkStruct<T1>
  nameWithType.vb: LinkStruct(Of T1)
- uid: Towel.DataStructures.LinkStruct`1.#ctor(`0)
  name: LinkStruct(T1)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1__ctor__0_
  commentId: M:Towel.DataStructures.LinkStruct`1.#ctor(`0)
  fullName: Towel.DataStructures.LinkStruct<T1>.LinkStruct(T1)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).LinkStruct(T1)
  nameWithType: LinkStruct<T1>.LinkStruct(T1)
  nameWithType.vb: LinkStruct(Of T1).LinkStruct(T1)
- uid: Towel.DataStructures.LinkStruct`1.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).LinkStruct
  nameWithType: LinkStruct<T1>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1).LinkStruct
- uid: Towel.DataStructures.LinkStruct`1._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1__1
  commentId: P:Towel.DataStructures.LinkStruct`1._1
  fullName: Towel.DataStructures.LinkStruct<T1>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1)._1
  nameWithType: LinkStruct<T1>._1
  nameWithType.vb: LinkStruct(Of T1)._1
- uid: Towel.DataStructures.LinkStruct`1._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`1._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1)._1
  nameWithType: LinkStruct<T1>._1
  nameWithType.vb: LinkStruct(Of T1)._1
- uid: Towel.DataStructures.LinkStruct`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Clone
  commentId: M:Towel.DataStructures.LinkStruct`1.Clone
  fullName: Towel.DataStructures.LinkStruct<T1>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Clone()
  nameWithType: LinkStruct<T1>.Clone()
  nameWithType.vb: LinkStruct(Of T1).Clone()
- uid: Towel.DataStructures.LinkStruct`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Clone
  nameWithType: LinkStruct<T1>.Clone
  nameWithType.vb: LinkStruct(Of T1).Clone
- uid: Towel.DataStructures.LinkStruct`1.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`1.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`1.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Contains
  nameWithType: LinkStruct<T1>.Contains
  nameWithType.vb: LinkStruct(Of T1).Contains
- uid: Towel.DataStructures.LinkStruct`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`1.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Equals(System.Object)
  nameWithType: LinkStruct<T1>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`1.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Equals
  nameWithType: LinkStruct<T1>.Equals
  nameWithType.vb: LinkStruct(Of T1).Equals
- uid: Towel.DataStructures.LinkStruct`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`1.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).GetHashCode()
  nameWithType: LinkStruct<T1>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).GetHashCode
  nameWithType: LinkStruct<T1>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1).GetHashCode
- uid: Towel.DataStructures.LinkStruct`1.op_Explicit(System.Tuple{`0})~Towel.DataStructures.LinkStruct{`0}
  name: Explicit(System.Tuple<T1> to LinkStruct<T1>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_op_Explicit_System_Tuple__0___Towel_DataStructures_LinkStruct__0_
  commentId: M:Towel.DataStructures.LinkStruct`1.op_Explicit(System.Tuple{`0})~Towel.DataStructures.LinkStruct{`0}
  name.vb: Narrowing(System.Tuple(Of T1) to LinkStruct(Of T1))
  fullName: Towel.DataStructures.LinkStruct<T1>.Explicit(System.Tuple<T1> to Towel.DataStructures.LinkStruct<T1>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Narrowing(System.Tuple(Of T1) to Towel.DataStructures.LinkStruct(Of T1))
  nameWithType: LinkStruct<T1>.Explicit(System.Tuple<T1> to LinkStruct<T1>)
  nameWithType.vb: LinkStruct(Of T1).Narrowing(System.Tuple(Of T1) to LinkStruct(Of T1))
- uid: Towel.DataStructures.LinkStruct`1.op_Explicit(System.ValueTuple{`0})~Towel.DataStructures.LinkStruct{`0}
  name: Explicit(System.ValueTuple<T1> to LinkStruct<T1>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_op_Explicit_System_ValueTuple__0___Towel_DataStructures_LinkStruct__0_
  commentId: M:Towel.DataStructures.LinkStruct`1.op_Explicit(System.ValueTuple{`0})~Towel.DataStructures.LinkStruct{`0}
  name.vb: Narrowing(System.ValueTuple(Of T1) to LinkStruct(Of T1))
  fullName: Towel.DataStructures.LinkStruct<T1>.Explicit(System.ValueTuple<T1> to Towel.DataStructures.LinkStruct<T1>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Narrowing(System.ValueTuple(Of T1) to Towel.DataStructures.LinkStruct(Of T1))
  nameWithType: LinkStruct<T1>.Explicit(System.ValueTuple<T1> to LinkStruct<T1>)
  nameWithType.vb: LinkStruct(Of T1).Narrowing(System.ValueTuple(Of T1) to LinkStruct(Of T1))
- uid: Towel.DataStructures.LinkStruct`1.op_Explicit(Towel.DataStructures.LinkStruct{`0})~System.Tuple{`0}
  name: Explicit(LinkStruct<T1> to System.Tuple<T1>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_op_Explicit_Towel_DataStructures_LinkStruct__0___System_Tuple__0_
  commentId: M:Towel.DataStructures.LinkStruct`1.op_Explicit(Towel.DataStructures.LinkStruct{`0})~System.Tuple{`0}
  name.vb: Narrowing(LinkStruct(Of T1) to System.Tuple(Of T1))
  fullName: Towel.DataStructures.LinkStruct<T1>.Explicit(Towel.DataStructures.LinkStruct<T1> to System.Tuple<T1>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Narrowing(Towel.DataStructures.LinkStruct(Of T1) to System.Tuple(Of T1))
  nameWithType: LinkStruct<T1>.Explicit(LinkStruct<T1> to System.Tuple<T1>)
  nameWithType.vb: LinkStruct(Of T1).Narrowing(LinkStruct(Of T1) to System.Tuple(Of T1))
- uid: Towel.DataStructures.LinkStruct`1.op_Explicit(Towel.DataStructures.LinkStruct{`0})~System.ValueTuple{`0}
  name: Explicit(LinkStruct<T1> to System.ValueTuple<T1>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_op_Explicit_Towel_DataStructures_LinkStruct__0___System_ValueTuple__0_
  commentId: M:Towel.DataStructures.LinkStruct`1.op_Explicit(Towel.DataStructures.LinkStruct{`0})~System.ValueTuple{`0}
  name.vb: Narrowing(LinkStruct(Of T1) to System.ValueTuple(Of T1))
  fullName: Towel.DataStructures.LinkStruct<T1>.Explicit(Towel.DataStructures.LinkStruct<T1> to System.ValueTuple<T1>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Narrowing(Towel.DataStructures.LinkStruct(Of T1) to System.ValueTuple(Of T1))
  nameWithType: LinkStruct<T1>.Explicit(LinkStruct<T1> to System.ValueTuple<T1>)
  nameWithType.vb: LinkStruct(Of T1).Narrowing(LinkStruct(Of T1) to System.ValueTuple(Of T1))
- uid: Towel.DataStructures.LinkStruct`1.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Narrowing
  nameWithType: LinkStruct<T1>.Explicit
  nameWithType.vb: LinkStruct(Of T1).Narrowing
- uid: Towel.DataStructures.LinkStruct`1.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Size
  commentId: P:Towel.DataStructures.LinkStruct`1.Size
  fullName: Towel.DataStructures.LinkStruct<T1>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Size
  nameWithType: LinkStruct<T1>.Size
  nameWithType.vb: LinkStruct(Of T1).Size
- uid: Towel.DataStructures.LinkStruct`1.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Size
  nameWithType: LinkStruct<T1>.Size
  nameWithType.vb: LinkStruct(Of T1).Size
- uid: Towel.DataStructures.LinkStruct`1.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`1.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`1.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`1.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Stepper
  nameWithType: LinkStruct<T1>.Stepper
  nameWithType.vb: LinkStruct(Of T1).Stepper
- uid: Towel.DataStructures.LinkStruct`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`1.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).ToArray()
  nameWithType: LinkStruct<T1>.ToArray()
  nameWithType.vb: LinkStruct(Of T1).ToArray()
- uid: Towel.DataStructures.LinkStruct`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).ToArray
  nameWithType: LinkStruct<T1>.ToArray
  nameWithType.vb: LinkStruct(Of T1).ToArray
- uid: Towel.DataStructures.LinkStruct`1.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Types
  commentId: M:Towel.DataStructures.LinkStruct`1.Types
  fullName: Towel.DataStructures.LinkStruct<T1>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Types()
  nameWithType: LinkStruct<T1>.Types()
  nameWithType.vb: LinkStruct(Of T1).Types()
- uid: Towel.DataStructures.LinkStruct`1.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-1.html#Towel_DataStructures_LinkStruct_1_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`1.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1).Types
  nameWithType: LinkStruct<T1>.Types
  nameWithType.vb: LinkStruct(Of T1).Types
- uid: Towel.DataStructures.LinkStruct`2
  name: LinkStruct<T1, T2>
  href: api/Towel.DataStructures.LinkStruct-2.html
  commentId: T:Towel.DataStructures.LinkStruct`2
  name.vb: LinkStruct(Of T1, T2)
  fullName: Towel.DataStructures.LinkStruct<T1, T2>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2)
  nameWithType: LinkStruct<T1, T2>
  nameWithType.vb: LinkStruct(Of T1, T2)
- uid: Towel.DataStructures.LinkStruct`2.#ctor(`0,`1)
  name: LinkStruct(T1, T2)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__ctor__0__1_
  commentId: M:Towel.DataStructures.LinkStruct`2.#ctor(`0,`1)
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.LinkStruct(T1, T2)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).LinkStruct(T1, T2)
  nameWithType: LinkStruct<T1, T2>.LinkStruct(T1, T2)
  nameWithType.vb: LinkStruct(Of T1, T2).LinkStruct(T1, T2)
- uid: Towel.DataStructures.LinkStruct`2.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).LinkStruct
  nameWithType: LinkStruct<T1, T2>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2).LinkStruct
- uid: Towel.DataStructures.LinkStruct`2._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__1
  commentId: P:Towel.DataStructures.LinkStruct`2._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2)._1
  nameWithType: LinkStruct<T1, T2>._1
  nameWithType.vb: LinkStruct(Of T1, T2)._1
- uid: Towel.DataStructures.LinkStruct`2._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`2._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2)._1
  nameWithType: LinkStruct<T1, T2>._1
  nameWithType.vb: LinkStruct(Of T1, T2)._1
- uid: Towel.DataStructures.LinkStruct`2._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__2
  commentId: P:Towel.DataStructures.LinkStruct`2._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2)._2
  nameWithType: LinkStruct<T1, T2>._2
  nameWithType.vb: LinkStruct(Of T1, T2)._2
- uid: Towel.DataStructures.LinkStruct`2._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`2._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2)._2
  nameWithType: LinkStruct<T1, T2>._2
  nameWithType.vb: LinkStruct(Of T1, T2)._2
- uid: Towel.DataStructures.LinkStruct`2.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Clone
  commentId: M:Towel.DataStructures.LinkStruct`2.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Clone()
  nameWithType: LinkStruct<T1, T2>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2).Clone()
- uid: Towel.DataStructures.LinkStruct`2.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Clone
  nameWithType: LinkStruct<T1, T2>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2).Clone
- uid: Towel.DataStructures.LinkStruct`2.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`2.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Contains
  nameWithType: LinkStruct<T1, T2>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2).Contains
- uid: Towel.DataStructures.LinkStruct`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`2.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`2.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Equals
  nameWithType: LinkStruct<T1, T2>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2).Equals
- uid: Towel.DataStructures.LinkStruct`2.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`2.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).GetHashCode()
  nameWithType: LinkStruct<T1, T2>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`2.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).GetHashCode
  nameWithType: LinkStruct<T1, T2>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2).GetHashCode
- uid: Towel.DataStructures.LinkStruct`2.op_Explicit(System.Tuple{`0,`1})~Towel.DataStructures.LinkStruct{`0,`1}
  name: Explicit(System.Tuple<T1, T2> to LinkStruct<T1, T2>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_op_Explicit_System_Tuple__0__1___Towel_DataStructures_LinkStruct__0__1_
  commentId: M:Towel.DataStructures.LinkStruct`2.op_Explicit(System.Tuple{`0,`1})~Towel.DataStructures.LinkStruct{`0,`1}
  name.vb: Narrowing(System.Tuple(Of T1, T2) to LinkStruct(Of T1, T2))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Explicit(System.Tuple<T1, T2> to Towel.DataStructures.LinkStruct<T1, T2>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Narrowing(System.Tuple(Of T1, T2) to Towel.DataStructures.LinkStruct(Of T1, T2))
  nameWithType: LinkStruct<T1, T2>.Explicit(System.Tuple<T1, T2> to LinkStruct<T1, T2>)
  nameWithType.vb: LinkStruct(Of T1, T2).Narrowing(System.Tuple(Of T1, T2) to LinkStruct(Of T1, T2))
- uid: Towel.DataStructures.LinkStruct`2.op_Explicit(System.ValueTuple{`0,`1})~Towel.DataStructures.LinkStruct{`0,`1}
  name: Explicit(System.ValueTuple<T1, T2> to LinkStruct<T1, T2>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_op_Explicit_System_ValueTuple__0__1___Towel_DataStructures_LinkStruct__0__1_
  commentId: M:Towel.DataStructures.LinkStruct`2.op_Explicit(System.ValueTuple{`0,`1})~Towel.DataStructures.LinkStruct{`0,`1}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2) to LinkStruct(Of T1, T2))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Explicit(System.ValueTuple<T1, T2> to Towel.DataStructures.LinkStruct<T1, T2>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Narrowing(System.ValueTuple(Of T1, T2) to Towel.DataStructures.LinkStruct(Of T1, T2))
  nameWithType: LinkStruct<T1, T2>.Explicit(System.ValueTuple<T1, T2> to LinkStruct<T1, T2>)
  nameWithType.vb: LinkStruct(Of T1, T2).Narrowing(System.ValueTuple(Of T1, T2) to LinkStruct(Of T1, T2))
- uid: Towel.DataStructures.LinkStruct`2.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1})~System.Tuple{`0,`1}
  name: Explicit(LinkStruct<T1, T2> to System.Tuple<T1, T2>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_op_Explicit_Towel_DataStructures_LinkStruct__0__1___System_Tuple__0__1_
  commentId: M:Towel.DataStructures.LinkStruct`2.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1})~System.Tuple{`0,`1}
  name.vb: Narrowing(LinkStruct(Of T1, T2) to System.Tuple(Of T1, T2))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Explicit(Towel.DataStructures.LinkStruct<T1, T2> to System.Tuple<T1, T2>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2) to System.Tuple(Of T1, T2))
  nameWithType: LinkStruct<T1, T2>.Explicit(LinkStruct<T1, T2> to System.Tuple<T1, T2>)
  nameWithType.vb: LinkStruct(Of T1, T2).Narrowing(LinkStruct(Of T1, T2) to System.Tuple(Of T1, T2))
- uid: Towel.DataStructures.LinkStruct`2.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1})~System.ValueTuple{`0,`1}
  name: Explicit(LinkStruct<T1, T2> to System.ValueTuple<T1, T2>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_op_Explicit_Towel_DataStructures_LinkStruct__0__1___System_ValueTuple__0__1_
  commentId: M:Towel.DataStructures.LinkStruct`2.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1})~System.ValueTuple{`0,`1}
  name.vb: Narrowing(LinkStruct(Of T1, T2) to System.ValueTuple(Of T1, T2))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Explicit(Towel.DataStructures.LinkStruct<T1, T2> to System.ValueTuple<T1, T2>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2) to System.ValueTuple(Of T1, T2))
  nameWithType: LinkStruct<T1, T2>.Explicit(LinkStruct<T1, T2> to System.ValueTuple<T1, T2>)
  nameWithType.vb: LinkStruct(Of T1, T2).Narrowing(LinkStruct(Of T1, T2) to System.ValueTuple(Of T1, T2))
- uid: Towel.DataStructures.LinkStruct`2.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Narrowing
  nameWithType: LinkStruct<T1, T2>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2).Narrowing
- uid: Towel.DataStructures.LinkStruct`2.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Size
  commentId: P:Towel.DataStructures.LinkStruct`2.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Size
  nameWithType: LinkStruct<T1, T2>.Size
  nameWithType.vb: LinkStruct(Of T1, T2).Size
- uid: Towel.DataStructures.LinkStruct`2.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Size
  nameWithType: LinkStruct<T1, T2>.Size
  nameWithType.vb: LinkStruct(Of T1, T2).Size
- uid: Towel.DataStructures.LinkStruct`2.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`2.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`2.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`2.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Stepper
  nameWithType: LinkStruct<T1, T2>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2).Stepper
- uid: Towel.DataStructures.LinkStruct`2.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`2.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).ToArray()
  nameWithType: LinkStruct<T1, T2>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2).ToArray()
- uid: Towel.DataStructures.LinkStruct`2.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).ToArray
  nameWithType: LinkStruct<T1, T2>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2).ToArray
- uid: Towel.DataStructures.LinkStruct`2.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Types
  commentId: M:Towel.DataStructures.LinkStruct`2.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Types()
  nameWithType: LinkStruct<T1, T2>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2).Types()
- uid: Towel.DataStructures.LinkStruct`2.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-2.html#Towel_DataStructures_LinkStruct_2_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`2.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2).Types
  nameWithType: LinkStruct<T1, T2>.Types
  nameWithType.vb: LinkStruct(Of T1, T2).Types
- uid: Towel.DataStructures.LinkStruct`3
  name: LinkStruct<T1, T2, T3>
  href: api/Towel.DataStructures.LinkStruct-3.html
  commentId: T:Towel.DataStructures.LinkStruct`3
  name.vb: LinkStruct(Of T1, T2, T3)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)
  nameWithType: LinkStruct<T1, T2, T3>
  nameWithType.vb: LinkStruct(Of T1, T2, T3)
- uid: Towel.DataStructures.LinkStruct`3.#ctor(`0,`1,`2)
  name: LinkStruct(T1, T2, T3)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__ctor__0__1__2_
  commentId: M:Towel.DataStructures.LinkStruct`3.#ctor(`0,`1,`2)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.LinkStruct(T1, T2, T3)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).LinkStruct(T1, T2, T3)
  nameWithType: LinkStruct<T1, T2, T3>.LinkStruct(T1, T2, T3)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).LinkStruct(T1, T2, T3)
- uid: Towel.DataStructures.LinkStruct`3.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).LinkStruct
  nameWithType: LinkStruct<T1, T2, T3>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2, T3).LinkStruct
- uid: Towel.DataStructures.LinkStruct`3._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__1
  commentId: P:Towel.DataStructures.LinkStruct`3._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._1
  nameWithType: LinkStruct<T1, T2, T3>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._1
- uid: Towel.DataStructures.LinkStruct`3._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`3._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._1
  nameWithType: LinkStruct<T1, T2, T3>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._1
- uid: Towel.DataStructures.LinkStruct`3._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__2
  commentId: P:Towel.DataStructures.LinkStruct`3._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._2
  nameWithType: LinkStruct<T1, T2, T3>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._2
- uid: Towel.DataStructures.LinkStruct`3._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`3._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._2
  nameWithType: LinkStruct<T1, T2, T3>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._2
- uid: Towel.DataStructures.LinkStruct`3._3
  name: _3
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__3
  commentId: P:Towel.DataStructures.LinkStruct`3._3
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._3
  nameWithType: LinkStruct<T1, T2, T3>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._3
- uid: Towel.DataStructures.LinkStruct`3._3*
  name: _3
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3__3_
  commentId: Overload:Towel.DataStructures.LinkStruct`3._3
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3)._3
  nameWithType: LinkStruct<T1, T2, T3>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3)._3
- uid: Towel.DataStructures.LinkStruct`3.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Clone
  commentId: M:Towel.DataStructures.LinkStruct`3.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Clone()
  nameWithType: LinkStruct<T1, T2, T3>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Clone()
- uid: Towel.DataStructures.LinkStruct`3.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Clone
  nameWithType: LinkStruct<T1, T2, T3>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Clone
- uid: Towel.DataStructures.LinkStruct`3.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`3.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2, T3>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`3.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Contains
  nameWithType: LinkStruct<T1, T2, T3>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Contains
- uid: Towel.DataStructures.LinkStruct`3.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`3.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2, T3>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`3.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Equals
  nameWithType: LinkStruct<T1, T2, T3>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Equals
- uid: Towel.DataStructures.LinkStruct`3.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`3.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).GetHashCode()
  nameWithType: LinkStruct<T1, T2, T3>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2, T3).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`3.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).GetHashCode
  nameWithType: LinkStruct<T1, T2, T3>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2, T3).GetHashCode
- uid: Towel.DataStructures.LinkStruct`3.op_Explicit(System.Tuple{`0,`1,`2})~Towel.DataStructures.LinkStruct{`0,`1,`2}
  name: Explicit(System.Tuple<T1, T2, T3> to LinkStruct<T1, T2, T3>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_op_Explicit_System_Tuple__0__1__2___Towel_DataStructures_LinkStruct__0__1__2_
  commentId: M:Towel.DataStructures.LinkStruct`3.op_Explicit(System.Tuple{`0,`1,`2})~Towel.DataStructures.LinkStruct{`0,`1,`2}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3) to LinkStruct(Of T1, T2, T3))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Explicit(System.Tuple<T1, T2, T3> to Towel.DataStructures.LinkStruct<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Narrowing(System.Tuple(Of T1, T2, T3) to Towel.DataStructures.LinkStruct(Of T1, T2, T3))
  nameWithType: LinkStruct<T1, T2, T3>.Explicit(System.Tuple<T1, T2, T3> to LinkStruct<T1, T2, T3>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Narrowing(System.Tuple(Of T1, T2, T3) to LinkStruct(Of T1, T2, T3))
- uid: Towel.DataStructures.LinkStruct`3.op_Explicit(System.ValueTuple{`0,`1,`2})~Towel.DataStructures.LinkStruct{`0,`1,`2}
  name: Explicit(System.ValueTuple<T1, T2, T3> to LinkStruct<T1, T2, T3>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_op_Explicit_System_ValueTuple__0__1__2___Towel_DataStructures_LinkStruct__0__1__2_
  commentId: M:Towel.DataStructures.LinkStruct`3.op_Explicit(System.ValueTuple{`0,`1,`2})~Towel.DataStructures.LinkStruct{`0,`1,`2}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3) to LinkStruct(Of T1, T2, T3))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Explicit(System.ValueTuple<T1, T2, T3> to Towel.DataStructures.LinkStruct<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Narrowing(System.ValueTuple(Of T1, T2, T3) to Towel.DataStructures.LinkStruct(Of T1, T2, T3))
  nameWithType: LinkStruct<T1, T2, T3>.Explicit(System.ValueTuple<T1, T2, T3> to LinkStruct<T1, T2, T3>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Narrowing(System.ValueTuple(Of T1, T2, T3) to LinkStruct(Of T1, T2, T3))
- uid: Towel.DataStructures.LinkStruct`3.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2})~System.Tuple{`0,`1,`2}
  name: Explicit(LinkStruct<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2___System_Tuple__0__1__2_
  commentId: M:Towel.DataStructures.LinkStruct`3.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2})~System.Tuple{`0,`1,`2}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
  nameWithType: LinkStruct<T1, T2, T3>.Explicit(LinkStruct<T1, T2, T3> to System.Tuple<T1, T2, T3>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Narrowing(LinkStruct(Of T1, T2, T3) to System.Tuple(Of T1, T2, T3))
- uid: Towel.DataStructures.LinkStruct`3.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2})~System.ValueTuple{`0,`1,`2}
  name: Explicit(LinkStruct<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2___System_ValueTuple__0__1__2_
  commentId: M:Towel.DataStructures.LinkStruct`3.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2})~System.ValueTuple{`0,`1,`2}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
  nameWithType: LinkStruct<T1, T2, T3>.Explicit(LinkStruct<T1, T2, T3> to System.ValueTuple<T1, T2, T3>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Narrowing(LinkStruct(Of T1, T2, T3) to System.ValueTuple(Of T1, T2, T3))
- uid: Towel.DataStructures.LinkStruct`3.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Narrowing
  nameWithType: LinkStruct<T1, T2, T3>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Narrowing
- uid: Towel.DataStructures.LinkStruct`3.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Size
  commentId: P:Towel.DataStructures.LinkStruct`3.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Size
  nameWithType: LinkStruct<T1, T2, T3>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Size
- uid: Towel.DataStructures.LinkStruct`3.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Size
  nameWithType: LinkStruct<T1, T2, T3>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Size
- uid: Towel.DataStructures.LinkStruct`3.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`3.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2, T3>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`3.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`3.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2, T3>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`3.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Stepper
  nameWithType: LinkStruct<T1, T2, T3>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Stepper
- uid: Towel.DataStructures.LinkStruct`3.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`3.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).ToArray()
  nameWithType: LinkStruct<T1, T2, T3>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2, T3).ToArray()
- uid: Towel.DataStructures.LinkStruct`3.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).ToArray
  nameWithType: LinkStruct<T1, T2, T3>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2, T3).ToArray
- uid: Towel.DataStructures.LinkStruct`3.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Types
  commentId: M:Towel.DataStructures.LinkStruct`3.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Types()
  nameWithType: LinkStruct<T1, T2, T3>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Types()
- uid: Towel.DataStructures.LinkStruct`3.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-3.html#Towel_DataStructures_LinkStruct_3_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`3.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3).Types
  nameWithType: LinkStruct<T1, T2, T3>.Types
  nameWithType.vb: LinkStruct(Of T1, T2, T3).Types
- uid: Towel.DataStructures.LinkStruct`4
  name: LinkStruct<T1, T2, T3, T4>
  href: api/Towel.DataStructures.LinkStruct-4.html
  commentId: T:Towel.DataStructures.LinkStruct`4
  name.vb: LinkStruct(Of T1, T2, T3, T4)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)
  nameWithType: LinkStruct<T1, T2, T3, T4>
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)
- uid: Towel.DataStructures.LinkStruct`4.#ctor(`0,`1,`2,`3)
  name: LinkStruct(T1, T2, T3, T4)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__ctor__0__1__2__3_
  commentId: M:Towel.DataStructures.LinkStruct`4.#ctor(`0,`1,`2,`3)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.LinkStruct(T1, T2, T3, T4)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).LinkStruct(T1, T2, T3, T4)
  nameWithType: LinkStruct<T1, T2, T3, T4>.LinkStruct(T1, T2, T3, T4)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).LinkStruct(T1, T2, T3, T4)
- uid: Towel.DataStructures.LinkStruct`4.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).LinkStruct
  nameWithType: LinkStruct<T1, T2, T3, T4>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).LinkStruct
- uid: Towel.DataStructures.LinkStruct`4._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__1
  commentId: P:Towel.DataStructures.LinkStruct`4._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._1
  nameWithType: LinkStruct<T1, T2, T3, T4>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._1
- uid: Towel.DataStructures.LinkStruct`4._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`4._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._1
  nameWithType: LinkStruct<T1, T2, T3, T4>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._1
- uid: Towel.DataStructures.LinkStruct`4._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__2
  commentId: P:Towel.DataStructures.LinkStruct`4._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._2
  nameWithType: LinkStruct<T1, T2, T3, T4>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._2
- uid: Towel.DataStructures.LinkStruct`4._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`4._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._2
  nameWithType: LinkStruct<T1, T2, T3, T4>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._2
- uid: Towel.DataStructures.LinkStruct`4._3
  name: _3
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__3
  commentId: P:Towel.DataStructures.LinkStruct`4._3
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._3
  nameWithType: LinkStruct<T1, T2, T3, T4>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._3
- uid: Towel.DataStructures.LinkStruct`4._3*
  name: _3
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__3_
  commentId: Overload:Towel.DataStructures.LinkStruct`4._3
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._3
  nameWithType: LinkStruct<T1, T2, T3, T4>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._3
- uid: Towel.DataStructures.LinkStruct`4._4
  name: _4
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__4
  commentId: P:Towel.DataStructures.LinkStruct`4._4
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._4
  nameWithType: LinkStruct<T1, T2, T3, T4>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._4
- uid: Towel.DataStructures.LinkStruct`4._4*
  name: _4
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4__4_
  commentId: Overload:Towel.DataStructures.LinkStruct`4._4
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4)._4
  nameWithType: LinkStruct<T1, T2, T3, T4>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4)._4
- uid: Towel.DataStructures.LinkStruct`4.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Clone
  commentId: M:Towel.DataStructures.LinkStruct`4.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Clone()
  nameWithType: LinkStruct<T1, T2, T3, T4>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Clone()
- uid: Towel.DataStructures.LinkStruct`4.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Clone
  nameWithType: LinkStruct<T1, T2, T3, T4>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Clone
- uid: Towel.DataStructures.LinkStruct`4.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`4.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`4.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Contains
  nameWithType: LinkStruct<T1, T2, T3, T4>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Contains
- uid: Towel.DataStructures.LinkStruct`4.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`4.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2, T3, T4>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`4.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Equals
  nameWithType: LinkStruct<T1, T2, T3, T4>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Equals
- uid: Towel.DataStructures.LinkStruct`4.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`4.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).GetHashCode()
  nameWithType: LinkStruct<T1, T2, T3, T4>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`4.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).GetHashCode
  nameWithType: LinkStruct<T1, T2, T3, T4>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).GetHashCode
- uid: Towel.DataStructures.LinkStruct`4.op_Explicit(System.Tuple{`0,`1,`2,`3})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3}
  name: Explicit(System.Tuple<T1, T2, T3, T4> to LinkStruct<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_op_Explicit_System_Tuple__0__1__2__3___Towel_DataStructures_LinkStruct__0__1__2__3_
  commentId: M:Towel.DataStructures.LinkStruct`4.op_Explicit(System.Tuple{`0,`1,`2,`3})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4) to LinkStruct(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Explicit(System.Tuple<T1, T2, T3, T4> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Narrowing(System.Tuple(Of T1, T2, T3, T4) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Explicit(System.Tuple<T1, T2, T3, T4> to LinkStruct<T1, T2, T3, T4>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Narrowing(System.Tuple(Of T1, T2, T3, T4) to LinkStruct(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.LinkStruct`4.op_Explicit(System.ValueTuple{`0,`1,`2,`3})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4> to LinkStruct<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_op_Explicit_System_ValueTuple__0__1__2__3___Towel_DataStructures_LinkStruct__0__1__2__3_
  commentId: M:Towel.DataStructures.LinkStruct`4.op_Explicit(System.ValueTuple{`0,`1,`2,`3})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to LinkStruct(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Explicit(System.ValueTuple<T1, T2, T3, T4> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Explicit(System.ValueTuple<T1, T2, T3, T4> to LinkStruct<T1, T2, T3, T4>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Narrowing(System.ValueTuple(Of T1, T2, T3, T4) to LinkStruct(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.LinkStruct`4.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3})~System.Tuple{`0,`1,`2,`3}
  name: Explicit(LinkStruct<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3___System_Tuple__0__1__2__3_
  commentId: M:Towel.DataStructures.LinkStruct`4.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3})~System.Tuple{`0,`1,`2,`3}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Explicit(LinkStruct<T1, T2, T3, T4> to System.Tuple<T1, T2, T3, T4>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Narrowing(LinkStruct(Of T1, T2, T3, T4) to System.Tuple(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.LinkStruct`4.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3})~System.ValueTuple{`0,`1,`2,`3}
  name: Explicit(LinkStruct<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3___System_ValueTuple__0__1__2__3_
  commentId: M:Towel.DataStructures.LinkStruct`4.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3})~System.ValueTuple{`0,`1,`2,`3}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Explicit(LinkStruct<T1, T2, T3, T4> to System.ValueTuple<T1, T2, T3, T4>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Narrowing(LinkStruct(Of T1, T2, T3, T4) to System.ValueTuple(Of T1, T2, T3, T4))
- uid: Towel.DataStructures.LinkStruct`4.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Narrowing
  nameWithType: LinkStruct<T1, T2, T3, T4>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Narrowing
- uid: Towel.DataStructures.LinkStruct`4.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Size
  commentId: P:Towel.DataStructures.LinkStruct`4.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Size
  nameWithType: LinkStruct<T1, T2, T3, T4>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Size
- uid: Towel.DataStructures.LinkStruct`4.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Size
  nameWithType: LinkStruct<T1, T2, T3, T4>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Size
- uid: Towel.DataStructures.LinkStruct`4.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`4.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`4.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`4.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2, T3, T4>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`4.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Stepper
  nameWithType: LinkStruct<T1, T2, T3, T4>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Stepper
- uid: Towel.DataStructures.LinkStruct`4.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`4.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).ToArray()
  nameWithType: LinkStruct<T1, T2, T3, T4>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).ToArray()
- uid: Towel.DataStructures.LinkStruct`4.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).ToArray
  nameWithType: LinkStruct<T1, T2, T3, T4>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).ToArray
- uid: Towel.DataStructures.LinkStruct`4.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Types
  commentId: M:Towel.DataStructures.LinkStruct`4.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Types()
  nameWithType: LinkStruct<T1, T2, T3, T4>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Types()
- uid: Towel.DataStructures.LinkStruct`4.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-4.html#Towel_DataStructures_LinkStruct_4_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`4.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4).Types
  nameWithType: LinkStruct<T1, T2, T3, T4>.Types
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4).Types
- uid: Towel.DataStructures.LinkStruct`5
  name: LinkStruct<T1, T2, T3, T4, T5>
  href: api/Towel.DataStructures.LinkStruct-5.html
  commentId: T:Towel.DataStructures.LinkStruct`5
  name.vb: LinkStruct(Of T1, T2, T3, T4, T5)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)
- uid: Towel.DataStructures.LinkStruct`5.#ctor(`0,`1,`2,`3,`4)
  name: LinkStruct(T1, T2, T3, T4, T5)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__ctor__0__1__2__3__4_
  commentId: M:Towel.DataStructures.LinkStruct`5.#ctor(`0,`1,`2,`3,`4)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.LinkStruct(T1, T2, T3, T4, T5)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).LinkStruct(T1, T2, T3, T4, T5)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.LinkStruct(T1, T2, T3, T4, T5)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).LinkStruct(T1, T2, T3, T4, T5)
- uid: Towel.DataStructures.LinkStruct`5.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).LinkStruct
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).LinkStruct
- uid: Towel.DataStructures.LinkStruct`5._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__1
  commentId: P:Towel.DataStructures.LinkStruct`5._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._1
- uid: Towel.DataStructures.LinkStruct`5._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`5._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._1
- uid: Towel.DataStructures.LinkStruct`5._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__2
  commentId: P:Towel.DataStructures.LinkStruct`5._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._2
- uid: Towel.DataStructures.LinkStruct`5._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`5._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._2
- uid: Towel.DataStructures.LinkStruct`5._3
  name: _3
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__3
  commentId: P:Towel.DataStructures.LinkStruct`5._3
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._3
- uid: Towel.DataStructures.LinkStruct`5._3*
  name: _3
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__3_
  commentId: Overload:Towel.DataStructures.LinkStruct`5._3
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._3
- uid: Towel.DataStructures.LinkStruct`5._4
  name: _4
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__4
  commentId: P:Towel.DataStructures.LinkStruct`5._4
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._4
- uid: Towel.DataStructures.LinkStruct`5._4*
  name: _4
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__4_
  commentId: Overload:Towel.DataStructures.LinkStruct`5._4
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._4
- uid: Towel.DataStructures.LinkStruct`5._5
  name: _5
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__5
  commentId: P:Towel.DataStructures.LinkStruct`5._5
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._5
- uid: Towel.DataStructures.LinkStruct`5._5*
  name: _5
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5__5_
  commentId: Overload:Towel.DataStructures.LinkStruct`5._5
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5)._5
- uid: Towel.DataStructures.LinkStruct`5.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Clone
  commentId: M:Towel.DataStructures.LinkStruct`5.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Clone()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Clone()
- uid: Towel.DataStructures.LinkStruct`5.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Clone
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Clone
- uid: Towel.DataStructures.LinkStruct`5.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`5.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`5.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Contains
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Contains
- uid: Towel.DataStructures.LinkStruct`5.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`5.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`5.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Equals
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Equals
- uid: Towel.DataStructures.LinkStruct`5.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`5.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).GetHashCode()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`5.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).GetHashCode
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).GetHashCode
- uid: Towel.DataStructures.LinkStruct`5.op_Explicit(System.Tuple{`0,`1,`2,`3,`4})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5> to LinkStruct<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_op_Explicit_System_Tuple__0__1__2__3__4___Towel_DataStructures_LinkStruct__0__1__2__3__4_
  commentId: M:Towel.DataStructures.LinkStruct`5.op_Explicit(System.Tuple{`0,`1,`2,`3,`4})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to LinkStruct(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Explicit(System.Tuple<T1, T2, T3, T4, T5> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Explicit(System.Tuple<T1, T2, T3, T4, T5> to LinkStruct<T1, T2, T3, T4, T5>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5) to LinkStruct(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.LinkStruct`5.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to LinkStruct<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_op_Explicit_System_ValueTuple__0__1__2__3__4___Towel_DataStructures_LinkStruct__0__1__2__3__4_
  commentId: M:Towel.DataStructures.LinkStruct`5.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to LinkStruct(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5> to LinkStruct<T1, T2, T3, T4, T5>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5) to LinkStruct(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.LinkStruct`5.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4})~System.Tuple{`0,`1,`2,`3,`4}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4___System_Tuple__0__1__2__3__4_
  commentId: M:Towel.DataStructures.LinkStruct`5.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4})~System.Tuple{`0,`1,`2,`3,`4}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Explicit(LinkStruct<T1, T2, T3, T4, T5> to System.Tuple<T1, T2, T3, T4, T5>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5) to System.Tuple(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.LinkStruct`5.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4})~System.ValueTuple{`0,`1,`2,`3,`4}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4___System_ValueTuple__0__1__2__3__4_
  commentId: M:Towel.DataStructures.LinkStruct`5.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4})~System.ValueTuple{`0,`1,`2,`3,`4}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Explicit(LinkStruct<T1, T2, T3, T4, T5> to System.ValueTuple<T1, T2, T3, T4, T5>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5) to System.ValueTuple(Of T1, T2, T3, T4, T5))
- uid: Towel.DataStructures.LinkStruct`5.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Narrowing
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Narrowing
- uid: Towel.DataStructures.LinkStruct`5.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Size
  commentId: P:Towel.DataStructures.LinkStruct`5.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Size
- uid: Towel.DataStructures.LinkStruct`5.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Size
- uid: Towel.DataStructures.LinkStruct`5.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`5.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`5.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`5.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`5.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Stepper
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Stepper
- uid: Towel.DataStructures.LinkStruct`5.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`5.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).ToArray()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).ToArray()
- uid: Towel.DataStructures.LinkStruct`5.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).ToArray
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).ToArray
- uid: Towel.DataStructures.LinkStruct`5.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Types
  commentId: M:Towel.DataStructures.LinkStruct`5.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Types()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Types()
- uid: Towel.DataStructures.LinkStruct`5.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-5.html#Towel_DataStructures_LinkStruct_5_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`5.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5).Types
  nameWithType: LinkStruct<T1, T2, T3, T4, T5>.Types
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5).Types
- uid: Towel.DataStructures.LinkStruct`6
  name: LinkStruct<T1, T2, T3, T4, T5, T6>
  href: api/Towel.DataStructures.LinkStruct-6.html
  commentId: T:Towel.DataStructures.LinkStruct`6
  name.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)
- uid: Towel.DataStructures.LinkStruct`6.#ctor(`0,`1,`2,`3,`4,`5)
  name: LinkStruct(T1, T2, T3, T4, T5, T6)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__ctor__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.LinkStruct`6.#ctor(`0,`1,`2,`3,`4,`5)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.LinkStruct(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).LinkStruct(T1, T2, T3, T4, T5, T6)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.LinkStruct(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).LinkStruct(T1, T2, T3, T4, T5, T6)
- uid: Towel.DataStructures.LinkStruct`6.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).LinkStruct
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).LinkStruct
- uid: Towel.DataStructures.LinkStruct`6._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__1
  commentId: P:Towel.DataStructures.LinkStruct`6._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._1
- uid: Towel.DataStructures.LinkStruct`6._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._1
- uid: Towel.DataStructures.LinkStruct`6._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__2
  commentId: P:Towel.DataStructures.LinkStruct`6._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._2
- uid: Towel.DataStructures.LinkStruct`6._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._2
- uid: Towel.DataStructures.LinkStruct`6._3
  name: _3
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__3
  commentId: P:Towel.DataStructures.LinkStruct`6._3
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._3
- uid: Towel.DataStructures.LinkStruct`6._3*
  name: _3
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__3_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._3
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._3
- uid: Towel.DataStructures.LinkStruct`6._4
  name: _4
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__4
  commentId: P:Towel.DataStructures.LinkStruct`6._4
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._4
- uid: Towel.DataStructures.LinkStruct`6._4*
  name: _4
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__4_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._4
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._4
- uid: Towel.DataStructures.LinkStruct`6._5
  name: _5
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__5
  commentId: P:Towel.DataStructures.LinkStruct`6._5
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._5
- uid: Towel.DataStructures.LinkStruct`6._5*
  name: _5
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__5_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._5
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._5
- uid: Towel.DataStructures.LinkStruct`6._6
  name: _6
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__6
  commentId: P:Towel.DataStructures.LinkStruct`6._6
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._6
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._6
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._6
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._6
- uid: Towel.DataStructures.LinkStruct`6._6*
  name: _6
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6__6_
  commentId: Overload:Towel.DataStructures.LinkStruct`6._6
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>._6
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6)._6
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>._6
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6)._6
- uid: Towel.DataStructures.LinkStruct`6.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Clone
  commentId: M:Towel.DataStructures.LinkStruct`6.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Clone()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Clone()
- uid: Towel.DataStructures.LinkStruct`6.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Clone
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Clone
- uid: Towel.DataStructures.LinkStruct`6.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`6.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`6.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Contains
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Contains
- uid: Towel.DataStructures.LinkStruct`6.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`6.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`6.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Equals
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Equals
- uid: Towel.DataStructures.LinkStruct`6.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`6.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).GetHashCode()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`6.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).GetHashCode
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).GetHashCode
- uid: Towel.DataStructures.LinkStruct`6.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to LinkStruct<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_op_Explicit_System_Tuple__0__1__2__3__4__5___Towel_DataStructures_LinkStruct__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.LinkStruct`6.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to LinkStruct(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6> to LinkStruct<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6) to LinkStruct(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.LinkStruct`6.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to LinkStruct<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_op_Explicit_System_ValueTuple__0__1__2__3__4__5___Towel_DataStructures_LinkStruct__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.LinkStruct`6.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to LinkStruct(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6> to LinkStruct<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6) to LinkStruct(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.LinkStruct`6.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5})~System.Tuple{`0,`1,`2,`3,`4,`5}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4__5___System_Tuple__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.LinkStruct`6.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5})~System.Tuple{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(LinkStruct<T1, T2, T3, T4, T5, T6> to System.Tuple<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.Tuple(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.LinkStruct`6.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5})~System.ValueTuple{`0,`1,`2,`3,`4,`5}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4__5___System_ValueTuple__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.LinkStruct`6.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5})~System.ValueTuple{`0,`1,`2,`3,`4,`5}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit(LinkStruct<T1, T2, T3, T4, T5, T6> to System.ValueTuple<T1, T2, T3, T4, T5, T6>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6))
- uid: Towel.DataStructures.LinkStruct`6.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Narrowing
- uid: Towel.DataStructures.LinkStruct`6.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Size
  commentId: P:Towel.DataStructures.LinkStruct`6.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Size
- uid: Towel.DataStructures.LinkStruct`6.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Size
- uid: Towel.DataStructures.LinkStruct`6.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`6.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`6.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`6.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`6.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Stepper
- uid: Towel.DataStructures.LinkStruct`6.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`6.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).ToArray()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).ToArray()
- uid: Towel.DataStructures.LinkStruct`6.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).ToArray
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).ToArray
- uid: Towel.DataStructures.LinkStruct`6.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Types
  commentId: M:Towel.DataStructures.LinkStruct`6.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Types()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Types()
- uid: Towel.DataStructures.LinkStruct`6.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-6.html#Towel_DataStructures_LinkStruct_6_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`6.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6).Types
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6>.Types
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6).Types
- uid: Towel.DataStructures.LinkStruct`7
  name: LinkStruct<T1, T2, T3, T4, T5, T6, T7>
  href: api/Towel.DataStructures.LinkStruct-7.html
  commentId: T:Towel.DataStructures.LinkStruct`7
  name.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.DataStructures.LinkStruct`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  name: LinkStruct(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__ctor__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.LinkStruct`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.LinkStruct(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).LinkStruct(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.LinkStruct(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).LinkStruct(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.DataStructures.LinkStruct`7.#ctor*
  name: LinkStruct
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__ctor_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.LinkStruct
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).LinkStruct
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.LinkStruct
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).LinkStruct
- uid: Towel.DataStructures.LinkStruct`7._1
  name: _1
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__1
  commentId: P:Towel.DataStructures.LinkStruct`7._1
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._1
- uid: Towel.DataStructures.LinkStruct`7._1*
  name: _1
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__1_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._1
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._1
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._1
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._1
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._1
- uid: Towel.DataStructures.LinkStruct`7._2
  name: _2
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__2
  commentId: P:Towel.DataStructures.LinkStruct`7._2
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._2
- uid: Towel.DataStructures.LinkStruct`7._2*
  name: _2
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__2_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._2
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._2
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._2
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._2
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._2
- uid: Towel.DataStructures.LinkStruct`7._3
  name: _3
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__3
  commentId: P:Towel.DataStructures.LinkStruct`7._3
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._3
- uid: Towel.DataStructures.LinkStruct`7._3*
  name: _3
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__3_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._3
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._3
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._3
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._3
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._3
- uid: Towel.DataStructures.LinkStruct`7._4
  name: _4
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__4
  commentId: P:Towel.DataStructures.LinkStruct`7._4
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._4
- uid: Towel.DataStructures.LinkStruct`7._4*
  name: _4
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__4_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._4
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._4
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._4
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._4
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._4
- uid: Towel.DataStructures.LinkStruct`7._5
  name: _5
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__5
  commentId: P:Towel.DataStructures.LinkStruct`7._5
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._5
- uid: Towel.DataStructures.LinkStruct`7._5*
  name: _5
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__5_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._5
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._5
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._5
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._5
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._5
- uid: Towel.DataStructures.LinkStruct`7._6
  name: _6
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__6
  commentId: P:Towel.DataStructures.LinkStruct`7._6
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._6
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._6
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._6
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._6
- uid: Towel.DataStructures.LinkStruct`7._6*
  name: _6
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__6_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._6
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._6
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._6
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._6
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._6
- uid: Towel.DataStructures.LinkStruct`7._7
  name: _7
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__7
  commentId: P:Towel.DataStructures.LinkStruct`7._7
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._7
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._7
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._7
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._7
- uid: Towel.DataStructures.LinkStruct`7._7*
  name: _7
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7__7_
  commentId: Overload:Towel.DataStructures.LinkStruct`7._7
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>._7
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._7
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>._7
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7)._7
- uid: Towel.DataStructures.LinkStruct`7.Clone
  name: Clone()
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Clone
  commentId: M:Towel.DataStructures.LinkStruct`7.Clone
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Clone()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Clone()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Clone()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Clone()
- uid: Towel.DataStructures.LinkStruct`7.Clone*
  name: Clone
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Clone_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Clone
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Clone
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Clone
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Clone
- uid: Towel.DataStructures.LinkStruct`7.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name: Contains(Object, Func<Object, Object, CompareResult>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Contains_System_Object_Func_System_Object_System_Object_Towel_CompareResult__
  commentId: M:Towel.DataStructures.LinkStruct`7.Contains(System.Object,Func{System.Object,System.Object,Towel.CompareResult})
  name.vb: Contains(Object, Func(Of Object, Object, CompareResult))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Contains(System.Object, Func<System.Object, System.Object, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Contains(System.Object, Func(Of System.Object, System.Object, Towel.CompareResult))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Contains(Object, Func<Object, Object, CompareResult>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Contains(Object, Func(Of Object, Object, CompareResult))
- uid: Towel.DataStructures.LinkStruct`7.Contains*
  name: Contains
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Contains_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Contains
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Contains
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Contains
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Contains
- uid: Towel.DataStructures.LinkStruct`7.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Equals_System_Object_
  commentId: M:Towel.DataStructures.LinkStruct`7.Equals(System.Object)
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Equals(System.Object)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Equals(System.Object)
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Equals(Object)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Equals(Object)
- uid: Towel.DataStructures.LinkStruct`7.Equals*
  name: Equals
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Equals_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Equals
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Equals
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Equals
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Equals
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Equals
- uid: Towel.DataStructures.LinkStruct`7.GetHashCode
  name: GetHashCode()
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_GetHashCode
  commentId: M:Towel.DataStructures.LinkStruct`7.GetHashCode
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.GetHashCode()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.GetHashCode()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode()
- uid: Towel.DataStructures.LinkStruct`7.GetHashCode*
  name: GetHashCode
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_GetHashCode_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.GetHashCode
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.GetHashCode
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.GetHashCode
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).GetHashCode
- uid: Towel.DataStructures.LinkStruct`7.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_op_Explicit_System_Tuple__0__1__2__3__4__5__6___Towel_DataStructures_LinkStruct__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.LinkStruct`7.op_Explicit(System.Tuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.Tuple<T1, T2, T3, T4, T5, T6, T7> to LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.Tuple(Of T1, T2, T3, T4, T5, T6, T7) to LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.LinkStruct`7.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_op_Explicit_System_ValueTuple__0__1__2__3__4__5__6___Towel_DataStructures_LinkStruct__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.LinkStruct`7.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})~Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(System.ValueTuple<T1, T2, T3, T4, T5, T6, T7> to LinkStruct<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7) to LinkStruct(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.LinkStruct`7.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6})~System.Tuple{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4__5__6___System_Tuple__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.LinkStruct`7.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6})~System.Tuple{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.Tuple<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.Tuple(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.LinkStruct`7.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6})~System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}
  name: Explicit(LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_op_Explicit_Towel_DataStructures_LinkStruct__0__1__2__3__4__5__6___System_ValueTuple__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.LinkStruct`7.op_Explicit(Towel.DataStructures.LinkStruct{`0,`1,`2,`3,`4,`5,`6})~System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit(LinkStruct<T1, T2, T3, T4, T5, T6, T7> to System.ValueTuple<T1, T2, T3, T4, T5, T6, T7>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing(LinkStruct(Of T1, T2, T3, T4, T5, T6, T7) to System.ValueTuple(Of T1, T2, T3, T4, T5, T6, T7))
- uid: Towel.DataStructures.LinkStruct`7.op_Explicit*
  name: Explicit
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_op_Explicit_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Explicit
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Narrowing
- uid: Towel.DataStructures.LinkStruct`7.Size
  name: Size
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Size
  commentId: P:Towel.DataStructures.LinkStruct`7.Size
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Size
- uid: Towel.DataStructures.LinkStruct`7.Size*
  name: Size
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Size_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Size
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Size
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Size
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Size
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Size
- uid: Towel.DataStructures.LinkStruct`7.Stepper(Action{System.Object})
  name: Stepper(Action<Object>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Stepper_Action_System_Object__
  commentId: M:Towel.DataStructures.LinkStruct`7.Stepper(Action{System.Object})
  name.vb: Stepper(Action(Of Object))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper(Action<System.Object>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Action(Of System.Object))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper(Action<Object>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Action(Of Object))
- uid: Towel.DataStructures.LinkStruct`7.Stepper(Func{System.Object,Towel.StepStatus})
  name: Stepper(Func<Object, StepStatus>)
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Stepper_Func_System_Object_Towel_StepStatus__
  commentId: M:Towel.DataStructures.LinkStruct`7.Stepper(Func{System.Object,Towel.StepStatus})
  name.vb: Stepper(Func(Of Object, StepStatus))
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper(Func<System.Object, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Func(Of System.Object, Towel.StepStatus))
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper(Func<Object, StepStatus>)
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper(Func(Of Object, StepStatus))
- uid: Towel.DataStructures.LinkStruct`7.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Stepper_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Stepper
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Stepper
- uid: Towel.DataStructures.LinkStruct`7.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_ToArray
  commentId: M:Towel.DataStructures.LinkStruct`7.ToArray
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.ToArray()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).ToArray()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.ToArray()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).ToArray()
- uid: Towel.DataStructures.LinkStruct`7.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_ToArray_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.ToArray
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).ToArray
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.ToArray
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).ToArray
- uid: Towel.DataStructures.LinkStruct`7.Types
  name: Types()
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Types
  commentId: M:Towel.DataStructures.LinkStruct`7.Types
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Types()
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Types()
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Types()
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Types()
- uid: Towel.DataStructures.LinkStruct`7.Types*
  name: Types
  href: api/Towel.DataStructures.LinkStruct-7.html#Towel_DataStructures_LinkStruct_7_Types_
  commentId: Overload:Towel.DataStructures.LinkStruct`7.Types
  isSpec: "True"
  fullName: Towel.DataStructures.LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Types
  fullName.vb: Towel.DataStructures.LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Types
  nameWithType: LinkStruct<T1, T2, T3, T4, T5, T6, T7>.Types
  nameWithType.vb: LinkStruct(Of T1, T2, T3, T4, T5, T6, T7).Types
- uid: Towel.DataStructures.List
  name: List
  href: api/Towel.DataStructures.List.html
  commentId: T:Towel.DataStructures.List
  fullName: Towel.DataStructures.List
  nameWithType: List
- uid: Towel.DataStructures.List.RemoveAll*
  name: RemoveAll
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveAll_
  commentId: Overload:Towel.DataStructures.List.RemoveAll
  isSpec: "True"
  fullName: Towel.DataStructures.List.RemoveAll
  nameWithType: List.RemoveAll
- uid: Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},``0)
  name: RemoveAll<T>(IList<T>, T)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveAll__1_Towel_DataStructures_IList___0____0_
  commentId: M:Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},``0)
  name.vb: RemoveAll(Of T)(IList(Of T), T)
  fullName: Towel.DataStructures.List.RemoveAll<T>(Towel.DataStructures.IList<T>, T)
  fullName.vb: Towel.DataStructures.List.RemoveAll(Of T)(Towel.DataStructures.IList(Of T), T)
  nameWithType: List.RemoveAll<T>(IList<T>, T)
  nameWithType.vb: List.RemoveAll(Of T)(IList(Of T), T)
- uid: Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name: RemoveAll<T>(IList<T>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveAll__1_Towel_DataStructures_IList___0____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name.vb: RemoveAll(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.List.RemoveAll<T>(Towel.DataStructures.IList<T>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.RemoveAll(Of T)(Towel.DataStructures.IList(Of T), T, Func(Of T, T, System.Boolean))
  nameWithType: List.RemoveAll<T>(IList<T>, T, Func<T, T, Boolean>)
  nameWithType.vb: List.RemoveAll(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name: RemoveAll<T>(IList<T>, Func<T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveAll__1_Towel_DataStructures_IList___0__Func___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.RemoveAll``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name.vb: RemoveAll(Of T)(IList(Of T), Func(Of T, Boolean))
  fullName: Towel.DataStructures.List.RemoveAll<T>(Towel.DataStructures.IList<T>, Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.RemoveAll(Of T)(Towel.DataStructures.IList(Of T), Func(Of T, System.Boolean))
  nameWithType: List.RemoveAll<T>(IList<T>, Func<T, Boolean>)
  nameWithType.vb: List.RemoveAll(Of T)(IList(Of T), Func(Of T, Boolean))
- uid: Towel.DataStructures.List.RemoveFirst*
  name: RemoveFirst
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveFirst_
  commentId: Overload:Towel.DataStructures.List.RemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.List.RemoveFirst
  nameWithType: List.RemoveFirst
- uid: Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},``0)
  name: RemoveFirst<T>(IList<T>, T)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveFirst__1_Towel_DataStructures_IList___0____0_
  commentId: M:Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},``0)
  name.vb: RemoveFirst(Of T)(IList(Of T), T)
  fullName: Towel.DataStructures.List.RemoveFirst<T>(Towel.DataStructures.IList<T>, T)
  fullName.vb: Towel.DataStructures.List.RemoveFirst(Of T)(Towel.DataStructures.IList(Of T), T)
  nameWithType: List.RemoveFirst<T>(IList<T>, T)
  nameWithType.vb: List.RemoveFirst(Of T)(IList(Of T), T)
- uid: Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name: RemoveFirst<T>(IList<T>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveFirst__1_Towel_DataStructures_IList___0____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name.vb: RemoveFirst(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.List.RemoveFirst<T>(Towel.DataStructures.IList<T>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.RemoveFirst(Of T)(Towel.DataStructures.IList(Of T), T, Func(Of T, T, System.Boolean))
  nameWithType: List.RemoveFirst<T>(IList<T>, T, Func<T, T, Boolean>)
  nameWithType.vb: List.RemoveFirst(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name: RemoveFirst<T>(IList<T>, Func<T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_RemoveFirst__1_Towel_DataStructures_IList___0__Func___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.RemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name.vb: RemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean))
  fullName: Towel.DataStructures.List.RemoveFirst<T>(Towel.DataStructures.IList<T>, Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.RemoveFirst(Of T)(Towel.DataStructures.IList(Of T), Func(Of T, System.Boolean))
  nameWithType: List.RemoveFirst<T>(IList<T>, Func<T, Boolean>)
  nameWithType.vb: List.RemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean))
- uid: Towel.DataStructures.List.TryRemoveFirst*
  name: TryRemoveFirst
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_TryRemoveFirst_
  commentId: Overload:Towel.DataStructures.List.TryRemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.List.TryRemoveFirst
  nameWithType: List.TryRemoveFirst
- uid: Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},``0)
  name: TryRemoveFirst<T>(IList<T>, T)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_TryRemoveFirst__1_Towel_DataStructures_IList___0____0_
  commentId: M:Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},``0)
  name.vb: TryRemoveFirst(Of T)(IList(Of T), T)
  fullName: Towel.DataStructures.List.TryRemoveFirst<T>(Towel.DataStructures.IList<T>, T)
  fullName.vb: Towel.DataStructures.List.TryRemoveFirst(Of T)(Towel.DataStructures.IList(Of T), T)
  nameWithType: List.TryRemoveFirst<T>(IList<T>, T)
  nameWithType.vb: List.TryRemoveFirst(Of T)(IList(Of T), T)
- uid: Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name: TryRemoveFirst<T>(IList<T>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_TryRemoveFirst__1_Towel_DataStructures_IList___0____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},``0,Func{``0,``0,System.Boolean})
  name.vb: TryRemoveFirst(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.List.TryRemoveFirst<T>(Towel.DataStructures.IList<T>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.TryRemoveFirst(Of T)(Towel.DataStructures.IList(Of T), T, Func(Of T, T, System.Boolean))
  nameWithType: List.TryRemoveFirst<T>(IList<T>, T, Func<T, T, Boolean>)
  nameWithType.vb: List.TryRemoveFirst(Of T)(IList(Of T), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name: TryRemoveFirst<T>(IList<T>, Func<T, Boolean>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_TryRemoveFirst__1_Towel_DataStructures_IList___0__Func___0_System_Boolean__
  commentId: M:Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean})
  name.vb: TryRemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean))
  fullName: Towel.DataStructures.List.TryRemoveFirst<T>(Towel.DataStructures.IList<T>, Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.List.TryRemoveFirst(Of T)(Towel.DataStructures.IList(Of T), Func(Of T, System.Boolean))
  nameWithType: List.TryRemoveFirst<T>(IList<T>, Func<T, Boolean>)
  nameWithType.vb: List.TryRemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean))
- uid: Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean},System.Nullable{Exception}@)
  name: TryRemoveFirst<T>(IList<T>, Func<T, Boolean>, out Nullable<Exception>)
  href: api/Towel.DataStructures.List.html#Towel_DataStructures_List_TryRemoveFirst__1_Towel_DataStructures_IList___0__Func___0_System_Boolean__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.List.TryRemoveFirst``1(Towel.DataStructures.IList{``0},Func{``0,System.Boolean},System.Nullable{Exception}@)
  name.vb: TryRemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.List.TryRemoveFirst<T>(Towel.DataStructures.IList<T>, Func<T, System.Boolean>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.List.TryRemoveFirst(Of T)(Towel.DataStructures.IList(Of T), Func(Of T, System.Boolean), ByRef System.Nullable(Of Exception))
  nameWithType: List.TryRemoveFirst<T>(IList<T>, Func<T, Boolean>, out Nullable<Exception>)
  nameWithType.vb: List.TryRemoveFirst(Of T)(IList(Of T), Func(Of T, Boolean), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.ListArray`1
  name: ListArray<T>
  href: api/Towel.DataStructures.ListArray-1.html
  commentId: T:Towel.DataStructures.ListArray`1
  name.vb: ListArray(Of T)
  fullName: Towel.DataStructures.ListArray<T>
  fullName.vb: Towel.DataStructures.ListArray(Of T)
  nameWithType: ListArray<T>
  nameWithType.vb: ListArray(Of T)
- uid: Towel.DataStructures.ListArray`1.#ctor
  name: ListArray()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1__ctor
  commentId: M:Towel.DataStructures.ListArray`1.#ctor
  fullName: Towel.DataStructures.ListArray<T>.ListArray()
  fullName.vb: Towel.DataStructures.ListArray(Of T).ListArray()
  nameWithType: ListArray<T>.ListArray()
  nameWithType.vb: ListArray(Of T).ListArray()
- uid: Towel.DataStructures.ListArray`1.#ctor(System.Int32)
  name: ListArray(Int32)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1__ctor_System_Int32_
  commentId: M:Towel.DataStructures.ListArray`1.#ctor(System.Int32)
  fullName: Towel.DataStructures.ListArray<T>.ListArray(System.Int32)
  fullName.vb: Towel.DataStructures.ListArray(Of T).ListArray(System.Int32)
  nameWithType: ListArray<T>.ListArray(Int32)
  nameWithType.vb: ListArray(Of T).ListArray(Int32)
- uid: Towel.DataStructures.ListArray`1.#ctor*
  name: ListArray
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1__ctor_
  commentId: Overload:Towel.DataStructures.ListArray`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.ListArray
  fullName.vb: Towel.DataStructures.ListArray(Of T).ListArray
  nameWithType: ListArray<T>.ListArray
  nameWithType.vb: ListArray(Of T).ListArray
- uid: Towel.DataStructures.ListArray`1.Add(`0,System.Int32)
  name: Add(T, Int32)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Add__0_System_Int32_
  commentId: M:Towel.DataStructures.ListArray`1.Add(`0,System.Int32)
  fullName: Towel.DataStructures.ListArray<T>.Add(T, System.Int32)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Add(T, System.Int32)
  nameWithType: ListArray<T>.Add(T, Int32)
  nameWithType.vb: ListArray(Of T).Add(T, Int32)
- uid: Towel.DataStructures.ListArray`1.Add*
  name: Add
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Add_
  commentId: Overload:Towel.DataStructures.ListArray`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Add
  fullName.vb: Towel.DataStructures.ListArray(Of T).Add
  nameWithType: ListArray<T>.Add
  nameWithType.vb: ListArray(Of T).Add
- uid: Towel.DataStructures.ListArray`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Clear
  commentId: M:Towel.DataStructures.ListArray`1.Clear
  fullName: Towel.DataStructures.ListArray<T>.Clear()
  fullName.vb: Towel.DataStructures.ListArray(Of T).Clear()
  nameWithType: ListArray<T>.Clear()
  nameWithType.vb: ListArray(Of T).Clear()
- uid: Towel.DataStructures.ListArray`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Clear_
  commentId: Overload:Towel.DataStructures.ListArray`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Clear
  fullName.vb: Towel.DataStructures.ListArray(Of T).Clear
  nameWithType: ListArray<T>.Clear
  nameWithType.vb: ListArray(Of T).Clear
- uid: Towel.DataStructures.ListArray`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Clone
  commentId: M:Towel.DataStructures.ListArray`1.Clone
  fullName: Towel.DataStructures.ListArray<T>.Clone()
  fullName.vb: Towel.DataStructures.ListArray(Of T).Clone()
  nameWithType: ListArray<T>.Clone()
  nameWithType.vb: ListArray(Of T).Clone()
- uid: Towel.DataStructures.ListArray`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Clone_
  commentId: Overload:Towel.DataStructures.ListArray`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Clone
  fullName.vb: Towel.DataStructures.ListArray(Of T).Clone
  nameWithType: ListArray<T>.Clone
  nameWithType.vb: ListArray(Of T).Clone
- uid: Towel.DataStructures.ListArray`1.Count
  name: Count
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Count
  commentId: P:Towel.DataStructures.ListArray`1.Count
  fullName: Towel.DataStructures.ListArray<T>.Count
  fullName.vb: Towel.DataStructures.ListArray(Of T).Count
  nameWithType: ListArray<T>.Count
  nameWithType.vb: ListArray(Of T).Count
- uid: Towel.DataStructures.ListArray`1.Count*
  name: Count
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Count_
  commentId: Overload:Towel.DataStructures.ListArray`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Count
  fullName.vb: Towel.DataStructures.ListArray(Of T).Count
  nameWithType: ListArray<T>.Count
  nameWithType.vb: ListArray(Of T).Count
- uid: Towel.DataStructures.ListArray`1.CurrentCapacity
  name: CurrentCapacity
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_CurrentCapacity
  commentId: P:Towel.DataStructures.ListArray`1.CurrentCapacity
  fullName: Towel.DataStructures.ListArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.ListArray(Of T).CurrentCapacity
  nameWithType: ListArray<T>.CurrentCapacity
  nameWithType.vb: ListArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.ListArray`1.CurrentCapacity*
  name: CurrentCapacity
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_CurrentCapacity_
  commentId: Overload:Towel.DataStructures.ListArray`1.CurrentCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.ListArray(Of T).CurrentCapacity
  nameWithType: ListArray<T>.CurrentCapacity
  nameWithType.vb: ListArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.ListArray`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_GetEnumerator
  commentId: M:Towel.DataStructures.ListArray`1.GetEnumerator
  fullName: Towel.DataStructures.ListArray<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.ListArray(Of T).GetEnumerator()
  nameWithType: ListArray<T>.GetEnumerator()
  nameWithType.vb: ListArray(Of T).GetEnumerator()
- uid: Towel.DataStructures.ListArray`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.ListArray`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.ListArray(Of T).GetEnumerator
  nameWithType: ListArray<T>.GetEnumerator
  nameWithType.vb: ListArray(Of T).GetEnumerator
- uid: Towel.DataStructures.ListArray`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Item_System_Int32_
  commentId: P:Towel.DataStructures.ListArray`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.DataStructures.ListArray<T>.Item[System.Int32]
  fullName.vb: Towel.DataStructures.ListArray(Of T).Item(System.Int32)
  nameWithType: ListArray<T>.Item[Int32]
  nameWithType.vb: ListArray(Of T).Item(Int32)
- uid: Towel.DataStructures.ListArray`1.Item*
  name: Item
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Item_
  commentId: Overload:Towel.DataStructures.ListArray`1.Item
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Item
  fullName.vb: Towel.DataStructures.ListArray(Of T).Item
  nameWithType: ListArray<T>.Item
  nameWithType.vb: ListArray(Of T).Item
- uid: Towel.DataStructures.ListArray`1.Remove(System.Int32)
  name: Remove(Int32)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Remove_System_Int32_
  commentId: M:Towel.DataStructures.ListArray`1.Remove(System.Int32)
  fullName: Towel.DataStructures.ListArray<T>.Remove(System.Int32)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Remove(System.Int32)
  nameWithType: ListArray<T>.Remove(Int32)
  nameWithType.vb: ListArray(Of T).Remove(Int32)
- uid: Towel.DataStructures.ListArray`1.Remove*
  name: Remove
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Remove_
  commentId: Overload:Towel.DataStructures.ListArray`1.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Remove
  fullName.vb: Towel.DataStructures.ListArray(Of T).Remove
  nameWithType: ListArray<T>.Remove
  nameWithType.vb: ListArray(Of T).Remove
- uid: Towel.DataStructures.ListArray`1.RemoveAll*
  name: RemoveAll
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveAll_
  commentId: Overload:Towel.DataStructures.ListArray`1.RemoveAll
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.RemoveAll
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveAll
  nameWithType: ListArray<T>.RemoveAll
  nameWithType.vb: ListArray(Of T).RemoveAll
- uid: Towel.DataStructures.ListArray`1.RemoveAll``1(``0)
  name: RemoveAll<Predicate>(Predicate)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveAll__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.RemoveAll``1(``0)
  name.vb: RemoveAll(Of Predicate)(Predicate)
  fullName: Towel.DataStructures.ListArray<T>.RemoveAll<Predicate>(Predicate)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveAll(Of Predicate)(Predicate)
  nameWithType: ListArray<T>.RemoveAll<Predicate>(Predicate)
  nameWithType.vb: ListArray(Of T).RemoveAll(Of Predicate)(Predicate)
- uid: Towel.DataStructures.ListArray`1.RemoveAllWithoutShrink*
  name: RemoveAllWithoutShrink
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveAllWithoutShrink_
  commentId: Overload:Towel.DataStructures.ListArray`1.RemoveAllWithoutShrink
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.RemoveAllWithoutShrink
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveAllWithoutShrink
  nameWithType: ListArray<T>.RemoveAllWithoutShrink
  nameWithType.vb: ListArray(Of T).RemoveAllWithoutShrink
- uid: Towel.DataStructures.ListArray`1.RemoveAllWithoutShrink``1(``0)
  name: RemoveAllWithoutShrink<Predicate>(Predicate)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveAllWithoutShrink__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.RemoveAllWithoutShrink``1(``0)
  name.vb: RemoveAllWithoutShrink(Of Predicate)(Predicate)
  fullName: Towel.DataStructures.ListArray<T>.RemoveAllWithoutShrink<Predicate>(Predicate)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveAllWithoutShrink(Of Predicate)(Predicate)
  nameWithType: ListArray<T>.RemoveAllWithoutShrink<Predicate>(Predicate)
  nameWithType.vb: ListArray(Of T).RemoveAllWithoutShrink(Of Predicate)(Predicate)
- uid: Towel.DataStructures.ListArray`1.RemoveFirst(Func{`0,System.Boolean})
  name: RemoveFirst(Func<T, Boolean>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveFirst_Func__0_System_Boolean__
  commentId: M:Towel.DataStructures.ListArray`1.RemoveFirst(Func{`0,System.Boolean})
  name.vb: RemoveFirst(Func(Of T, Boolean))
  fullName: Towel.DataStructures.ListArray<T>.RemoveFirst(Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveFirst(Func(Of T, System.Boolean))
  nameWithType: ListArray<T>.RemoveFirst(Func<T, Boolean>)
  nameWithType.vb: ListArray(Of T).RemoveFirst(Func(Of T, Boolean))
- uid: Towel.DataStructures.ListArray`1.RemoveFirst*
  name: RemoveFirst
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveFirst_
  commentId: Overload:Towel.DataStructures.ListArray`1.RemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.RemoveFirst
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveFirst
  nameWithType: ListArray<T>.RemoveFirst
  nameWithType.vb: ListArray(Of T).RemoveFirst
- uid: Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink(`0,System.Nullable{Func{`0,`0,System.Boolean}})
  name: RemoveFirstWithoutShrink(T, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveFirstWithoutShrink__0_System_Nullable_Func__0__0_System_Boolean___
  commentId: M:Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink(`0,System.Nullable{Func{`0,`0,System.Boolean}})
  name.vb: RemoveFirstWithoutShrink(T, Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.DataStructures.ListArray<T>.RemoveFirstWithoutShrink(T, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveFirstWithoutShrink(T, System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: ListArray<T>.RemoveFirstWithoutShrink(T, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: ListArray(Of T).RemoveFirstWithoutShrink(T, Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink(Func{`0,System.Boolean})
  name: RemoveFirstWithoutShrink(Func<T, Boolean>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveFirstWithoutShrink_Func__0_System_Boolean__
  commentId: M:Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink(Func{`0,System.Boolean})
  name.vb: RemoveFirstWithoutShrink(Func(Of T, Boolean))
  fullName: Towel.DataStructures.ListArray<T>.RemoveFirstWithoutShrink(Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveFirstWithoutShrink(Func(Of T, System.Boolean))
  nameWithType: ListArray<T>.RemoveFirstWithoutShrink(Func<T, Boolean>)
  nameWithType.vb: ListArray(Of T).RemoveFirstWithoutShrink(Func(Of T, Boolean))
- uid: Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink*
  name: RemoveFirstWithoutShrink
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveFirstWithoutShrink_
  commentId: Overload:Towel.DataStructures.ListArray`1.RemoveFirstWithoutShrink
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.RemoveFirstWithoutShrink
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveFirstWithoutShrink
  nameWithType: ListArray<T>.RemoveFirstWithoutShrink
  nameWithType.vb: ListArray(Of T).RemoveFirstWithoutShrink
- uid: Towel.DataStructures.ListArray`1.RemoveWithoutShrink(System.Int32)
  name: RemoveWithoutShrink(Int32)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveWithoutShrink_System_Int32_
  commentId: M:Towel.DataStructures.ListArray`1.RemoveWithoutShrink(System.Int32)
  fullName: Towel.DataStructures.ListArray<T>.RemoveWithoutShrink(System.Int32)
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveWithoutShrink(System.Int32)
  nameWithType: ListArray<T>.RemoveWithoutShrink(Int32)
  nameWithType.vb: ListArray(Of T).RemoveWithoutShrink(Int32)
- uid: Towel.DataStructures.ListArray`1.RemoveWithoutShrink*
  name: RemoveWithoutShrink
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_RemoveWithoutShrink_
  commentId: Overload:Towel.DataStructures.ListArray`1.RemoveWithoutShrink
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.RemoveWithoutShrink
  fullName.vb: Towel.DataStructures.ListArray(Of T).RemoveWithoutShrink
  nameWithType: ListArray<T>.RemoveWithoutShrink
  nameWithType.vb: ListArray(Of T).RemoveWithoutShrink
- uid: Towel.DataStructures.ListArray`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.ListArray`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.ListArray<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper(Action(Of T))
  nameWithType: ListArray<T>.Stepper(Action<T>)
  nameWithType.vb: ListArray(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.ListArray`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ListArray`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ListArray<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: ListArray<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: ListArray(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.ListArray`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ListArray`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.ListArray<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: ListArray<T>.Stepper(StepRef<T>)
  nameWithType.vb: ListArray(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.ListArray`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ListArray`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.ListArray<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: ListArray<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: ListArray(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.ListArray`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper_
  commentId: Overload:Towel.DataStructures.ListArray`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Stepper
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper
  nameWithType: ListArray<T>.Stepper
  nameWithType.vb: ListArray(Of T).Stepper
- uid: Towel.DataStructures.ListArray`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.ListArray<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.ListArray(Of T).Stepper(Of Step)(Step)
  nameWithType: ListArray<T>.Stepper<Step>(Step)
  nameWithType.vb: ListArray(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.ListArray`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.ListArray`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.StepperBreak
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperBreak
  nameWithType: ListArray<T>.StepperBreak
  nameWithType.vb: ListArray(Of T).StepperBreak
- uid: Towel.DataStructures.ListArray`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.ListArray<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperBreak(Of Step)(Step)
  nameWithType: ListArray<T>.StepperBreak<Step>(Step)
  nameWithType.vb: ListArray(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.ListArray`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperRef_
  commentId: Overload:Towel.DataStructures.ListArray`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.StepperRef
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperRef
  nameWithType: ListArray<T>.StepperRef
  nameWithType.vb: ListArray(Of T).StepperRef
- uid: Towel.DataStructures.ListArray`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.ListArray<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperRef(Of Step)(Step)
  nameWithType: ListArray<T>.StepperRef<Step>(Step)
  nameWithType.vb: ListArray(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.ListArray`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.ListArray`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperRefBreak
  nameWithType: ListArray<T>.StepperRefBreak
  nameWithType.vb: ListArray(Of T).StepperRefBreak
- uid: Towel.DataStructures.ListArray`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.ListArray`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.ListArray<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.ListArray(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: ListArray<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: ListArray(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.ListArray`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_ToArray
  commentId: M:Towel.DataStructures.ListArray`1.ToArray
  fullName: Towel.DataStructures.ListArray<T>.ToArray()
  fullName.vb: Towel.DataStructures.ListArray(Of T).ToArray()
  nameWithType: ListArray<T>.ToArray()
  nameWithType.vb: ListArray(Of T).ToArray()
- uid: Towel.DataStructures.ListArray`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_ToArray_
  commentId: Overload:Towel.DataStructures.ListArray`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.ToArray
  fullName.vb: Towel.DataStructures.ListArray(Of T).ToArray
  nameWithType: ListArray<T>.ToArray
  nameWithType.vb: ListArray(Of T).ToArray
- uid: Towel.DataStructures.ListArray`1.Trim
  name: Trim()
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Trim
  commentId: M:Towel.DataStructures.ListArray`1.Trim
  fullName: Towel.DataStructures.ListArray<T>.Trim()
  fullName.vb: Towel.DataStructures.ListArray(Of T).Trim()
  nameWithType: ListArray<T>.Trim()
  nameWithType.vb: ListArray(Of T).Trim()
- uid: Towel.DataStructures.ListArray`1.Trim*
  name: Trim
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_Trim_
  commentId: Overload:Towel.DataStructures.ListArray`1.Trim
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.Trim
  fullName.vb: Towel.DataStructures.ListArray(Of T).Trim
  nameWithType: ListArray<T>.Trim
  nameWithType.vb: ListArray(Of T).Trim
- uid: Towel.DataStructures.ListArray`1.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.ListArray`1.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.ListArray<T>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: ListArray<T>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: ListArray(Of T).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.ListArray`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_TryAdd_
  commentId: Overload:Towel.DataStructures.ListArray`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.TryAdd
  fullName.vb: Towel.DataStructures.ListArray(Of T).TryAdd
  nameWithType: ListArray<T>.TryAdd
  nameWithType.vb: ListArray(Of T).TryAdd
- uid: Towel.DataStructures.ListArray`1.TryRemoveFirst(Func{`0,System.Boolean},System.Nullable{Exception}@)
  name: TryRemoveFirst(Func<T, Boolean>, out Nullable<Exception>)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_TryRemoveFirst_Func__0_System_Boolean__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.ListArray`1.TryRemoveFirst(Func{`0,System.Boolean},System.Nullable{Exception}@)
  name.vb: TryRemoveFirst(Func(Of T, Boolean), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.ListArray<T>.TryRemoveFirst(Func<T, System.Boolean>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.ListArray(Of T).TryRemoveFirst(Func(Of T, System.Boolean), ByRef System.Nullable(Of Exception))
  nameWithType: ListArray<T>.TryRemoveFirst(Func<T, Boolean>, out Nullable<Exception>)
  nameWithType.vb: ListArray(Of T).TryRemoveFirst(Func(Of T, Boolean), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.ListArray`1.TryRemoveFirst*
  name: TryRemoveFirst
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_TryRemoveFirst_
  commentId: Overload:Towel.DataStructures.ListArray`1.TryRemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.ListArray<T>.TryRemoveFirst
  fullName.vb: Towel.DataStructures.ListArray(Of T).TryRemoveFirst
  nameWithType: ListArray<T>.TryRemoveFirst
  nameWithType.vb: ListArray(Of T).TryRemoveFirst
- uid: Towel.DataStructures.ListArray`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name: TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  href: api/Towel.DataStructures.ListArray-1.html#Towel_DataStructures_ListArray_1_TryRemoveFirst__1_System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.ListArray`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name.vb: TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
  fullName: Towel.DataStructures.ListArray<T>.TryRemoveFirst<Predicate>(out System.Nullable<Exception>, Predicate)
  fullName.vb: Towel.DataStructures.ListArray(Of T).TryRemoveFirst(Of Predicate)(ByRef System.Nullable(Of Exception), Predicate)
  nameWithType: ListArray<T>.TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  nameWithType.vb: ListArray(Of T).TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
- uid: Towel.DataStructures.ListLinked`1
  name: ListLinked<T>
  href: api/Towel.DataStructures.ListLinked-1.html
  commentId: T:Towel.DataStructures.ListLinked`1
  name.vb: ListLinked(Of T)
  fullName: Towel.DataStructures.ListLinked<T>
  fullName.vb: Towel.DataStructures.ListLinked(Of T)
  nameWithType: ListLinked<T>
  nameWithType.vb: ListLinked(Of T)
- uid: Towel.DataStructures.ListLinked`1.#ctor
  name: ListLinked()
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1__ctor
  commentId: M:Towel.DataStructures.ListLinked`1.#ctor
  fullName: Towel.DataStructures.ListLinked<T>.ListLinked()
  fullName.vb: Towel.DataStructures.ListLinked(Of T).ListLinked()
  nameWithType: ListLinked<T>.ListLinked()
  nameWithType.vb: ListLinked(Of T).ListLinked()
- uid: Towel.DataStructures.ListLinked`1.#ctor*
  name: ListLinked
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1__ctor_
  commentId: Overload:Towel.DataStructures.ListLinked`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.ListLinked
  fullName.vb: Towel.DataStructures.ListLinked(Of T).ListLinked
  nameWithType: ListLinked<T>.ListLinked
  nameWithType.vb: ListLinked(Of T).ListLinked
- uid: Towel.DataStructures.ListLinked`1.Add(`0)
  name: Add(T)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Add__0_
  commentId: M:Towel.DataStructures.ListLinked`1.Add(`0)
  fullName: Towel.DataStructures.ListLinked<T>.Add(T)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Add(T)
  nameWithType: ListLinked<T>.Add(T)
  nameWithType.vb: ListLinked(Of T).Add(T)
- uid: Towel.DataStructures.ListLinked`1.Add*
  name: Add
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Add_
  commentId: Overload:Towel.DataStructures.ListLinked`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.Add
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Add
  nameWithType: ListLinked<T>.Add
  nameWithType.vb: ListLinked(Of T).Add
- uid: Towel.DataStructures.ListLinked`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Clear
  commentId: M:Towel.DataStructures.ListLinked`1.Clear
  fullName: Towel.DataStructures.ListLinked<T>.Clear()
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Clear()
  nameWithType: ListLinked<T>.Clear()
  nameWithType.vb: ListLinked(Of T).Clear()
- uid: Towel.DataStructures.ListLinked`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Clear_
  commentId: Overload:Towel.DataStructures.ListLinked`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.Clear
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Clear
  nameWithType: ListLinked<T>.Clear
  nameWithType.vb: ListLinked(Of T).Clear
- uid: Towel.DataStructures.ListLinked`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Clone
  commentId: M:Towel.DataStructures.ListLinked`1.Clone
  fullName: Towel.DataStructures.ListLinked<T>.Clone()
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Clone()
  nameWithType: ListLinked<T>.Clone()
  nameWithType.vb: ListLinked(Of T).Clone()
- uid: Towel.DataStructures.ListLinked`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Clone_
  commentId: Overload:Towel.DataStructures.ListLinked`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.Clone
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Clone
  nameWithType: ListLinked<T>.Clone
  nameWithType.vb: ListLinked(Of T).Clone
- uid: Towel.DataStructures.ListLinked`1.Count
  name: Count
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Count
  commentId: P:Towel.DataStructures.ListLinked`1.Count
  fullName: Towel.DataStructures.ListLinked<T>.Count
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Count
  nameWithType: ListLinked<T>.Count
  nameWithType.vb: ListLinked(Of T).Count
- uid: Towel.DataStructures.ListLinked`1.Count*
  name: Count
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Count_
  commentId: Overload:Towel.DataStructures.ListLinked`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.Count
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Count
  nameWithType: ListLinked<T>.Count
  nameWithType.vb: ListLinked(Of T).Count
- uid: Towel.DataStructures.ListLinked`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_GetEnumerator
  commentId: M:Towel.DataStructures.ListLinked`1.GetEnumerator
  fullName: Towel.DataStructures.ListLinked<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.ListLinked(Of T).GetEnumerator()
  nameWithType: ListLinked<T>.GetEnumerator()
  nameWithType.vb: ListLinked(Of T).GetEnumerator()
- uid: Towel.DataStructures.ListLinked`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.ListLinked`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.ListLinked(Of T).GetEnumerator
  nameWithType: ListLinked<T>.GetEnumerator
  nameWithType.vb: ListLinked(Of T).GetEnumerator
- uid: Towel.DataStructures.ListLinked`1.RemoveAll*
  name: RemoveAll
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_RemoveAll_
  commentId: Overload:Towel.DataStructures.ListLinked`1.RemoveAll
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.RemoveAll
  fullName.vb: Towel.DataStructures.ListLinked(Of T).RemoveAll
  nameWithType: ListLinked<T>.RemoveAll
  nameWithType.vb: ListLinked(Of T).RemoveAll
- uid: Towel.DataStructures.ListLinked`1.RemoveAll``1(``0)
  name: RemoveAll<Predicate>(Predicate)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_RemoveAll__1___0_
  commentId: M:Towel.DataStructures.ListLinked`1.RemoveAll``1(``0)
  name.vb: RemoveAll(Of Predicate)(Predicate)
  fullName: Towel.DataStructures.ListLinked<T>.RemoveAll<Predicate>(Predicate)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).RemoveAll(Of Predicate)(Predicate)
  nameWithType: ListLinked<T>.RemoveAll<Predicate>(Predicate)
  nameWithType.vb: ListLinked(Of T).RemoveAll(Of Predicate)(Predicate)
- uid: Towel.DataStructures.ListLinked`1.RemoveFirst(Func{`0,System.Boolean})
  name: RemoveFirst(Func<T, Boolean>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_RemoveFirst_Func__0_System_Boolean__
  commentId: M:Towel.DataStructures.ListLinked`1.RemoveFirst(Func{`0,System.Boolean})
  name.vb: RemoveFirst(Func(Of T, Boolean))
  fullName: Towel.DataStructures.ListLinked<T>.RemoveFirst(Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).RemoveFirst(Func(Of T, System.Boolean))
  nameWithType: ListLinked<T>.RemoveFirst(Func<T, Boolean>)
  nameWithType.vb: ListLinked(Of T).RemoveFirst(Func(Of T, Boolean))
- uid: Towel.DataStructures.ListLinked`1.RemoveFirst*
  name: RemoveFirst
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_RemoveFirst_
  commentId: Overload:Towel.DataStructures.ListLinked`1.RemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.RemoveFirst
  fullName.vb: Towel.DataStructures.ListLinked(Of T).RemoveFirst
  nameWithType: ListLinked<T>.RemoveFirst
  nameWithType.vb: ListLinked(Of T).RemoveFirst
- uid: Towel.DataStructures.ListLinked`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.ListLinked`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.ListLinked<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper(Action(Of T))
  nameWithType: ListLinked<T>.Stepper(Action<T>)
  nameWithType.vb: ListLinked(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.ListLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.ListLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.ListLinked<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: ListLinked<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: ListLinked(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.ListLinked`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.ListLinked`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.ListLinked<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: ListLinked<T>.Stepper(StepRef<T>)
  nameWithType.vb: ListLinked(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.ListLinked`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.ListLinked`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.ListLinked<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: ListLinked<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: ListLinked(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.ListLinked`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper_
  commentId: Overload:Towel.DataStructures.ListLinked`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.Stepper
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper
  nameWithType: ListLinked<T>.Stepper
  nameWithType.vb: ListLinked(Of T).Stepper
- uid: Towel.DataStructures.ListLinked`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.ListLinked`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.ListLinked<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).Stepper(Of Step)(Step)
  nameWithType: ListLinked<T>.Stepper<Step>(Step)
  nameWithType.vb: ListLinked(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.ListLinked`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.ListLinked`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.StepperBreak
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperBreak
  nameWithType: ListLinked<T>.StepperBreak
  nameWithType.vb: ListLinked(Of T).StepperBreak
- uid: Towel.DataStructures.ListLinked`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.ListLinked`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.ListLinked<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperBreak(Of Step)(Step)
  nameWithType: ListLinked<T>.StepperBreak<Step>(Step)
  nameWithType.vb: ListLinked(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.ListLinked`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperRef_
  commentId: Overload:Towel.DataStructures.ListLinked`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.StepperRef
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperRef
  nameWithType: ListLinked<T>.StepperRef
  nameWithType.vb: ListLinked(Of T).StepperRef
- uid: Towel.DataStructures.ListLinked`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.ListLinked`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.ListLinked<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperRef(Of Step)(Step)
  nameWithType: ListLinked<T>.StepperRef<Step>(Step)
  nameWithType.vb: ListLinked(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.ListLinked`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.ListLinked`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperRefBreak
  nameWithType: ListLinked<T>.StepperRefBreak
  nameWithType.vb: ListLinked(Of T).StepperRefBreak
- uid: Towel.DataStructures.ListLinked`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.ListLinked`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.ListLinked<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: ListLinked<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: ListLinked(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.ListLinked`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_ToArray
  commentId: M:Towel.DataStructures.ListLinked`1.ToArray
  fullName: Towel.DataStructures.ListLinked<T>.ToArray()
  fullName.vb: Towel.DataStructures.ListLinked(Of T).ToArray()
  nameWithType: ListLinked<T>.ToArray()
  nameWithType.vb: ListLinked(Of T).ToArray()
- uid: Towel.DataStructures.ListLinked`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_ToArray_
  commentId: Overload:Towel.DataStructures.ListLinked`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.ToArray
  fullName.vb: Towel.DataStructures.ListLinked(Of T).ToArray
  nameWithType: ListLinked<T>.ToArray
  nameWithType.vb: ListLinked(Of T).ToArray
- uid: Towel.DataStructures.ListLinked`1.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.ListLinked`1.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.ListLinked<T>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: ListLinked<T>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: ListLinked(Of T).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.ListLinked`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryAdd_
  commentId: Overload:Towel.DataStructures.ListLinked`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.TryAdd
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryAdd
  nameWithType: ListLinked<T>.TryAdd
  nameWithType.vb: ListLinked(Of T).TryAdd
- uid: Towel.DataStructures.ListLinked`1.TryRemoveFirst(Func{`0,System.Boolean})
  name: TryRemoveFirst(Func<T, Boolean>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryRemoveFirst_Func__0_System_Boolean__
  commentId: M:Towel.DataStructures.ListLinked`1.TryRemoveFirst(Func{`0,System.Boolean})
  name.vb: TryRemoveFirst(Func(Of T, Boolean))
  fullName: Towel.DataStructures.ListLinked<T>.TryRemoveFirst(Func<T, System.Boolean>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryRemoveFirst(Func(Of T, System.Boolean))
  nameWithType: ListLinked<T>.TryRemoveFirst(Func<T, Boolean>)
  nameWithType.vb: ListLinked(Of T).TryRemoveFirst(Func(Of T, Boolean))
- uid: Towel.DataStructures.ListLinked`1.TryRemoveFirst(Func{`0,System.Boolean},System.Nullable{Exception}@)
  name: TryRemoveFirst(Func<T, Boolean>, out Nullable<Exception>)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryRemoveFirst_Func__0_System_Boolean__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.ListLinked`1.TryRemoveFirst(Func{`0,System.Boolean},System.Nullable{Exception}@)
  name.vb: TryRemoveFirst(Func(Of T, Boolean), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.ListLinked<T>.TryRemoveFirst(Func<T, System.Boolean>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryRemoveFirst(Func(Of T, System.Boolean), ByRef System.Nullable(Of Exception))
  nameWithType: ListLinked<T>.TryRemoveFirst(Func<T, Boolean>, out Nullable<Exception>)
  nameWithType.vb: ListLinked(Of T).TryRemoveFirst(Func(Of T, Boolean), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.ListLinked`1.TryRemoveFirst*
  name: TryRemoveFirst
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryRemoveFirst_
  commentId: Overload:Towel.DataStructures.ListLinked`1.TryRemoveFirst
  isSpec: "True"
  fullName: Towel.DataStructures.ListLinked<T>.TryRemoveFirst
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryRemoveFirst
  nameWithType: ListLinked<T>.TryRemoveFirst
  nameWithType.vb: ListLinked(Of T).TryRemoveFirst
- uid: Towel.DataStructures.ListLinked`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name: TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  href: api/Towel.DataStructures.ListLinked-1.html#Towel_DataStructures_ListLinked_1_TryRemoveFirst__1_System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.ListLinked`1.TryRemoveFirst``1(System.Nullable{Exception}@,``0)
  name.vb: TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
  fullName: Towel.DataStructures.ListLinked<T>.TryRemoveFirst<Predicate>(out System.Nullable<Exception>, Predicate)
  fullName.vb: Towel.DataStructures.ListLinked(Of T).TryRemoveFirst(Of Predicate)(ByRef System.Nullable(Of Exception), Predicate)
  nameWithType: ListLinked<T>.TryRemoveFirst<Predicate>(out Nullable<Exception>, Predicate)
  nameWithType.vb: ListLinked(Of T).TryRemoveFirst(Of Predicate)(ByRef Nullable(Of Exception), Predicate)
- uid: Towel.DataStructures.Map
  name: Map
  href: api/Towel.DataStructures.Map.html
  commentId: T:Towel.DataStructures.Map
  fullName: Towel.DataStructures.Map
  nameWithType: Map
- uid: Towel.DataStructures.Map.Add*
  name: Add
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Add_
  commentId: Overload:Towel.DataStructures.Map.Add
  isSpec: "True"
  fullName: Towel.DataStructures.Map.Add
  nameWithType: Map.Add
- uid: Towel.DataStructures.Map.Add``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name: Add<T, K>(IMap<T, K>, K, T)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Add__2_Towel_DataStructures_IMap___0___1____1___0_
  commentId: M:Towel.DataStructures.Map.Add``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name.vb: Add(Of T, K)(IMap(Of T, K), K, T)
  fullName: Towel.DataStructures.Map.Add<T, K>(Towel.DataStructures.IMap<T, K>, K, T)
  fullName.vb: Towel.DataStructures.Map.Add(Of T, K)(Towel.DataStructures.IMap(Of T, K), K, T)
  nameWithType: Map.Add<T, K>(IMap<T, K>, K, T)
  nameWithType.vb: Map.Add(Of T, K)(IMap(Of T, K), K, T)
- uid: Towel.DataStructures.Map.Get*
  name: Get
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Get_
  commentId: Overload:Towel.DataStructures.Map.Get
  isSpec: "True"
  fullName: Towel.DataStructures.Map.Get
  nameWithType: Map.Get
- uid: Towel.DataStructures.Map.Get``2(Towel.DataStructures.IMap{``0,``1},``1)
  name: Get<T, K>(IMap<T, K>, K)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Get__2_Towel_DataStructures_IMap___0___1____1_
  commentId: M:Towel.DataStructures.Map.Get``2(Towel.DataStructures.IMap{``0,``1},``1)
  name.vb: Get(Of T, K)(IMap(Of T, K), K)
  fullName: Towel.DataStructures.Map.Get<T, K>(Towel.DataStructures.IMap<T, K>, K)
  fullName.vb: Towel.DataStructures.Map.Get(Of T, K)(Towel.DataStructures.IMap(Of T, K), K)
  nameWithType: Map.Get<T, K>(IMap<T, K>, K)
  nameWithType.vb: Map.Get(Of T, K)(IMap(Of T, K), K)
- uid: Towel.DataStructures.Map.Keys*
  name: Keys
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Keys_
  commentId: Overload:Towel.DataStructures.Map.Keys
  isSpec: "True"
  fullName: Towel.DataStructures.Map.Keys
  nameWithType: Map.Keys
- uid: Towel.DataStructures.Map.Keys``2(Towel.DataStructures.IMap{``0,``1})
  name: Keys<T, K>(IMap<T, K>)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_Keys__2_Towel_DataStructures_IMap___0___1__
  commentId: M:Towel.DataStructures.Map.Keys``2(Towel.DataStructures.IMap{``0,``1})
  name.vb: Keys(Of T, K)(IMap(Of T, K))
  fullName: Towel.DataStructures.Map.Keys<T, K>(Towel.DataStructures.IMap<T, K>)
  fullName.vb: Towel.DataStructures.Map.Keys(Of T, K)(Towel.DataStructures.IMap(Of T, K))
  nameWithType: Map.Keys<T, K>(IMap<T, K>)
  nameWithType.vb: Map.Keys(Of T, K)(IMap(Of T, K))
- uid: Towel.DataStructures.Map.KeysBreak*
  name: KeysBreak
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_KeysBreak_
  commentId: Overload:Towel.DataStructures.Map.KeysBreak
  isSpec: "True"
  fullName: Towel.DataStructures.Map.KeysBreak
  nameWithType: Map.KeysBreak
- uid: Towel.DataStructures.Map.KeysBreak``2(Towel.DataStructures.IMap{``0,``1})
  name: KeysBreak<T, K>(IMap<T, K>)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_KeysBreak__2_Towel_DataStructures_IMap___0___1__
  commentId: M:Towel.DataStructures.Map.KeysBreak``2(Towel.DataStructures.IMap{``0,``1})
  name.vb: KeysBreak(Of T, K)(IMap(Of T, K))
  fullName: Towel.DataStructures.Map.KeysBreak<T, K>(Towel.DataStructures.IMap<T, K>)
  fullName.vb: Towel.DataStructures.Map.KeysBreak(Of T, K)(Towel.DataStructures.IMap(Of T, K))
  nameWithType: Map.KeysBreak<T, K>(IMap<T, K>)
  nameWithType.vb: Map.KeysBreak(Of T, K)(IMap(Of T, K))
- uid: Towel.DataStructures.Map.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_TryAdd_
  commentId: Overload:Towel.DataStructures.Map.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.Map.TryAdd
  nameWithType: Map.TryAdd
- uid: Towel.DataStructures.Map.TryAdd``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name: TryAdd<T, K>(IMap<T, K>, K, T)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_TryAdd__2_Towel_DataStructures_IMap___0___1____1___0_
  commentId: M:Towel.DataStructures.Map.TryAdd``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name.vb: TryAdd(Of T, K)(IMap(Of T, K), K, T)
  fullName: Towel.DataStructures.Map.TryAdd<T, K>(Towel.DataStructures.IMap<T, K>, K, T)
  fullName.vb: Towel.DataStructures.Map.TryAdd(Of T, K)(Towel.DataStructures.IMap(Of T, K), K, T)
  nameWithType: Map.TryAdd<T, K>(IMap<T, K>, K, T)
  nameWithType.vb: Map.TryAdd(Of T, K)(IMap(Of T, K), K, T)
- uid: Towel.DataStructures.Map.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_TryGet_
  commentId: Overload:Towel.DataStructures.Map.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.Map.TryGet
  nameWithType: Map.TryGet
- uid: Towel.DataStructures.Map.TryGet``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name: TryGet<T, K>(IMap<T, K>, K, T)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_TryGet__2_Towel_DataStructures_IMap___0___1____1___0_
  commentId: M:Towel.DataStructures.Map.TryGet``2(Towel.DataStructures.IMap{``0,``1},``1,``0)
  name.vb: TryGet(Of T, K)(IMap(Of T, K), K, T)
  fullName: Towel.DataStructures.Map.TryGet<T, K>(Towel.DataStructures.IMap<T, K>, K, T)
  fullName.vb: Towel.DataStructures.Map.TryGet(Of T, K)(Towel.DataStructures.IMap(Of T, K), K, T)
  nameWithType: Map.TryGet<T, K>(IMap<T, K>, K, T)
  nameWithType.vb: Map.TryGet(Of T, K)(IMap(Of T, K), K, T)
- uid: Towel.DataStructures.Map.TryGet``2(Towel.DataStructures.IMap{``0,``1},``1,``0@)
  name: TryGet<T, K>(IMap<T, K>, K, out T)
  href: api/Towel.DataStructures.Map.html#Towel_DataStructures_Map_TryGet__2_Towel_DataStructures_IMap___0___1____1___0__
  commentId: M:Towel.DataStructures.Map.TryGet``2(Towel.DataStructures.IMap{``0,``1},``1,``0@)
  name.vb: TryGet(Of T, K)(IMap(Of T, K), K, ByRef T)
  fullName: Towel.DataStructures.Map.TryGet<T, K>(Towel.DataStructures.IMap<T, K>, K, out T)
  fullName.vb: Towel.DataStructures.Map.TryGet(Of T, K)(Towel.DataStructures.IMap(Of T, K), K, ByRef T)
  nameWithType: Map.TryGet<T, K>(IMap<T, K>, K, out T)
  nameWithType.vb: Map.TryGet(Of T, K)(IMap(Of T, K), K, ByRef T)
- uid: Towel.DataStructures.MapHashLinked`4
  name: MapHashLinked<T, K, Equate, Hash>
  href: api/Towel.DataStructures.MapHashLinked-4.html
  commentId: T:Towel.DataStructures.MapHashLinked`4
  name.vb: MapHashLinked(Of T, K, Equate, Hash)
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash)
  nameWithType: MapHashLinked<T, K, Equate, Hash>
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash)
- uid: Towel.DataStructures.MapHashLinked`4.#ctor(`2,`3,System.Nullable{System.Int32})
  name: MapHashLinked(Equate, Hash, Nullable<Int32>)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4__ctor__2__3_System_Nullable_System_Int32__
  commentId: M:Towel.DataStructures.MapHashLinked`4.#ctor(`2,`3,System.Nullable{System.Int32})
  name.vb: MapHashLinked(Equate, Hash, Nullable(Of Int32))
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.MapHashLinked(Equate, Hash, System.Nullable<System.Int32>)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).MapHashLinked(Equate, Hash, System.Nullable(Of System.Int32))
  nameWithType: MapHashLinked<T, K, Equate, Hash>.MapHashLinked(Equate, Hash, Nullable<Int32>)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).MapHashLinked(Equate, Hash, Nullable(Of Int32))
- uid: Towel.DataStructures.MapHashLinked`4.#ctor*
  name: MapHashLinked
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4__ctor_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.MapHashLinked
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).MapHashLinked
  nameWithType: MapHashLinked<T, K, Equate, Hash>.MapHashLinked
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).MapHashLinked
- uid: Towel.DataStructures.MapHashLinked`4.Count
  name: Count
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Count
  commentId: P:Towel.DataStructures.MapHashLinked`4.Count
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Count
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Count
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Count
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Count
- uid: Towel.DataStructures.MapHashLinked`4.Count*
  name: Count
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Count_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.Count
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Count
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Count
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Count
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Count
- uid: Towel.DataStructures.MapHashLinked`4.Item(`1)
  name: Item[K]
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Item__1_
  commentId: P:Towel.DataStructures.MapHashLinked`4.Item(`1)
  name.vb: Item(K)
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Item[K]
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Item(K)
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Item[K]
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Item(K)
- uid: Towel.DataStructures.MapHashLinked`4.Item*
  name: Item
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Item_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.Item
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Item
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Item
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Item
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Item
- uid: Towel.DataStructures.MapHashLinked`4.Set(`1,`0)
  name: Set(K, T)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Set__1__0_
  commentId: M:Towel.DataStructures.MapHashLinked`4.Set(`1,`0)
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Set(K, T)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Set(K, T)
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Set(K, T)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Set(K, T)
- uid: Towel.DataStructures.MapHashLinked`4.Set*
  name: Set
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Set_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.Set
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Set
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Set
  nameWithType: MapHashLinked<T, K, Equate, Hash>.Set
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Set
- uid: Towel.DataStructures.MapHashLinked`4.TableSize
  name: TableSize
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TableSize
  commentId: P:Towel.DataStructures.MapHashLinked`4.TableSize
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TableSize
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TableSize
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TableSize
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TableSize
- uid: Towel.DataStructures.MapHashLinked`4.TableSize*
  name: TableSize
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TableSize_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.TableSize
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TableSize
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TableSize
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TableSize
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TableSize
- uid: Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IEquating{K}#Equate
  name: DataStructure.IEquating<K>.Equate
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Towel_DataStructures_DataStructure_IEquating_K__Equate
  commentId: P:Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IEquating{K}#Equate
  name.vb: Towel.DataStructures.DataStructure.IEquating<K>.Equate
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Towel.DataStructures.DataStructure.IEquating<K>.Equate
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<K>.Equate
  nameWithType: MapHashLinked<T, K, Equate, Hash>.DataStructure.IEquating<K>.Equate
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<K>.Equate
- uid: Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IEquating{K}#Equate*
  name: DataStructure.IEquating<K>.Equate
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Towel_DataStructures_DataStructure_IEquating_K__Equate_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IEquating{K}#Equate
  isSpec: "True"
  name.vb: Towel.DataStructures.DataStructure.IEquating<K>.Equate
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Towel.DataStructures.DataStructure.IEquating<K>.Equate
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<K>.Equate
  nameWithType: MapHashLinked<T, K, Equate, Hash>.DataStructure.IEquating<K>.Equate
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<K>.Equate
- uid: Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IHashing{K}#Hash
  name: DataStructure.IHashing<K>.Hash
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Towel_DataStructures_DataStructure_IHashing_K__Hash
  commentId: P:Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IHashing{K}#Hash
  name.vb: Towel.DataStructures.DataStructure.IHashing<K>.Hash
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Towel.DataStructures.DataStructure.IHashing<K>.Hash
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<K>.Hash
  nameWithType: MapHashLinked<T, K, Equate, Hash>.DataStructure.IHashing<K>.Hash
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<K>.Hash
- uid: Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IHashing{K}#Hash*
  name: DataStructure.IHashing<K>.Hash
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_Towel_DataStructures_DataStructure_IHashing_K__Hash_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.Towel#DataStructures#DataStructure#IHashing{K}#Hash
  isSpec: "True"
  name.vb: Towel.DataStructures.DataStructure.IHashing<K>.Hash
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.Towel.DataStructures.DataStructure.IHashing<K>.Hash
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<K>.Hash
  nameWithType: MapHashLinked<T, K, Equate, Hash>.DataStructure.IHashing<K>.Hash
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<K>.Hash
- uid: Towel.DataStructures.MapHashLinked`4.TryAdd(`1,`0,System.Nullable{Exception}@)
  name: TryAdd(K, T, out Nullable<Exception>)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryAdd__1__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.MapHashLinked`4.TryAdd(`1,`0,System.Nullable{Exception}@)
  name.vb: TryAdd(K, T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryAdd(K, T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryAdd(K, T, ByRef System.Nullable(Of Exception))
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryAdd(K, T, out Nullable<Exception>)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryAdd(K, T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.MapHashLinked`4.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryAdd_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryAdd
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryAdd
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryAdd
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryAdd
- uid: Towel.DataStructures.MapHashLinked`4.TryGet(`1,`0@,System.Nullable{Exception}@)
  name: TryGet(K, out T, out Nullable<Exception>)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryGet__1__0__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.MapHashLinked`4.TryGet(`1,`0@,System.Nullable{Exception}@)
  name.vb: TryGet(K, ByRef T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryGet(K, out T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryGet(K, ByRef T, ByRef System.Nullable(Of Exception))
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryGet(K, out T, out Nullable<Exception>)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryGet(K, ByRef T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.MapHashLinked`4.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryGet_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryGet
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryGet
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryGet
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryGet
- uid: Towel.DataStructures.MapHashLinked`4.TryRemove(`1,System.Nullable{Exception}@)
  name: TryRemove(K, out Nullable<Exception>)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryRemove__1_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.MapHashLinked`4.TryRemove(`1,System.Nullable{Exception}@)
  name.vb: TryRemove(K, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryRemove(K, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryRemove(K, ByRef System.Nullable(Of Exception))
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryRemove(K, out Nullable<Exception>)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryRemove(K, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.MapHashLinked`4.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryRemove_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryRemove
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryRemove
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryRemove
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryRemove
- uid: Towel.DataStructures.MapHashLinked`4.TryRemoveWithoutTrim(`1,System.Nullable{Exception}@)
  name: TryRemoveWithoutTrim(K, out Nullable<Exception>)
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryRemoveWithoutTrim__1_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.MapHashLinked`4.TryRemoveWithoutTrim(`1,System.Nullable{Exception}@)
  name.vb: TryRemoveWithoutTrim(K, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryRemoveWithoutTrim(K, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryRemoveWithoutTrim(K, ByRef System.Nullable(Of Exception))
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryRemoveWithoutTrim(K, out Nullable<Exception>)
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryRemoveWithoutTrim(K, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.MapHashLinked`4.TryRemoveWithoutTrim*
  name: TryRemoveWithoutTrim
  href: api/Towel.DataStructures.MapHashLinked-4.html#Towel_DataStructures_MapHashLinked_4_TryRemoveWithoutTrim_
  commentId: Overload:Towel.DataStructures.MapHashLinked`4.TryRemoveWithoutTrim
  isSpec: "True"
  fullName: Towel.DataStructures.MapHashLinked<T, K, Equate, Hash>.TryRemoveWithoutTrim
  fullName.vb: Towel.DataStructures.MapHashLinked(Of T, K, Equate, Hash).TryRemoveWithoutTrim
  nameWithType: MapHashLinked<T, K, Equate, Hash>.TryRemoveWithoutTrim
  nameWithType.vb: MapHashLinked(Of T, K, Equate, Hash).TryRemoveWithoutTrim
- uid: Towel.DataStructures.Omnitree
  name: Omnitree
  href: api/Towel.DataStructures.Omnitree.html
  commentId: T:Towel.DataStructures.Omnitree
  fullName: Towel.DataStructures.Omnitree
  nameWithType: Omnitree
- uid: Towel.DataStructures.Omnitree.Bound`1
  name: Omnitree.Bound<T>
  href: api/Towel.DataStructures.Omnitree.Bound-1.html
  commentId: T:Towel.DataStructures.Omnitree.Bound`1
  name.vb: Omnitree.Bound(Of T)
  fullName: Towel.DataStructures.Omnitree.Bound<T>
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T)
  nameWithType: Omnitree.Bound<T>
  nameWithType.vb: Omnitree.Bound(Of T)
- uid: Towel.DataStructures.Omnitree.Bound`1.Compare(Func{`0,`0,Towel.CompareResult})
  name: Compare(Func<T, T, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_Compare_Func__0__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.Bound`1.Compare(Func{`0,`0,Towel.CompareResult})
  name.vb: Compare(Func(Of T, T, CompareResult))
  fullName: Towel.DataStructures.Omnitree.Bound<T>.Compare(Func<T, T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).Compare(Func(Of T, T, Towel.CompareResult))
  nameWithType: Omnitree.Bound<T>.Compare(Func<T, T, CompareResult>)
  nameWithType.vb: Omnitree.Bound(Of T).Compare(Func(Of T, T, CompareResult))
- uid: Towel.DataStructures.Omnitree.Bound`1.Compare*
  name: Compare
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_Compare_
  commentId: Overload:Towel.DataStructures.Omnitree.Bound`1.Compare
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bound<T>.Compare
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).Compare
  nameWithType: Omnitree.Bound<T>.Compare
  nameWithType.vb: Omnitree.Bound(Of T).Compare
- uid: Towel.DataStructures.Omnitree.Bound`1.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_None
  commentId: F:Towel.DataStructures.Omnitree.Bound`1.None
  fullName: Towel.DataStructures.Omnitree.Bound<T>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).None
  nameWithType: Omnitree.Bound<T>.None
  nameWithType.vb: Omnitree.Bound(Of T).None
- uid: Towel.DataStructures.Omnitree.Bound`1.op_Implicit(`0)~Towel.DataStructures.Omnitree.Bound{`0}
  name: Implicit(T to Omnitree.Bound<T>)
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_op_Implicit__0__Towel_DataStructures_Omnitree_Bound__0_
  commentId: M:Towel.DataStructures.Omnitree.Bound`1.op_Implicit(`0)~Towel.DataStructures.Omnitree.Bound{`0}
  name.vb: Widening(T to Omnitree.Bound(Of T))
  fullName: Towel.DataStructures.Omnitree.Bound<T>.Implicit(T to Towel.DataStructures.Omnitree.Bound<T>)
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).Widening(T to Towel.DataStructures.Omnitree.Bound(Of T))
  nameWithType: Omnitree.Bound<T>.Implicit(T to Omnitree.Bound<T>)
  nameWithType.vb: Omnitree.Bound(Of T).Widening(T to Omnitree.Bound(Of T))
- uid: Towel.DataStructures.Omnitree.Bound`1.op_Implicit(Towel.DataStructures.Omnitree.Keyword)~Towel.DataStructures.Omnitree.Bound{`0}
  name: Implicit(Omnitree.Keyword to Omnitree.Bound<T>)
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_op_Implicit_Towel_DataStructures_Omnitree_Keyword__Towel_DataStructures_Omnitree_Bound__0_
  commentId: M:Towel.DataStructures.Omnitree.Bound`1.op_Implicit(Towel.DataStructures.Omnitree.Keyword)~Towel.DataStructures.Omnitree.Bound{`0}
  name.vb: Widening(Omnitree.Keyword to Omnitree.Bound(Of T))
  fullName: Towel.DataStructures.Omnitree.Bound<T>.Implicit(Towel.DataStructures.Omnitree.Keyword to Towel.DataStructures.Omnitree.Bound<T>)
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).Widening(Towel.DataStructures.Omnitree.Keyword to Towel.DataStructures.Omnitree.Bound(Of T))
  nameWithType: Omnitree.Bound<T>.Implicit(Omnitree.Keyword to Omnitree.Bound<T>)
  nameWithType.vb: Omnitree.Bound(Of T).Widening(Omnitree.Keyword to Omnitree.Bound(Of T))
- uid: Towel.DataStructures.Omnitree.Bound`1.op_Implicit*
  name: Implicit
  href: api/Towel.DataStructures.Omnitree.Bound-1.html#Towel_DataStructures_Omnitree_Bound_1_op_Implicit_
  commentId: Overload:Towel.DataStructures.Omnitree.Bound`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.DataStructures.Omnitree.Bound<T>.Implicit
  fullName.vb: Towel.DataStructures.Omnitree.Bound(Of T).Widening
  nameWithType: Omnitree.Bound<T>.Implicit
  nameWithType.vb: Omnitree.Bound(Of T).Widening
- uid: Towel.DataStructures.Omnitree.Bounds
  name: Omnitree.Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds
  fullName: Towel.DataStructures.Omnitree.Bounds
  nameWithType: Omnitree.Bounds
- uid: Towel.DataStructures.Omnitree.Bounds.#ctor(Towel.DataStructures.Omnitree.Bound{System.Object}[],Towel.DataStructures.Omnitree.Bound{System.Object}[])
  name: Bounds(Omnitree.Bound<Object>[], Omnitree.Bound<Object>[])
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds__ctor_Towel_DataStructures_Omnitree_Bound_System_Object____Towel_DataStructures_Omnitree_Bound_System_Object____
  commentId: M:Towel.DataStructures.Omnitree.Bounds.#ctor(Towel.DataStructures.Omnitree.Bound{System.Object}[],Towel.DataStructures.Omnitree.Bound{System.Object}[])
  name.vb: Bounds(Omnitree.Bound(Of Object)(), Omnitree.Bound(Of Object)())
  fullName: Towel.DataStructures.Omnitree.Bounds.Bounds(Towel.DataStructures.Omnitree.Bound<System.Object>[], Towel.DataStructures.Omnitree.Bound<System.Object>[])
  fullName.vb: Towel.DataStructures.Omnitree.Bounds.Bounds(Towel.DataStructures.Omnitree.Bound(Of System.Object)(), Towel.DataStructures.Omnitree.Bound(Of System.Object)())
  nameWithType: Omnitree.Bounds.Bounds(Omnitree.Bound<Object>[], Omnitree.Bound<Object>[])
  nameWithType.vb: Omnitree.Bounds.Bounds(Omnitree.Bound(Of Object)(), Omnitree.Bound(Of Object)())
- uid: Towel.DataStructures.Omnitree.Bounds.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds.Bounds
  nameWithType: Omnitree.Bounds.Bounds
- uid: Towel.DataStructures.Omnitree.Bounds.Max
  name: Max
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_Max
  commentId: P:Towel.DataStructures.Omnitree.Bounds.Max
  fullName: Towel.DataStructures.Omnitree.Bounds.Max
  nameWithType: Omnitree.Bounds.Max
- uid: Towel.DataStructures.Omnitree.Bounds.Max*
  name: Max
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_Max_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds.Max
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds.Max
  nameWithType: Omnitree.Bounds.Max
- uid: Towel.DataStructures.Omnitree.Bounds.Min
  name: Min
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_Min
  commentId: P:Towel.DataStructures.Omnitree.Bounds.Min
  fullName: Towel.DataStructures.Omnitree.Bounds.Min
  nameWithType: Omnitree.Bounds.Min
- uid: Towel.DataStructures.Omnitree.Bounds.Min*
  name: Min
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_Min_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds.Min
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds.Min
  nameWithType: Omnitree.Bounds.Min
- uid: Towel.DataStructures.Omnitree.Bounds.None(System.Int32)
  name: None(Int32)
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_None_System_Int32_
  commentId: M:Towel.DataStructures.Omnitree.Bounds.None(System.Int32)
  fullName: Towel.DataStructures.Omnitree.Bounds.None(System.Int32)
  nameWithType: Omnitree.Bounds.None(Int32)
- uid: Towel.DataStructures.Omnitree.Bounds.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds.html#Towel_DataStructures_Omnitree_Bounds_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds.None
  nameWithType: Omnitree.Bounds.None
- uid: Towel.DataStructures.Omnitree.Bounds`1
  name: Omnitree.Bounds<A1>
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`1
  name.vb: Omnitree.Bounds(Of A1)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1)
  nameWithType: Omnitree.Bounds<A1>
  nameWithType.vb: Omnitree.Bounds(Of A1)
- uid: Towel.DataStructures.Omnitree.Bounds`1.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>)
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`1.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1))
  nameWithType: Omnitree.Bounds<A1>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>)
  nameWithType.vb: Omnitree.Bounds(Of A1).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1))
- uid: Towel.DataStructures.Omnitree.Bounds`1.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).Bounds
  nameWithType: Omnitree.Bounds<A1>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`1.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`1.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).Max1
  nameWithType: Omnitree.Bounds<A1>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`1.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`1.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).Min1
  nameWithType: Omnitree.Bounds<A1>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`1.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`1.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).None
  nameWithType: Omnitree.Bounds<A1>.None
  nameWithType.vb: Omnitree.Bounds(Of A1).None
- uid: Towel.DataStructures.Omnitree.Bounds`1.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-1.html#Towel_DataStructures_Omnitree_Bounds_1_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`1.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1).None
  nameWithType: Omnitree.Bounds<A1>.None
  nameWithType.vb: Omnitree.Bounds(Of A1).None
- uid: Towel.DataStructures.Omnitree.Bounds`2
  name: Omnitree.Bounds<A1, A2>
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`2
  name.vb: Omnitree.Bounds(Of A1, A2)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2)
  nameWithType: Omnitree.Bounds<A1, A2>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2)
- uid: Towel.DataStructures.Omnitree.Bounds`2.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>)
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`2.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2))
  nameWithType: Omnitree.Bounds<A1, A2>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2))
- uid: Towel.DataStructures.Omnitree.Bounds`2.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Bounds
  nameWithType: Omnitree.Bounds<A1, A2>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`2.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`2.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Max1
  nameWithType: Omnitree.Bounds<A1, A2>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`2.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`2.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Max2
  nameWithType: Omnitree.Bounds<A1, A2>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`2.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`2.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Min1
  nameWithType: Omnitree.Bounds<A1, A2>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`2.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`2.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).Min2
  nameWithType: Omnitree.Bounds<A1, A2>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`2.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`2.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).None
  nameWithType: Omnitree.Bounds<A1, A2>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).None
- uid: Towel.DataStructures.Omnitree.Bounds`2.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-2.html#Towel_DataStructures_Omnitree_Bounds_2_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`2.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2).None
  nameWithType: Omnitree.Bounds<A1, A2>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2).None
- uid: Towel.DataStructures.Omnitree.Bounds`3
  name: Omnitree.Bounds<A1, A2, A3>
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`3
  name.vb: Omnitree.Bounds(Of A1, A2, A3)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3)
  nameWithType: Omnitree.Bounds<A1, A2, A3>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.Bounds`3.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>)
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__2__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`3.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A3>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A3))
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3))
- uid: Towel.DataStructures.Omnitree.Bounds`3.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`3.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Bounds
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`3.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Max1
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`3.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Max2
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`3.Max3
  name: Max3
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Max3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Max3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Max3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Max3
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Max3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Max3
- uid: Towel.DataStructures.Omnitree.Bounds`3.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Min1
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`3.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Min2
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`3.Min3
  name: Min3
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_Min3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`3.Min3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.Min3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).Min3
  nameWithType: Omnitree.Bounds<A1, A2, A3>.Min3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).Min3
- uid: Towel.DataStructures.Omnitree.Bounds`3.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`3.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).None
  nameWithType: Omnitree.Bounds<A1, A2, A3>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).None
- uid: Towel.DataStructures.Omnitree.Bounds`3.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-3.html#Towel_DataStructures_Omnitree_Bounds_3_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`3.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3).None
  nameWithType: Omnitree.Bounds<A1, A2, A3>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3).None
- uid: Towel.DataStructures.Omnitree.Bounds`4
  name: Omnitree.Bounds<A1, A2, A3, A4>
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`4
  name.vb: Omnitree.Bounds(Of A1, A2, A3, A4)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4)
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.Bounds`4.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>)
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__3__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`4.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A4>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A4))
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4))
- uid: Towel.DataStructures.Omnitree.Bounds`4.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`4.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Bounds
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`4.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Max1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`4.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Max2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`4.Max3
  name: Max3
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Max3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Max3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Max3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Max3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Max3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Max3
- uid: Towel.DataStructures.Omnitree.Bounds`4.Max4
  name: Max4
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Max4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Max4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Max4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Max4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Max4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Max4
- uid: Towel.DataStructures.Omnitree.Bounds`4.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Min1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`4.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Min2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`4.Min3
  name: Min3
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Min3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Min3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Min3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Min3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Min3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Min3
- uid: Towel.DataStructures.Omnitree.Bounds`4.Min4
  name: Min4
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_Min4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`4.Min4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.Min4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).Min4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.Min4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).Min4
- uid: Towel.DataStructures.Omnitree.Bounds`4.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`4.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).None
- uid: Towel.DataStructures.Omnitree.Bounds`4.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-4.html#Towel_DataStructures_Omnitree_Bounds_4_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`4.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4).None
- uid: Towel.DataStructures.Omnitree.Bounds`5
  name: Omnitree.Bounds<A1, A2, A3, A4, A5>
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`5
  name.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5)
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.Bounds`5.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>)
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__4__Towel_DataStructures_Omnitree_Bound__4__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`5.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A5>, Towel.DataStructures.Omnitree.Bound<A5>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A5), Towel.DataStructures.Omnitree.Bound(Of A5))
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5))
- uid: Towel.DataStructures.Omnitree.Bounds`5.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`5.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Bounds
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`5.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`5.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`5.Max3
  name: Max3
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Max3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Max3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Max3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Max3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max3
- uid: Towel.DataStructures.Omnitree.Bounds`5.Max4
  name: Max4
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Max4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Max4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Max4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Max4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max4
- uid: Towel.DataStructures.Omnitree.Bounds`5.Max5
  name: Max5
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Max5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Max5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Max5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Max5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Max5
- uid: Towel.DataStructures.Omnitree.Bounds`5.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`5.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`5.Min3
  name: Min3
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Min3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Min3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Min3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Min3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min3
- uid: Towel.DataStructures.Omnitree.Bounds`5.Min4
  name: Min4
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Min4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Min4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Min4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Min4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min4
- uid: Towel.DataStructures.Omnitree.Bounds`5.Min5
  name: Min5
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_Min5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`5.Min5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.Min5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.Min5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).Min5
- uid: Towel.DataStructures.Omnitree.Bounds`5.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`5.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).None
- uid: Towel.DataStructures.Omnitree.Bounds`5.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-5.html#Towel_DataStructures_Omnitree_Bounds_5_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`5.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5).None
- uid: Towel.DataStructures.Omnitree.Bounds`6
  name: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`6
  name.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.Bounds`6.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`5})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>, Omnitree.Bound<A6>, Omnitree.Bound<A6>)
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__4__Towel_DataStructures_Omnitree_Bound__4__Towel_DataStructures_Omnitree_Bound__5__Towel_DataStructures_Omnitree_Bound__5__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`6.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`5})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5), Omnitree.Bound(Of A6), Omnitree.Bound(Of A6))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A5>, Towel.DataStructures.Omnitree.Bound<A5>, Towel.DataStructures.Omnitree.Bound<A6>, Towel.DataStructures.Omnitree.Bound<A6>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A5), Towel.DataStructures.Omnitree.Bound(Of A5), Towel.DataStructures.Omnitree.Bound(Of A6), Towel.DataStructures.Omnitree.Bound(Of A6))
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>, Omnitree.Bound<A6>, Omnitree.Bound<A6>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5), Omnitree.Bound(Of A6), Omnitree.Bound(Of A6))
- uid: Towel.DataStructures.Omnitree.Bounds`6.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`6.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Bounds
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max3
  name: Max3
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max3
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max4
  name: Max4
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max4
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max5
  name: Max5
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max5
- uid: Towel.DataStructures.Omnitree.Bounds`6.Max6
  name: Max6
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Max6
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Max6
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max6
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max6
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Max6
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Max6
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min3
  name: Min3
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min3
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min4
  name: Min4
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min4
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min5
  name: Min5
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min5
- uid: Towel.DataStructures.Omnitree.Bounds`6.Min6
  name: Min6
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_Min6
  commentId: F:Towel.DataStructures.Omnitree.Bounds`6.Min6
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min6
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min6
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.Min6
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).Min6
- uid: Towel.DataStructures.Omnitree.Bounds`6.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`6.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).None
- uid: Towel.DataStructures.Omnitree.Bounds`6.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-6.html#Towel_DataStructures_Omnitree_Bounds_6_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`6.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6).None
- uid: Towel.DataStructures.Omnitree.Bounds`7
  name: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html
  commentId: T:Towel.DataStructures.Omnitree.Bounds`7
  name.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7)
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.Bounds`7.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`6},Towel.DataStructures.Omnitree.Bound{`6})
  name: Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>, Omnitree.Bound<A6>, Omnitree.Bound<A6>, Omnitree.Bound<A7>, Omnitree.Bound<A7>)
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7__ctor_Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__0__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__1__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__2__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__3__Towel_DataStructures_Omnitree_Bound__4__Towel_DataStructures_Omnitree_Bound__4__Towel_DataStructures_Omnitree_Bound__5__Towel_DataStructures_Omnitree_Bound__5__Towel_DataStructures_Omnitree_Bound__6__Towel_DataStructures_Omnitree_Bound__6__
  commentId: M:Towel.DataStructures.Omnitree.Bounds`7.#ctor(Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`0},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`1},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`2},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`3},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`4},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`5},Towel.DataStructures.Omnitree.Bound{`6},Towel.DataStructures.Omnitree.Bound{`6})
  name.vb: Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5), Omnitree.Bound(Of A6), Omnitree.Bound(Of A6), Omnitree.Bound(Of A7), Omnitree.Bound(Of A7))
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Bounds(Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A1>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A2>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A3>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A4>, Towel.DataStructures.Omnitree.Bound<A5>, Towel.DataStructures.Omnitree.Bound<A5>, Towel.DataStructures.Omnitree.Bound<A6>, Towel.DataStructures.Omnitree.Bound<A6>, Towel.DataStructures.Omnitree.Bound<A7>, Towel.DataStructures.Omnitree.Bound<A7>)
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Bounds(Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A1), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A2), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A3), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A4), Towel.DataStructures.Omnitree.Bound(Of A5), Towel.DataStructures.Omnitree.Bound(Of A5), Towel.DataStructures.Omnitree.Bound(Of A6), Towel.DataStructures.Omnitree.Bound(Of A6), Towel.DataStructures.Omnitree.Bound(Of A7), Towel.DataStructures.Omnitree.Bound(Of A7))
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Bounds(Omnitree.Bound<A1>, Omnitree.Bound<A1>, Omnitree.Bound<A2>, Omnitree.Bound<A2>, Omnitree.Bound<A3>, Omnitree.Bound<A3>, Omnitree.Bound<A4>, Omnitree.Bound<A4>, Omnitree.Bound<A5>, Omnitree.Bound<A5>, Omnitree.Bound<A6>, Omnitree.Bound<A6>, Omnitree.Bound<A7>, Omnitree.Bound<A7>)
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Bounds(Omnitree.Bound(Of A1), Omnitree.Bound(Of A1), Omnitree.Bound(Of A2), Omnitree.Bound(Of A2), Omnitree.Bound(Of A3), Omnitree.Bound(Of A3), Omnitree.Bound(Of A4), Omnitree.Bound(Of A4), Omnitree.Bound(Of A5), Omnitree.Bound(Of A5), Omnitree.Bound(Of A6), Omnitree.Bound(Of A6), Omnitree.Bound(Of A7), Omnitree.Bound(Of A7))
- uid: Towel.DataStructures.Omnitree.Bounds`7.#ctor*
  name: Bounds
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`7.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Bounds
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Bounds
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Bounds
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Bounds
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max1
  name: Max1
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max1
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max2
  name: Max2
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max2
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max3
  name: Max3
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max3
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max4
  name: Max4
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max4
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max5
  name: Max5
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max5
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max6
  name: Max6
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max6
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max6
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max6
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max6
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max6
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max6
- uid: Towel.DataStructures.Omnitree.Bounds`7.Max7
  name: Max7
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Max7
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Max7
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max7
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max7
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Max7
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Max7
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min1
  name: Min1
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min1
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min1
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min1
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min1
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min1
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min1
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min2
  name: Min2
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min2
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min2
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min2
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min2
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min2
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min2
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min3
  name: Min3
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min3
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min3
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min3
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min3
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min3
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min3
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min4
  name: Min4
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min4
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min4
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min4
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min4
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min4
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min4
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min5
  name: Min5
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min5
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min5
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min5
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min5
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min5
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min5
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min6
  name: Min6
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min6
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min6
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min6
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min6
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min6
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min6
- uid: Towel.DataStructures.Omnitree.Bounds`7.Min7
  name: Min7
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_Min7
  commentId: F:Towel.DataStructures.Omnitree.Bounds`7.Min7
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min7
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min7
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.Min7
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).Min7
- uid: Towel.DataStructures.Omnitree.Bounds`7.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_None
  commentId: P:Towel.DataStructures.Omnitree.Bounds`7.None
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).None
- uid: Towel.DataStructures.Omnitree.Bounds`7.None*
  name: None
  href: api/Towel.DataStructures.Omnitree.Bounds-7.html#Towel_DataStructures_Omnitree_Bounds_7_None_
  commentId: Overload:Towel.DataStructures.Omnitree.Bounds`7.None
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.None
  fullName.vb: Towel.DataStructures.Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).None
  nameWithType: Omnitree.Bounds<A1, A2, A3, A4, A5, A6, A7>.None
  nameWithType.vb: Omnitree.Bounds(Of A1, A2, A3, A4, A5, A6, A7).None
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds*
  name: ConvertToGetBounds
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds_
  commentId: Overload:Towel.DataStructures.Omnitree.ConvertToGetBounds
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds
  nameWithType: Omnitree.ConvertToGetBounds
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``2(Towel.DataStructures.Omnitree.GetBoundings{``0,``1})
  name: ConvertToGetBounds<T, A1>(Omnitree.GetBoundings<T, A1>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__2_Towel_DataStructures_Omnitree_GetBoundings___0___1__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``2(Towel.DataStructures.Omnitree.GetBoundings{``0,``1})
  name.vb: ConvertToGetBounds(Of T, A1)(Omnitree.GetBoundings(Of T, A1))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1>(Towel.DataStructures.Omnitree.GetBoundings<T, A1>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1>(Omnitree.GetBoundings<T, A1>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1)(Omnitree.GetBoundings(Of T, A1))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``3(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2})
  name: ConvertToGetBounds<T, A1, A2>(Omnitree.GetBoundings<T, A1, A2>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__3_Towel_DataStructures_Omnitree_GetBoundings___0___1___2__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``3(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2})
  name.vb: ConvertToGetBounds(Of T, A1, A2)(Omnitree.GetBoundings(Of T, A1, A2))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2>(Omnitree.GetBoundings<T, A1, A2>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2)(Omnitree.GetBoundings(Of T, A1, A2))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``4(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3})
  name: ConvertToGetBounds<T, A1, A2, A3>(Omnitree.GetBoundings<T, A1, A2, A3>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__4_Towel_DataStructures_Omnitree_GetBoundings___0___1___2___3__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``4(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3})
  name.vb: ConvertToGetBounds(Of T, A1, A2, A3)(Omnitree.GetBoundings(Of T, A1, A2, A3))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2, A3>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2, A3)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2, A3>(Omnitree.GetBoundings<T, A1, A2, A3>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2, A3)(Omnitree.GetBoundings(Of T, A1, A2, A3))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``5(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4})
  name: ConvertToGetBounds<T, A1, A2, A3, A4>(Omnitree.GetBoundings<T, A1, A2, A3, A4>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__5_Towel_DataStructures_Omnitree_GetBoundings___0___1___2___3___4__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``5(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4})
  name.vb: ConvertToGetBounds(Of T, A1, A2, A3, A4)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4>(Omnitree.GetBoundings<T, A1, A2, A3, A4>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``6(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5})
  name: ConvertToGetBounds<T, A1, A2, A3, A4, A5>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__6_Towel_DataStructures_Omnitree_GetBoundings___0___1___2___3___4___5__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``6(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5})
  name.vb: ConvertToGetBounds(Of T, A1, A2, A3, A4, A5)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``7(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5,``6})
  name: ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__7_Towel_DataStructures_Omnitree_GetBoundings___0___1___2___3___4___5___6__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``7(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5,``6})
  name.vb: ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6))
- uid: Towel.DataStructures.Omnitree.ConvertToGetBounds``8(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5,``6,``7})
  name: ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6, A7>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_ConvertToGetBounds__8_Towel_DataStructures_Omnitree_GetBoundings___0___1___2___3___4___5___6___7__
  commentId: M:Towel.DataStructures.Omnitree.ConvertToGetBounds``8(Towel.DataStructures.Omnitree.GetBoundings{``0,``1,``2,``3,``4,``5,``6,``7})
  name.vb: ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7))
  fullName: Towel.DataStructures.Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6, A7>(Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>)
  fullName.vb: Towel.DataStructures.Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)(Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7))
  nameWithType: Omnitree.ConvertToGetBounds<T, A1, A2, A3, A4, A5, A6, A7>(Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>)
  nameWithType.vb: Omnitree.ConvertToGetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)(Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck*
  name: EncapsulationCheck
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck_
  commentId: Overload:Towel.DataStructures.Omnitree.EncapsulationCheck
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck
  nameWithType: Omnitree.EncapsulationCheck
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Bounds{``0},Func{``0,``0,Towel.CompareResult})
  name: EncapsulationCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__1_Towel_DataStructures_Omnitree_Bounds___0__Towel_DataStructures_Omnitree_Bounds___0__Func___0___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Bounds{``0},Func{``0,``0,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1>(Towel.DataStructures.Omnitree.Bounds<Axis1>, Towel.DataStructures.Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1)(Towel.DataStructures.Omnitree.Bounds(Of Axis1), Towel.DataStructures.Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,Towel.CompareResult})
  name: EncapsulationCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__1_Towel_DataStructures_Omnitree_Bounds___0__Towel_DataStructures_Omnitree_Vector___0__Func___0___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1>(Towel.DataStructures.Omnitree.Bounds<Axis1>, Towel.DataStructures.Omnitree.Vector<Axis1>, Func<Axis1, Axis1, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1)(Towel.DataStructures.Omnitree.Bounds(Of Axis1), Towel.DataStructures.Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Bounds{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__2_Towel_DataStructures_Omnitree_Bounds___0___1__Towel_DataStructures_Omnitree_Bounds___0___1__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Bounds{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__2_Towel_DataStructures_Omnitree_Bounds___0___1__Towel_DataStructures_Omnitree_Vector___0___1__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__3_Towel_DataStructures_Omnitree_Bounds___0___1___2__Towel_DataStructures_Omnitree_Bounds___0___1___2__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__3_Towel_DataStructures_Omnitree_Bounds___0___1___2__Towel_DataStructures_Omnitree_Vector___0___1___2__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__4_Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__4_Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Towel_DataStructures_Omnitree_Vector___0___1___2___3__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__5_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__5_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__6_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__6_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__7_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__Func___6___6_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>, Func<Axis7, Axis7, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult), Func(Of Axis7, Axis7, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
- uid: Towel.DataStructures.Omnitree.EncapsulationCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name: EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EncapsulationCheck__7_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5___6__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__Func___6___6_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.EncapsulationCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name.vb: EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
  fullName: Towel.DataStructures.Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>, Func<Axis7, Axis7, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult), Func(Of Axis7, Axis7, Towel.CompareResult))
  nameWithType: Omnitree.EncapsulationCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  nameWithType.vb: Omnitree.EncapsulationCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
- uid: Towel.DataStructures.Omnitree.EqualsCheck*
  name: EqualsCheck
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck_
  commentId: Overload:Towel.DataStructures.Omnitree.EqualsCheck
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.EqualsCheck
  nameWithType: Omnitree.EqualsCheck
- uid: Towel.DataStructures.Omnitree.EqualsCheck``1(Towel.DataStructures.Omnitree.Vector{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,System.Boolean})
  name: EqualsCheck<Axis1>(Omnitree.Vector<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__1_Towel_DataStructures_Omnitree_Vector___0__Towel_DataStructures_Omnitree_Vector___0__Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``1(Towel.DataStructures.Omnitree.Vector{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,System.Boolean})
  name.vb: EqualsCheck(Of Axis1)(Omnitree.Vector(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1>(Towel.DataStructures.Omnitree.Vector<Axis1>, Towel.DataStructures.Omnitree.Vector<Axis1>, Func<Axis1, Axis1, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1)(Towel.DataStructures.Omnitree.Vector(Of Axis1), Towel.DataStructures.Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1>(Omnitree.Vector<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1)(Omnitree.Vector(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``2(Towel.DataStructures.Omnitree.Vector{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean})
  name: EqualsCheck<Axis1, Axis2>(Omnitree.Vector<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__2_Towel_DataStructures_Omnitree_Vector___0___1__Towel_DataStructures_Omnitree_Vector___0___1__Func___0___0_System_Boolean__Func___1___1_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``2(Towel.DataStructures.Omnitree.Vector{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2)(Omnitree.Vector(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2>(Omnitree.Vector<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2)(Omnitree.Vector(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``3(Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean})
  name: EqualsCheck<Axis1, Axis2, Axis3>(Omnitree.Vector<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__3_Towel_DataStructures_Omnitree_Vector___0___1___2__Towel_DataStructures_Omnitree_Vector___0___1___2__Func___0___0_System_Boolean__Func___1___1_System_Boolean__Func___2___2_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``3(Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2, Axis3)(Omnitree.Vector(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2, Axis3>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>, Func<Axis3, Axis3, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean), Func(Of Axis3, Axis3, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2, Axis3>(Omnitree.Vector<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3)(Omnitree.Vector(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``4(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean})
  name: EqualsCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__4_Towel_DataStructures_Omnitree_Vector___0___1___2___3__Towel_DataStructures_Omnitree_Vector___0___1___2___3__Func___0___0_System_Boolean__Func___1___1_System_Boolean__Func___2___2_System_Boolean__Func___3___3_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``4(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>, Func<Axis3, Axis3, System.Boolean>, Func<Axis4, Axis4, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean), Func(Of Axis3, Axis3, System.Boolean), Func(Of Axis4, Axis4, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``5(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean})
  name: EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__5_Towel_DataStructures_Omnitree_Vector___0___1___2___3___4__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4__Func___0___0_System_Boolean__Func___1___1_System_Boolean__Func___2___2_System_Boolean__Func___3___3_System_Boolean__Func___4___4_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``5(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>, Func<Axis3, Axis3, System.Boolean>, Func<Axis4, Axis4, System.Boolean>, Func<Axis5, Axis5, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean), Func(Of Axis3, Axis3, System.Boolean), Func(Of Axis4, Axis4, System.Boolean), Func(Of Axis5, Axis5, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``6(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean},Func{``5,``5,System.Boolean})
  name: EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>, Func<Axis6, Axis6, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__6_Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5__Func___0___0_System_Boolean__Func___1___1_System_Boolean__Func___2___2_System_Boolean__Func___3___3_System_Boolean__Func___4___4_System_Boolean__Func___5___5_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``6(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean},Func{``5,``5,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean), Func(Of Axis6, Axis6, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>, Func<Axis3, Axis3, System.Boolean>, Func<Axis4, Axis4, System.Boolean>, Func<Axis5, Axis5, System.Boolean>, Func<Axis6, Axis6, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean), Func(Of Axis3, Axis3, System.Boolean), Func(Of Axis4, Axis4, System.Boolean), Func(Of Axis5, Axis5, System.Boolean), Func(Of Axis6, Axis6, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>, Func<Axis6, Axis6, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean), Func(Of Axis6, Axis6, Boolean))
- uid: Towel.DataStructures.Omnitree.EqualsCheck``7(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean},Func{``5,``5,System.Boolean},Func{``6,``6,System.Boolean})
  name: EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>, Func<Axis6, Axis6, Boolean>, Func<Axis7, Axis7, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_EqualsCheck__7_Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5___6__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5___6__Func___0___0_System_Boolean__Func___1___1_System_Boolean__Func___2___2_System_Boolean__Func___3___3_System_Boolean__Func___4___4_System_Boolean__Func___5___5_System_Boolean__Func___6___6_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.EqualsCheck``7(Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,System.Boolean},Func{``1,``1,System.Boolean},Func{``2,``2,System.Boolean},Func{``3,``3,System.Boolean},Func{``4,``4,System.Boolean},Func{``5,``5,System.Boolean},Func{``6,``6,System.Boolean})
  name.vb: EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean), Func(Of Axis6, Axis6, Boolean), Func(Of Axis7, Axis7, Boolean))
  fullName: Towel.DataStructures.Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, System.Boolean>, Func<Axis2, Axis2, System.Boolean>, Func<Axis3, Axis3, System.Boolean>, Func<Axis4, Axis4, System.Boolean>, Func<Axis5, Axis5, System.Boolean>, Func<Axis6, Axis6, System.Boolean>, Func<Axis7, Axis7, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, System.Boolean), Func(Of Axis2, Axis2, System.Boolean), Func(Of Axis3, Axis3, System.Boolean), Func(Of Axis4, Axis4, System.Boolean), Func(Of Axis5, Axis5, System.Boolean), Func(Of Axis6, Axis6, System.Boolean), Func(Of Axis7, Axis7, System.Boolean))
  nameWithType: Omnitree.EqualsCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Boolean>, Func<Axis2, Axis2, Boolean>, Func<Axis3, Axis3, Boolean>, Func<Axis4, Axis4, Boolean>, Func<Axis5, Axis5, Boolean>, Func<Axis6, Axis6, Boolean>, Func<Axis7, Axis7, Boolean>)
  nameWithType.vb: Omnitree.EqualsCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Boolean), Func(Of Axis2, Axis2, Boolean), Func(Of Axis3, Axis3, Boolean), Func(Of Axis4, Axis4, Boolean), Func(Of Axis5, Axis5, Boolean), Func(Of Axis6, Axis6, Boolean), Func(Of Axis7, Axis7, Boolean))
- uid: Towel.DataStructures.Omnitree.GetBoundings`2
  name: Omnitree.GetBoundings<T, A1>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-2.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`2
  name.vb: Omnitree.GetBoundings(Of T, A1)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1)
  nameWithType: Omnitree.GetBoundings<T, A1>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1)
- uid: Towel.DataStructures.Omnitree.GetBoundings`3
  name: Omnitree.GetBoundings<T, A1, A2>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-3.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`3
  name.vb: Omnitree.GetBoundings(Of T, A1, A2)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2)
  nameWithType: Omnitree.GetBoundings<T, A1, A2>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2)
- uid: Towel.DataStructures.Omnitree.GetBoundings`4
  name: Omnitree.GetBoundings<T, A1, A2, A3>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-4.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`4
  name.vb: Omnitree.GetBoundings(Of T, A1, A2, A3)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3)
  nameWithType: Omnitree.GetBoundings<T, A1, A2, A3>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.GetBoundings`5
  name: Omnitree.GetBoundings<T, A1, A2, A3, A4>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-5.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`5
  name.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4)
  nameWithType: Omnitree.GetBoundings<T, A1, A2, A3, A4>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.GetBoundings`6
  name: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-6.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`6
  name.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5)
  nameWithType: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.GetBoundings`7
  name: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-7.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`7
  name.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.GetBoundings`8
  name: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>
  href: api/Towel.DataStructures.Omnitree.GetBoundings-8.html
  commentId: T:Towel.DataStructures.Omnitree.GetBoundings`8
  name.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7)
  fullName: Towel.DataStructures.Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>
  fullName.vb: Towel.DataStructures.Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.GetBoundings<T, A1, A2, A3, A4, A5, A6, A7>
  nameWithType.vb: Omnitree.GetBoundings(Of T, A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.GetBounds`2
  name: Omnitree.GetBounds<T, A1>
  href: api/Towel.DataStructures.Omnitree.GetBounds-2.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`2
  name.vb: Omnitree.GetBounds(Of T, A1)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1)
  nameWithType: Omnitree.GetBounds<T, A1>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1)
- uid: Towel.DataStructures.Omnitree.GetBounds`3
  name: Omnitree.GetBounds<T, A1, A2>
  href: api/Towel.DataStructures.Omnitree.GetBounds-3.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`3
  name.vb: Omnitree.GetBounds(Of T, A1, A2)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2)
  nameWithType: Omnitree.GetBounds<T, A1, A2>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2)
- uid: Towel.DataStructures.Omnitree.GetBounds`4
  name: Omnitree.GetBounds<T, A1, A2, A3>
  href: api/Towel.DataStructures.Omnitree.GetBounds-4.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`4
  name.vb: Omnitree.GetBounds(Of T, A1, A2, A3)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2, A3>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2, A3)
  nameWithType: Omnitree.GetBounds<T, A1, A2, A3>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.GetBounds`5
  name: Omnitree.GetBounds<T, A1, A2, A3, A4>
  href: api/Towel.DataStructures.Omnitree.GetBounds-5.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`5
  name.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2, A3, A4>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2, A3, A4)
  nameWithType: Omnitree.GetBounds<T, A1, A2, A3, A4>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.GetBounds`6
  name: Omnitree.GetBounds<T, A1, A2, A3, A4, A5>
  href: api/Towel.DataStructures.Omnitree.GetBounds-6.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`6
  name.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2, A3, A4, A5>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5)
  nameWithType: Omnitree.GetBounds<T, A1, A2, A3, A4, A5>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.GetBounds`7
  name: Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6>
  href: api/Towel.DataStructures.Omnitree.GetBounds-7.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`7
  name.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.GetBounds`8
  name: Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6, A7>
  href: api/Towel.DataStructures.Omnitree.GetBounds-8.html
  commentId: T:Towel.DataStructures.Omnitree.GetBounds`8
  name.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)
  fullName: Towel.DataStructures.Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6, A7>
  fullName.vb: Towel.DataStructures.Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.GetBounds<T, A1, A2, A3, A4, A5, A6, A7>
  nameWithType.vb: Omnitree.GetBounds(Of T, A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.InclusionCheck*
  name: InclusionCheck
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck_
  commentId: Overload:Towel.DataStructures.Omnitree.InclusionCheck
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.InclusionCheck
  nameWithType: Omnitree.InclusionCheck
- uid: Towel.DataStructures.Omnitree.InclusionCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Bounds{``0},Func{``0,``0,Towel.CompareResult})
  name: InclusionCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__1_Towel_DataStructures_Omnitree_Bounds___0__Towel_DataStructures_Omnitree_Bounds___0__Func___0___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Bounds{``0},Func{``0,``0,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1>(Towel.DataStructures.Omnitree.Bounds<Axis1>, Towel.DataStructures.Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1)(Towel.DataStructures.Omnitree.Bounds(Of Axis1), Towel.DataStructures.Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Bounds<Axis1>, Func<Axis1, Axis1, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Bounds(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Bounds{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__2_Towel_DataStructures_Omnitree_Bounds___0___1__Towel_DataStructures_Omnitree_Bounds___0___1__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Bounds{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Bounds<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Bounds(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__3_Towel_DataStructures_Omnitree_Bounds___0___1___2__Towel_DataStructures_Omnitree_Bounds___0___1___2__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2, Axis3>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Bounds<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Bounds(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__4_Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__5_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__6_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
- uid: Towel.DataStructures.Omnitree.InclusionCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name: InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_InclusionCheck__7_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__Func___6___6_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.InclusionCheck``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name.vb: InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
  fullName: Towel.DataStructures.Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>, Func<Axis7, Axis7, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult), Func(Of Axis7, Axis7, Towel.CompareResult))
  nameWithType: Omnitree.InclusionCheck<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  nameWithType.vb: Omnitree.InclusionCheck(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
- uid: Towel.DataStructures.Omnitree.Keyword
  name: Omnitree.Keyword
  href: api/Towel.DataStructures.Omnitree.Keyword.html
  commentId: T:Towel.DataStructures.Omnitree.Keyword
  fullName: Towel.DataStructures.Omnitree.Keyword
  nameWithType: Omnitree.Keyword
- uid: Towel.DataStructures.Omnitree.Keyword.None
  name: None
  href: api/Towel.DataStructures.Omnitree.Keyword.html#Towel_DataStructures_Omnitree_Keyword_None
  commentId: F:Towel.DataStructures.Omnitree.Keyword.None
  fullName: Towel.DataStructures.Omnitree.Keyword.None
  nameWithType: Omnitree.Keyword.None
- uid: Towel.DataStructures.Omnitree.Location`2
  name: Omnitree.Location<T, A1>
  href: api/Towel.DataStructures.Omnitree.Location-2.html
  commentId: T:Towel.DataStructures.Omnitree.Location`2
  name.vb: Omnitree.Location(Of T, A1)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1)
  nameWithType: Omnitree.Location<T, A1>
  nameWithType.vb: Omnitree.Location(Of T, A1)
- uid: Towel.DataStructures.Omnitree.Location`3
  name: Omnitree.Location<T, A1, A2>
  href: api/Towel.DataStructures.Omnitree.Location-3.html
  commentId: T:Towel.DataStructures.Omnitree.Location`3
  name.vb: Omnitree.Location(Of T, A1, A2)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2)
  nameWithType: Omnitree.Location<T, A1, A2>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2)
- uid: Towel.DataStructures.Omnitree.Location`4
  name: Omnitree.Location<T, A1, A2, A3>
  href: api/Towel.DataStructures.Omnitree.Location-4.html
  commentId: T:Towel.DataStructures.Omnitree.Location`4
  name.vb: Omnitree.Location(Of T, A1, A2, A3)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2, A3>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2, A3)
  nameWithType: Omnitree.Location<T, A1, A2, A3>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.Location`5
  name: Omnitree.Location<T, A1, A2, A3, A4>
  href: api/Towel.DataStructures.Omnitree.Location-5.html
  commentId: T:Towel.DataStructures.Omnitree.Location`5
  name.vb: Omnitree.Location(Of T, A1, A2, A3, A4)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2, A3, A4>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2, A3, A4)
  nameWithType: Omnitree.Location<T, A1, A2, A3, A4>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.Location`6
  name: Omnitree.Location<T, A1, A2, A3, A4, A5>
  href: api/Towel.DataStructures.Omnitree.Location-6.html
  commentId: T:Towel.DataStructures.Omnitree.Location`6
  name.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2, A3, A4, A5>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2, A3, A4, A5)
  nameWithType: Omnitree.Location<T, A1, A2, A3, A4, A5>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.Location`7
  name: Omnitree.Location<T, A1, A2, A3, A4, A5, A6>
  href: api/Towel.DataStructures.Omnitree.Location-7.html
  commentId: T:Towel.DataStructures.Omnitree.Location`7
  name.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2, A3, A4, A5, A6>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.Location<T, A1, A2, A3, A4, A5, A6>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.Location`8
  name: Omnitree.Location<T, A1, A2, A3, A4, A5, A6, A7>
  href: api/Towel.DataStructures.Omnitree.Location-8.html
  commentId: T:Towel.DataStructures.Omnitree.Location`8
  name.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6, A7)
  fullName: Towel.DataStructures.Omnitree.Location<T, A1, A2, A3, A4, A5, A6, A7>
  fullName.vb: Towel.DataStructures.Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.Location<T, A1, A2, A3, A4, A5, A6, A7>
  nameWithType.vb: Omnitree.Location(Of T, A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.Remove*
  name: Remove
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove_
  commentId: Overload:Towel.DataStructures.Omnitree.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Remove
  nameWithType: Omnitree.Remove
- uid: Towel.DataStructures.Omnitree.Remove``2(IOmnitreeBounds{``0,``1},``0)
  name: Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__2_IOmnitreeBounds___0___1____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``2(IOmnitreeBounds{``0,``1},``0)
  name.vb: Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T)
  nameWithType: Omnitree.Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T)
- uid: Towel.DataStructures.Omnitree.Remove``2(IOmnitreeBounds{``0,``1},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__2_IOmnitreeBounds___0___1____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``2(IOmnitreeBounds{``0,``1},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1>(IOmnitreeBounds<T, Axis1>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1)(IOmnitreeBounds(Of T, Axis1), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``2(Towel.DataStructures.IOmnitreePoints{``0,``1},``0)
  name: Remove<T, Axis1>(IOmnitreePoints<T, Axis1>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__2_Towel_DataStructures_IOmnitreePoints___0___1____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``2(Towel.DataStructures.IOmnitreePoints{``0,``1},``0)
  name.vb: Remove(Of T, Axis1)(IOmnitreePoints(Of T, Axis1), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1>(Towel.DataStructures.IOmnitreePoints<T, Axis1>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1)(Towel.DataStructures.IOmnitreePoints(Of T, Axis1), T)
  nameWithType: Omnitree.Remove<T, Axis1>(IOmnitreePoints<T, Axis1>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1)(IOmnitreePoints(Of T, Axis1), T)
- uid: Towel.DataStructures.Omnitree.Remove``2(Towel.DataStructures.IOmnitreePoints{``0,``1},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1>(IOmnitreePoints<T, Axis1>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__2_Towel_DataStructures_IOmnitreePoints___0___1____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``2(Towel.DataStructures.IOmnitreePoints{``0,``1},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1)(IOmnitreePoints(Of T, Axis1), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1>(Towel.DataStructures.IOmnitreePoints<T, Axis1>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1)(Towel.DataStructures.IOmnitreePoints(Of T, Axis1), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1>(IOmnitreePoints<T, Axis1>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1)(IOmnitreePoints(Of T, Axis1), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``3(IOmnitreeBounds{``0,``1,``2},``0)
  name: Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__3_IOmnitreeBounds___0___1___2____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``3(IOmnitreeBounds{``0,``1,``2},``0)
  name.vb: Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T)
- uid: Towel.DataStructures.Omnitree.Remove``3(IOmnitreeBounds{``0,``1,``2},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__3_IOmnitreeBounds___0___1___2____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``3(IOmnitreeBounds{``0,``1,``2},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2>(IOmnitreeBounds<T, Axis1, Axis2>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreeBounds(Of T, Axis1, Axis2), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``3(IOmnitreePoints{``0,``1,``2},``0)
  name: Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__3_IOmnitreePoints___0___1___2____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``3(IOmnitreePoints{``0,``1,``2},``0)
  name.vb: Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T)
- uid: Towel.DataStructures.Omnitree.Remove``3(IOmnitreePoints{``0,``1,``2},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__3_IOmnitreePoints___0___1___2____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``3(IOmnitreePoints{``0,``1,``2},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2>(IOmnitreePoints<T, Axis1, Axis2>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2)(IOmnitreePoints(Of T, Axis1, Axis2), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``4(IOmnitreeBounds{``0,``1,``2,``3},``0)
  name: Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__4_IOmnitreeBounds___0___1___2___3____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``4(IOmnitreeBounds{``0,``1,``2,``3},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T)
- uid: Towel.DataStructures.Omnitree.Remove``4(IOmnitreeBounds{``0,``1,``2,``3},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__4_IOmnitreeBounds___0___1___2___3____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``4(IOmnitreeBounds{``0,``1,``2,``3},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreeBounds<T, Axis1, Axis2, Axis3>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``4(IOmnitreePoints{``0,``1,``2,``3},``0)
  name: Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__4_IOmnitreePoints___0___1___2___3____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``4(IOmnitreePoints{``0,``1,``2,``3},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T)
- uid: Towel.DataStructures.Omnitree.Remove``4(IOmnitreePoints{``0,``1,``2,``3},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__4_IOmnitreePoints___0___1___2___3____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``4(IOmnitreePoints{``0,``1,``2,``3},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3>(IOmnitreePoints<T, Axis1, Axis2, Axis3>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``5(IOmnitreeBounds{``0,``1,``2,``3,``4},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__5_IOmnitreeBounds___0___1___2___3___4____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``5(IOmnitreeBounds{``0,``1,``2,``3,``4},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T)
- uid: Towel.DataStructures.Omnitree.Remove``5(IOmnitreeBounds{``0,``1,``2,``3,``4},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__5_IOmnitreeBounds___0___1___2___3___4____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``5(IOmnitreeBounds{``0,``1,``2,``3,``4},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``5(IOmnitreePoints{``0,``1,``2,``3,``4},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__5_IOmnitreePoints___0___1___2___3___4____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``5(IOmnitreePoints{``0,``1,``2,``3,``4},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T)
- uid: Towel.DataStructures.Omnitree.Remove``5(IOmnitreePoints{``0,``1,``2,``3,``4},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__5_IOmnitreePoints___0___1___2___3___4____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``5(IOmnitreePoints{``0,``1,``2,``3,``4},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``6(IOmnitreeBounds{``0,``1,``2,``3,``4,``5},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__6_IOmnitreeBounds___0___1___2___3___4___5____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``6(IOmnitreeBounds{``0,``1,``2,``3,``4,``5},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
- uid: Towel.DataStructures.Omnitree.Remove``6(IOmnitreeBounds{``0,``1,``2,``3,``4,``5},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__6_IOmnitreeBounds___0___1___2___3___4___5____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``6(IOmnitreeBounds{``0,``1,``2,``3,``4,``5},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``6(IOmnitreePoints{``0,``1,``2,``3,``4,``5},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__6_IOmnitreePoints___0___1___2___3___4___5____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``6(IOmnitreePoints{``0,``1,``2,``3,``4,``5},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T)
- uid: Towel.DataStructures.Omnitree.Remove``6(IOmnitreePoints{``0,``1,``2,``3,``4,``5},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__6_IOmnitreePoints___0___1___2___3___4___5____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``6(IOmnitreePoints{``0,``1,``2,``3,``4,``5},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``7(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__7_IOmnitreeBounds___0___1___2___3___4___5___6____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``7(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
- uid: Towel.DataStructures.Omnitree.Remove``7(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__7_IOmnitreeBounds___0___1___2___3___4___5___6____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``7(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``7(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__7_IOmnitreePoints___0___1___2___3___4___5___6____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``7(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T)
- uid: Towel.DataStructures.Omnitree.Remove``7(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__7_IOmnitreePoints___0___1___2___3___4___5___6____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``7(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``8(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6,``7},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__8_IOmnitreeBounds___0___1___2___3___4___5___6___7____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``8(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6,``7},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
- uid: Towel.DataStructures.Omnitree.Remove``8(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6,``7},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__8_IOmnitreeBounds___0___1___2___3___4___5___6___7____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``8(IOmnitreeBounds{``0,``1,``2,``3,``4,``5,``6,``7},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreeBounds<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreeBounds(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.Remove``8(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6,``7},``0)
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__8_IOmnitreePoints___0___1___2___3___4___5___6___7____0_
  commentId: M:Towel.DataStructures.Omnitree.Remove``8(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6,``7},``0)
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T)
- uid: Towel.DataStructures.Omnitree.Remove``8(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6,``7},``0,Func{``0,``0,System.Boolean})
  name: Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, Boolean>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_Remove__8_IOmnitreePoints___0___1___2___3___4___5___6___7____0_Func___0___0_System_Boolean__
  commentId: M:Towel.DataStructures.Omnitree.Remove``8(IOmnitreePoints{``0,``1,``2,``3,``4,``5,``6,``7},``0,Func{``0,``0,System.Boolean})
  name.vb: Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, Boolean))
  fullName: Towel.DataStructures.Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, System.Boolean>)
  fullName.vb: Towel.DataStructures.Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, System.Boolean))
  nameWithType: Omnitree.Remove<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(IOmnitreePoints<T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, T, Func<T, T, Boolean>)
  nameWithType.vb: Omnitree.Remove(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(IOmnitreePoints(Of T, Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), T, Func(Of T, T, Boolean))
- uid: Towel.DataStructures.Omnitree.StraddlesLines*
  name: StraddlesLines
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines_
  commentId: Overload:Towel.DataStructures.Omnitree.StraddlesLines
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.StraddlesLines
  nameWithType: Omnitree.StraddlesLines
- uid: Towel.DataStructures.Omnitree.StraddlesLines``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,Towel.CompareResult})
  name: StraddlesLines<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__1_Towel_DataStructures_Omnitree_Bounds___0__Towel_DataStructures_Omnitree_Vector___0__Func___0___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``1(Towel.DataStructures.Omnitree.Bounds{``0},Towel.DataStructures.Omnitree.Vector{``0},Func{``0,``0,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1>(Towel.DataStructures.Omnitree.Bounds<Axis1>, Towel.DataStructures.Omnitree.Vector<Axis1>, Func<Axis1, Axis1, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1)(Towel.DataStructures.Omnitree.Bounds(Of Axis1), Towel.DataStructures.Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1>(Omnitree.Bounds<Axis1>, Omnitree.Vector<Axis1>, Func<Axis1, Axis1, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1)(Omnitree.Bounds(Of Axis1), Omnitree.Vector(Of Axis1), Func(Of Axis1, Axis1, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__2_Towel_DataStructures_Omnitree_Bounds___0___1__Towel_DataStructures_Omnitree_Vector___0___1__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``2(Towel.DataStructures.Omnitree.Bounds{``0,``1},Towel.DataStructures.Omnitree.Vector{``0,``1},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2>(Omnitree.Bounds<Axis1, Axis2>, Omnitree.Vector<Axis1, Axis2>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2)(Omnitree.Bounds(Of Axis1, Axis2), Omnitree.Vector(Of Axis1, Axis2), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__3_Towel_DataStructures_Omnitree_Bounds___0___1___2__Towel_DataStructures_Omnitree_Vector___0___1___2__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``3(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2},Towel.DataStructures.Omnitree.Vector{``0,``1,``2},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2, Axis3>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2, Axis3>(Omnitree.Bounds<Axis1, Axis2, Axis3>, Omnitree.Vector<Axis1, Axis2, Axis3>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3)(Omnitree.Bounds(Of Axis1, Axis2, Axis3), Omnitree.Vector(Of Axis1, Axis2, Axis3), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__4_Towel_DataStructures_Omnitree_Bounds___0___1___2___3__Towel_DataStructures_Omnitree_Vector___0___1___2___3__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``4(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__5_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``5(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__6_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``6(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult))
- uid: Towel.DataStructures.Omnitree.StraddlesLines``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name: StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  href: api/Towel.DataStructures.Omnitree.html#Towel_DataStructures_Omnitree_StraddlesLines__7_Towel_DataStructures_Omnitree_Bounds___0___1___2___3___4___5___6__Towel_DataStructures_Omnitree_Vector___0___1___2___3___4___5___6__Func___0___0_Towel_CompareResult__Func___1___1_Towel_CompareResult__Func___2___2_Towel_CompareResult__Func___3___3_Towel_CompareResult__Func___4___4_Towel_CompareResult__Func___5___5_Towel_CompareResult__Func___6___6_Towel_CompareResult__
  commentId: M:Towel.DataStructures.Omnitree.StraddlesLines``7(Towel.DataStructures.Omnitree.Bounds{``0,``1,``2,``3,``4,``5,``6},Towel.DataStructures.Omnitree.Vector{``0,``1,``2,``3,``4,``5,``6},Func{``0,``0,Towel.CompareResult},Func{``1,``1,Towel.CompareResult},Func{``2,``2,Towel.CompareResult},Func{``3,``3,Towel.CompareResult},Func{``4,``4,Towel.CompareResult},Func{``5,``5,Towel.CompareResult},Func{``6,``6,Towel.CompareResult})
  name.vb: StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
  fullName: Towel.DataStructures.Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Towel.DataStructures.Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Towel.DataStructures.Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, Towel.CompareResult>, Func<Axis2, Axis2, Towel.CompareResult>, Func<Axis3, Axis3, Towel.CompareResult>, Func<Axis4, Axis4, Towel.CompareResult>, Func<Axis5, Axis5, Towel.CompareResult>, Func<Axis6, Axis6, Towel.CompareResult>, Func<Axis7, Axis7, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Towel.DataStructures.Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Towel.DataStructures.Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, Towel.CompareResult), Func(Of Axis2, Axis2, Towel.CompareResult), Func(Of Axis3, Axis3, Towel.CompareResult), Func(Of Axis4, Axis4, Towel.CompareResult), Func(Of Axis5, Axis5, Towel.CompareResult), Func(Of Axis6, Axis6, Towel.CompareResult), Func(Of Axis7, Axis7, Towel.CompareResult))
  nameWithType: Omnitree.StraddlesLines<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>(Omnitree.Bounds<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Omnitree.Vector<Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7>, Func<Axis1, Axis1, CompareResult>, Func<Axis2, Axis2, CompareResult>, Func<Axis3, Axis3, CompareResult>, Func<Axis4, Axis4, CompareResult>, Func<Axis5, Axis5, CompareResult>, Func<Axis6, Axis6, CompareResult>, Func<Axis7, Axis7, CompareResult>)
  nameWithType.vb: Omnitree.StraddlesLines(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7)(Omnitree.Bounds(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Omnitree.Vector(Of Axis1, Axis2, Axis3, Axis4, Axis5, Axis6, Axis7), Func(Of Axis1, Axis1, CompareResult), Func(Of Axis2, Axis2, CompareResult), Func(Of Axis3, Axis3, CompareResult), Func(Of Axis4, Axis4, CompareResult), Func(Of Axis5, Axis5, CompareResult), Func(Of Axis6, Axis6, CompareResult), Func(Of Axis7, Axis7, CompareResult))
- uid: Towel.DataStructures.Omnitree.SubdivisionOverride`3
  name: Omnitree.SubdivisionOverride<T, A, BoundsType>
  href: api/Towel.DataStructures.Omnitree.SubdivisionOverride-3.html
  commentId: T:Towel.DataStructures.Omnitree.SubdivisionOverride`3
  name.vb: Omnitree.SubdivisionOverride(Of T, A, BoundsType)
  fullName: Towel.DataStructures.Omnitree.SubdivisionOverride<T, A, BoundsType>
  fullName.vb: Towel.DataStructures.Omnitree.SubdivisionOverride(Of T, A, BoundsType)
  nameWithType: Omnitree.SubdivisionOverride<T, A, BoundsType>
  nameWithType.vb: Omnitree.SubdivisionOverride(Of T, A, BoundsType)
- uid: Towel.DataStructures.Omnitree.Vector
  name: Omnitree.Vector
  href: api/Towel.DataStructures.Omnitree.Vector.html
  commentId: T:Towel.DataStructures.Omnitree.Vector
  fullName: Towel.DataStructures.Omnitree.Vector
  nameWithType: Omnitree.Vector
- uid: Towel.DataStructures.Omnitree.Vector.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector.html#Towel_DataStructures_Omnitree_Vector_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector.Default
  fullName: Towel.DataStructures.Omnitree.Vector.Default
  nameWithType: Omnitree.Vector.Default
- uid: Towel.DataStructures.Omnitree.Vector.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector.html#Towel_DataStructures_Omnitree_Vector_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector.Default
  nameWithType: Omnitree.Vector.Default
- uid: Towel.DataStructures.Omnitree.Vector.Location
  name: Location
  href: api/Towel.DataStructures.Omnitree.Vector.html#Towel_DataStructures_Omnitree_Vector_Location
  commentId: P:Towel.DataStructures.Omnitree.Vector.Location
  fullName: Towel.DataStructures.Omnitree.Vector.Location
  nameWithType: Omnitree.Vector.Location
- uid: Towel.DataStructures.Omnitree.Vector.Location*
  name: Location
  href: api/Towel.DataStructures.Omnitree.Vector.html#Towel_DataStructures_Omnitree_Vector_Location_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector.Location
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector.Location
  nameWithType: Omnitree.Vector.Location
- uid: Towel.DataStructures.Omnitree.Vector`1
  name: Omnitree.Vector<A1>
  href: api/Towel.DataStructures.Omnitree.Vector-1.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`1
  name.vb: Omnitree.Vector(Of A1)
  fullName: Towel.DataStructures.Omnitree.Vector<A1>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1)
  nameWithType: Omnitree.Vector<A1>
  nameWithType.vb: Omnitree.Vector(Of A1)
- uid: Towel.DataStructures.Omnitree.Vector`1.#ctor(`0)
  name: Vector(A1)
  href: api/Towel.DataStructures.Omnitree.Vector-1.html#Towel_DataStructures_Omnitree_Vector_1__ctor__0_
  commentId: M:Towel.DataStructures.Omnitree.Vector`1.#ctor(`0)
  fullName: Towel.DataStructures.Omnitree.Vector<A1>.Vector(A1)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1).Vector(A1)
  nameWithType: Omnitree.Vector<A1>.Vector(A1)
  nameWithType.vb: Omnitree.Vector(Of A1).Vector(A1)
- uid: Towel.DataStructures.Omnitree.Vector`1.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-1.html#Towel_DataStructures_Omnitree_Vector_1__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1).Vector
  nameWithType: Omnitree.Vector<A1>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1).Vector
- uid: Towel.DataStructures.Omnitree.Vector`1.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-1.html#Towel_DataStructures_Omnitree_Vector_1_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`1.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1).Axis1
  nameWithType: Omnitree.Vector<A1>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`1.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-1.html#Towel_DataStructures_Omnitree_Vector_1_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`1.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1).Default
  nameWithType: Omnitree.Vector<A1>.Default
  nameWithType.vb: Omnitree.Vector(Of A1).Default
- uid: Towel.DataStructures.Omnitree.Vector`1.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-1.html#Towel_DataStructures_Omnitree_Vector_1_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`1.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1).Default
  nameWithType: Omnitree.Vector<A1>.Default
  nameWithType.vb: Omnitree.Vector(Of A1).Default
- uid: Towel.DataStructures.Omnitree.Vector`2
  name: Omnitree.Vector<A1, A2>
  href: api/Towel.DataStructures.Omnitree.Vector-2.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`2
  name.vb: Omnitree.Vector(Of A1, A2)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2)
  nameWithType: Omnitree.Vector<A1, A2>
  nameWithType.vb: Omnitree.Vector(Of A1, A2)
- uid: Towel.DataStructures.Omnitree.Vector`2.#ctor(`0,`1)
  name: Vector(A1, A2)
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2__ctor__0__1_
  commentId: M:Towel.DataStructures.Omnitree.Vector`2.#ctor(`0,`1)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Vector(A1, A2)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Vector(A1, A2)
  nameWithType: Omnitree.Vector<A1, A2>.Vector(A1, A2)
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Vector(A1, A2)
- uid: Towel.DataStructures.Omnitree.Vector`2.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Vector
  nameWithType: Omnitree.Vector<A1, A2>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Vector
- uid: Towel.DataStructures.Omnitree.Vector`2.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`2.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Axis1
  nameWithType: Omnitree.Vector<A1, A2>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`2.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`2.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Axis2
  nameWithType: Omnitree.Vector<A1, A2>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`2.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`2.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Default
  nameWithType: Omnitree.Vector<A1, A2>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Default
- uid: Towel.DataStructures.Omnitree.Vector`2.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-2.html#Towel_DataStructures_Omnitree_Vector_2_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`2.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2).Default
  nameWithType: Omnitree.Vector<A1, A2>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2).Default
- uid: Towel.DataStructures.Omnitree.Vector`3
  name: Omnitree.Vector<A1, A2, A3>
  href: api/Towel.DataStructures.Omnitree.Vector-3.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`3
  name.vb: Omnitree.Vector(Of A1, A2, A3)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3)
  nameWithType: Omnitree.Vector<A1, A2, A3>
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.Vector`3.#ctor(`0,`1,`2)
  name: Vector(A1, A2, A3)
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3__ctor__0__1__2_
  commentId: M:Towel.DataStructures.Omnitree.Vector`3.#ctor(`0,`1,`2)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Vector(A1, A2, A3)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Vector(A1, A2, A3)
  nameWithType: Omnitree.Vector<A1, A2, A3>.Vector(A1, A2, A3)
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Vector(A1, A2, A3)
- uid: Towel.DataStructures.Omnitree.Vector`3.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`3.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Vector
  nameWithType: Omnitree.Vector<A1, A2, A3>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Vector
- uid: Towel.DataStructures.Omnitree.Vector`3.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`3.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Axis1
  nameWithType: Omnitree.Vector<A1, A2, A3>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`3.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`3.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Axis2
  nameWithType: Omnitree.Vector<A1, A2, A3>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`3.Axis3
  name: Axis3
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3_Axis3
  commentId: F:Towel.DataStructures.Omnitree.Vector`3.Axis3
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Axis3
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Axis3
  nameWithType: Omnitree.Vector<A1, A2, A3>.Axis3
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Axis3
- uid: Towel.DataStructures.Omnitree.Vector`3.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`3.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Default
  nameWithType: Omnitree.Vector<A1, A2, A3>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Default
- uid: Towel.DataStructures.Omnitree.Vector`3.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-3.html#Towel_DataStructures_Omnitree_Vector_3_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`3.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3).Default
  nameWithType: Omnitree.Vector<A1, A2, A3>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3).Default
- uid: Towel.DataStructures.Omnitree.Vector`4
  name: Omnitree.Vector<A1, A2, A3, A4>
  href: api/Towel.DataStructures.Omnitree.Vector-4.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`4
  name.vb: Omnitree.Vector(Of A1, A2, A3, A4)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.Vector`4.#ctor(`0,`1,`2,`3)
  name: Vector(A1, A2, A3, A4)
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4__ctor__0__1__2__3_
  commentId: M:Towel.DataStructures.Omnitree.Vector`4.#ctor(`0,`1,`2,`3)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Vector(A1, A2, A3, A4)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Vector(A1, A2, A3, A4)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Vector(A1, A2, A3, A4)
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Vector(A1, A2, A3, A4)
- uid: Towel.DataStructures.Omnitree.Vector`4.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`4.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Vector
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Vector
- uid: Towel.DataStructures.Omnitree.Vector`4.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`4.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Axis1
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`4.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`4.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Axis2
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`4.Axis3
  name: Axis3
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Axis3
  commentId: F:Towel.DataStructures.Omnitree.Vector`4.Axis3
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Axis3
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Axis3
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Axis3
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Axis3
- uid: Towel.DataStructures.Omnitree.Vector`4.Axis4
  name: Axis4
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Axis4
  commentId: F:Towel.DataStructures.Omnitree.Vector`4.Axis4
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Axis4
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Axis4
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Axis4
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Axis4
- uid: Towel.DataStructures.Omnitree.Vector`4.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`4.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Default
- uid: Towel.DataStructures.Omnitree.Vector`4.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-4.html#Towel_DataStructures_Omnitree_Vector_4_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`4.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4).Default
- uid: Towel.DataStructures.Omnitree.Vector`5
  name: Omnitree.Vector<A1, A2, A3, A4, A5>
  href: api/Towel.DataStructures.Omnitree.Vector-5.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`5
  name.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.Vector`5.#ctor(`0,`1,`2,`3,`4)
  name: Vector(A1, A2, A3, A4, A5)
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5__ctor__0__1__2__3__4_
  commentId: M:Towel.DataStructures.Omnitree.Vector`5.#ctor(`0,`1,`2,`3,`4)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Vector(A1, A2, A3, A4, A5)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Vector(A1, A2, A3, A4, A5)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Vector(A1, A2, A3, A4, A5)
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Vector(A1, A2, A3, A4, A5)
- uid: Towel.DataStructures.Omnitree.Vector`5.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`5.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Vector
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Vector
- uid: Towel.DataStructures.Omnitree.Vector`5.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`5.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis1
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`5.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`5.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis2
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`5.Axis3
  name: Axis3
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Axis3
  commentId: F:Towel.DataStructures.Omnitree.Vector`5.Axis3
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Axis3
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis3
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Axis3
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis3
- uid: Towel.DataStructures.Omnitree.Vector`5.Axis4
  name: Axis4
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Axis4
  commentId: F:Towel.DataStructures.Omnitree.Vector`5.Axis4
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Axis4
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis4
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Axis4
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis4
- uid: Towel.DataStructures.Omnitree.Vector`5.Axis5
  name: Axis5
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Axis5
  commentId: F:Towel.DataStructures.Omnitree.Vector`5.Axis5
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Axis5
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis5
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Axis5
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Axis5
- uid: Towel.DataStructures.Omnitree.Vector`5.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`5.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Default
- uid: Towel.DataStructures.Omnitree.Vector`5.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-5.html#Towel_DataStructures_Omnitree_Vector_5_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`5.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5).Default
- uid: Towel.DataStructures.Omnitree.Vector`6
  name: Omnitree.Vector<A1, A2, A3, A4, A5, A6>
  href: api/Towel.DataStructures.Omnitree.Vector-6.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`6
  name.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.Vector`6.#ctor(`0,`1,`2,`3,`4,`5)
  name: Vector(A1, A2, A3, A4, A5, A6)
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6__ctor__0__1__2__3__4__5_
  commentId: M:Towel.DataStructures.Omnitree.Vector`6.#ctor(`0,`1,`2,`3,`4,`5)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Vector(A1, A2, A3, A4, A5, A6)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Vector(A1, A2, A3, A4, A5, A6)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Vector(A1, A2, A3, A4, A5, A6)
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Vector(A1, A2, A3, A4, A5, A6)
- uid: Towel.DataStructures.Omnitree.Vector`6.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`6.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Vector
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Vector
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis1
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis2
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis3
  name: Axis3
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis3
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis3
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis3
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis3
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis3
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis3
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis4
  name: Axis4
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis4
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis4
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis4
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis4
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis4
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis4
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis5
  name: Axis5
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis5
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis5
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis5
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis5
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis5
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis5
- uid: Towel.DataStructures.Omnitree.Vector`6.Axis6
  name: Axis6
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Axis6
  commentId: F:Towel.DataStructures.Omnitree.Vector`6.Axis6
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis6
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis6
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Axis6
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Axis6
- uid: Towel.DataStructures.Omnitree.Vector`6.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`6.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Default
- uid: Towel.DataStructures.Omnitree.Vector`6.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-6.html#Towel_DataStructures_Omnitree_Vector_6_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`6.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6).Default
- uid: Towel.DataStructures.Omnitree.Vector`7
  name: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>
  href: api/Towel.DataStructures.Omnitree.Vector-7.html
  commentId: T:Towel.DataStructures.Omnitree.Vector`7
  name.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.Vector`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  name: Vector(A1, A2, A3, A4, A5, A6, A7)
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7__ctor__0__1__2__3__4__5__6_
  commentId: M:Towel.DataStructures.Omnitree.Vector`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Vector(A1, A2, A3, A4, A5, A6, A7)
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Vector(A1, A2, A3, A4, A5, A6, A7)
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Vector(A1, A2, A3, A4, A5, A6, A7)
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Vector(A1, A2, A3, A4, A5, A6, A7)
- uid: Towel.DataStructures.Omnitree.Vector`7.#ctor*
  name: Vector
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7__ctor_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`7.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Vector
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Vector
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Vector
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Vector
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis1
  name: Axis1
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis1
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis1
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis1
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis1
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis1
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis1
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis2
  name: Axis2
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis2
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis2
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis2
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis2
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis2
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis2
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis3
  name: Axis3
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis3
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis3
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis3
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis3
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis3
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis3
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis4
  name: Axis4
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis4
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis4
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis4
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis4
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis4
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis4
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis5
  name: Axis5
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis5
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis5
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis5
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis5
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis5
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis5
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis6
  name: Axis6
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis6
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis6
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis6
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis6
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis6
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis6
- uid: Towel.DataStructures.Omnitree.Vector`7.Axis7
  name: Axis7
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Axis7
  commentId: F:Towel.DataStructures.Omnitree.Vector`7.Axis7
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis7
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis7
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Axis7
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Axis7
- uid: Towel.DataStructures.Omnitree.Vector`7.Default
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Default
  commentId: P:Towel.DataStructures.Omnitree.Vector`7.Default
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Default
- uid: Towel.DataStructures.Omnitree.Vector`7.Default*
  name: Default
  href: api/Towel.DataStructures.Omnitree.Vector-7.html#Towel_DataStructures_Omnitree_Vector_7_Default_
  commentId: Overload:Towel.DataStructures.Omnitree.Vector`7.Default
  isSpec: "True"
  fullName: Towel.DataStructures.Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Default
  fullName.vb: Towel.DataStructures.Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Default
  nameWithType: Omnitree.Vector<A1, A2, A3, A4, A5, A6, A7>.Default
  nameWithType.vb: Omnitree.Vector(Of A1, A2, A3, A4, A5, A6, A7).Default
- uid: Towel.DataStructures.OmnitreePointsLinked`2
  name: OmnitreePointsLinked<T, Axis1>
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html
  commentId: T:Towel.DataStructures.OmnitreePointsLinked`2
  name.vb: OmnitreePointsLinked(Of T, Axis1)
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1)
  nameWithType: OmnitreePointsLinked<T, Axis1>
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1)
- uid: Towel.DataStructures.OmnitreePointsLinked`2.#ctor(Towel.DataStructures.Omnitree.Location{`0,`1},Func{`1,`1,Towel.CompareResult},Towel.DataStructures.Omnitree.SubdivisionOverride{`0,`1,Towel.DataStructures.Omnitree.Bounds{`1}})
  name: OmnitreePointsLinked(Omnitree.Location<T, Axis1>, Func<Axis1, Axis1, CompareResult>, Omnitree.SubdivisionOverride<T, Axis1, Omnitree.Bounds<Axis1>>)
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2__ctor_Towel_DataStructures_Omnitree_Location__0__1__Func__1__1_Towel_CompareResult__Towel_DataStructures_Omnitree_SubdivisionOverride__0__1_Towel_DataStructures_Omnitree_Bounds__1___
  commentId: M:Towel.DataStructures.OmnitreePointsLinked`2.#ctor(Towel.DataStructures.Omnitree.Location{`0,`1},Func{`1,`1,Towel.CompareResult},Towel.DataStructures.Omnitree.SubdivisionOverride{`0,`1,Towel.DataStructures.Omnitree.Bounds{`1}})
  name.vb: OmnitreePointsLinked(Omnitree.Location(Of T, Axis1), Func(Of Axis1, Axis1, CompareResult), Omnitree.SubdivisionOverride(Of T, Axis1, Omnitree.Bounds(Of Axis1)))
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.OmnitreePointsLinked(Towel.DataStructures.Omnitree.Location<T, Axis1>, Func<Axis1, Axis1, Towel.CompareResult>, Towel.DataStructures.Omnitree.SubdivisionOverride<T, Axis1, Towel.DataStructures.Omnitree.Bounds<Axis1>>)
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).OmnitreePointsLinked(Towel.DataStructures.Omnitree.Location(Of T, Axis1), Func(Of Axis1, Axis1, Towel.CompareResult), Towel.DataStructures.Omnitree.SubdivisionOverride(Of T, Axis1, Towel.DataStructures.Omnitree.Bounds(Of Axis1)))
  nameWithType: OmnitreePointsLinked<T, Axis1>.OmnitreePointsLinked(Omnitree.Location<T, Axis1>, Func<Axis1, Axis1, CompareResult>, Omnitree.SubdivisionOverride<T, Axis1, Omnitree.Bounds<Axis1>>)
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).OmnitreePointsLinked(Omnitree.Location(Of T, Axis1), Func(Of Axis1, Axis1, CompareResult), Omnitree.SubdivisionOverride(Of T, Axis1, Omnitree.Bounds(Of Axis1)))
- uid: Towel.DataStructures.OmnitreePointsLinked`2.#ctor*
  name: OmnitreePointsLinked
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2__ctor_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.OmnitreePointsLinked
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).OmnitreePointsLinked
  nameWithType: OmnitreePointsLinked<T, Axis1>.OmnitreePointsLinked
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).OmnitreePointsLinked
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Add(`0)
  name: Add(T)
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Add__0_
  commentId: M:Towel.DataStructures.OmnitreePointsLinked`2.Add(`0)
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Add(T)
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Add(T)
  nameWithType: OmnitreePointsLinked<T, Axis1>.Add(T)
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Add(T)
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Add*
  name: Add
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Add_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Add
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Add
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Add
  nameWithType: OmnitreePointsLinked<T, Axis1>.Add
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Add
- uid: Towel.DataStructures.OmnitreePointsLinked`2.BranchCount
  name: BranchCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_BranchCount
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.BranchCount
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.BranchCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).BranchCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.BranchCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).BranchCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.BranchCount*
  name: BranchCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_BranchCount_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.BranchCount
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.BranchCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).BranchCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.BranchCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).BranchCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Compare1
  name: Compare1
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Compare1
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.Compare1
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Compare1
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Compare1
  nameWithType: OmnitreePointsLinked<T, Axis1>.Compare1
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Compare1
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Compare1*
  name: Compare1
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Compare1_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Compare1
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Compare1
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Compare1
  nameWithType: OmnitreePointsLinked<T, Axis1>.Compare1
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Compare1
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Count
  name: Count
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Count
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.Count
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Count
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Count
  nameWithType: OmnitreePointsLinked<T, Axis1>.Count
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Count
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Count*
  name: Count
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Count_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Count
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Count
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Count
  nameWithType: OmnitreePointsLinked<T, Axis1>.Count
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Count
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Dimensions
  name: Dimensions
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Dimensions
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.Dimensions
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Dimensions
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Dimensions
  nameWithType: OmnitreePointsLinked<T, Axis1>.Dimensions
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Dimensions
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Dimensions*
  name: Dimensions
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Dimensions_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Dimensions
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Dimensions
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Dimensions
  nameWithType: OmnitreePointsLinked<T, Axis1>.Dimensions
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Dimensions
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Item(`1)
  name: Item[Axis1]
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Item__1_
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.Item(`1)
  name.vb: Item(Axis1)
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Item[Axis1]
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Item(Axis1)
  nameWithType: OmnitreePointsLinked<T, Axis1>.Item[Axis1]
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Item(Axis1)
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Item*
  name: Item
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Item_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Item
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Item
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Item
  nameWithType: OmnitreePointsLinked<T, Axis1>.Item
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Item
- uid: Towel.DataStructures.OmnitreePointsLinked`2.LeafCount
  name: LeafCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_LeafCount
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.LeafCount
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.LeafCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).LeafCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.LeafCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).LeafCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.LeafCount*
  name: LeafCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_LeafCount_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.LeafCount
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.LeafCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).LeafCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.LeafCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).LeafCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Locate
  name: Locate
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Locate
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.Locate
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Locate
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Locate
  nameWithType: OmnitreePointsLinked<T, Axis1>.Locate
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Locate
- uid: Towel.DataStructures.OmnitreePointsLinked`2.Locate*
  name: Locate
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_Locate_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.Locate
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.Locate
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).Locate
  nameWithType: OmnitreePointsLinked<T, Axis1>.Locate
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).Locate
- uid: Towel.DataStructures.OmnitreePointsLinked`2.MaxDepth
  name: MaxDepth
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_MaxDepth
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.MaxDepth
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.MaxDepth
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).MaxDepth
  nameWithType: OmnitreePointsLinked<T, Axis1>.MaxDepth
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).MaxDepth
- uid: Towel.DataStructures.OmnitreePointsLinked`2.MaxDepth*
  name: MaxDepth
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_MaxDepth_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.MaxDepth
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.MaxDepth
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).MaxDepth
  nameWithType: OmnitreePointsLinked<T, Axis1>.MaxDepth
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).MaxDepth
- uid: Towel.DataStructures.OmnitreePointsLinked`2.NodeCount
  name: NodeCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_NodeCount
  commentId: P:Towel.DataStructures.OmnitreePointsLinked`2.NodeCount
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.NodeCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).NodeCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.NodeCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).NodeCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.NodeCount*
  name: NodeCount
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_NodeCount_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.NodeCount
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.NodeCount
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).NodeCount
  nameWithType: OmnitreePointsLinked<T, Axis1>.NodeCount
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).NodeCount
- uid: Towel.DataStructures.OmnitreePointsLinked`2.TryAdd(`0,Exception@)
  name: TryAdd(T, out Exception)
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_TryAdd__0_Exception__
  commentId: M:Towel.DataStructures.OmnitreePointsLinked`2.TryAdd(`0,Exception@)
  name.vb: TryAdd(T, ByRef Exception)
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.TryAdd(T, out Exception)
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).TryAdd(T, ByRef Exception)
  nameWithType: OmnitreePointsLinked<T, Axis1>.TryAdd(T, out Exception)
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).TryAdd(T, ByRef Exception)
- uid: Towel.DataStructures.OmnitreePointsLinked`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.OmnitreePointsLinked-2.html#Towel_DataStructures_OmnitreePointsLinked_2_TryAdd_
  commentId: Overload:Towel.DataStructures.OmnitreePointsLinked`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.OmnitreePointsLinked<T, Axis1>.TryAdd
  fullName.vb: Towel.DataStructures.OmnitreePointsLinked(Of T, Axis1).TryAdd
  nameWithType: OmnitreePointsLinked<T, Axis1>.TryAdd
  nameWithType.vb: OmnitreePointsLinked(Of T, Axis1).TryAdd
- uid: Towel.DataStructures.QueueArray`1
  name: QueueArray<T>
  href: api/Towel.DataStructures.QueueArray-1.html
  commentId: T:Towel.DataStructures.QueueArray`1
  name.vb: QueueArray(Of T)
  fullName: Towel.DataStructures.QueueArray<T>
  fullName.vb: Towel.DataStructures.QueueArray(Of T)
  nameWithType: QueueArray<T>
  nameWithType.vb: QueueArray(Of T)
- uid: Towel.DataStructures.QueueArray`1.#ctor
  name: QueueArray()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1__ctor
  commentId: M:Towel.DataStructures.QueueArray`1.#ctor
  fullName: Towel.DataStructures.QueueArray<T>.QueueArray()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).QueueArray()
  nameWithType: QueueArray<T>.QueueArray()
  nameWithType.vb: QueueArray(Of T).QueueArray()
- uid: Towel.DataStructures.QueueArray`1.#ctor(System.Int32)
  name: QueueArray(Int32)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1__ctor_System_Int32_
  commentId: M:Towel.DataStructures.QueueArray`1.#ctor(System.Int32)
  fullName: Towel.DataStructures.QueueArray<T>.QueueArray(System.Int32)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).QueueArray(System.Int32)
  nameWithType: QueueArray<T>.QueueArray(Int32)
  nameWithType.vb: QueueArray(Of T).QueueArray(Int32)
- uid: Towel.DataStructures.QueueArray`1.#ctor*
  name: QueueArray
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1__ctor_
  commentId: Overload:Towel.DataStructures.QueueArray`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.QueueArray
  fullName.vb: Towel.DataStructures.QueueArray(Of T).QueueArray
  nameWithType: QueueArray<T>.QueueArray
  nameWithType.vb: QueueArray(Of T).QueueArray
- uid: Towel.DataStructures.QueueArray`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Clear
  commentId: M:Towel.DataStructures.QueueArray`1.Clear
  fullName: Towel.DataStructures.QueueArray<T>.Clear()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Clear()
  nameWithType: QueueArray<T>.Clear()
  nameWithType.vb: QueueArray(Of T).Clear()
- uid: Towel.DataStructures.QueueArray`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Clear_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Clear
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Clear
  nameWithType: QueueArray<T>.Clear
  nameWithType.vb: QueueArray(Of T).Clear
- uid: Towel.DataStructures.QueueArray`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Clone
  commentId: M:Towel.DataStructures.QueueArray`1.Clone
  fullName: Towel.DataStructures.QueueArray<T>.Clone()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Clone()
  nameWithType: QueueArray<T>.Clone()
  nameWithType.vb: QueueArray(Of T).Clone()
- uid: Towel.DataStructures.QueueArray`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Clone_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Clone
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Clone
  nameWithType: QueueArray<T>.Clone
  nameWithType.vb: QueueArray(Of T).Clone
- uid: Towel.DataStructures.QueueArray`1.Count
  name: Count
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Count
  commentId: P:Towel.DataStructures.QueueArray`1.Count
  fullName: Towel.DataStructures.QueueArray<T>.Count
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Count
  nameWithType: QueueArray<T>.Count
  nameWithType.vb: QueueArray(Of T).Count
- uid: Towel.DataStructures.QueueArray`1.Count*
  name: Count
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Count_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Count
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Count
  nameWithType: QueueArray<T>.Count
  nameWithType.vb: QueueArray(Of T).Count
- uid: Towel.DataStructures.QueueArray`1.CurrentCapacity
  name: CurrentCapacity
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_CurrentCapacity
  commentId: P:Towel.DataStructures.QueueArray`1.CurrentCapacity
  fullName: Towel.DataStructures.QueueArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.QueueArray(Of T).CurrentCapacity
  nameWithType: QueueArray<T>.CurrentCapacity
  nameWithType.vb: QueueArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.QueueArray`1.CurrentCapacity*
  name: CurrentCapacity
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_CurrentCapacity_
  commentId: Overload:Towel.DataStructures.QueueArray`1.CurrentCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.QueueArray(Of T).CurrentCapacity
  nameWithType: QueueArray<T>.CurrentCapacity
  nameWithType.vb: QueueArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.QueueArray`1.Dequeue
  name: Dequeue()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Dequeue
  commentId: M:Towel.DataStructures.QueueArray`1.Dequeue
  fullName: Towel.DataStructures.QueueArray<T>.Dequeue()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Dequeue()
  nameWithType: QueueArray<T>.Dequeue()
  nameWithType.vb: QueueArray(Of T).Dequeue()
- uid: Towel.DataStructures.QueueArray`1.Dequeue*
  name: Dequeue
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Dequeue_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Dequeue
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Dequeue
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Dequeue
  nameWithType: QueueArray<T>.Dequeue
  nameWithType.vb: QueueArray(Of T).Dequeue
- uid: Towel.DataStructures.QueueArray`1.Enqueue(`0)
  name: Enqueue(T)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Enqueue__0_
  commentId: M:Towel.DataStructures.QueueArray`1.Enqueue(`0)
  fullName: Towel.DataStructures.QueueArray<T>.Enqueue(T)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Enqueue(T)
  nameWithType: QueueArray<T>.Enqueue(T)
  nameWithType.vb: QueueArray(Of T).Enqueue(T)
- uid: Towel.DataStructures.QueueArray`1.Enqueue*
  name: Enqueue
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Enqueue_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Enqueue
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Enqueue
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Enqueue
  nameWithType: QueueArray<T>.Enqueue
  nameWithType.vb: QueueArray(Of T).Enqueue
- uid: Towel.DataStructures.QueueArray`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_GetEnumerator
  commentId: M:Towel.DataStructures.QueueArray`1.GetEnumerator
  fullName: Towel.DataStructures.QueueArray<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).GetEnumerator()
  nameWithType: QueueArray<T>.GetEnumerator()
  nameWithType.vb: QueueArray(Of T).GetEnumerator()
- uid: Towel.DataStructures.QueueArray`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.QueueArray`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.QueueArray(Of T).GetEnumerator
  nameWithType: QueueArray<T>.GetEnumerator
  nameWithType.vb: QueueArray(Of T).GetEnumerator
- uid: Towel.DataStructures.QueueArray`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Item_System_Int32_
  commentId: P:Towel.DataStructures.QueueArray`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.DataStructures.QueueArray<T>.Item[System.Int32]
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Item(System.Int32)
  nameWithType: QueueArray<T>.Item[Int32]
  nameWithType.vb: QueueArray(Of T).Item(Int32)
- uid: Towel.DataStructures.QueueArray`1.Item*
  name: Item
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Item_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Item
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Item
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Item
  nameWithType: QueueArray<T>.Item
  nameWithType.vb: QueueArray(Of T).Item
- uid: Towel.DataStructures.QueueArray`1.MinimumCapacity
  name: MinimumCapacity
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_MinimumCapacity
  commentId: P:Towel.DataStructures.QueueArray`1.MinimumCapacity
  fullName: Towel.DataStructures.QueueArray<T>.MinimumCapacity
  fullName.vb: Towel.DataStructures.QueueArray(Of T).MinimumCapacity
  nameWithType: QueueArray<T>.MinimumCapacity
  nameWithType.vb: QueueArray(Of T).MinimumCapacity
- uid: Towel.DataStructures.QueueArray`1.MinimumCapacity*
  name: MinimumCapacity
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_MinimumCapacity_
  commentId: Overload:Towel.DataStructures.QueueArray`1.MinimumCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.MinimumCapacity
  fullName.vb: Towel.DataStructures.QueueArray(Of T).MinimumCapacity
  nameWithType: QueueArray<T>.MinimumCapacity
  nameWithType.vb: QueueArray(Of T).MinimumCapacity
- uid: Towel.DataStructures.QueueArray`1.Newest
  name: Newest
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Newest
  commentId: P:Towel.DataStructures.QueueArray`1.Newest
  fullName: Towel.DataStructures.QueueArray<T>.Newest
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Newest
  nameWithType: QueueArray<T>.Newest
  nameWithType.vb: QueueArray(Of T).Newest
- uid: Towel.DataStructures.QueueArray`1.Newest*
  name: Newest
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Newest_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Newest
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Newest
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Newest
  nameWithType: QueueArray<T>.Newest
  nameWithType.vb: QueueArray(Of T).Newest
- uid: Towel.DataStructures.QueueArray`1.Oldest
  name: Oldest
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Oldest
  commentId: P:Towel.DataStructures.QueueArray`1.Oldest
  fullName: Towel.DataStructures.QueueArray<T>.Oldest
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Oldest
  nameWithType: QueueArray<T>.Oldest
  nameWithType.vb: QueueArray(Of T).Oldest
- uid: Towel.DataStructures.QueueArray`1.Oldest*
  name: Oldest
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Oldest_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Oldest
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Oldest
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Oldest
  nameWithType: QueueArray<T>.Oldest
  nameWithType.vb: QueueArray(Of T).Oldest
- uid: Towel.DataStructures.QueueArray`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Peek
  commentId: M:Towel.DataStructures.QueueArray`1.Peek
  fullName: Towel.DataStructures.QueueArray<T>.Peek()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Peek()
  nameWithType: QueueArray<T>.Peek()
  nameWithType.vb: QueueArray(Of T).Peek()
- uid: Towel.DataStructures.QueueArray`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Peek_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Peek
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Peek
  nameWithType: QueueArray<T>.Peek
  nameWithType.vb: QueueArray(Of T).Peek
- uid: Towel.DataStructures.QueueArray`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.QueueArray`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.QueueArray<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper(Action(Of T))
  nameWithType: QueueArray<T>.Stepper(Action<T>)
  nameWithType.vb: QueueArray(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.QueueArray`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.QueueArray`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.QueueArray<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: QueueArray<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: QueueArray(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.QueueArray`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.QueueArray`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.QueueArray<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: QueueArray<T>.Stepper(StepRef<T>)
  nameWithType.vb: QueueArray(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.QueueArray`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.QueueArray`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.QueueArray<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: QueueArray<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: QueueArray(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.QueueArray`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper_
  commentId: Overload:Towel.DataStructures.QueueArray`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.Stepper
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper
  nameWithType: QueueArray<T>.Stepper
  nameWithType.vb: QueueArray(Of T).Stepper
- uid: Towel.DataStructures.QueueArray`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.QueueArray`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.QueueArray<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).Stepper(Of Step)(Step)
  nameWithType: QueueArray<T>.Stepper<Step>(Step)
  nameWithType.vb: QueueArray(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.QueueArray`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.QueueArray`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.StepperBreak
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperBreak
  nameWithType: QueueArray<T>.StepperBreak
  nameWithType.vb: QueueArray(Of T).StepperBreak
- uid: Towel.DataStructures.QueueArray`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.QueueArray`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.QueueArray<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperBreak(Of Step)(Step)
  nameWithType: QueueArray<T>.StepperBreak<Step>(Step)
  nameWithType.vb: QueueArray(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.QueueArray`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperRef_
  commentId: Overload:Towel.DataStructures.QueueArray`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.StepperRef
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperRef
  nameWithType: QueueArray<T>.StepperRef
  nameWithType.vb: QueueArray(Of T).StepperRef
- uid: Towel.DataStructures.QueueArray`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.QueueArray`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.QueueArray<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperRef(Of Step)(Step)
  nameWithType: QueueArray<T>.StepperRef<Step>(Step)
  nameWithType.vb: QueueArray(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.QueueArray`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.QueueArray`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperRefBreak
  nameWithType: QueueArray<T>.StepperRefBreak
  nameWithType.vb: QueueArray(Of T).StepperRefBreak
- uid: Towel.DataStructures.QueueArray`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.QueueArray`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.QueueArray<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueArray(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: QueueArray<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: QueueArray(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.QueueArray`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_ToArray
  commentId: M:Towel.DataStructures.QueueArray`1.ToArray
  fullName: Towel.DataStructures.QueueArray<T>.ToArray()
  fullName.vb: Towel.DataStructures.QueueArray(Of T).ToArray()
  nameWithType: QueueArray<T>.ToArray()
  nameWithType.vb: QueueArray(Of T).ToArray()
- uid: Towel.DataStructures.QueueArray`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.QueueArray-1.html#Towel_DataStructures_QueueArray_1_ToArray_
  commentId: Overload:Towel.DataStructures.QueueArray`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.QueueArray<T>.ToArray
  fullName.vb: Towel.DataStructures.QueueArray(Of T).ToArray
  nameWithType: QueueArray<T>.ToArray
  nameWithType.vb: QueueArray(Of T).ToArray
- uid: Towel.DataStructures.QueueLinked`1
  name: QueueLinked<T>
  href: api/Towel.DataStructures.QueueLinked-1.html
  commentId: T:Towel.DataStructures.QueueLinked`1
  name.vb: QueueLinked(Of T)
  fullName: Towel.DataStructures.QueueLinked<T>
  fullName.vb: Towel.DataStructures.QueueLinked(Of T)
  nameWithType: QueueLinked<T>
  nameWithType.vb: QueueLinked(Of T)
- uid: Towel.DataStructures.QueueLinked`1.#ctor
  name: QueueLinked()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1__ctor
  commentId: M:Towel.DataStructures.QueueLinked`1.#ctor
  fullName: Towel.DataStructures.QueueLinked<T>.QueueLinked()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).QueueLinked()
  nameWithType: QueueLinked<T>.QueueLinked()
  nameWithType.vb: QueueLinked(Of T).QueueLinked()
- uid: Towel.DataStructures.QueueLinked`1.#ctor*
  name: QueueLinked
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1__ctor_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.QueueLinked
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).QueueLinked
  nameWithType: QueueLinked<T>.QueueLinked
  nameWithType.vb: QueueLinked(Of T).QueueLinked
- uid: Towel.DataStructures.QueueLinked`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Clear
  commentId: M:Towel.DataStructures.QueueLinked`1.Clear
  fullName: Towel.DataStructures.QueueLinked<T>.Clear()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Clear()
  nameWithType: QueueLinked<T>.Clear()
  nameWithType.vb: QueueLinked(Of T).Clear()
- uid: Towel.DataStructures.QueueLinked`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Clear_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Clear
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Clear
  nameWithType: QueueLinked<T>.Clear
  nameWithType.vb: QueueLinked(Of T).Clear
- uid: Towel.DataStructures.QueueLinked`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Clone
  commentId: M:Towel.DataStructures.QueueLinked`1.Clone
  fullName: Towel.DataStructures.QueueLinked<T>.Clone()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Clone()
  nameWithType: QueueLinked<T>.Clone()
  nameWithType.vb: QueueLinked(Of T).Clone()
- uid: Towel.DataStructures.QueueLinked`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Clone_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Clone
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Clone
  nameWithType: QueueLinked<T>.Clone
  nameWithType.vb: QueueLinked(Of T).Clone
- uid: Towel.DataStructures.QueueLinked`1.Count
  name: Count
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Count
  commentId: P:Towel.DataStructures.QueueLinked`1.Count
  fullName: Towel.DataStructures.QueueLinked<T>.Count
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Count
  nameWithType: QueueLinked<T>.Count
  nameWithType.vb: QueueLinked(Of T).Count
- uid: Towel.DataStructures.QueueLinked`1.Count*
  name: Count
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Count_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Count
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Count
  nameWithType: QueueLinked<T>.Count
  nameWithType.vb: QueueLinked(Of T).Count
- uid: Towel.DataStructures.QueueLinked`1.Dequeue
  name: Dequeue()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Dequeue
  commentId: M:Towel.DataStructures.QueueLinked`1.Dequeue
  fullName: Towel.DataStructures.QueueLinked<T>.Dequeue()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Dequeue()
  nameWithType: QueueLinked<T>.Dequeue()
  nameWithType.vb: QueueLinked(Of T).Dequeue()
- uid: Towel.DataStructures.QueueLinked`1.Dequeue*
  name: Dequeue
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Dequeue_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Dequeue
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Dequeue
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Dequeue
  nameWithType: QueueLinked<T>.Dequeue
  nameWithType.vb: QueueLinked(Of T).Dequeue
- uid: Towel.DataStructures.QueueLinked`1.Enqueue(`0)
  name: Enqueue(T)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Enqueue__0_
  commentId: M:Towel.DataStructures.QueueLinked`1.Enqueue(`0)
  fullName: Towel.DataStructures.QueueLinked<T>.Enqueue(T)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Enqueue(T)
  nameWithType: QueueLinked<T>.Enqueue(T)
  nameWithType.vb: QueueLinked(Of T).Enqueue(T)
- uid: Towel.DataStructures.QueueLinked`1.Enqueue*
  name: Enqueue
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Enqueue_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Enqueue
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Enqueue
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Enqueue
  nameWithType: QueueLinked<T>.Enqueue
  nameWithType.vb: QueueLinked(Of T).Enqueue
- uid: Towel.DataStructures.QueueLinked`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_GetEnumerator
  commentId: M:Towel.DataStructures.QueueLinked`1.GetEnumerator
  fullName: Towel.DataStructures.QueueLinked<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).GetEnumerator()
  nameWithType: QueueLinked<T>.GetEnumerator()
  nameWithType.vb: QueueLinked(Of T).GetEnumerator()
- uid: Towel.DataStructures.QueueLinked`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).GetEnumerator
  nameWithType: QueueLinked<T>.GetEnumerator
  nameWithType.vb: QueueLinked(Of T).GetEnumerator
- uid: Towel.DataStructures.QueueLinked`1.Newest
  name: Newest
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Newest
  commentId: P:Towel.DataStructures.QueueLinked`1.Newest
  fullName: Towel.DataStructures.QueueLinked<T>.Newest
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Newest
  nameWithType: QueueLinked<T>.Newest
  nameWithType.vb: QueueLinked(Of T).Newest
- uid: Towel.DataStructures.QueueLinked`1.Newest*
  name: Newest
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Newest_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Newest
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Newest
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Newest
  nameWithType: QueueLinked<T>.Newest
  nameWithType.vb: QueueLinked(Of T).Newest
- uid: Towel.DataStructures.QueueLinked`1.Oldest
  name: Oldest
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Oldest
  commentId: P:Towel.DataStructures.QueueLinked`1.Oldest
  fullName: Towel.DataStructures.QueueLinked<T>.Oldest
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Oldest
  nameWithType: QueueLinked<T>.Oldest
  nameWithType.vb: QueueLinked(Of T).Oldest
- uid: Towel.DataStructures.QueueLinked`1.Oldest*
  name: Oldest
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Oldest_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Oldest
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Oldest
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Oldest
  nameWithType: QueueLinked<T>.Oldest
  nameWithType.vb: QueueLinked(Of T).Oldest
- uid: Towel.DataStructures.QueueLinked`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Peek
  commentId: M:Towel.DataStructures.QueueLinked`1.Peek
  fullName: Towel.DataStructures.QueueLinked<T>.Peek()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Peek()
  nameWithType: QueueLinked<T>.Peek()
  nameWithType.vb: QueueLinked(Of T).Peek()
- uid: Towel.DataStructures.QueueLinked`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Peek_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Peek
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Peek
  nameWithType: QueueLinked<T>.Peek
  nameWithType.vb: QueueLinked(Of T).Peek
- uid: Towel.DataStructures.QueueLinked`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.QueueLinked`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper(Action(Of T))
  nameWithType: QueueLinked<T>.Stepper(Action<T>)
  nameWithType.vb: QueueLinked(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.QueueLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.QueueLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: QueueLinked<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: QueueLinked(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.QueueLinked`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.QueueLinked`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: QueueLinked<T>.Stepper(StepRef<T>)
  nameWithType.vb: QueueLinked(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.QueueLinked`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.QueueLinked`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: QueueLinked<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: QueueLinked(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.QueueLinked`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper
  nameWithType: QueueLinked<T>.Stepper
  nameWithType.vb: QueueLinked(Of T).Stepper
- uid: Towel.DataStructures.QueueLinked`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.QueueLinked`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.QueueLinked<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).Stepper(Of Step)(Step)
  nameWithType: QueueLinked<T>.Stepper<Step>(Step)
  nameWithType.vb: QueueLinked(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.QueueLinked`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.StepperBreak
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperBreak
  nameWithType: QueueLinked<T>.StepperBreak
  nameWithType.vb: QueueLinked(Of T).StepperBreak
- uid: Towel.DataStructures.QueueLinked`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.QueueLinked`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.QueueLinked<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperBreak(Of Step)(Step)
  nameWithType: QueueLinked<T>.StepperBreak<Step>(Step)
  nameWithType.vb: QueueLinked(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.QueueLinked`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperRef_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.StepperRef
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperRef
  nameWithType: QueueLinked<T>.StepperRef
  nameWithType.vb: QueueLinked(Of T).StepperRef
- uid: Towel.DataStructures.QueueLinked`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.QueueLinked`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.QueueLinked<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperRef(Of Step)(Step)
  nameWithType: QueueLinked<T>.StepperRef<Step>(Step)
  nameWithType.vb: QueueLinked(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.QueueLinked`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperRefBreak
  nameWithType: QueueLinked<T>.StepperRefBreak
  nameWithType.vb: QueueLinked(Of T).StepperRefBreak
- uid: Towel.DataStructures.QueueLinked`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.QueueLinked`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.QueueLinked<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: QueueLinked<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: QueueLinked(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.QueueLinked`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_ToArray
  commentId: M:Towel.DataStructures.QueueLinked`1.ToArray
  fullName: Towel.DataStructures.QueueLinked<T>.ToArray()
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).ToArray()
  nameWithType: QueueLinked<T>.ToArray()
  nameWithType.vb: QueueLinked(Of T).ToArray()
- uid: Towel.DataStructures.QueueLinked`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.QueueLinked-1.html#Towel_DataStructures_QueueLinked_1_ToArray_
  commentId: Overload:Towel.DataStructures.QueueLinked`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.QueueLinked<T>.ToArray
  fullName.vb: Towel.DataStructures.QueueLinked(Of T).ToArray
  nameWithType: QueueLinked<T>.ToArray
  nameWithType.vb: QueueLinked(Of T).ToArray
- uid: Towel.DataStructures.RedBlackTree
  name: RedBlackTree
  href: api/Towel.DataStructures.RedBlackTree.html
  commentId: T:Towel.DataStructures.RedBlackTree
  fullName: Towel.DataStructures.RedBlackTree
  nameWithType: RedBlackTree
- uid: Towel.DataStructures.RedBlackTreeLinked`2
  name: RedBlackTreeLinked<T, _Compare>
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html
  commentId: T:Towel.DataStructures.RedBlackTreeLinked`2
  name.vb: RedBlackTreeLinked(Of T, _Compare)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare)
  nameWithType: RedBlackTreeLinked<T, _Compare>
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.#ctor(`1)
  name: RedBlackTreeLinked(_Compare)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2__ctor__1_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.#ctor(`1)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.RedBlackTreeLinked(_Compare)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).RedBlackTreeLinked(_Compare)
  nameWithType: RedBlackTreeLinked<T, _Compare>.RedBlackTreeLinked(_Compare)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).RedBlackTreeLinked(_Compare)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.#ctor*
  name: RedBlackTreeLinked
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2__ctor_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.RedBlackTreeLinked
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).RedBlackTreeLinked
  nameWithType: RedBlackTreeLinked<T, _Compare>.RedBlackTreeLinked
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).RedBlackTreeLinked
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Clear
  name: Clear()
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Clear
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Clear
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Clear()
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Clear()
  nameWithType: RedBlackTreeLinked<T, _Compare>.Clear()
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Clear()
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Clear*
  name: Clear
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Clear_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Clear
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Clear
  nameWithType: RedBlackTreeLinked<T, _Compare>.Clear
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Clear
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Clone
  name: Clone()
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Clone
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Clone
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Clone()
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Clone()
  nameWithType: RedBlackTreeLinked<T, _Compare>.Clone()
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Clone()
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Clone*
  name: Clone
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Clone_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Clone
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Clone
  nameWithType: RedBlackTreeLinked<T, _Compare>.Clone
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Clone
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Compare
  name: Compare
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Compare
  commentId: P:Towel.DataStructures.RedBlackTreeLinked`2.Compare
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Compare
  nameWithType: RedBlackTreeLinked<T, _Compare>.Compare
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Compare
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Compare*
  name: Compare
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Compare_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Compare
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Compare
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Compare
  nameWithType: RedBlackTreeLinked<T, _Compare>.Compare
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Compare
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Contains(`0)
  name: Contains(T)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Contains__0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Contains(`0)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Contains(T)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Contains(T)
  nameWithType: RedBlackTreeLinked<T, _Compare>.Contains(T)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Contains(T)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Contains(Func{`0,Towel.CompareResult})
  name: Contains(Func<T, CompareResult>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Contains_Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Contains(Func{`0,Towel.CompareResult})
  name.vb: Contains(Func(Of T, CompareResult))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Contains(Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Contains(Func(Of T, Towel.CompareResult))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Contains(Func<T, CompareResult>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Contains(Func(Of T, CompareResult))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Contains_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Contains
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Contains
  nameWithType: RedBlackTreeLinked<T, _Compare>.Contains
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Contains
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Contains``1(``0)
  name: Contains<Sift>(Sift)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Contains__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Contains``1(``0)
  name.vb: Contains(Of Sift)(Sift)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Contains<Sift>(Sift)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Contains(Of Sift)(Sift)
  nameWithType: RedBlackTreeLinked<T, _Compare>.Contains<Sift>(Sift)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Contains(Of Sift)(Sift)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Count
  name: Count
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Count
  commentId: P:Towel.DataStructures.RedBlackTreeLinked`2.Count
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Count
  nameWithType: RedBlackTreeLinked<T, _Compare>.Count
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Count
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Count*
  name: Count
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Count_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Count
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Count
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Count
  nameWithType: RedBlackTreeLinked<T, _Compare>.Count
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Count
- uid: Towel.DataStructures.RedBlackTreeLinked`2.CurrentGreatest
  name: CurrentGreatest
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_CurrentGreatest
  commentId: P:Towel.DataStructures.RedBlackTreeLinked`2.CurrentGreatest
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).CurrentGreatest
  nameWithType: RedBlackTreeLinked<T, _Compare>.CurrentGreatest
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.RedBlackTreeLinked`2.CurrentGreatest*
  name: CurrentGreatest
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_CurrentGreatest_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.CurrentGreatest
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.CurrentGreatest
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).CurrentGreatest
  nameWithType: RedBlackTreeLinked<T, _Compare>.CurrentGreatest
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).CurrentGreatest
- uid: Towel.DataStructures.RedBlackTreeLinked`2.CurrentLeast
  name: CurrentLeast
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_CurrentLeast
  commentId: P:Towel.DataStructures.RedBlackTreeLinked`2.CurrentLeast
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).CurrentLeast
  nameWithType: RedBlackTreeLinked<T, _Compare>.CurrentLeast
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.RedBlackTreeLinked`2.CurrentLeast*
  name: CurrentLeast
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_CurrentLeast_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.CurrentLeast
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.CurrentLeast
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).CurrentLeast
  nameWithType: RedBlackTreeLinked<T, _Compare>.CurrentLeast
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).CurrentLeast
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Action{`0})
  name: Stepper(T, T, Action<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__0__0_Action__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Action{`0})
  name.vb: Stepper(T, T, Action(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Action<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Action(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Action<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Action(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Func{`0,Towel.StepStatus})
  name: Stepper(T, T, Func<T, StepStatus>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__0__0_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Func{`0,Towel.StepStatus})
  name.vb: Stepper(T, T, Func(Of T, StepStatus))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Func(Of T, Towel.StepStatus))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Func<T, StepStatus>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Func(Of T, StepStatus))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Towel.StepRef{`0})
  name: Stepper(T, T, StepRef<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__0__0_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Towel.StepRef{`0})
  name.vb: Stepper(T, T, StepRef(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Towel.StepRef(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(T, T, StepRef<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, StepRef(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Towel.StepRefBreak{`0})
  name: Stepper(T, T, StepRefBreak<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__0__0_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(`0,`0,Towel.StepRefBreak{`0})
  name.vb: Stepper(T, T, StepRefBreak(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(T, T, Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, Towel.StepRefBreak(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(T, T, StepRefBreak<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(T, T, StepRefBreak(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper_Action__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Action(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(Action<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(Action(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Towel.StepRef(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(StepRef<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper(StepRefBreak<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.Stepper``1(`0,`0,``0)
  name: Stepper<Step>(T, T, Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_Stepper__1__0__0___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.Stepper``1(`0,`0,``0)
  name.vb: Stepper(Of Step)(T, T, Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.Stepper<Step>(T, T, Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).Stepper(Of Step)(T, T, Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.Stepper<Step>(T, T, Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).Stepper(Of Step)(T, T, Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperBreak_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperBreak
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperBreak
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperBreak
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperBreak
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperBreak(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperBreak<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak``1(`0,`0,``0)
  name: StepperBreak<Step>(T, T, Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperBreak__1__0__0___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperBreak``1(`0,`0,``0)
  name.vb: StepperBreak(Of Step)(T, T, Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperBreak<Step>(T, T, Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperBreak(Of Step)(T, T, Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperBreak<Step>(T, T, Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperBreak(Of Step)(T, T, Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRef_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRef
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRef
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRef
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRef
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRef__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRef(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRef<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRef``1(`0,`0,``0)
  name: StepperRef<Step>(T, T, Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRef__1__0__0___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperRef``1(`0,`0,``0)
  name.vb: StepperRef(Of Step)(T, T, Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRef<Step>(T, T, Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRef(Of Step)(T, T, Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRef<Step>(T, T, Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRef(Of Step)(T, T, Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRefBreak
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRefBreak
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRefBreak
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRefBreak
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRefBreak(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRefBreak<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak``1(`0,`0,``0)
  name: StepperRefBreak<Step>(T, T, Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperRefBreak__1__0__0___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperRefBreak``1(`0,`0,``0)
  name.vb: StepperRefBreak(Of Step)(T, T, Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperRefBreak<Step>(T, T, Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperRefBreak(Of Step)(T, T, Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperRefBreak<Step>(T, T, Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperRefBreak(Of Step)(T, T, Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Action{`0})
  name: StepperReverse(Action<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse_Action__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Action{`0})
  name.vb: StepperReverse(Action(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse(Action<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse(Action(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse(Action<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse(Action(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Func{`0,Towel.StepStatus})
  name: StepperReverse(Func<T, StepStatus>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Func{`0,Towel.StepStatus})
  name.vb: StepperReverse(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse(Func(Of T, Towel.StepStatus))
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse(Func<T, StepStatus>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse(Func(Of T, StepStatus))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Towel.StepRef{`0})
  name: StepperReverse(StepRef<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Towel.StepRef{`0})
  name.vb: StepperReverse(StepRef(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse(Towel.StepRef(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse(StepRef<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse(StepRef(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Towel.StepRefBreak{`0})
  name: StepperReverse(StepRefBreak<T>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse(Towel.StepRefBreak{`0})
  name.vb: StepperReverse(StepRefBreak(Of T))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse(Towel.StepRefBreak(Of T))
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse(StepRefBreak<T>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse(StepRefBreak(Of T))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse*
  name: StepperReverse
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse``1(``0)
  name: StepperReverse<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverse__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverse``1(``0)
  name.vb: StepperReverse(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverse<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverse(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverse<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverse(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseBreak*
  name: StepperReverseBreak
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseBreak_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseBreak
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseBreak
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseBreak
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseBreak
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseBreak
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseBreak``1(``0)
  name: StepperReverseBreak<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseBreak__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseBreak``1(``0)
  name.vb: StepperReverseBreak(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseBreak(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseBreak<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseBreak(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRef*
  name: StepperReverseRef
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseRef_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRef
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseRef
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseRef
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseRef
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseRef
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRef``1(``0)
  name: StepperReverseRef<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseRef__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRef``1(``0)
  name.vb: StepperReverseRef(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseRef<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseRef(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseRef<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseRef(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRefBreak*
  name: StepperReverseRefBreak
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseRefBreak_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseRefBreak
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseRefBreak
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseRefBreak
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseRefBreak
- uid: Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRefBreak``1(``0)
  name: StepperReverseRefBreak<Step>(Step)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_StepperReverseRefBreak__1___0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.StepperReverseRefBreak``1(``0)
  name.vb: StepperReverseRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.StepperReverseRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).StepperReverseRefBreak(Of Step)(Step)
  nameWithType: RedBlackTreeLinked<T, _Compare>.StepperReverseRefBreak<Step>(Step)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).StepperReverseRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryAdd_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryAdd
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryAdd
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryAdd
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryAdd
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryGet__0__System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryGet(`0@,System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryGet(out T, out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryGet(ByRef T, ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryGet(out T, out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryGet(ByRef T, ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryGet_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryGet
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryGet
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryGet
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryGet
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryGet``1(`0@,System.Nullable{Exception}@,``0)
  name: TryGet<Sift>(out T, out Nullable<Exception>, Sift)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryGet__1__0__System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryGet``1(`0@,System.Nullable{Exception}@,``0)
  name.vb: TryGet(Of Sift)(ByRef T, ByRef Nullable(Of Exception), Sift)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryGet<Sift>(out T, out System.Nullable<Exception>, Sift)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryGet(Of Sift)(ByRef T, ByRef System.Nullable(Of Exception), Sift)
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryGet<Sift>(out T, out Nullable<Exception>, Sift)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryGet(Of Sift)(ByRef T, ByRef Nullable(Of Exception), Sift)
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryRemove(`0,System.Nullable{Exception}@)
  name: TryRemove(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryRemove__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryRemove(`0,System.Nullable{Exception}@)
  name.vb: TryRemove(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryRemove(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryRemove(T, ByRef System.Nullable(Of Exception))
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryRemove(T, out Nullable<Exception>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryRemove(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name: TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryRemove_System_Nullable_Exception___Func__0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryRemove(System.Nullable{Exception}@,Func{`0,Towel.CompareResult})
  name.vb: TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryRemove(out System.Nullable<Exception>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryRemove(ByRef System.Nullable(Of Exception), Func(Of T, Towel.CompareResult))
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryRemove(out Nullable<Exception>, Func<T, CompareResult>)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryRemove(ByRef Nullable(Of Exception), Func(Of T, CompareResult))
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryRemove_
  commentId: Overload:Towel.DataStructures.RedBlackTreeLinked`2.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryRemove
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryRemove
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryRemove
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryRemove
- uid: Towel.DataStructures.RedBlackTreeLinked`2.TryRemove``1(System.Nullable{Exception}@,``0)
  name: TryRemove<Sift>(out Nullable<Exception>, Sift)
  href: api/Towel.DataStructures.RedBlackTreeLinked-2.html#Towel_DataStructures_RedBlackTreeLinked_2_TryRemove__1_System_Nullable_Exception_____0_
  commentId: M:Towel.DataStructures.RedBlackTreeLinked`2.TryRemove``1(System.Nullable{Exception}@,``0)
  name.vb: TryRemove(Of Sift)(ByRef Nullable(Of Exception), Sift)
  fullName: Towel.DataStructures.RedBlackTreeLinked<T, _Compare>.TryRemove<Sift>(out System.Nullable<Exception>, Sift)
  fullName.vb: Towel.DataStructures.RedBlackTreeLinked(Of T, _Compare).TryRemove(Of Sift)(ByRef System.Nullable(Of Exception), Sift)
  nameWithType: RedBlackTreeLinked<T, _Compare>.TryRemove<Sift>(out Nullable<Exception>, Sift)
  nameWithType.vb: RedBlackTreeLinked(Of T, _Compare).TryRemove(Of Sift)(ByRef Nullable(Of Exception), Sift)
- uid: Towel.DataStructures.SetHashLinked`3
  name: SetHashLinked<T, Equate, Hash>
  href: api/Towel.DataStructures.SetHashLinked-3.html
  commentId: T:Towel.DataStructures.SetHashLinked`3
  name.vb: SetHashLinked(Of T, Equate, Hash)
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash)
  nameWithType: SetHashLinked<T, Equate, Hash>
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash)
- uid: Towel.DataStructures.SetHashLinked`3.#ctor(`1,`2,System.Nullable{System.Int32})
  name: SetHashLinked(Equate, Hash, Nullable<Int32>)
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3__ctor__1__2_System_Nullable_System_Int32__
  commentId: M:Towel.DataStructures.SetHashLinked`3.#ctor(`1,`2,System.Nullable{System.Int32})
  name.vb: SetHashLinked(Equate, Hash, Nullable(Of Int32))
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.SetHashLinked(Equate, Hash, System.Nullable<System.Int32>)
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).SetHashLinked(Equate, Hash, System.Nullable(Of System.Int32))
  nameWithType: SetHashLinked<T, Equate, Hash>.SetHashLinked(Equate, Hash, Nullable<Int32>)
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).SetHashLinked(Equate, Hash, Nullable(Of Int32))
- uid: Towel.DataStructures.SetHashLinked`3.#ctor*
  name: SetHashLinked
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3__ctor_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.SetHashLinked
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).SetHashLinked
  nameWithType: SetHashLinked<T, Equate, Hash>.SetHashLinked
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).SetHashLinked
- uid: Towel.DataStructures.SetHashLinked`3.Count
  name: Count
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Count
  commentId: P:Towel.DataStructures.SetHashLinked`3.Count
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Count
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Count
  nameWithType: SetHashLinked<T, Equate, Hash>.Count
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Count
- uid: Towel.DataStructures.SetHashLinked`3.Count*
  name: Count
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Count_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.Count
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Count
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Count
  nameWithType: SetHashLinked<T, Equate, Hash>.Count
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Count
- uid: Towel.DataStructures.SetHashLinked`3.TableSize
  name: TableSize
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TableSize
  commentId: P:Towel.DataStructures.SetHashLinked`3.TableSize
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TableSize
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TableSize
  nameWithType: SetHashLinked<T, Equate, Hash>.TableSize
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TableSize
- uid: Towel.DataStructures.SetHashLinked`3.TableSize*
  name: TableSize
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TableSize_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.TableSize
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TableSize
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TableSize
  nameWithType: SetHashLinked<T, Equate, Hash>.TableSize
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TableSize
- uid: Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IEquating{T}#Equate
  name: DataStructure.IEquating<T>.Equate
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Towel_DataStructures_DataStructure_IEquating_T__Equate
  commentId: P:Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IEquating{T}#Equate
  name.vb: Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<T>.Equate
  nameWithType: SetHashLinked<T, Equate, Hash>.DataStructure.IEquating<T>.Equate
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<T>.Equate
- uid: Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IEquating{T}#Equate*
  name: DataStructure.IEquating<T>.Equate
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Towel_DataStructures_DataStructure_IEquating_T__Equate_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IEquating{T}#Equate
  isSpec: "True"
  name.vb: Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Towel.DataStructures.DataStructure.IEquating<T>.Equate
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<T>.Equate
  nameWithType: SetHashLinked<T, Equate, Hash>.DataStructure.IEquating<T>.Equate
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IEquating<T>.Equate
- uid: Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IHashing{T}#Hash
  name: DataStructure.IHashing<T>.Hash
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Towel_DataStructures_DataStructure_IHashing_T__Hash
  commentId: P:Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IHashing{T}#Hash
  name.vb: Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<T>.Hash
  nameWithType: SetHashLinked<T, Equate, Hash>.DataStructure.IHashing<T>.Hash
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<T>.Hash
- uid: Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IHashing{T}#Hash*
  name: DataStructure.IHashing<T>.Hash
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_Towel_DataStructures_DataStructure_IHashing_T__Hash_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.Towel#DataStructures#DataStructure#IHashing{T}#Hash
  isSpec: "True"
  name.vb: Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.Towel.DataStructures.DataStructure.IHashing<T>.Hash
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<T>.Hash
  nameWithType: SetHashLinked<T, Equate, Hash>.DataStructure.IHashing<T>.Hash
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).Towel.DataStructures.DataStructure.IHashing<T>.Hash
- uid: Towel.DataStructures.SetHashLinked`3.TryAdd(`0,System.Nullable{Exception}@)
  name: TryAdd(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryAdd__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.SetHashLinked`3.TryAdd(`0,System.Nullable{Exception}@)
  name.vb: TryAdd(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryAdd(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryAdd(T, ByRef System.Nullable(Of Exception))
  nameWithType: SetHashLinked<T, Equate, Hash>.TryAdd(T, out Nullable<Exception>)
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryAdd(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.SetHashLinked`3.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryAdd_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryAdd
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryAdd
  nameWithType: SetHashLinked<T, Equate, Hash>.TryAdd
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryAdd
- uid: Towel.DataStructures.SetHashLinked`3.TryRemove(`0,System.Nullable{Exception}@)
  name: TryRemove(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryRemove__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.SetHashLinked`3.TryRemove(`0,System.Nullable{Exception}@)
  name.vb: TryRemove(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryRemove(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryRemove(T, ByRef System.Nullable(Of Exception))
  nameWithType: SetHashLinked<T, Equate, Hash>.TryRemove(T, out Nullable<Exception>)
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryRemove(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.SetHashLinked`3.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryRemove_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryRemove
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryRemove
  nameWithType: SetHashLinked<T, Equate, Hash>.TryRemove
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryRemove
- uid: Towel.DataStructures.SetHashLinked`3.TryRemoveWithoutTrim(`0,System.Nullable{Exception}@)
  name: TryRemoveWithoutTrim(T, out Nullable<Exception>)
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryRemoveWithoutTrim__0_System_Nullable_Exception___
  commentId: M:Towel.DataStructures.SetHashLinked`3.TryRemoveWithoutTrim(`0,System.Nullable{Exception}@)
  name.vb: TryRemoveWithoutTrim(T, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryRemoveWithoutTrim(T, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryRemoveWithoutTrim(T, ByRef System.Nullable(Of Exception))
  nameWithType: SetHashLinked<T, Equate, Hash>.TryRemoveWithoutTrim(T, out Nullable<Exception>)
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryRemoveWithoutTrim(T, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.SetHashLinked`3.TryRemoveWithoutTrim*
  name: TryRemoveWithoutTrim
  href: api/Towel.DataStructures.SetHashLinked-3.html#Towel_DataStructures_SetHashLinked_3_TryRemoveWithoutTrim_
  commentId: Overload:Towel.DataStructures.SetHashLinked`3.TryRemoveWithoutTrim
  isSpec: "True"
  fullName: Towel.DataStructures.SetHashLinked<T, Equate, Hash>.TryRemoveWithoutTrim
  fullName.vb: Towel.DataStructures.SetHashLinked(Of T, Equate, Hash).TryRemoveWithoutTrim
  nameWithType: SetHashLinked<T, Equate, Hash>.TryRemoveWithoutTrim
  nameWithType.vb: SetHashLinked(Of T, Equate, Hash).TryRemoveWithoutTrim
- uid: Towel.DataStructures.SortedBinaryTree
  name: SortedBinaryTree
  href: api/Towel.DataStructures.SortedBinaryTree.html
  commentId: T:Towel.DataStructures.SortedBinaryTree
  fullName: Towel.DataStructures.SortedBinaryTree
  nameWithType: SortedBinaryTree
- uid: Towel.DataStructures.SortedBinaryTree.Get*
  name: Get
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Get_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.Get
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.Get
  nameWithType: SortedBinaryTree.Get
- uid: Towel.DataStructures.SortedBinaryTree.Get``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name: Get<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Get__2_Towel_DataStructures_ISortedBinaryTree___0___1__Func___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.SortedBinaryTree.Get``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name.vb: Get(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.SortedBinaryTree.Get<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.Get(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), Func(Of T, Towel.CompareResult))
  nameWithType: SortedBinaryTree.Get<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  nameWithType.vb: SortedBinaryTree.Get(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
- uid: Towel.DataStructures.SortedBinaryTree.Remove*
  name: Remove
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Remove_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.Remove
  nameWithType: SortedBinaryTree.Remove
- uid: Towel.DataStructures.SortedBinaryTree.Remove``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name: Remove<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Remove__2_Towel_DataStructures_ISortedBinaryTree___0___1__Func___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.SortedBinaryTree.Remove``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name.vb: Remove(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.SortedBinaryTree.Remove<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.Remove(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), Func(Of T, Towel.CompareResult))
  nameWithType: SortedBinaryTree.Remove<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  nameWithType.vb: SortedBinaryTree.Remove(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
- uid: Towel.DataStructures.SortedBinaryTree.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Stepper_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.Stepper
  nameWithType: SortedBinaryTree.Stepper
- uid: Towel.DataStructures.SortedBinaryTree.Stepper``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: Stepper<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Stepper__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.Stepper``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: Stepper(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.Stepper<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.Stepper(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.Stepper<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.Stepper(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.Stepper``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: Stepper<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_Stepper__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.Stepper``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: Stepper(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.Stepper<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.Stepper(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.Stepper<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.Stepper(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreak_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreak
  nameWithType: SortedBinaryTree.StepperBreak
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreak__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreak<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperBreak(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreak__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreak<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperBreak(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse*
  name: StepperBreakReverse
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreakReverse_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperBreakReverse
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse
  nameWithType: SortedBinaryTree.StepperBreakReverse
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreakReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperBreakReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperBreakReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRef_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRef
  nameWithType: SortedBinaryTree.StepperRef
- uid: Towel.DataStructures.SortedBinaryTree.StepperRef``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperRef<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRef__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRef``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperRef(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRef<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRef(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperRef<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperRef(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperRef``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperRef<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRef__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRef``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperRef(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRef<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRef(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperRef<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperRef(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreak
  nameWithType: SortedBinaryTree.StepperRefBreak
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperRefBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreak__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperRefBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreak<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefBreak(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperRefBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperRefBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperRefBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreak__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefBreak``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperRefBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreak<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefBreak(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperRefBreak<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperRefBreak(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse*
  name: StepperRefBreakReverse
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreakReverse_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse
  nameWithType: SortedBinaryTree.StepperRefBreakReverse
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperRefBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreakReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperRefBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperRefBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperRefBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperRefBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefBreakReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperRefBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefBreakReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperRefBreakReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperRefBreakReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefReverse*
  name: StepperRefReverse
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefReverse_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperRefReverse
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefReverse
  nameWithType: SortedBinaryTree.StepperRefReverse
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperRefReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperRefReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperRefReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperRefReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperRefReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperRefReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperRefReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperRefReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperRefReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperRefReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperRefReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperRefReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperRefReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.StepperReverse*
  name: StepperReverse
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperReverse_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.StepperReverse
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.StepperReverse
  nameWithType: SortedBinaryTree.StepperReverse
- uid: Towel.DataStructures.SortedBinaryTree.StepperReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name: StepperReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1__
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1})
  name.vb: StepperReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
  fullName: Towel.DataStructures.SortedBinaryTree.StepperReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare))
  nameWithType: SortedBinaryTree.StepperReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>)
  nameWithType.vb: SortedBinaryTree.StepperReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare))
- uid: Towel.DataStructures.SortedBinaryTree.StepperReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name: StepperReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_StepperReverse__2_Towel_DataStructures_ISortedBinaryTree___0___1____0___0_
  commentId: M:Towel.DataStructures.SortedBinaryTree.StepperReverse``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0,``0)
  name.vb: StepperReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
  fullName: Towel.DataStructures.SortedBinaryTree.StepperReverse<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, T, T)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.StepperReverse(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), T, T)
  nameWithType: SortedBinaryTree.StepperReverse<T, _Compare>(ISortedBinaryTree<T, _Compare>, T, T)
  nameWithType.vb: SortedBinaryTree.StepperReverse(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), T, T)
- uid: Towel.DataStructures.SortedBinaryTree.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_TryGet_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.TryGet
  nameWithType: SortedBinaryTree.TryGet
- uid: Towel.DataStructures.SortedBinaryTree.TryGet``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0@,Func{``0,Towel.CompareResult})
  name: TryGet<T, _Compare>(ISortedBinaryTree<T, _Compare>, out T, Func<T, CompareResult>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_TryGet__2_Towel_DataStructures_ISortedBinaryTree___0___1____0__Func___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.SortedBinaryTree.TryGet``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},``0@,Func{``0,Towel.CompareResult})
  name.vb: TryGet(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), ByRef T, Func(Of T, CompareResult))
  fullName: Towel.DataStructures.SortedBinaryTree.TryGet<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, out T, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.TryGet(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), ByRef T, Func(Of T, Towel.CompareResult))
  nameWithType: SortedBinaryTree.TryGet<T, _Compare>(ISortedBinaryTree<T, _Compare>, out T, Func<T, CompareResult>)
  nameWithType.vb: SortedBinaryTree.TryGet(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), ByRef T, Func(Of T, CompareResult))
- uid: Towel.DataStructures.SortedBinaryTree.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_TryRemove_
  commentId: Overload:Towel.DataStructures.SortedBinaryTree.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.SortedBinaryTree.TryRemove
  nameWithType: SortedBinaryTree.TryRemove
- uid: Towel.DataStructures.SortedBinaryTree.TryRemove``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name: TryRemove<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  href: api/Towel.DataStructures.SortedBinaryTree.html#Towel_DataStructures_SortedBinaryTree_TryRemove__2_Towel_DataStructures_ISortedBinaryTree___0___1__Func___0_Towel_CompareResult__
  commentId: M:Towel.DataStructures.SortedBinaryTree.TryRemove``2(Towel.DataStructures.ISortedBinaryTree{``0,``1},Func{``0,Towel.CompareResult})
  name.vb: TryRemove(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
  fullName: Towel.DataStructures.SortedBinaryTree.TryRemove<T, _Compare>(Towel.DataStructures.ISortedBinaryTree<T, _Compare>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.DataStructures.SortedBinaryTree.TryRemove(Of T, _Compare)(Towel.DataStructures.ISortedBinaryTree(Of T, _Compare), Func(Of T, Towel.CompareResult))
  nameWithType: SortedBinaryTree.TryRemove<T, _Compare>(ISortedBinaryTree<T, _Compare>, Func<T, CompareResult>)
  nameWithType.vb: SortedBinaryTree.TryRemove(Of T, _Compare)(ISortedBinaryTree(Of T, _Compare), Func(Of T, CompareResult))
- uid: Towel.DataStructures.StackArray`1
  name: StackArray<T>
  href: api/Towel.DataStructures.StackArray-1.html
  commentId: T:Towel.DataStructures.StackArray`1
  name.vb: StackArray(Of T)
  fullName: Towel.DataStructures.StackArray<T>
  fullName.vb: Towel.DataStructures.StackArray(Of T)
  nameWithType: StackArray<T>
  nameWithType.vb: StackArray(Of T)
- uid: Towel.DataStructures.StackArray`1.#ctor
  name: StackArray()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1__ctor
  commentId: M:Towel.DataStructures.StackArray`1.#ctor
  fullName: Towel.DataStructures.StackArray<T>.StackArray()
  fullName.vb: Towel.DataStructures.StackArray(Of T).StackArray()
  nameWithType: StackArray<T>.StackArray()
  nameWithType.vb: StackArray(Of T).StackArray()
- uid: Towel.DataStructures.StackArray`1.#ctor(System.Int32)
  name: StackArray(Int32)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1__ctor_System_Int32_
  commentId: M:Towel.DataStructures.StackArray`1.#ctor(System.Int32)
  fullName: Towel.DataStructures.StackArray<T>.StackArray(System.Int32)
  fullName.vb: Towel.DataStructures.StackArray(Of T).StackArray(System.Int32)
  nameWithType: StackArray<T>.StackArray(Int32)
  nameWithType.vb: StackArray(Of T).StackArray(Int32)
- uid: Towel.DataStructures.StackArray`1.#ctor*
  name: StackArray
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1__ctor_
  commentId: Overload:Towel.DataStructures.StackArray`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.StackArray
  fullName.vb: Towel.DataStructures.StackArray(Of T).StackArray
  nameWithType: StackArray<T>.StackArray
  nameWithType.vb: StackArray(Of T).StackArray
- uid: Towel.DataStructures.StackArray`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Clear
  commentId: M:Towel.DataStructures.StackArray`1.Clear
  fullName: Towel.DataStructures.StackArray<T>.Clear()
  fullName.vb: Towel.DataStructures.StackArray(Of T).Clear()
  nameWithType: StackArray<T>.Clear()
  nameWithType.vb: StackArray(Of T).Clear()
- uid: Towel.DataStructures.StackArray`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Clear_
  commentId: Overload:Towel.DataStructures.StackArray`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Clear
  fullName.vb: Towel.DataStructures.StackArray(Of T).Clear
  nameWithType: StackArray<T>.Clear
  nameWithType.vb: StackArray(Of T).Clear
- uid: Towel.DataStructures.StackArray`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Clone
  commentId: M:Towel.DataStructures.StackArray`1.Clone
  fullName: Towel.DataStructures.StackArray<T>.Clone()
  fullName.vb: Towel.DataStructures.StackArray(Of T).Clone()
  nameWithType: StackArray<T>.Clone()
  nameWithType.vb: StackArray(Of T).Clone()
- uid: Towel.DataStructures.StackArray`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Clone_
  commentId: Overload:Towel.DataStructures.StackArray`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Clone
  fullName.vb: Towel.DataStructures.StackArray(Of T).Clone
  nameWithType: StackArray<T>.Clone
  nameWithType.vb: StackArray(Of T).Clone
- uid: Towel.DataStructures.StackArray`1.Count
  name: Count
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Count
  commentId: P:Towel.DataStructures.StackArray`1.Count
  fullName: Towel.DataStructures.StackArray<T>.Count
  fullName.vb: Towel.DataStructures.StackArray(Of T).Count
  nameWithType: StackArray<T>.Count
  nameWithType.vb: StackArray(Of T).Count
- uid: Towel.DataStructures.StackArray`1.Count*
  name: Count
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Count_
  commentId: Overload:Towel.DataStructures.StackArray`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Count
  fullName.vb: Towel.DataStructures.StackArray(Of T).Count
  nameWithType: StackArray<T>.Count
  nameWithType.vb: StackArray(Of T).Count
- uid: Towel.DataStructures.StackArray`1.CurrentCapacity
  name: CurrentCapacity
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_CurrentCapacity
  commentId: P:Towel.DataStructures.StackArray`1.CurrentCapacity
  fullName: Towel.DataStructures.StackArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.StackArray(Of T).CurrentCapacity
  nameWithType: StackArray<T>.CurrentCapacity
  nameWithType.vb: StackArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.StackArray`1.CurrentCapacity*
  name: CurrentCapacity
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_CurrentCapacity_
  commentId: Overload:Towel.DataStructures.StackArray`1.CurrentCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.CurrentCapacity
  fullName.vb: Towel.DataStructures.StackArray(Of T).CurrentCapacity
  nameWithType: StackArray<T>.CurrentCapacity
  nameWithType.vb: StackArray(Of T).CurrentCapacity
- uid: Towel.DataStructures.StackArray`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_GetEnumerator
  commentId: M:Towel.DataStructures.StackArray`1.GetEnumerator
  fullName: Towel.DataStructures.StackArray<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.StackArray(Of T).GetEnumerator()
  nameWithType: StackArray<T>.GetEnumerator()
  nameWithType.vb: StackArray(Of T).GetEnumerator()
- uid: Towel.DataStructures.StackArray`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.StackArray`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.StackArray(Of T).GetEnumerator
  nameWithType: StackArray<T>.GetEnumerator
  nameWithType.vb: StackArray(Of T).GetEnumerator
- uid: Towel.DataStructures.StackArray`1.MinimumCapacity
  name: MinimumCapacity
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_MinimumCapacity
  commentId: P:Towel.DataStructures.StackArray`1.MinimumCapacity
  fullName: Towel.DataStructures.StackArray<T>.MinimumCapacity
  fullName.vb: Towel.DataStructures.StackArray(Of T).MinimumCapacity
  nameWithType: StackArray<T>.MinimumCapacity
  nameWithType.vb: StackArray(Of T).MinimumCapacity
- uid: Towel.DataStructures.StackArray`1.MinimumCapacity*
  name: MinimumCapacity
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_MinimumCapacity_
  commentId: Overload:Towel.DataStructures.StackArray`1.MinimumCapacity
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.MinimumCapacity
  fullName.vb: Towel.DataStructures.StackArray(Of T).MinimumCapacity
  nameWithType: StackArray<T>.MinimumCapacity
  nameWithType.vb: StackArray(Of T).MinimumCapacity
- uid: Towel.DataStructures.StackArray`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Peek
  commentId: M:Towel.DataStructures.StackArray`1.Peek
  fullName: Towel.DataStructures.StackArray<T>.Peek()
  fullName.vb: Towel.DataStructures.StackArray(Of T).Peek()
  nameWithType: StackArray<T>.Peek()
  nameWithType.vb: StackArray(Of T).Peek()
- uid: Towel.DataStructures.StackArray`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Peek_
  commentId: Overload:Towel.DataStructures.StackArray`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Peek
  fullName.vb: Towel.DataStructures.StackArray(Of T).Peek
  nameWithType: StackArray<T>.Peek
  nameWithType.vb: StackArray(Of T).Peek
- uid: Towel.DataStructures.StackArray`1.Pop
  name: Pop()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Pop
  commentId: M:Towel.DataStructures.StackArray`1.Pop
  fullName: Towel.DataStructures.StackArray<T>.Pop()
  fullName.vb: Towel.DataStructures.StackArray(Of T).Pop()
  nameWithType: StackArray<T>.Pop()
  nameWithType.vb: StackArray(Of T).Pop()
- uid: Towel.DataStructures.StackArray`1.Pop*
  name: Pop
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Pop_
  commentId: Overload:Towel.DataStructures.StackArray`1.Pop
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Pop
  fullName.vb: Towel.DataStructures.StackArray(Of T).Pop
  nameWithType: StackArray<T>.Pop
  nameWithType.vb: StackArray(Of T).Pop
- uid: Towel.DataStructures.StackArray`1.Push(`0)
  name: Push(T)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Push__0_
  commentId: M:Towel.DataStructures.StackArray`1.Push(`0)
  fullName: Towel.DataStructures.StackArray<T>.Push(T)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Push(T)
  nameWithType: StackArray<T>.Push(T)
  nameWithType.vb: StackArray(Of T).Push(T)
- uid: Towel.DataStructures.StackArray`1.Push*
  name: Push
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Push_
  commentId: Overload:Towel.DataStructures.StackArray`1.Push
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Push
  fullName.vb: Towel.DataStructures.StackArray(Of T).Push
  nameWithType: StackArray<T>.Push
  nameWithType.vb: StackArray(Of T).Push
- uid: Towel.DataStructures.StackArray`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.StackArray`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.StackArray<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper(Action(Of T))
  nameWithType: StackArray<T>.Stepper(Action<T>)
  nameWithType.vb: StackArray(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.StackArray`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.StackArray`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.StackArray<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: StackArray<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: StackArray(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.StackArray`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.StackArray`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.StackArray<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: StackArray<T>.Stepper(StepRef<T>)
  nameWithType.vb: StackArray(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.StackArray`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.StackArray`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.StackArray<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: StackArray<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: StackArray(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.StackArray`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper_
  commentId: Overload:Towel.DataStructures.StackArray`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.Stepper
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper
  nameWithType: StackArray<T>.Stepper
  nameWithType.vb: StackArray(Of T).Stepper
- uid: Towel.DataStructures.StackArray`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.StackArray`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.StackArray<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.StackArray(Of T).Stepper(Of Step)(Step)
  nameWithType: StackArray<T>.Stepper<Step>(Step)
  nameWithType.vb: StackArray(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.StackArray`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.StackArray`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.StepperBreak
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperBreak
  nameWithType: StackArray<T>.StepperBreak
  nameWithType.vb: StackArray(Of T).StepperBreak
- uid: Towel.DataStructures.StackArray`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.StackArray`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.StackArray<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperBreak(Of Step)(Step)
  nameWithType: StackArray<T>.StepperBreak<Step>(Step)
  nameWithType.vb: StackArray(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.StackArray`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperRef_
  commentId: Overload:Towel.DataStructures.StackArray`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.StepperRef
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperRef
  nameWithType: StackArray<T>.StepperRef
  nameWithType.vb: StackArray(Of T).StepperRef
- uid: Towel.DataStructures.StackArray`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.StackArray`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.StackArray<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperRef(Of Step)(Step)
  nameWithType: StackArray<T>.StepperRef<Step>(Step)
  nameWithType.vb: StackArray(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.StackArray`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.StackArray`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperRefBreak
  nameWithType: StackArray<T>.StepperRefBreak
  nameWithType.vb: StackArray(Of T).StepperRefBreak
- uid: Towel.DataStructures.StackArray`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.StackArray`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.StackArray<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.StackArray(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: StackArray<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: StackArray(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.StackArray`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_ToArray
  commentId: M:Towel.DataStructures.StackArray`1.ToArray
  fullName: Towel.DataStructures.StackArray<T>.ToArray()
  fullName.vb: Towel.DataStructures.StackArray(Of T).ToArray()
  nameWithType: StackArray<T>.ToArray()
  nameWithType.vb: StackArray(Of T).ToArray()
- uid: Towel.DataStructures.StackArray`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.StackArray-1.html#Towel_DataStructures_StackArray_1_ToArray_
  commentId: Overload:Towel.DataStructures.StackArray`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.StackArray<T>.ToArray
  fullName.vb: Towel.DataStructures.StackArray(Of T).ToArray
  nameWithType: StackArray<T>.ToArray
  nameWithType.vb: StackArray(Of T).ToArray
- uid: Towel.DataStructures.StackLinked`1
  name: StackLinked<T>
  href: api/Towel.DataStructures.StackLinked-1.html
  commentId: T:Towel.DataStructures.StackLinked`1
  name.vb: StackLinked(Of T)
  fullName: Towel.DataStructures.StackLinked<T>
  fullName.vb: Towel.DataStructures.StackLinked(Of T)
  nameWithType: StackLinked<T>
  nameWithType.vb: StackLinked(Of T)
- uid: Towel.DataStructures.StackLinked`1.#ctor
  name: StackLinked()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1__ctor
  commentId: M:Towel.DataStructures.StackLinked`1.#ctor
  fullName: Towel.DataStructures.StackLinked<T>.StackLinked()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StackLinked()
  nameWithType: StackLinked<T>.StackLinked()
  nameWithType.vb: StackLinked(Of T).StackLinked()
- uid: Towel.DataStructures.StackLinked`1.#ctor*
  name: StackLinked
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1__ctor_
  commentId: Overload:Towel.DataStructures.StackLinked`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.StackLinked
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StackLinked
  nameWithType: StackLinked<T>.StackLinked
  nameWithType.vb: StackLinked(Of T).StackLinked
- uid: Towel.DataStructures.StackLinked`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Clear
  commentId: M:Towel.DataStructures.StackLinked`1.Clear
  fullName: Towel.DataStructures.StackLinked<T>.Clear()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Clear()
  nameWithType: StackLinked<T>.Clear()
  nameWithType.vb: StackLinked(Of T).Clear()
- uid: Towel.DataStructures.StackLinked`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Clear_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Clear
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Clear
  nameWithType: StackLinked<T>.Clear
  nameWithType.vb: StackLinked(Of T).Clear
- uid: Towel.DataStructures.StackLinked`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Clone
  commentId: M:Towel.DataStructures.StackLinked`1.Clone
  fullName: Towel.DataStructures.StackLinked<T>.Clone()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Clone()
  nameWithType: StackLinked<T>.Clone()
  nameWithType.vb: StackLinked(Of T).Clone()
- uid: Towel.DataStructures.StackLinked`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Clone_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Clone
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Clone
  nameWithType: StackLinked<T>.Clone
  nameWithType.vb: StackLinked(Of T).Clone
- uid: Towel.DataStructures.StackLinked`1.Count
  name: Count
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Count
  commentId: P:Towel.DataStructures.StackLinked`1.Count
  fullName: Towel.DataStructures.StackLinked<T>.Count
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Count
  nameWithType: StackLinked<T>.Count
  nameWithType.vb: StackLinked(Of T).Count
- uid: Towel.DataStructures.StackLinked`1.Count*
  name: Count
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Count_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Count
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Count
  nameWithType: StackLinked<T>.Count
  nameWithType.vb: StackLinked(Of T).Count
- uid: Towel.DataStructures.StackLinked`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_GetEnumerator
  commentId: M:Towel.DataStructures.StackLinked`1.GetEnumerator
  fullName: Towel.DataStructures.StackLinked<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).GetEnumerator()
  nameWithType: StackLinked<T>.GetEnumerator()
  nameWithType.vb: StackLinked(Of T).GetEnumerator()
- uid: Towel.DataStructures.StackLinked`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.StackLinked`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.StackLinked(Of T).GetEnumerator
  nameWithType: StackLinked<T>.GetEnumerator
  nameWithType.vb: StackLinked(Of T).GetEnumerator
- uid: Towel.DataStructures.StackLinked`1.Peek
  name: Peek()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Peek
  commentId: M:Towel.DataStructures.StackLinked`1.Peek
  fullName: Towel.DataStructures.StackLinked<T>.Peek()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Peek()
  nameWithType: StackLinked<T>.Peek()
  nameWithType.vb: StackLinked(Of T).Peek()
- uid: Towel.DataStructures.StackLinked`1.Peek*
  name: Peek
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Peek_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Peek
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Peek
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Peek
  nameWithType: StackLinked<T>.Peek
  nameWithType.vb: StackLinked(Of T).Peek
- uid: Towel.DataStructures.StackLinked`1.Pop
  name: Pop()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Pop
  commentId: M:Towel.DataStructures.StackLinked`1.Pop
  fullName: Towel.DataStructures.StackLinked<T>.Pop()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Pop()
  nameWithType: StackLinked<T>.Pop()
  nameWithType.vb: StackLinked(Of T).Pop()
- uid: Towel.DataStructures.StackLinked`1.Pop*
  name: Pop
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Pop_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Pop
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Pop
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Pop
  nameWithType: StackLinked<T>.Pop
  nameWithType.vb: StackLinked(Of T).Pop
- uid: Towel.DataStructures.StackLinked`1.Push(`0)
  name: Push(T)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Push__0_
  commentId: M:Towel.DataStructures.StackLinked`1.Push(`0)
  fullName: Towel.DataStructures.StackLinked<T>.Push(T)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Push(T)
  nameWithType: StackLinked<T>.Push(T)
  nameWithType.vb: StackLinked(Of T).Push(T)
- uid: Towel.DataStructures.StackLinked`1.Push*
  name: Push
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Push_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Push
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Push
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Push
  nameWithType: StackLinked<T>.Push
  nameWithType.vb: StackLinked(Of T).Push
- uid: Towel.DataStructures.StackLinked`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.StackLinked`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.StackLinked<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper(Action(Of T))
  nameWithType: StackLinked<T>.Stepper(Action<T>)
  nameWithType.vb: StackLinked(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.StackLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.StackLinked`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.StackLinked<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: StackLinked<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: StackLinked(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.StackLinked`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.DataStructures.StackLinked`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.DataStructures.StackLinked<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: StackLinked<T>.Stepper(StepRef<T>)
  nameWithType.vb: StackLinked(Of T).Stepper(StepRef(Of T))
- uid: Towel.DataStructures.StackLinked`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.DataStructures.StackLinked`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.DataStructures.StackLinked<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: StackLinked<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: StackLinked(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.DataStructures.StackLinked`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper_
  commentId: Overload:Towel.DataStructures.StackLinked`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.Stepper
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper
  nameWithType: StackLinked<T>.Stepper
  nameWithType.vb: StackLinked(Of T).Stepper
- uid: Towel.DataStructures.StackLinked`1.Stepper``1(``0)
  name: Stepper<Step>(Step)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_Stepper__1___0_
  commentId: M:Towel.DataStructures.StackLinked`1.Stepper``1(``0)
  name.vb: Stepper(Of Step)(Step)
  fullName: Towel.DataStructures.StackLinked<T>.Stepper<Step>(Step)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).Stepper(Of Step)(Step)
  nameWithType: StackLinked<T>.Stepper<Step>(Step)
  nameWithType.vb: StackLinked(Of T).Stepper(Of Step)(Step)
- uid: Towel.DataStructures.StackLinked`1.StepperBreak*
  name: StepperBreak
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperBreak_
  commentId: Overload:Towel.DataStructures.StackLinked`1.StepperBreak
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.StepperBreak
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperBreak
  nameWithType: StackLinked<T>.StepperBreak
  nameWithType.vb: StackLinked(Of T).StepperBreak
- uid: Towel.DataStructures.StackLinked`1.StepperBreak``1(``0)
  name: StepperBreak<Step>(Step)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperBreak__1___0_
  commentId: M:Towel.DataStructures.StackLinked`1.StepperBreak``1(``0)
  name.vb: StepperBreak(Of Step)(Step)
  fullName: Towel.DataStructures.StackLinked<T>.StepperBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperBreak(Of Step)(Step)
  nameWithType: StackLinked<T>.StepperBreak<Step>(Step)
  nameWithType.vb: StackLinked(Of T).StepperBreak(Of Step)(Step)
- uid: Towel.DataStructures.StackLinked`1.StepperRef*
  name: StepperRef
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperRef_
  commentId: Overload:Towel.DataStructures.StackLinked`1.StepperRef
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.StepperRef
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperRef
  nameWithType: StackLinked<T>.StepperRef
  nameWithType.vb: StackLinked(Of T).StepperRef
- uid: Towel.DataStructures.StackLinked`1.StepperRef``1(``0)
  name: StepperRef<Step>(Step)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperRef__1___0_
  commentId: M:Towel.DataStructures.StackLinked`1.StepperRef``1(``0)
  name.vb: StepperRef(Of Step)(Step)
  fullName: Towel.DataStructures.StackLinked<T>.StepperRef<Step>(Step)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperRef(Of Step)(Step)
  nameWithType: StackLinked<T>.StepperRef<Step>(Step)
  nameWithType.vb: StackLinked(Of T).StepperRef(Of Step)(Step)
- uid: Towel.DataStructures.StackLinked`1.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperRefBreak_
  commentId: Overload:Towel.DataStructures.StackLinked`1.StepperRefBreak
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.StepperRefBreak
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperRefBreak
  nameWithType: StackLinked<T>.StepperRefBreak
  nameWithType.vb: StackLinked(Of T).StepperRefBreak
- uid: Towel.DataStructures.StackLinked`1.StepperRefBreak``1(``0)
  name: StepperRefBreak<Step>(Step)
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_StepperRefBreak__1___0_
  commentId: M:Towel.DataStructures.StackLinked`1.StepperRefBreak``1(``0)
  name.vb: StepperRefBreak(Of Step)(Step)
  fullName: Towel.DataStructures.StackLinked<T>.StepperRefBreak<Step>(Step)
  fullName.vb: Towel.DataStructures.StackLinked(Of T).StepperRefBreak(Of Step)(Step)
  nameWithType: StackLinked<T>.StepperRefBreak<Step>(Step)
  nameWithType.vb: StackLinked(Of T).StepperRefBreak(Of Step)(Step)
- uid: Towel.DataStructures.StackLinked`1.ToArray
  name: ToArray()
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_ToArray
  commentId: M:Towel.DataStructures.StackLinked`1.ToArray
  fullName: Towel.DataStructures.StackLinked<T>.ToArray()
  fullName.vb: Towel.DataStructures.StackLinked(Of T).ToArray()
  nameWithType: StackLinked<T>.ToArray()
  nameWithType.vb: StackLinked(Of T).ToArray()
- uid: Towel.DataStructures.StackLinked`1.ToArray*
  name: ToArray
  href: api/Towel.DataStructures.StackLinked-1.html#Towel_DataStructures_StackLinked_1_ToArray_
  commentId: Overload:Towel.DataStructures.StackLinked`1.ToArray
  isSpec: "True"
  fullName: Towel.DataStructures.StackLinked<T>.ToArray
  fullName.vb: Towel.DataStructures.StackLinked(Of T).ToArray
  nameWithType: StackLinked<T>.ToArray
  nameWithType.vb: StackLinked(Of T).ToArray
- uid: Towel.DataStructures.Tree
  name: Tree
  href: api/Towel.DataStructures.Tree.html
  commentId: T:Towel.DataStructures.Tree
  fullName: Towel.DataStructures.Tree
  nameWithType: Tree
- uid: Towel.DataStructures.TreeMap`1
  name: TreeMap<T>
  href: api/Towel.DataStructures.TreeMap-1.html
  commentId: T:Towel.DataStructures.TreeMap`1
  name.vb: TreeMap(Of T)
  fullName: Towel.DataStructures.TreeMap<T>
  fullName.vb: Towel.DataStructures.TreeMap(Of T)
  nameWithType: TreeMap<T>
  nameWithType.vb: TreeMap(Of T)
- uid: Towel.DataStructures.TreeMap`1.#ctor(`0)
  name: TreeMap(T)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1__ctor__0_
  commentId: M:Towel.DataStructures.TreeMap`1.#ctor(`0)
  fullName: Towel.DataStructures.TreeMap<T>.TreeMap(T)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).TreeMap(T)
  nameWithType: TreeMap<T>.TreeMap(T)
  nameWithType.vb: TreeMap(Of T).TreeMap(T)
- uid: Towel.DataStructures.TreeMap`1.#ctor(`0,Func{`0,`0,System.Boolean},Func{`0,System.Int32})
  name: TreeMap(T, Func<T, T, Boolean>, Func<T, Int32>)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1__ctor__0_Func__0__0_System_Boolean__Func__0_System_Int32__
  commentId: M:Towel.DataStructures.TreeMap`1.#ctor(`0,Func{`0,`0,System.Boolean},Func{`0,System.Int32})
  name.vb: TreeMap(T, Func(Of T, T, Boolean), Func(Of T, Int32))
  fullName: Towel.DataStructures.TreeMap<T>.TreeMap(T, Func<T, T, System.Boolean>, Func<T, System.Int32>)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).TreeMap(T, Func(Of T, T, System.Boolean), Func(Of T, System.Int32))
  nameWithType: TreeMap<T>.TreeMap(T, Func<T, T, Boolean>, Func<T, Int32>)
  nameWithType.vb: TreeMap(Of T).TreeMap(T, Func(Of T, T, Boolean), Func(Of T, Int32))
- uid: Towel.DataStructures.TreeMap`1.#ctor*
  name: TreeMap
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1__ctor_
  commentId: Overload:Towel.DataStructures.TreeMap`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.TreeMap
  fullName.vb: Towel.DataStructures.TreeMap(Of T).TreeMap
  nameWithType: TreeMap<T>.TreeMap
  nameWithType.vb: TreeMap(Of T).TreeMap
- uid: Towel.DataStructures.TreeMap`1.Add(`0,`0)
  name: Add(T, T)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Add__0__0_
  commentId: M:Towel.DataStructures.TreeMap`1.Add(`0,`0)
  fullName: Towel.DataStructures.TreeMap<T>.Add(T, T)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Add(T, T)
  nameWithType: TreeMap<T>.Add(T, T)
  nameWithType.vb: TreeMap(Of T).Add(T, T)
- uid: Towel.DataStructures.TreeMap`1.Add*
  name: Add
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Add_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Add
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Add
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Add
  nameWithType: TreeMap<T>.Add
  nameWithType.vb: TreeMap(Of T).Add
- uid: Towel.DataStructures.TreeMap`1.Children(`0,Action{`0})
  name: Children(T, Action<T>)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Children__0_Action__0__
  commentId: M:Towel.DataStructures.TreeMap`1.Children(`0,Action{`0})
  name.vb: Children(T, Action(Of T))
  fullName: Towel.DataStructures.TreeMap<T>.Children(T, Action<T>)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Children(T, Action(Of T))
  nameWithType: TreeMap<T>.Children(T, Action<T>)
  nameWithType.vb: TreeMap(Of T).Children(T, Action(Of T))
- uid: Towel.DataStructures.TreeMap`1.Children*
  name: Children
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Children_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Children
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Children
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Children
  nameWithType: TreeMap<T>.Children
  nameWithType.vb: TreeMap(Of T).Children
- uid: Towel.DataStructures.TreeMap`1.Clone
  name: Clone()
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Clone
  commentId: M:Towel.DataStructures.TreeMap`1.Clone
  fullName: Towel.DataStructures.TreeMap<T>.Clone()
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Clone()
  nameWithType: TreeMap<T>.Clone()
  nameWithType.vb: TreeMap(Of T).Clone()
- uid: Towel.DataStructures.TreeMap`1.Clone*
  name: Clone
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Clone_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Clone
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Clone
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Clone
  nameWithType: TreeMap<T>.Clone
  nameWithType.vb: TreeMap(Of T).Clone
- uid: Towel.DataStructures.TreeMap`1.Count
  name: Count
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Count
  commentId: P:Towel.DataStructures.TreeMap`1.Count
  fullName: Towel.DataStructures.TreeMap<T>.Count
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Count
  nameWithType: TreeMap<T>.Count
  nameWithType.vb: TreeMap(Of T).Count
- uid: Towel.DataStructures.TreeMap`1.Count*
  name: Count
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Count_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Count
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Count
  nameWithType: TreeMap<T>.Count
  nameWithType.vb: TreeMap(Of T).Count
- uid: Towel.DataStructures.TreeMap`1.Equate
  name: Equate
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Equate
  commentId: P:Towel.DataStructures.TreeMap`1.Equate
  fullName: Towel.DataStructures.TreeMap<T>.Equate
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Equate
  nameWithType: TreeMap<T>.Equate
  nameWithType.vb: TreeMap(Of T).Equate
- uid: Towel.DataStructures.TreeMap`1.Equate*
  name: Equate
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Equate_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Equate
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Equate
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Equate
  nameWithType: TreeMap<T>.Equate
  nameWithType.vb: TreeMap(Of T).Equate
- uid: Towel.DataStructures.TreeMap`1.Hash
  name: Hash
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Hash
  commentId: P:Towel.DataStructures.TreeMap`1.Hash
  fullName: Towel.DataStructures.TreeMap<T>.Hash
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Hash
  nameWithType: TreeMap<T>.Hash
  nameWithType.vb: TreeMap(Of T).Hash
- uid: Towel.DataStructures.TreeMap`1.Hash*
  name: Hash
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Hash_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Hash
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Hash
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Hash
  nameWithType: TreeMap<T>.Hash
  nameWithType.vb: TreeMap(Of T).Hash
- uid: Towel.DataStructures.TreeMap`1.Head
  name: Head
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Head
  commentId: P:Towel.DataStructures.TreeMap`1.Head
  fullName: Towel.DataStructures.TreeMap<T>.Head
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Head
  nameWithType: TreeMap<T>.Head
  nameWithType.vb: TreeMap(Of T).Head
- uid: Towel.DataStructures.TreeMap`1.Head*
  name: Head
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Head_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Head
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Head
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Head
  nameWithType: TreeMap<T>.Head
  nameWithType.vb: TreeMap(Of T).Head
- uid: Towel.DataStructures.TreeMap`1.IsChildOf(`0,`0)
  name: IsChildOf(T, T)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_IsChildOf__0__0_
  commentId: M:Towel.DataStructures.TreeMap`1.IsChildOf(`0,`0)
  fullName: Towel.DataStructures.TreeMap<T>.IsChildOf(T, T)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).IsChildOf(T, T)
  nameWithType: TreeMap<T>.IsChildOf(T, T)
  nameWithType.vb: TreeMap(Of T).IsChildOf(T, T)
- uid: Towel.DataStructures.TreeMap`1.IsChildOf*
  name: IsChildOf
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_IsChildOf_
  commentId: Overload:Towel.DataStructures.TreeMap`1.IsChildOf
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.IsChildOf
  fullName.vb: Towel.DataStructures.TreeMap(Of T).IsChildOf
  nameWithType: TreeMap<T>.IsChildOf
  nameWithType.vb: TreeMap(Of T).IsChildOf
- uid: Towel.DataStructures.TreeMap`1.Parent(`0)
  name: Parent(T)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Parent__0_
  commentId: M:Towel.DataStructures.TreeMap`1.Parent(`0)
  fullName: Towel.DataStructures.TreeMap<T>.Parent(T)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Parent(T)
  nameWithType: TreeMap<T>.Parent(T)
  nameWithType.vb: TreeMap(Of T).Parent(T)
- uid: Towel.DataStructures.TreeMap`1.Parent*
  name: Parent
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Parent_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Parent
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Parent
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Parent
  nameWithType: TreeMap<T>.Parent
  nameWithType.vb: TreeMap(Of T).Parent
- uid: Towel.DataStructures.TreeMap`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Stepper_Action__0__
  commentId: M:Towel.DataStructures.TreeMap`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.DataStructures.TreeMap<T>.Stepper(Action<T>)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Stepper(Action(Of T))
  nameWithType: TreeMap<T>.Stepper(Action<T>)
  nameWithType.vb: TreeMap(Of T).Stepper(Action(Of T))
- uid: Towel.DataStructures.TreeMap`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.DataStructures.TreeMap`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.DataStructures.TreeMap<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: TreeMap<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: TreeMap(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.DataStructures.TreeMap`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_Stepper_
  commentId: Overload:Towel.DataStructures.TreeMap`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.Stepper
  fullName.vb: Towel.DataStructures.TreeMap(Of T).Stepper
  nameWithType: TreeMap<T>.Stepper
  nameWithType.vb: TreeMap(Of T).Stepper
- uid: Towel.DataStructures.TreeMap`1.TryRemove(`0,Exception@)
  name: TryRemove(T, out Exception)
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_TryRemove__0_Exception__
  commentId: M:Towel.DataStructures.TreeMap`1.TryRemove(`0,Exception@)
  name.vb: TryRemove(T, ByRef Exception)
  fullName: Towel.DataStructures.TreeMap<T>.TryRemove(T, out Exception)
  fullName.vb: Towel.DataStructures.TreeMap(Of T).TryRemove(T, ByRef Exception)
  nameWithType: TreeMap<T>.TryRemove(T, out Exception)
  nameWithType.vb: TreeMap(Of T).TryRemove(T, ByRef Exception)
- uid: Towel.DataStructures.TreeMap`1.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.TreeMap-1.html#Towel_DataStructures_TreeMap_1_TryRemove_
  commentId: Overload:Towel.DataStructures.TreeMap`1.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.TreeMap<T>.TryRemove
  fullName.vb: Towel.DataStructures.TreeMap(Of T).TryRemove
  nameWithType: TreeMap<T>.TryRemove
  nameWithType.vb: TreeMap(Of T).TryRemove
- uid: Towel.DataStructures.Trie
  name: Trie
  href: api/Towel.DataStructures.Trie.html
  commentId: T:Towel.DataStructures.Trie
  fullName: Towel.DataStructures.Trie
  nameWithType: Trie
- uid: Towel.DataStructures.Trie.Add*
  name: Add
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Add_
  commentId: Overload:Towel.DataStructures.Trie.Add
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.Add
  nameWithType: Trie.Add
- uid: Towel.DataStructures.Trie.Add``2(Towel.DataStructures.ITrie{``1,``0},``0,Action{Action{``1}})
  name: Add<T, K>(ITrie<K, T>, T, Action<Action<K>>)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Add__2_Towel_DataStructures_ITrie___1___0____0_Action_Action___1___
  commentId: M:Towel.DataStructures.Trie.Add``2(Towel.DataStructures.ITrie{``1,``0},``0,Action{Action{``1}})
  name.vb: Add(Of T, K)(ITrie(Of K, T), T, Action(Of Action(Of K)))
  fullName: Towel.DataStructures.Trie.Add<T, K>(Towel.DataStructures.ITrie<K, T>, T, Action<Action<K>>)
  fullName.vb: Towel.DataStructures.Trie.Add(Of T, K)(Towel.DataStructures.ITrie(Of K, T), T, Action(Of Action(Of K)))
  nameWithType: Trie.Add<T, K>(ITrie<K, T>, T, Action<Action<K>>)
  nameWithType.vb: Trie.Add(Of T, K)(ITrie(Of K, T), T, Action(Of Action(Of K)))
- uid: Towel.DataStructures.Trie.Get*
  name: Get
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Get_
  commentId: Overload:Towel.DataStructures.Trie.Get
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.Get
  nameWithType: Trie.Get
- uid: Towel.DataStructures.Trie.Get``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name: Get<K, T>(ITrie<K, T>, Action<Action<K>>)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Get__2_Towel_DataStructures_ITrie___0___1__Action_Action___0___
  commentId: M:Towel.DataStructures.Trie.Get``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name.vb: Get(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
  fullName: Towel.DataStructures.Trie.Get<K, T>(Towel.DataStructures.ITrie<K, T>, Action<Action<K>>)
  fullName.vb: Towel.DataStructures.Trie.Get(Of K, T)(Towel.DataStructures.ITrie(Of K, T), Action(Of Action(Of K)))
  nameWithType: Trie.Get<K, T>(ITrie<K, T>, Action<Action<K>>)
  nameWithType.vb: Trie.Get(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
- uid: Towel.DataStructures.Trie.Remove*
  name: Remove
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Remove_
  commentId: Overload:Towel.DataStructures.Trie.Remove
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.Remove
  nameWithType: Trie.Remove
- uid: Towel.DataStructures.Trie.Remove``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name: Remove<K, T>(ITrie<K, T>, Action<Action<K>>)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_Remove__2_Towel_DataStructures_ITrie___0___1__Action_Action___0___
  commentId: M:Towel.DataStructures.Trie.Remove``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name.vb: Remove(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
  fullName: Towel.DataStructures.Trie.Remove<K, T>(Towel.DataStructures.ITrie<K, T>, Action<Action<K>>)
  fullName.vb: Towel.DataStructures.Trie.Remove(Of K, T)(Towel.DataStructures.ITrie(Of K, T), Action(Of Action(Of K)))
  nameWithType: Trie.Remove<K, T>(ITrie<K, T>, Action<Action<K>>)
  nameWithType.vb: Trie.Remove(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
- uid: Towel.DataStructures.Trie.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryAdd_
  commentId: Overload:Towel.DataStructures.Trie.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.TryAdd
  nameWithType: Trie.TryAdd
- uid: Towel.DataStructures.Trie.TryAdd``2(Towel.DataStructures.ITrie{``0,``1},``1,Action{Action{``0}})
  name: TryAdd<K, T>(ITrie<K, T>, T, Action<Action<K>>)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryAdd__2_Towel_DataStructures_ITrie___0___1____1_Action_Action___0___
  commentId: M:Towel.DataStructures.Trie.TryAdd``2(Towel.DataStructures.ITrie{``0,``1},``1,Action{Action{``0}})
  name.vb: TryAdd(Of K, T)(ITrie(Of K, T), T, Action(Of Action(Of K)))
  fullName: Towel.DataStructures.Trie.TryAdd<K, T>(Towel.DataStructures.ITrie<K, T>, T, Action<Action<K>>)
  fullName.vb: Towel.DataStructures.Trie.TryAdd(Of K, T)(Towel.DataStructures.ITrie(Of K, T), T, Action(Of Action(Of K)))
  nameWithType: Trie.TryAdd<K, T>(ITrie<K, T>, T, Action<Action<K>>)
  nameWithType.vb: Trie.TryAdd(Of K, T)(ITrie(Of K, T), T, Action(Of Action(Of K)))
- uid: Towel.DataStructures.Trie.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryGet_
  commentId: Overload:Towel.DataStructures.Trie.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.TryGet
  nameWithType: Trie.TryGet
- uid: Towel.DataStructures.Trie.TryGet``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}},``1@)
  name: TryGet<K, T>(ITrie<K, T>, Action<Action<K>>, out T)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryGet__2_Towel_DataStructures_ITrie___0___1__Action_Action___0_____1__
  commentId: M:Towel.DataStructures.Trie.TryGet``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}},``1@)
  name.vb: TryGet(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)), ByRef T)
  fullName: Towel.DataStructures.Trie.TryGet<K, T>(Towel.DataStructures.ITrie<K, T>, Action<Action<K>>, out T)
  fullName.vb: Towel.DataStructures.Trie.TryGet(Of K, T)(Towel.DataStructures.ITrie(Of K, T), Action(Of Action(Of K)), ByRef T)
  nameWithType: Trie.TryGet<K, T>(ITrie<K, T>, Action<Action<K>>, out T)
  nameWithType.vb: Trie.TryGet(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)), ByRef T)
- uid: Towel.DataStructures.Trie.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryRemove_
  commentId: Overload:Towel.DataStructures.Trie.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.Trie.TryRemove
  nameWithType: Trie.TryRemove
- uid: Towel.DataStructures.Trie.TryRemove``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name: TryRemove<K, T>(ITrie<K, T>, Action<Action<K>>)
  href: api/Towel.DataStructures.Trie.html#Towel_DataStructures_Trie_TryRemove__2_Towel_DataStructures_ITrie___0___1__Action_Action___0___
  commentId: M:Towel.DataStructures.Trie.TryRemove``2(Towel.DataStructures.ITrie{``0,``1},Action{Action{``0}})
  name.vb: TryRemove(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
  fullName: Towel.DataStructures.Trie.TryRemove<K, T>(Towel.DataStructures.ITrie<K, T>, Action<Action<K>>)
  fullName.vb: Towel.DataStructures.Trie.TryRemove(Of K, T)(Towel.DataStructures.ITrie(Of K, T), Action(Of Action(Of K)))
  nameWithType: Trie.TryRemove<K, T>(ITrie<K, T>, Action<Action<K>>)
  nameWithType.vb: Trie.TryRemove(Of K, T)(ITrie(Of K, T), Action(Of Action(Of K)))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1
  name: TrieLinkedHashLinked<T>
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html
  commentId: T:Towel.DataStructures.TrieLinkedHashLinked`1
  name.vb: TrieLinkedHashLinked(Of T)
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T)
  nameWithType: TrieLinkedHashLinked<T>
  nameWithType.vb: TrieLinkedHashLinked(Of T)
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,System.Int32}})
  name: TrieLinkedHashLinked(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1__ctor_System_Nullable_Func__0__0_System_Boolean___System_Nullable_Func__0_System_Int32___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,System.Int32}})
  name.vb: TrieLinkedHashLinked(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TrieLinkedHashLinked(System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TrieLinkedHashLinked(System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: TrieLinkedHashLinked<T>.TrieLinkedHashLinked(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).TrieLinkedHashLinked(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.#ctor*
  name: TrieLinkedHashLinked
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1__ctor_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TrieLinkedHashLinked
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TrieLinkedHashLinked
  nameWithType: TrieLinkedHashLinked<T>.TrieLinkedHashLinked
  nameWithType.vb: TrieLinkedHashLinked(Of T).TrieLinkedHashLinked
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Clear
  name: Clear()
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Clear
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.Clear
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Clear()
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Clear()
  nameWithType: TrieLinkedHashLinked<T>.Clear()
  nameWithType.vb: TrieLinkedHashLinked(Of T).Clear()
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Clear*
  name: Clear
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Clear_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Clear
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Clear
  nameWithType: TrieLinkedHashLinked<T>.Clear
  nameWithType.vb: TrieLinkedHashLinked(Of T).Clear
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Contains(Action{Action{`0}})
  name: Contains(Action<Action<T>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Contains_Action_Action__0___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.Contains(Action{Action{`0}})
  name.vb: Contains(Action(Of Action(Of T)))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Contains(Action<Action<T>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Contains(Action(Of Action(Of T)))
  nameWithType: TrieLinkedHashLinked<T>.Contains(Action<Action<T>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).Contains(Action(Of Action(Of T)))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Contains*
  name: Contains
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Contains_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Contains
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Contains
  nameWithType: TrieLinkedHashLinked<T>.Contains
  nameWithType.vb: TrieLinkedHashLinked(Of T).Contains
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Count
  name: Count
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Count
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`1.Count
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Count
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Count
  nameWithType: TrieLinkedHashLinked<T>.Count
  nameWithType.vb: TrieLinkedHashLinked(Of T).Count
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Count*
  name: Count
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Count_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Count
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Count
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Count
  nameWithType: TrieLinkedHashLinked<T>.Count
  nameWithType.vb: TrieLinkedHashLinked(Of T).Count
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Equate
  name: Equate
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Equate
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`1.Equate
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Equate
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Equate
  nameWithType: TrieLinkedHashLinked<T>.Equate
  nameWithType.vb: TrieLinkedHashLinked(Of T).Equate
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Equate*
  name: Equate
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Equate_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Equate
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Equate
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Equate
  nameWithType: TrieLinkedHashLinked<T>.Equate
  nameWithType.vb: TrieLinkedHashLinked(Of T).Equate
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_GetEnumerator
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.GetEnumerator
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.GetEnumerator()
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).GetEnumerator()
  nameWithType: TrieLinkedHashLinked<T>.GetEnumerator()
  nameWithType.vb: TrieLinkedHashLinked(Of T).GetEnumerator()
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_GetEnumerator_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.GetEnumerator
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).GetEnumerator
  nameWithType: TrieLinkedHashLinked<T>.GetEnumerator
  nameWithType.vb: TrieLinkedHashLinked(Of T).GetEnumerator
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Hash
  name: Hash
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Hash
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`1.Hash
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Hash
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Hash
  nameWithType: TrieLinkedHashLinked<T>.Hash
  nameWithType.vb: TrieLinkedHashLinked(Of T).Hash
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Hash*
  name: Hash
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Hash_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Hash
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Hash
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Hash
  nameWithType: TrieLinkedHashLinked<T>.Hash
  nameWithType.vb: TrieLinkedHashLinked(Of T).Hash
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Stepper(Action{Action{Action{`0}}})
  name: Stepper(Action<Action<Action<T>>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Stepper_Action_Action_Action__0____
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.Stepper(Action{Action{Action{`0}}})
  name.vb: Stepper(Action(Of Action(Of Action(Of T))))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Stepper(Action<Action<Action<T>>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Stepper(Action(Of Action(Of Action(Of T))))
  nameWithType: TrieLinkedHashLinked<T>.Stepper(Action<Action<Action<T>>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).Stepper(Action(Of Action(Of Action(Of T))))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Stepper(Func{Action{Action{`0}},Towel.StepStatus})
  name: Stepper(Func<Action<Action<T>>, StepStatus>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Stepper_Func_Action_Action__0___Towel_StepStatus__
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.Stepper(Func{Action{Action{`0}},Towel.StepStatus})
  name.vb: Stepper(Func(Of Action(Of Action(Of T)), StepStatus))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Stepper(Func<Action<Action<T>>, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Stepper(Func(Of Action(Of Action(Of T)), Towel.StepStatus))
  nameWithType: TrieLinkedHashLinked<T>.Stepper(Func<Action<Action<T>>, StepStatus>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).Stepper(Func(Of Action(Of Action(Of T)), StepStatus))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_Stepper_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.Stepper
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).Stepper
  nameWithType: TrieLinkedHashLinked<T>.Stepper
  nameWithType.vb: TrieLinkedHashLinked(Of T).Stepper
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.TryAdd(Action{Action{`0}},System.Nullable{Exception}@)
  name: TryAdd(Action<Action<T>>, out Nullable<Exception>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_TryAdd_Action_Action__0___System_Nullable_Exception___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.TryAdd(Action{Action{`0}},System.Nullable{Exception}@)
  name.vb: TryAdd(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TryAdd(Action<Action<T>>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TryAdd(Action(Of Action(Of T)), ByRef System.Nullable(Of Exception))
  nameWithType: TrieLinkedHashLinked<T>.TryAdd(Action<Action<T>>, out Nullable<Exception>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).TryAdd(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_TryAdd_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TryAdd
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TryAdd
  nameWithType: TrieLinkedHashLinked<T>.TryAdd
  nameWithType.vb: TrieLinkedHashLinked(Of T).TryAdd
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.TryRemove(Action{Action{`0}},System.Nullable{Exception}@)
  name: TryRemove(Action<Action<T>>, out Nullable<Exception>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_TryRemove_Action_Action__0___System_Nullable_Exception___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`1.TryRemove(Action{Action{`0}},System.Nullable{Exception}@)
  name.vb: TryRemove(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TryRemove(Action<Action<T>>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TryRemove(Action(Of Action(Of T)), ByRef System.Nullable(Of Exception))
  nameWithType: TrieLinkedHashLinked<T>.TryRemove(Action<Action<T>>, out Nullable<Exception>)
  nameWithType.vb: TrieLinkedHashLinked(Of T).TryRemove(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.TrieLinkedHashLinked`1.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.TrieLinkedHashLinked-1.html#Towel_DataStructures_TrieLinkedHashLinked_1_TryRemove_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`1.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T>.TryRemove
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T).TryRemove
  nameWithType: TrieLinkedHashLinked<T>.TryRemove
  nameWithType.vb: TrieLinkedHashLinked(Of T).TryRemove
- uid: Towel.DataStructures.TrieLinkedHashLinked`2
  name: TrieLinkedHashLinked<T, D>
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html
  commentId: T:Towel.DataStructures.TrieLinkedHashLinked`2
  name.vb: TrieLinkedHashLinked(Of T, D)
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D)
  nameWithType: TrieLinkedHashLinked<T, D>
  nameWithType.vb: TrieLinkedHashLinked(Of T, D)
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,System.Int32}})
  name: TrieLinkedHashLinked(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2__ctor_System_Nullable_Func__0__0_System_Boolean___System_Nullable_Func__0_System_Int32___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.#ctor(System.Nullable{Func{`0,`0,System.Boolean}},System.Nullable{Func{`0,System.Int32}})
  name.vb: TrieLinkedHashLinked(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TrieLinkedHashLinked(System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TrieLinkedHashLinked(System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: TrieLinkedHashLinked<T, D>.TrieLinkedHashLinked(Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TrieLinkedHashLinked(Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.#ctor*
  name: TrieLinkedHashLinked
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2__ctor_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.#ctor
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TrieLinkedHashLinked
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TrieLinkedHashLinked
  nameWithType: TrieLinkedHashLinked<T, D>.TrieLinkedHashLinked
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TrieLinkedHashLinked
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Clear
  name: Clear()
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Clear
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Clear
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Clear()
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Clear()
  nameWithType: TrieLinkedHashLinked<T, D>.Clear()
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Clear()
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Clear*
  name: Clear
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Clear_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Clear
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Clear
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Clear
  nameWithType: TrieLinkedHashLinked<T, D>.Clear
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Clear
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Contains(Action{Action{`0}})
  name: Contains(Action<Action<T>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Contains_Action_Action__0___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Contains(Action{Action{`0}})
  name.vb: Contains(Action(Of Action(Of T)))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Contains(Action<Action<T>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Contains(Action(Of Action(Of T)))
  nameWithType: TrieLinkedHashLinked<T, D>.Contains(Action<Action<T>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Contains(Action(Of Action(Of T)))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Contains*
  name: Contains
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Contains_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Contains
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Contains
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Contains
  nameWithType: TrieLinkedHashLinked<T, D>.Contains
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Contains
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Count
  name: Count
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Count
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`2.Count
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Count
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Count
  nameWithType: TrieLinkedHashLinked<T, D>.Count
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Count
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Count*
  name: Count
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Count_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Count
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Count
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Count
  nameWithType: TrieLinkedHashLinked<T, D>.Count
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Count
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Equate
  name: Equate
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Equate
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`2.Equate
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Equate
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Equate
  nameWithType: TrieLinkedHashLinked<T, D>.Equate
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Equate
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Equate*
  name: Equate
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Equate_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Equate
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Equate
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Equate
  nameWithType: TrieLinkedHashLinked<T, D>.Equate
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Equate
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_GetEnumerator
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.GetEnumerator
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.GetEnumerator()
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).GetEnumerator()
  nameWithType: TrieLinkedHashLinked<T, D>.GetEnumerator()
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).GetEnumerator()
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_GetEnumerator_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.GetEnumerator
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.GetEnumerator
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).GetEnumerator
  nameWithType: TrieLinkedHashLinked<T, D>.GetEnumerator
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).GetEnumerator
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Hash
  name: Hash
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Hash
  commentId: P:Towel.DataStructures.TrieLinkedHashLinked`2.Hash
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Hash
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Hash
  nameWithType: TrieLinkedHashLinked<T, D>.Hash
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Hash
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Hash*
  name: Hash
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Hash_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Hash
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Hash
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Hash
  nameWithType: TrieLinkedHashLinked<T, D>.Hash
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Hash
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Action{Action{Action{`0}},`1})
  name: Stepper(Action<Action<Action<T>>, D>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Stepper_Action_Action_Action__0____1__
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Action{Action{Action{`0}},`1})
  name.vb: Stepper(Action(Of Action(Of Action(Of T)), D))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Stepper(Action<Action<Action<T>>, D>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Stepper(Action(Of Action(Of Action(Of T)), D))
  nameWithType: TrieLinkedHashLinked<T, D>.Stepper(Action<Action<Action<T>>, D>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Stepper(Action(Of Action(Of Action(Of T)), D))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Action{Action{Action{`0}}})
  name: Stepper(Action<Action<Action<T>>>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Stepper_Action_Action_Action__0____
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Action{Action{Action{`0}}})
  name.vb: Stepper(Action(Of Action(Of Action(Of T))))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Stepper(Action<Action<Action<T>>>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Stepper(Action(Of Action(Of Action(Of T))))
  nameWithType: TrieLinkedHashLinked<T, D>.Stepper(Action<Action<Action<T>>>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Stepper(Action(Of Action(Of Action(Of T))))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Func{Action{Action{`0}},`1,Towel.StepStatus})
  name: Stepper(Func<Action<Action<T>>, D, StepStatus>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Stepper_Func_Action_Action__0____1_Towel_StepStatus__
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Func{Action{Action{`0}},`1,Towel.StepStatus})
  name.vb: Stepper(Func(Of Action(Of Action(Of T)), D, StepStatus))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Stepper(Func<Action<Action<T>>, D, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), D, Towel.StepStatus))
  nameWithType: TrieLinkedHashLinked<T, D>.Stepper(Func<Action<Action<T>>, D, StepStatus>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), D, StepStatus))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Func{Action{Action{`0}},Towel.StepStatus})
  name: Stepper(Func<Action<Action<T>>, StepStatus>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Stepper_Func_Action_Action__0___Towel_StepStatus__
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.Stepper(Func{Action{Action{`0}},Towel.StepStatus})
  name.vb: Stepper(Func(Of Action(Of Action(Of T)), StepStatus))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Stepper(Func<Action<Action<T>>, Towel.StepStatus>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), Towel.StepStatus))
  nameWithType: TrieLinkedHashLinked<T, D>.Stepper(Func<Action<Action<T>>, StepStatus>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Stepper(Func(Of Action(Of Action(Of T)), StepStatus))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.Stepper*
  name: Stepper
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_Stepper_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.Stepper
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.Stepper
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).Stepper
  nameWithType: TrieLinkedHashLinked<T, D>.Stepper
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).Stepper
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryAdd(`1,Action{Action{`0}},Exception@)
  name: TryAdd(D, Action<Action<T>>, out Exception)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryAdd__1_Action_Action__0___Exception__
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.TryAdd(`1,Action{Action{`0}},Exception@)
  name.vb: TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryAdd(D, Action<Action<T>>, out Exception)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
  nameWithType: TrieLinkedHashLinked<T, D>.TryAdd(D, Action<Action<T>>, out Exception)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryAdd(D, Action(Of Action(Of T)), ByRef Exception)
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryAdd*
  name: TryAdd
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryAdd_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.TryAdd
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryAdd
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryAdd
  nameWithType: TrieLinkedHashLinked<T, D>.TryAdd
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryAdd
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryGet(Action{Action{`0}},`1@,System.Nullable{Exception}@)
  name: TryGet(Action<Action<T>>, out D, out Nullable<Exception>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryGet_Action_Action__0____1__System_Nullable_Exception___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.TryGet(Action{Action{`0}},`1@,System.Nullable{Exception}@)
  name.vb: TryGet(Action(Of Action(Of T)), ByRef D, ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryGet(Action<Action<T>>, out D, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryGet(Action(Of Action(Of T)), ByRef D, ByRef System.Nullable(Of Exception))
  nameWithType: TrieLinkedHashLinked<T, D>.TryGet(Action<Action<T>>, out D, out Nullable<Exception>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryGet(Action(Of Action(Of T)), ByRef D, ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryGet*
  name: TryGet
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryGet_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.TryGet
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryGet
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryGet
  nameWithType: TrieLinkedHashLinked<T, D>.TryGet
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryGet
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryRemove(Action{Action{`0}},System.Nullable{Exception}@)
  name: TryRemove(Action<Action<T>>, out Nullable<Exception>)
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryRemove_Action_Action__0___System_Nullable_Exception___
  commentId: M:Towel.DataStructures.TrieLinkedHashLinked`2.TryRemove(Action{Action{`0}},System.Nullable{Exception}@)
  name.vb: TryRemove(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryRemove(Action<Action<T>>, out System.Nullable<Exception>)
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryRemove(Action(Of Action(Of T)), ByRef System.Nullable(Of Exception))
  nameWithType: TrieLinkedHashLinked<T, D>.TryRemove(Action<Action<T>>, out Nullable<Exception>)
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryRemove(Action(Of Action(Of T)), ByRef Nullable(Of Exception))
- uid: Towel.DataStructures.TrieLinkedHashLinked`2.TryRemove*
  name: TryRemove
  href: api/Towel.DataStructures.TrieLinkedHashLinked-2.html#Towel_DataStructures_TrieLinkedHashLinked_2_TryRemove_
  commentId: Overload:Towel.DataStructures.TrieLinkedHashLinked`2.TryRemove
  isSpec: "True"
  fullName: Towel.DataStructures.TrieLinkedHashLinked<T, D>.TryRemove
  fullName.vb: Towel.DataStructures.TrieLinkedHashLinked(Of T, D).TryRemove
  nameWithType: TrieLinkedHashLinked<T, D>.TryRemove
  nameWithType.vb: TrieLinkedHashLinked(Of T, D).TryRemove
- uid: Towel.DocumentationMethodException
  name: DocumentationMethodException
  href: api/Towel.DocumentationMethodException.html
  commentId: T:Towel.DocumentationMethodException
  fullName: Towel.DocumentationMethodException
  nameWithType: DocumentationMethodException
- uid: Towel.DocumentationMethodException.#ctor
  name: DocumentationMethodException()
  href: api/Towel.DocumentationMethodException.html#Towel_DocumentationMethodException__ctor
  commentId: M:Towel.DocumentationMethodException.#ctor
  fullName: Towel.DocumentationMethodException.DocumentationMethodException()
  nameWithType: DocumentationMethodException.DocumentationMethodException()
- uid: Towel.DocumentationMethodException.#ctor(System.String)
  name: DocumentationMethodException(String)
  href: api/Towel.DocumentationMethodException.html#Towel_DocumentationMethodException__ctor_System_String_
  commentId: M:Towel.DocumentationMethodException.#ctor(System.String)
  fullName: Towel.DocumentationMethodException.DocumentationMethodException(System.String)
  nameWithType: DocumentationMethodException.DocumentationMethodException(String)
- uid: Towel.DocumentationMethodException.#ctor(System.String,Exception)
  name: DocumentationMethodException(String, Exception)
  href: api/Towel.DocumentationMethodException.html#Towel_DocumentationMethodException__ctor_System_String_Exception_
  commentId: M:Towel.DocumentationMethodException.#ctor(System.String,Exception)
  fullName: Towel.DocumentationMethodException.DocumentationMethodException(System.String, Exception)
  nameWithType: DocumentationMethodException.DocumentationMethodException(String, Exception)
- uid: Towel.DocumentationMethodException.#ctor*
  name: DocumentationMethodException
  href: api/Towel.DocumentationMethodException.html#Towel_DocumentationMethodException__ctor_
  commentId: Overload:Towel.DocumentationMethodException.#ctor
  isSpec: "True"
  fullName: Towel.DocumentationMethodException.DocumentationMethodException
  nameWithType: DocumentationMethodException.DocumentationMethodException
- uid: Towel.Extensions
  name: Extensions
  href: api/Towel.Extensions.html
  commentId: T:Towel.Extensions
  fullName: Towel.Extensions
  nameWithType: Extensions
- uid: Towel.Extensions.Any*
  name: Any
  href: api/Towel.Extensions.html#Towel_Extensions_Any_
  commentId: Overload:Towel.Extensions.Any
  isSpec: "True"
  fullName: Towel.Extensions.Any
  nameWithType: Extensions.Any
- uid: Towel.Extensions.Any``1(Action{Action{``0}},Predicate{``0})
  name: Any<T>(Action<Action<T>>, Predicate<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Any__1_Action_Action___0___Predicate___0__
  commentId: M:Towel.Extensions.Any``1(Action{Action{``0}},Predicate{``0})
  name.vb: Any(Of T)(Action(Of Action(Of T)), Predicate(Of T))
  fullName: Towel.Extensions.Any<T>(Action<Action<T>>, Predicate<T>)
  fullName.vb: Towel.Extensions.Any(Of T)(Action(Of Action(Of T)), Predicate(Of T))
  nameWithType: Extensions.Any<T>(Action<Action<T>>, Predicate<T>)
  nameWithType.vb: Extensions.Any(Of T)(Action(Of Action(Of T)), Predicate(Of T))
- uid: Towel.Extensions.Any``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus},Predicate{``0})
  name: Any<T>(Func<Func<T, StepStatus>, StepStatus>, Predicate<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Any__1_Func_Func___0_Towel_StepStatus__Towel_StepStatus__Predicate___0__
  commentId: M:Towel.Extensions.Any``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus},Predicate{``0})
  name.vb: Any(Of T)(Func(Of Func(Of T, StepStatus), StepStatus), Predicate(Of T))
  fullName: Towel.Extensions.Any<T>(Func<Func<T, Towel.StepStatus>, Towel.StepStatus>, Predicate<T>)
  fullName.vb: Towel.Extensions.Any(Of T)(Func(Of Func(Of T, Towel.StepStatus), Towel.StepStatus), Predicate(Of T))
  nameWithType: Extensions.Any<T>(Func<Func<T, StepStatus>, StepStatus>, Predicate<T>)
  nameWithType.vb: Extensions.Any(Of T)(Func(Of Func(Of T, StepStatus), StepStatus), Predicate(Of T))
- uid: Towel.Extensions.Append*
  name: Append
  href: api/Towel.Extensions.html#Towel_Extensions_Append_
  commentId: Overload:Towel.Extensions.Append
  isSpec: "True"
  fullName: Towel.Extensions.Append
  nameWithType: Extensions.Append
- uid: Towel.Extensions.Append``1(Action{Action{``0}},``0[])
  name: Append<T>(Action<Action<T>>, T[])
  href: api/Towel.Extensions.html#Towel_Extensions_Append__1_Action_Action___0_____0___
  commentId: M:Towel.Extensions.Append``1(Action{Action{``0}},``0[])
  name.vb: Append(Of T)(Action(Of Action(Of T)), T())
  fullName: Towel.Extensions.Append<T>(Action<Action<T>>, T[])
  fullName.vb: Towel.Extensions.Append(Of T)(Action(Of Action(Of T)), T())
  nameWithType: Extensions.Append<T>(Action<Action<T>>, T[])
  nameWithType.vb: Extensions.Append(Of T)(Action(Of Action(Of T)), T())
- uid: Towel.Extensions.Build*
  name: Build
  href: api/Towel.Extensions.html#Towel_Extensions_Build_
  commentId: Overload:Towel.Extensions.Build
  isSpec: "True"
  fullName: Towel.Extensions.Build
  nameWithType: Extensions.Build
- uid: Towel.Extensions.Build``1(``0[])
  name: Build<T>(T[])
  href: api/Towel.Extensions.html#Towel_Extensions_Build__1___0___
  commentId: M:Towel.Extensions.Build``1(``0[])
  name.vb: Build(Of T)(T())
  fullName: Towel.Extensions.Build<T>(T[])
  fullName.vb: Towel.Extensions.Build(Of T)(T())
  nameWithType: Extensions.Build<T>(T[])
  nameWithType.vb: Extensions.Build(Of T)(T())
- uid: Towel.Extensions.BuildArray*
  name: BuildArray
  href: api/Towel.Extensions.html#Towel_Extensions_BuildArray_
  commentId: Overload:Towel.Extensions.BuildArray
  isSpec: "True"
  fullName: Towel.Extensions.BuildArray
  nameWithType: Extensions.BuildArray
- uid: Towel.Extensions.BuildArray``1(System.Int32,Func{System.Int32,``0})
  name: BuildArray<T>(Int32, Func<Int32, T>)
  href: api/Towel.Extensions.html#Towel_Extensions_BuildArray__1_System_Int32_Func_System_Int32___0__
  commentId: M:Towel.Extensions.BuildArray``1(System.Int32,Func{System.Int32,``0})
  name.vb: BuildArray(Of T)(Int32, Func(Of Int32, T))
  fullName: Towel.Extensions.BuildArray<T>(System.Int32, Func<System.Int32, T>)
  fullName.vb: Towel.Extensions.BuildArray(Of T)(System.Int32, Func(Of System.Int32, T))
  nameWithType: Extensions.BuildArray<T>(Int32, Func<Int32, T>)
  nameWithType.vb: Extensions.BuildArray(Of T)(Int32, Func(Of Int32, T))
- uid: Towel.Extensions.Choose*
  name: Choose
  href: api/Towel.Extensions.html#Towel_Extensions_Choose_
  commentId: Overload:Towel.Extensions.Choose
  isSpec: "True"
  fullName: Towel.Extensions.Choose
  nameWithType: Extensions.Choose
- uid: Towel.Extensions.Choose``1(Random,``0[])
  name: Choose<T>(Random, T[])
  href: api/Towel.Extensions.html#Towel_Extensions_Choose__1_Random___0___
  commentId: M:Towel.Extensions.Choose``1(Random,``0[])
  name.vb: Choose(Of T)(Random, T())
  fullName: Towel.Extensions.Choose<T>(Random, T[])
  fullName.vb: Towel.Extensions.Choose(Of T)(Random, T())
  nameWithType: Extensions.Choose<T>(Random, T[])
  nameWithType.vb: Extensions.Choose(Of T)(Random, T())
- uid: Towel.Extensions.ClearReplaceCache
  name: ClearReplaceCache()
  href: api/Towel.Extensions.html#Towel_Extensions_ClearReplaceCache
  commentId: M:Towel.Extensions.ClearReplaceCache
  fullName: Towel.Extensions.ClearReplaceCache()
  nameWithType: Extensions.ClearReplaceCache()
- uid: Towel.Extensions.ClearReplaceCache*
  name: ClearReplaceCache
  href: api/Towel.Extensions.html#Towel_Extensions_ClearReplaceCache_
  commentId: Overload:Towel.Extensions.ClearReplaceCache
  isSpec: "True"
  fullName: Towel.Extensions.ClearReplaceCache
  nameWithType: Extensions.ClearReplaceCache
- uid: Towel.Extensions.Concat*
  name: Concat
  href: api/Towel.Extensions.html#Towel_Extensions_Concat_
  commentId: Overload:Towel.Extensions.Concat
  isSpec: "True"
  fullName: Towel.Extensions.Concat
  nameWithType: Extensions.Concat
- uid: Towel.Extensions.Concat``1(Action{Action{``0}},Action{Action{``0}}[])
  name: Concat<T>(Action<Action<T>>, Action<Action<T>>[])
  href: api/Towel.Extensions.html#Towel_Extensions_Concat__1_Action_Action___0___Action_Action___0_____
  commentId: M:Towel.Extensions.Concat``1(Action{Action{``0}},Action{Action{``0}}[])
  name.vb: Concat(Of T)(Action(Of Action(Of T)), Action(Of Action(Of T))())
  fullName: Towel.Extensions.Concat<T>(Action<Action<T>>, Action<Action<T>>[])
  fullName.vb: Towel.Extensions.Concat(Of T)(Action(Of Action(Of T)), Action(Of Action(Of T))())
  nameWithType: Extensions.Concat<T>(Action<Action<T>>, Action<Action<T>>[])
  nameWithType.vb: Extensions.Concat(Of T)(Action(Of Action(Of T)), Action(Of Action(Of T))())
- uid: Towel.Extensions.ConcatToString(Action{Action{System.Char}})
  name: ConcatToString(Action<Action<Char>>)
  href: api/Towel.Extensions.html#Towel_Extensions_ConcatToString_Action_Action_System_Char___
  commentId: M:Towel.Extensions.ConcatToString(Action{Action{System.Char}})
  name.vb: ConcatToString(Action(Of Action(Of Char)))
  fullName: Towel.Extensions.ConcatToString(Action<Action<System.Char>>)
  fullName.vb: Towel.Extensions.ConcatToString(Action(Of Action(Of System.Char)))
  nameWithType: Extensions.ConcatToString(Action<Action<Char>>)
  nameWithType.vb: Extensions.ConcatToString(Action(Of Action(Of Char)))
- uid: Towel.Extensions.ConcatToString*
  name: ConcatToString
  href: api/Towel.Extensions.html#Towel_Extensions_ConcatToString_
  commentId: Overload:Towel.Extensions.ConcatToString
  isSpec: "True"
  fullName: Towel.Extensions.ConcatToString
  nameWithType: Extensions.ConcatToString
- uid: Towel.Extensions.ConstructRectangularJaggedArray*
  name: ConstructRectangularJaggedArray
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructRectangularJaggedArray_
  commentId: Overload:Towel.Extensions.ConstructRectangularJaggedArray
  isSpec: "True"
  fullName: Towel.Extensions.ConstructRectangularJaggedArray
  nameWithType: Extensions.ConstructRectangularJaggedArray
- uid: Towel.Extensions.ConstructRectangularJaggedArray``1(System.Int32,System.Int32)
  name: ConstructRectangularJaggedArray<T>(Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructRectangularJaggedArray__1_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.ConstructRectangularJaggedArray``1(System.Int32,System.Int32)
  name.vb: ConstructRectangularJaggedArray(Of T)(Int32, Int32)
  fullName: Towel.Extensions.ConstructRectangularJaggedArray<T>(System.Int32, System.Int32)
  fullName.vb: Towel.Extensions.ConstructRectangularJaggedArray(Of T)(System.Int32, System.Int32)
  nameWithType: Extensions.ConstructRectangularJaggedArray<T>(Int32, Int32)
  nameWithType.vb: Extensions.ConstructRectangularJaggedArray(Of T)(Int32, Int32)
- uid: Towel.Extensions.ConstructRectangularJaggedArray``1(System.Int32,System.Int32,Func{System.Int32,System.Int32,``0})
  name: ConstructRectangularJaggedArray<T>(Int32, Int32, Func<Int32, Int32, T>)
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructRectangularJaggedArray__1_System_Int32_System_Int32_Func_System_Int32_System_Int32___0__
  commentId: M:Towel.Extensions.ConstructRectangularJaggedArray``1(System.Int32,System.Int32,Func{System.Int32,System.Int32,``0})
  name.vb: ConstructRectangularJaggedArray(Of T)(Int32, Int32, Func(Of Int32, Int32, T))
  fullName: Towel.Extensions.ConstructRectangularJaggedArray<T>(System.Int32, System.Int32, Func<System.Int32, System.Int32, T>)
  fullName.vb: Towel.Extensions.ConstructRectangularJaggedArray(Of T)(System.Int32, System.Int32, Func(Of System.Int32, System.Int32, T))
  nameWithType: Extensions.ConstructRectangularJaggedArray<T>(Int32, Int32, Func<Int32, Int32, T>)
  nameWithType.vb: Extensions.ConstructRectangularJaggedArray(Of T)(Int32, Int32, Func(Of Int32, Int32, T))
- uid: Towel.Extensions.ConstructSquareJaggedArray*
  name: ConstructSquareJaggedArray
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructSquareJaggedArray_
  commentId: Overload:Towel.Extensions.ConstructSquareJaggedArray
  isSpec: "True"
  fullName: Towel.Extensions.ConstructSquareJaggedArray
  nameWithType: Extensions.ConstructSquareJaggedArray
- uid: Towel.Extensions.ConstructSquareJaggedArray``1(System.Int32)
  name: ConstructSquareJaggedArray<T>(Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructSquareJaggedArray__1_System_Int32_
  commentId: M:Towel.Extensions.ConstructSquareJaggedArray``1(System.Int32)
  name.vb: ConstructSquareJaggedArray(Of T)(Int32)
  fullName: Towel.Extensions.ConstructSquareJaggedArray<T>(System.Int32)
  fullName.vb: Towel.Extensions.ConstructSquareJaggedArray(Of T)(System.Int32)
  nameWithType: Extensions.ConstructSquareJaggedArray<T>(Int32)
  nameWithType.vb: Extensions.ConstructSquareJaggedArray(Of T)(Int32)
- uid: Towel.Extensions.ConstructSquareJaggedArray``1(System.Int32,Func{System.Int32,System.Int32,``0})
  name: ConstructSquareJaggedArray<T>(Int32, Func<Int32, Int32, T>)
  href: api/Towel.Extensions.html#Towel_Extensions_ConstructSquareJaggedArray__1_System_Int32_Func_System_Int32_System_Int32___0__
  commentId: M:Towel.Extensions.ConstructSquareJaggedArray``1(System.Int32,Func{System.Int32,System.Int32,``0})
  name.vb: ConstructSquareJaggedArray(Of T)(Int32, Func(Of Int32, Int32, T))
  fullName: Towel.Extensions.ConstructSquareJaggedArray<T>(System.Int32, Func<System.Int32, System.Int32, T>)
  fullName.vb: Towel.Extensions.ConstructSquareJaggedArray(Of T)(System.Int32, Func(Of System.Int32, System.Int32, T))
  nameWithType: Extensions.ConstructSquareJaggedArray<T>(Int32, Func<Int32, Int32, T>)
  nameWithType.vb: Extensions.ConstructSquareJaggedArray(Of T)(Int32, Func(Of Int32, Int32, T))
- uid: Towel.Extensions.ContainsAny(System.String,System.Char[])
  name: ContainsAny(String, Char[])
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsAny_System_String_System_Char___
  commentId: M:Towel.Extensions.ContainsAny(System.String,System.Char[])
  name.vb: ContainsAny(String, Char())
  fullName: Towel.Extensions.ContainsAny(System.String, System.Char[])
  fullName.vb: Towel.Extensions.ContainsAny(System.String, System.Char())
  nameWithType: Extensions.ContainsAny(String, Char[])
  nameWithType.vb: Extensions.ContainsAny(String, Char())
- uid: Towel.Extensions.ContainsAny*
  name: ContainsAny
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsAny_
  commentId: Overload:Towel.Extensions.ContainsAny
  isSpec: "True"
  fullName: Towel.Extensions.ContainsAny
  nameWithType: Extensions.ContainsAny
- uid: Towel.Extensions.ContainsDuplicates*
  name: ContainsDuplicates
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsDuplicates_
  commentId: Overload:Towel.Extensions.ContainsDuplicates
  isSpec: "True"
  fullName: Towel.Extensions.ContainsDuplicates
  nameWithType: Extensions.ContainsDuplicates
- uid: Towel.Extensions.ContainsDuplicates``1(Action{Action{``0}})
  name: ContainsDuplicates<T>(Action<Action<T>>)
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsDuplicates__1_Action_Action___0___
  commentId: M:Towel.Extensions.ContainsDuplicates``1(Action{Action{``0}})
  name.vb: ContainsDuplicates(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Extensions.ContainsDuplicates<T>(Action<Action<T>>)
  fullName.vb: Towel.Extensions.ContainsDuplicates(Of T)(Action(Of Action(Of T)))
  nameWithType: Extensions.ContainsDuplicates<T>(Action<Action<T>>)
  nameWithType.vb: Extensions.ContainsDuplicates(Of T)(Action(Of Action(Of T)))
- uid: Towel.Extensions.ContainsDuplicates``1(Action{Action{``0}},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name: ContainsDuplicates<T>(Action<Action<T>>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsDuplicates__1_Action_Action___0___System_Nullable_Func___0___0_System_Boolean___System_Nullable_Func___0_System_Int32___
  commentId: M:Towel.Extensions.ContainsDuplicates``1(Action{Action{``0}},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name.vb: ContainsDuplicates(Of T)(Action(Of Action(Of T)), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.Extensions.ContainsDuplicates<T>(Action<Action<T>>, System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.Extensions.ContainsDuplicates(Of T)(Action(Of Action(Of T)), System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: Extensions.ContainsDuplicates<T>(Action<Action<T>>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: Extensions.ContainsDuplicates(Of T)(Action(Of Action(Of T)), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.Extensions.ContainsDuplicates``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus})
  name: ContainsDuplicates<T>(Func<Func<T, StepStatus>, StepStatus>)
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsDuplicates__1_Func_Func___0_Towel_StepStatus__Towel_StepStatus__
  commentId: M:Towel.Extensions.ContainsDuplicates``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus})
  name.vb: ContainsDuplicates(Of T)(Func(Of Func(Of T, StepStatus), StepStatus))
  fullName: Towel.Extensions.ContainsDuplicates<T>(Func<Func<T, Towel.StepStatus>, Towel.StepStatus>)
  fullName.vb: Towel.Extensions.ContainsDuplicates(Of T)(Func(Of Func(Of T, Towel.StepStatus), Towel.StepStatus))
  nameWithType: Extensions.ContainsDuplicates<T>(Func<Func<T, StepStatus>, StepStatus>)
  nameWithType.vb: Extensions.ContainsDuplicates(Of T)(Func(Of Func(Of T, StepStatus), StepStatus))
- uid: Towel.Extensions.ContainsDuplicates``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name: ContainsDuplicates<T>(Func<Func<T, StepStatus>, StepStatus>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.Extensions.html#Towel_Extensions_ContainsDuplicates__1_Func_Func___0_Towel_StepStatus__Towel_StepStatus__System_Nullable_Func___0___0_System_Boolean___System_Nullable_Func___0_System_Int32___
  commentId: M:Towel.Extensions.ContainsDuplicates``1(Func{Func{``0,Towel.StepStatus},Towel.StepStatus},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name.vb: ContainsDuplicates(Of T)(Func(Of Func(Of T, StepStatus), StepStatus), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.Extensions.ContainsDuplicates<T>(Func<Func<T, Towel.StepStatus>, Towel.StepStatus>, System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.Extensions.ContainsDuplicates(Of T)(Func(Of Func(Of T, Towel.StepStatus), Towel.StepStatus), System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: Extensions.ContainsDuplicates<T>(Func<Func<T, StepStatus>, StepStatus>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: Extensions.ContainsDuplicates(Of T)(Func(Of Func(Of T, StepStatus), StepStatus), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.Extensions.Convert*
  name: Convert
  href: api/Towel.Extensions.html#Towel_Extensions_Convert_
  commentId: Overload:Towel.Extensions.Convert
  isSpec: "True"
  fullName: Towel.Extensions.Convert
  nameWithType: Extensions.Convert
- uid: Towel.Extensions.Convert``2(Action{Action{``0}},Func{``0,``1})
  name: Convert<A, B>(Action<Action<A>>, Func<A, B>)
  href: api/Towel.Extensions.html#Towel_Extensions_Convert__2_Action_Action___0___Func___0___1__
  commentId: M:Towel.Extensions.Convert``2(Action{Action{``0}},Func{``0,``1})
  name.vb: Convert(Of A, B)(Action(Of Action(Of A)), Func(Of A, B))
  fullName: Towel.Extensions.Convert<A, B>(Action<Action<A>>, Func<A, B>)
  fullName.vb: Towel.Extensions.Convert(Of A, B)(Action(Of Action(Of A)), Func(Of A, B))
  nameWithType: Extensions.Convert<A, B>(Action<Action<A>>, Func<A, B>)
  nameWithType.vb: Extensions.Convert(Of A, B)(Action(Of Action(Of A)), Func(Of A, B))
- uid: Towel.Extensions.Count*
  name: Count
  href: api/Towel.Extensions.html#Towel_Extensions_Count_
  commentId: Overload:Towel.Extensions.Count
  isSpec: "True"
  fullName: Towel.Extensions.Count
  nameWithType: Extensions.Count
- uid: Towel.Extensions.Count``1(Action{Action{``0}})
  name: Count<T>(Action<Action<T>>)
  href: api/Towel.Extensions.html#Towel_Extensions_Count__1_Action_Action___0___
  commentId: M:Towel.Extensions.Count``1(Action{Action{``0}})
  name.vb: Count(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Extensions.Count<T>(Action<Action<T>>)
  fullName.vb: Towel.Extensions.Count(Of T)(Action(Of Action(Of T)))
  nameWithType: Extensions.Count<T>(Action<Action<T>>)
  nameWithType.vb: Extensions.Count(Of T)(Action(Of Action(Of T)))
- uid: Towel.Extensions.CountLines(System.String)
  name: CountLines(String)
  href: api/Towel.Extensions.html#Towel_Extensions_CountLines_System_String_
  commentId: M:Towel.Extensions.CountLines(System.String)
  fullName: Towel.Extensions.CountLines(System.String)
  nameWithType: Extensions.CountLines(String)
- uid: Towel.Extensions.CountLines*
  name: CountLines
  href: api/Towel.Extensions.html#Towel_Extensions_CountLines_
  commentId: Overload:Towel.Extensions.CountLines
  isSpec: "True"
  fullName: Towel.Extensions.CountLines
  nameWithType: Extensions.CountLines
- uid: Towel.Extensions.CreateDelegate*
  name: CreateDelegate
  href: api/Towel.Extensions.html#Towel_Extensions_CreateDelegate_
  commentId: Overload:Towel.Extensions.CreateDelegate
  isSpec: "True"
  fullName: Towel.Extensions.CreateDelegate
  nameWithType: Extensions.CreateDelegate
- uid: Towel.Extensions.CreateDelegate``1(MethodInfo)
  name: CreateDelegate<Delegate>(MethodInfo)
  href: api/Towel.Extensions.html#Towel_Extensions_CreateDelegate__1_MethodInfo_
  commentId: M:Towel.Extensions.CreateDelegate``1(MethodInfo)
  name.vb: CreateDelegate(Of Delegate)(MethodInfo)
  fullName: Towel.Extensions.CreateDelegate<Delegate>(MethodInfo)
  fullName.vb: Towel.Extensions.CreateDelegate(Of Delegate)(MethodInfo)
  nameWithType: Extensions.CreateDelegate<Delegate>(MethodInfo)
  nameWithType.vb: Extensions.CreateDelegate(Of Delegate)(MethodInfo)
- uid: Towel.Extensions.EveryNth*
  name: EveryNth
  href: api/Towel.Extensions.html#Towel_Extensions_EveryNth_
  commentId: Overload:Towel.Extensions.EveryNth
  isSpec: "True"
  fullName: Towel.Extensions.EveryNth
  nameWithType: Extensions.EveryNth
- uid: Towel.Extensions.EveryNth``1(Action{Action{``0}},System.Int32)
  name: EveryNth<T>(Action<Action<T>>, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_EveryNth__1_Action_Action___0___System_Int32_
  commentId: M:Towel.Extensions.EveryNth``1(Action{Action{``0}},System.Int32)
  name.vb: EveryNth(Of T)(Action(Of Action(Of T)), Int32)
  fullName: Towel.Extensions.EveryNth<T>(Action<Action<T>>, System.Int32)
  fullName.vb: Towel.Extensions.EveryNth(Of T)(Action(Of Action(Of T)), System.Int32)
  nameWithType: Extensions.EveryNth<T>(Action<Action<T>>, Int32)
  nameWithType.vb: Extensions.EveryNth(Of T)(Action(Of Action(Of T)), Int32)
- uid: Towel.Extensions.Format*
  name: Format
  href: api/Towel.Extensions.html#Towel_Extensions_Format_
  commentId: Overload:Towel.Extensions.Format
  isSpec: "True"
  fullName: Towel.Extensions.Format
  nameWithType: Extensions.Format
- uid: Towel.Extensions.Format``1(``0[],``0)
  name: Format<T>(T[], T)
  href: api/Towel.Extensions.html#Towel_Extensions_Format__1___0_____0_
  commentId: M:Towel.Extensions.Format``1(``0[],``0)
  name.vb: Format(Of T)(T(), T)
  fullName: Towel.Extensions.Format<T>(T[], T)
  fullName.vb: Towel.Extensions.Format(Of T)(T(), T)
  nameWithType: Extensions.Format<T>(T[], T)
  nameWithType.vb: Extensions.Format(Of T)(T(), T)
- uid: Towel.Extensions.Format``1(``0[],Func{System.Int32,``0})
  name: Format<T>(T[], Func<Int32, T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Format__1___0___Func_System_Int32___0__
  commentId: M:Towel.Extensions.Format``1(``0[],Func{System.Int32,``0})
  name.vb: Format(Of T)(T(), Func(Of Int32, T))
  fullName: Towel.Extensions.Format<T>(T[], Func<System.Int32, T>)
  fullName.vb: Towel.Extensions.Format(Of T)(T(), Func(Of System.Int32, T))
  nameWithType: Extensions.Format<T>(T[], Func<Int32, T>)
  nameWithType.vb: Extensions.Format(Of T)(T(), Func(Of Int32, T))
- uid: Towel.Extensions.Gaps*
  name: Gaps
  href: api/Towel.Extensions.html#Towel_Extensions_Gaps_
  commentId: Overload:Towel.Extensions.Gaps
  isSpec: "True"
  fullName: Towel.Extensions.Gaps
  nameWithType: Extensions.Gaps
- uid: Towel.Extensions.Gaps``1(Action{``0},Action{``0})
  name: Gaps<T>(Action<T>, Action<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Gaps__1_Action___0__Action___0__
  commentId: M:Towel.Extensions.Gaps``1(Action{``0},Action{``0})
  name.vb: Gaps(Of T)(Action(Of T), Action(Of T))
  fullName: Towel.Extensions.Gaps<T>(Action<T>, Action<T>)
  fullName.vb: Towel.Extensions.Gaps(Of T)(Action(Of T), Action(Of T))
  nameWithType: Extensions.Gaps<T>(Action<T>, Action<T>)
  nameWithType.vb: Extensions.Gaps(Of T)(Action(Of T), Action(Of T))
- uid: Towel.Extensions.GetEnumerator(Range)
  name: GetEnumerator(Range)
  href: api/Towel.Extensions.html#Towel_Extensions_GetEnumerator_Range_
  commentId: M:Towel.Extensions.GetEnumerator(Range)
  fullName: Towel.Extensions.GetEnumerator(Range)
  nameWithType: Extensions.GetEnumerator(Range)
- uid: Towel.Extensions.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.Extensions.html#Towel_Extensions_GetEnumerator_
  commentId: Overload:Towel.Extensions.GetEnumerator
  isSpec: "True"
  fullName: Towel.Extensions.GetEnumerator
  nameWithType: Extensions.GetEnumerator
- uid: Towel.Extensions.IndentLineNumbers(System.String,System.Int32,System.Int32)
  name: IndentLineNumbers(String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLineNumbers_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.IndentLineNumbers(System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.IndentLineNumbers(System.String, System.Int32, System.Int32)
  nameWithType: Extensions.IndentLineNumbers(String, Int32, Int32)
- uid: Towel.Extensions.IndentLineNumbers(System.String,System.Int32,System.Int32,System.Int32)
  name: IndentLineNumbers(String, Int32, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLineNumbers_System_String_System_Int32_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.IndentLineNumbers(System.String,System.Int32,System.Int32,System.Int32)
  fullName: Towel.Extensions.IndentLineNumbers(System.String, System.Int32, System.Int32, System.Int32)
  nameWithType: Extensions.IndentLineNumbers(String, Int32, Int32, Int32)
- uid: Towel.Extensions.IndentLineNumbers*
  name: IndentLineNumbers
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLineNumbers_
  commentId: Overload:Towel.Extensions.IndentLineNumbers
  isSpec: "True"
  fullName: Towel.Extensions.IndentLineNumbers
  nameWithType: Extensions.IndentLineNumbers
- uid: Towel.Extensions.IndentLines(System.String)
  name: IndentLines(String)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLines_System_String_
  commentId: M:Towel.Extensions.IndentLines(System.String)
  fullName: Towel.Extensions.IndentLines(System.String)
  nameWithType: Extensions.IndentLines(String)
- uid: Towel.Extensions.IndentLines(System.String,System.Int32)
  name: IndentLines(String, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLines_System_String_System_Int32_
  commentId: M:Towel.Extensions.IndentLines(System.String,System.Int32)
  fullName: Towel.Extensions.IndentLines(System.String, System.Int32)
  nameWithType: Extensions.IndentLines(String, Int32)
- uid: Towel.Extensions.IndentLines*
  name: IndentLines
  href: api/Towel.Extensions.html#Towel_Extensions_IndentLines_
  commentId: Overload:Towel.Extensions.IndentLines
  isSpec: "True"
  fullName: Towel.Extensions.IndentLines
  nameWithType: Extensions.IndentLines
- uid: Towel.Extensions.IndentNewLinesBetweenIndeces(System.String,System.Int32,System.Int32)
  name: IndentNewLinesBetweenIndeces(String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentNewLinesBetweenIndeces_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.IndentNewLinesBetweenIndeces(System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.IndentNewLinesBetweenIndeces(System.String, System.Int32, System.Int32)
  nameWithType: Extensions.IndentNewLinesBetweenIndeces(String, Int32, Int32)
- uid: Towel.Extensions.IndentNewLinesBetweenIndeces(System.String,System.Int32,System.Int32,System.Int32)
  name: IndentNewLinesBetweenIndeces(String, Int32, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_IndentNewLinesBetweenIndeces_System_String_System_Int32_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.IndentNewLinesBetweenIndeces(System.String,System.Int32,System.Int32,System.Int32)
  fullName: Towel.Extensions.IndentNewLinesBetweenIndeces(System.String, System.Int32, System.Int32, System.Int32)
  nameWithType: Extensions.IndentNewLinesBetweenIndeces(String, Int32, Int32, Int32)
- uid: Towel.Extensions.IndentNewLinesBetweenIndeces*
  name: IndentNewLinesBetweenIndeces
  href: api/Towel.Extensions.html#Towel_Extensions_IndentNewLinesBetweenIndeces_
  commentId: Overload:Towel.Extensions.IndentNewLinesBetweenIndeces
  isSpec: "True"
  fullName: Towel.Extensions.IndentNewLinesBetweenIndeces
  nameWithType: Extensions.IndentNewLinesBetweenIndeces
- uid: Towel.Extensions.IsDefined*
  name: IsDefined
  href: api/Towel.Extensions.html#Towel_Extensions_IsDefined_
  commentId: Overload:Towel.Extensions.IsDefined
  isSpec: "True"
  fullName: Towel.Extensions.IsDefined
  nameWithType: Extensions.IsDefined
- uid: Towel.Extensions.IsDefined``1(``0)
  name: IsDefined<T>(T)
  href: api/Towel.Extensions.html#Towel_Extensions_IsDefined__1___0_
  commentId: M:Towel.Extensions.IsDefined``1(``0)
  name.vb: IsDefined(Of T)(T)
  fullName: Towel.Extensions.IsDefined<T>(T)
  fullName.vb: Towel.Extensions.IsDefined(Of T)(T)
  nameWithType: Extensions.IsDefined<T>(T)
  nameWithType.vb: Extensions.IsDefined(Of T)(T)
- uid: Towel.Extensions.Iterate(System.Int32,Action{System.Int32})
  name: Iterate(Int32, Action<Int32>)
  href: api/Towel.Extensions.html#Towel_Extensions_Iterate_System_Int32_Action_System_Int32__
  commentId: M:Towel.Extensions.Iterate(System.Int32,Action{System.Int32})
  name.vb: Iterate(Int32, Action(Of Int32))
  fullName: Towel.Extensions.Iterate(System.Int32, Action<System.Int32>)
  fullName.vb: Towel.Extensions.Iterate(System.Int32, Action(Of System.Int32))
  nameWithType: Extensions.Iterate(Int32, Action<Int32>)
  nameWithType.vb: Extensions.Iterate(Int32, Action(Of Int32))
- uid: Towel.Extensions.Iterate*
  name: Iterate
  href: api/Towel.Extensions.html#Towel_Extensions_Iterate_
  commentId: Overload:Towel.Extensions.Iterate
  isSpec: "True"
  fullName: Towel.Extensions.Iterate
  nameWithType: Extensions.Iterate
- uid: Towel.Extensions.Next*
  name: Next
  href: api/Towel.Extensions.html#Towel_Extensions_Next_
  commentId: Overload:Towel.Extensions.Next
  isSpec: "True"
  fullName: Towel.Extensions.Next
  nameWithType: Extensions.Next
- uid: Towel.Extensions.Next``1(Random,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,System.Double}},System.Nullable{System.Double})
  name: Next<T>(Random, System.Collections.Generic.IEnumerable<(T Value, Double Weight)>, Nullable<Double>)
  href: api/Towel.Extensions.html#Towel_Extensions_Next__1_Random_System_Collections_Generic_IEnumerable_System_ValueTuple___0_System_Double___System_Nullable_System_Double__
  commentId: M:Towel.Extensions.Next``1(Random,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,System.Double}},System.Nullable{System.Double})
  name.vb: Next(Of T)(Random, System.Collections.Generic.IEnumerable(Of (Value As T, Weight As Double)), Nullable(Of Double))
  fullName: Towel.Extensions.Next<T>(Random, System.Collections.Generic.IEnumerable<System.ValueTuple<T, System.Double>>, System.Nullable<System.Double>)
  fullName.vb: Towel.Extensions.Next(Of T)(Random, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of T, System.Double)), System.Nullable(Of System.Double))
  nameWithType: Extensions.Next<T>(Random, System.Collections.Generic.IEnumerable<(T Value, Double Weight)>, Nullable<Double>)
  nameWithType.vb: Extensions.Next(Of T)(Random, System.Collections.Generic.IEnumerable(Of (Value As T, Weight As Double)), Nullable(Of Double))
- uid: Towel.Extensions.Next``1(Random,System.Double,System.ValueTuple{``0,System.Double}[])
  name: Next<T>(Random, Double, (T Value, Double Weight)[])
  href: api/Towel.Extensions.html#Towel_Extensions_Next__1_Random_System_Double_System_ValueTuple___0_System_Double____
  commentId: M:Towel.Extensions.Next``1(Random,System.Double,System.ValueTuple{``0,System.Double}[])
  name.vb: Next(Of T)(Random, Double, (Value As T, Weight As Double)())
  fullName: Towel.Extensions.Next<T>(Random, System.Double, System.ValueTuple<T, System.Double>[])
  fullName.vb: Towel.Extensions.Next(Of T)(Random, System.Double, System.ValueTuple(Of T, System.Double)())
  nameWithType: Extensions.Next<T>(Random, Double, (T Value, Double Weight)[])
  nameWithType.vb: Extensions.Next(Of T)(Random, Double, (Value As T, Weight As Double)())
- uid: Towel.Extensions.Next``1(Random,System.ValueTuple{``0,System.Double}[])
  name: Next<T>(Random, (T Value, Double Weight)[])
  href: api/Towel.Extensions.html#Towel_Extensions_Next__1_Random_System_ValueTuple___0_System_Double____
  commentId: M:Towel.Extensions.Next``1(Random,System.ValueTuple{``0,System.Double}[])
  name.vb: Next(Of T)(Random, (Value As T, Weight As Double)())
  fullName: Towel.Extensions.Next<T>(Random, System.ValueTuple<T, System.Double>[])
  fullName.vb: Towel.Extensions.Next(Of T)(Random, System.ValueTuple(Of T, System.Double)())
  nameWithType: Extensions.Next<T>(Random, (T Value, Double Weight)[])
  nameWithType.vb: Extensions.Next(Of T)(Random, (Value As T, Weight As Double)())
- uid: Towel.Extensions.NextBool(Random)
  name: NextBool(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextBool_Random_
  commentId: M:Towel.Extensions.NextBool(Random)
  fullName: Towel.Extensions.NextBool(Random)
  nameWithType: Extensions.NextBool(Random)
- uid: Towel.Extensions.NextBool*
  name: NextBool
  href: api/Towel.Extensions.html#Towel_Extensions_NextBool_
  commentId: Overload:Towel.Extensions.NextBool
  isSpec: "True"
  fullName: Towel.Extensions.NextBool
  nameWithType: Extensions.NextBool
- uid: Towel.Extensions.NextByte(Random)
  name: NextByte(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextByte_Random_
  commentId: M:Towel.Extensions.NextByte(Random)
  fullName: Towel.Extensions.NextByte(Random)
  nameWithType: Extensions.NextByte(Random)
- uid: Towel.Extensions.NextByte*
  name: NextByte
  href: api/Towel.Extensions.html#Towel_Extensions_NextByte_
  commentId: Overload:Towel.Extensions.NextByte
  isSpec: "True"
  fullName: Towel.Extensions.NextByte
  nameWithType: Extensions.NextByte
- uid: Towel.Extensions.NextChar(Random)
  name: NextChar(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextChar_Random_
  commentId: M:Towel.Extensions.NextChar(Random)
  fullName: Towel.Extensions.NextChar(Random)
  nameWithType: Extensions.NextChar(Random)
- uid: Towel.Extensions.NextChar(Random,System.Char,System.Char)
  name: NextChar(Random, Char, Char)
  href: api/Towel.Extensions.html#Towel_Extensions_NextChar_Random_System_Char_System_Char_
  commentId: M:Towel.Extensions.NextChar(Random,System.Char,System.Char)
  fullName: Towel.Extensions.NextChar(Random, System.Char, System.Char)
  nameWithType: Extensions.NextChar(Random, Char, Char)
- uid: Towel.Extensions.NextChar*
  name: NextChar
  href: api/Towel.Extensions.html#Towel_Extensions_NextChar_
  commentId: Overload:Towel.Extensions.NextChar
  isSpec: "True"
  fullName: Towel.Extensions.NextChar
  nameWithType: Extensions.NextChar
- uid: Towel.Extensions.NextDateTime(Random)
  name: NextDateTime(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextDateTime_Random_
  commentId: M:Towel.Extensions.NextDateTime(Random)
  fullName: Towel.Extensions.NextDateTime(Random)
  nameWithType: Extensions.NextDateTime(Random)
- uid: Towel.Extensions.NextDateTime(Random,DateTime)
  name: NextDateTime(Random, DateTime)
  href: api/Towel.Extensions.html#Towel_Extensions_NextDateTime_Random_DateTime_
  commentId: M:Towel.Extensions.NextDateTime(Random,DateTime)
  fullName: Towel.Extensions.NextDateTime(Random, DateTime)
  nameWithType: Extensions.NextDateTime(Random, DateTime)
- uid: Towel.Extensions.NextDateTime(Random,DateTime,DateTime)
  name: NextDateTime(Random, DateTime, DateTime)
  href: api/Towel.Extensions.html#Towel_Extensions_NextDateTime_Random_DateTime_DateTime_
  commentId: M:Towel.Extensions.NextDateTime(Random,DateTime,DateTime)
  fullName: Towel.Extensions.NextDateTime(Random, DateTime, DateTime)
  nameWithType: Extensions.NextDateTime(Random, DateTime, DateTime)
- uid: Towel.Extensions.NextDateTime*
  name: NextDateTime
  href: api/Towel.Extensions.html#Towel_Extensions_NextDateTime_
  commentId: Overload:Towel.Extensions.NextDateTime
  isSpec: "True"
  fullName: Towel.Extensions.NextDateTime
  nameWithType: Extensions.NextDateTime
- uid: Towel.Extensions.NextDecimal(Random)
  name: NextDecimal(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextDecimal_Random_
  commentId: M:Towel.Extensions.NextDecimal(Random)
  fullName: Towel.Extensions.NextDecimal(Random)
  nameWithType: Extensions.NextDecimal(Random)
- uid: Towel.Extensions.NextDecimal(Random,System.Decimal,System.Decimal)
  name: NextDecimal(Random, Decimal, Decimal)
  href: api/Towel.Extensions.html#Towel_Extensions_NextDecimal_Random_System_Decimal_System_Decimal_
  commentId: M:Towel.Extensions.NextDecimal(Random,System.Decimal,System.Decimal)
  fullName: Towel.Extensions.NextDecimal(Random, System.Decimal, System.Decimal)
  nameWithType: Extensions.NextDecimal(Random, Decimal, Decimal)
- uid: Towel.Extensions.NextDecimal*
  name: NextDecimal
  href: api/Towel.Extensions.html#Towel_Extensions_NextDecimal_
  commentId: Overload:Towel.Extensions.NextDecimal
  isSpec: "True"
  fullName: Towel.Extensions.NextDecimal
  nameWithType: Extensions.NextDecimal
- uid: Towel.Extensions.NextEnglishAlphabeticString(Random,System.Int32)
  name: NextEnglishAlphabeticString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextEnglishAlphabeticString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextEnglishAlphabeticString(Random,System.Int32)
  fullName: Towel.Extensions.NextEnglishAlphabeticString(Random, System.Int32)
  nameWithType: Extensions.NextEnglishAlphabeticString(Random, Int32)
- uid: Towel.Extensions.NextEnglishAlphabeticString*
  name: NextEnglishAlphabeticString
  href: api/Towel.Extensions.html#Towel_Extensions_NextEnglishAlphabeticString_
  commentId: Overload:Towel.Extensions.NextEnglishAlphabeticString
  isSpec: "True"
  fullName: Towel.Extensions.NextEnglishAlphabeticString
  nameWithType: Extensions.NextEnglishAlphabeticString
- uid: Towel.Extensions.NextEnglishAlphaNumericString(Random,System.Int32)
  name: NextEnglishAlphaNumericString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextEnglishAlphaNumericString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextEnglishAlphaNumericString(Random,System.Int32)
  fullName: Towel.Extensions.NextEnglishAlphaNumericString(Random, System.Int32)
  nameWithType: Extensions.NextEnglishAlphaNumericString(Random, Int32)
- uid: Towel.Extensions.NextEnglishAlphaNumericString*
  name: NextEnglishAlphaNumericString
  href: api/Towel.Extensions.html#Towel_Extensions_NextEnglishAlphaNumericString_
  commentId: Overload:Towel.Extensions.NextEnglishAlphaNumericString
  isSpec: "True"
  fullName: Towel.Extensions.NextEnglishAlphaNumericString
  nameWithType: Extensions.NextEnglishAlphaNumericString
- uid: Towel.Extensions.NextLong(Random)
  name: NextLong(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextLong_Random_
  commentId: M:Towel.Extensions.NextLong(Random)
  fullName: Towel.Extensions.NextLong(Random)
  nameWithType: Extensions.NextLong(Random)
- uid: Towel.Extensions.NextLong(Random,System.Int64)
  name: NextLong(Random, Int64)
  href: api/Towel.Extensions.html#Towel_Extensions_NextLong_Random_System_Int64_
  commentId: M:Towel.Extensions.NextLong(Random,System.Int64)
  fullName: Towel.Extensions.NextLong(Random, System.Int64)
  nameWithType: Extensions.NextLong(Random, Int64)
- uid: Towel.Extensions.NextLong(Random,System.Int64,System.Int64)
  name: NextLong(Random, Int64, Int64)
  href: api/Towel.Extensions.html#Towel_Extensions_NextLong_Random_System_Int64_System_Int64_
  commentId: M:Towel.Extensions.NextLong(Random,System.Int64,System.Int64)
  fullName: Towel.Extensions.NextLong(Random, System.Int64, System.Int64)
  nameWithType: Extensions.NextLong(Random, Int64, Int64)
- uid: Towel.Extensions.NextLong*
  name: NextLong
  href: api/Towel.Extensions.html#Towel_Extensions_NextLong_
  commentId: Overload:Towel.Extensions.NextLong
  isSpec: "True"
  fullName: Towel.Extensions.NextLong
  nameWithType: Extensions.NextLong
- uid: Towel.Extensions.NextLowerCaseEnglishAlphabeticString(Random,System.Int32)
  name: NextLowerCaseEnglishAlphabeticString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextLowerCaseEnglishAlphabeticString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextLowerCaseEnglishAlphabeticString(Random,System.Int32)
  fullName: Towel.Extensions.NextLowerCaseEnglishAlphabeticString(Random, System.Int32)
  nameWithType: Extensions.NextLowerCaseEnglishAlphabeticString(Random, Int32)
- uid: Towel.Extensions.NextLowerCaseEnglishAlphabeticString*
  name: NextLowerCaseEnglishAlphabeticString
  href: api/Towel.Extensions.html#Towel_Extensions_NextLowerCaseEnglishAlphabeticString_
  commentId: Overload:Towel.Extensions.NextLowerCaseEnglishAlphabeticString
  isSpec: "True"
  fullName: Towel.Extensions.NextLowerCaseEnglishAlphabeticString
  nameWithType: Extensions.NextLowerCaseEnglishAlphabeticString
- uid: Towel.Extensions.NextLowerCaseEnglishAlphaNumericString(Random,System.Int32)
  name: NextLowerCaseEnglishAlphaNumericString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextLowerCaseEnglishAlphaNumericString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextLowerCaseEnglishAlphaNumericString(Random,System.Int32)
  fullName: Towel.Extensions.NextLowerCaseEnglishAlphaNumericString(Random, System.Int32)
  nameWithType: Extensions.NextLowerCaseEnglishAlphaNumericString(Random, Int32)
- uid: Towel.Extensions.NextLowerCaseEnglishAlphaNumericString*
  name: NextLowerCaseEnglishAlphaNumericString
  href: api/Towel.Extensions.html#Towel_Extensions_NextLowerCaseEnglishAlphaNumericString_
  commentId: Overload:Towel.Extensions.NextLowerCaseEnglishAlphaNumericString
  isSpec: "True"
  fullName: Towel.Extensions.NextLowerCaseEnglishAlphaNumericString
  nameWithType: Extensions.NextLowerCaseEnglishAlphaNumericString
- uid: Towel.Extensions.NextString(Random,System.Int32)
  name: NextString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextString(Random,System.Int32)
  fullName: Towel.Extensions.NextString(Random, System.Int32)
  nameWithType: Extensions.NextString(Random, Int32)
- uid: Towel.Extensions.NextString(Random,System.Int32,System.Char[])
  name: NextString(Random, Int32, Char[])
  href: api/Towel.Extensions.html#Towel_Extensions_NextString_Random_System_Int32_System_Char___
  commentId: M:Towel.Extensions.NextString(Random,System.Int32,System.Char[])
  name.vb: NextString(Random, Int32, Char())
  fullName: Towel.Extensions.NextString(Random, System.Int32, System.Char[])
  fullName.vb: Towel.Extensions.NextString(Random, System.Int32, System.Char())
  nameWithType: Extensions.NextString(Random, Int32, Char[])
  nameWithType.vb: Extensions.NextString(Random, Int32, Char())
- uid: Towel.Extensions.NextString*
  name: NextString
  href: api/Towel.Extensions.html#Towel_Extensions_NextString_
  commentId: Overload:Towel.Extensions.NextString
  isSpec: "True"
  fullName: Towel.Extensions.NextString
  nameWithType: Extensions.NextString
- uid: Towel.Extensions.NextTimeSpan(Random)
  name: NextTimeSpan(Random)
  href: api/Towel.Extensions.html#Towel_Extensions_NextTimeSpan_Random_
  commentId: M:Towel.Extensions.NextTimeSpan(Random)
  fullName: Towel.Extensions.NextTimeSpan(Random)
  nameWithType: Extensions.NextTimeSpan(Random)
- uid: Towel.Extensions.NextTimeSpan(Random,TimeSpan)
  name: NextTimeSpan(Random, TimeSpan)
  href: api/Towel.Extensions.html#Towel_Extensions_NextTimeSpan_Random_TimeSpan_
  commentId: M:Towel.Extensions.NextTimeSpan(Random,TimeSpan)
  fullName: Towel.Extensions.NextTimeSpan(Random, TimeSpan)
  nameWithType: Extensions.NextTimeSpan(Random, TimeSpan)
- uid: Towel.Extensions.NextTimeSpan(Random,TimeSpan,TimeSpan)
  name: NextTimeSpan(Random, TimeSpan, TimeSpan)
  href: api/Towel.Extensions.html#Towel_Extensions_NextTimeSpan_Random_TimeSpan_TimeSpan_
  commentId: M:Towel.Extensions.NextTimeSpan(Random,TimeSpan,TimeSpan)
  fullName: Towel.Extensions.NextTimeSpan(Random, TimeSpan, TimeSpan)
  nameWithType: Extensions.NextTimeSpan(Random, TimeSpan, TimeSpan)
- uid: Towel.Extensions.NextTimeSpan*
  name: NextTimeSpan
  href: api/Towel.Extensions.html#Towel_Extensions_NextTimeSpan_
  commentId: Overload:Towel.Extensions.NextTimeSpan
  isSpec: "True"
  fullName: Towel.Extensions.NextTimeSpan
  nameWithType: Extensions.NextTimeSpan
- uid: Towel.Extensions.NextUnique(Random,System.Int32,System.Int32,System.Int32)
  name: NextUnique(Random, Int32, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUnique_Random_System_Int32_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.NextUnique(Random,System.Int32,System.Int32,System.Int32)
  fullName: Towel.Extensions.NextUnique(Random, System.Int32, System.Int32, System.Int32)
  nameWithType: Extensions.NextUnique(Random, Int32, Int32, Int32)
- uid: Towel.Extensions.NextUnique(Random,System.Int32,System.Int32,System.Int32,Action{System.Int32})
  name: NextUnique(Random, Int32, Int32, Int32, Action<Int32>)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUnique_Random_System_Int32_System_Int32_System_Int32_Action_System_Int32__
  commentId: M:Towel.Extensions.NextUnique(Random,System.Int32,System.Int32,System.Int32,Action{System.Int32})
  name.vb: NextUnique(Random, Int32, Int32, Int32, Action(Of Int32))
  fullName: Towel.Extensions.NextUnique(Random, System.Int32, System.Int32, System.Int32, Action<System.Int32>)
  fullName.vb: Towel.Extensions.NextUnique(Random, System.Int32, System.Int32, System.Int32, Action(Of System.Int32))
  nameWithType: Extensions.NextUnique(Random, Int32, Int32, Int32, Action<Int32>)
  nameWithType.vb: Extensions.NextUnique(Random, Int32, Int32, Int32, Action(Of Int32))
- uid: Towel.Extensions.NextUnique*
  name: NextUnique
  href: api/Towel.Extensions.html#Towel_Extensions_NextUnique_
  commentId: Overload:Towel.Extensions.NextUnique
  isSpec: "True"
  fullName: Towel.Extensions.NextUnique
  nameWithType: Extensions.NextUnique
- uid: Towel.Extensions.NextUnique``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name: NextUnique<Step>(Random, Int32, Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUnique__1_Random_System_Int32_System_Int32_System_Int32___0_
  commentId: M:Towel.Extensions.NextUnique``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name.vb: NextUnique(Of Step)(Random, Int32, Int32, Int32, Step)
  fullName: Towel.Extensions.NextUnique<Step>(Random, System.Int32, System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.NextUnique(Of Step)(Random, System.Int32, System.Int32, System.Int32, Step)
  nameWithType: Extensions.NextUnique<Step>(Random, Int32, Int32, Int32, Step)
  nameWithType.vb: Extensions.NextUnique(Of Step)(Random, Int32, Int32, Int32, Step)
- uid: Towel.Extensions.NextUniquePoolTracking*
  name: NextUniquePoolTracking
  href: api/Towel.Extensions.html#Towel_Extensions_NextUniquePoolTracking_
  commentId: Overload:Towel.Extensions.NextUniquePoolTracking
  isSpec: "True"
  fullName: Towel.Extensions.NextUniquePoolTracking
  nameWithType: Extensions.NextUniquePoolTracking
- uid: Towel.Extensions.NextUniquePoolTracking``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name: NextUniquePoolTracking<Step>(Random, Int32, Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUniquePoolTracking__1_Random_System_Int32_System_Int32_System_Int32___0_
  commentId: M:Towel.Extensions.NextUniquePoolTracking``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name.vb: NextUniquePoolTracking(Of Step)(Random, Int32, Int32, Int32, Step)
  fullName: Towel.Extensions.NextUniquePoolTracking<Step>(Random, System.Int32, System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.NextUniquePoolTracking(Of Step)(Random, System.Int32, System.Int32, System.Int32, Step)
  nameWithType: Extensions.NextUniquePoolTracking<Step>(Random, Int32, Int32, Int32, Step)
  nameWithType.vb: Extensions.NextUniquePoolTracking(Of Step)(Random, Int32, Int32, Int32, Step)
- uid: Towel.Extensions.NextUniqueRollTracking*
  name: NextUniqueRollTracking
  href: api/Towel.Extensions.html#Towel_Extensions_NextUniqueRollTracking_
  commentId: Overload:Towel.Extensions.NextUniqueRollTracking
  isSpec: "True"
  fullName: Towel.Extensions.NextUniqueRollTracking
  nameWithType: Extensions.NextUniqueRollTracking
- uid: Towel.Extensions.NextUniqueRollTracking``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name: NextUniqueRollTracking<Step>(Random, Int32, Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUniqueRollTracking__1_Random_System_Int32_System_Int32_System_Int32___0_
  commentId: M:Towel.Extensions.NextUniqueRollTracking``1(Random,System.Int32,System.Int32,System.Int32,``0)
  name.vb: NextUniqueRollTracking(Of Step)(Random, Int32, Int32, Int32, Step)
  fullName: Towel.Extensions.NextUniqueRollTracking<Step>(Random, System.Int32, System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.NextUniqueRollTracking(Of Step)(Random, System.Int32, System.Int32, System.Int32, Step)
  nameWithType: Extensions.NextUniqueRollTracking<Step>(Random, Int32, Int32, Int32, Step)
  nameWithType.vb: Extensions.NextUniqueRollTracking(Of Step)(Random, Int32, Int32, Int32, Step)
- uid: Towel.Extensions.NextUpperCaseEnglishAlphabeticString(Random,System.Int32)
  name: NextUpperCaseEnglishAlphabeticString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUpperCaseEnglishAlphabeticString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextUpperCaseEnglishAlphabeticString(Random,System.Int32)
  fullName: Towel.Extensions.NextUpperCaseEnglishAlphabeticString(Random, System.Int32)
  nameWithType: Extensions.NextUpperCaseEnglishAlphabeticString(Random, Int32)
- uid: Towel.Extensions.NextUpperCaseEnglishAlphabeticString*
  name: NextUpperCaseEnglishAlphabeticString
  href: api/Towel.Extensions.html#Towel_Extensions_NextUpperCaseEnglishAlphabeticString_
  commentId: Overload:Towel.Extensions.NextUpperCaseEnglishAlphabeticString
  isSpec: "True"
  fullName: Towel.Extensions.NextUpperCaseEnglishAlphabeticString
  nameWithType: Extensions.NextUpperCaseEnglishAlphabeticString
- uid: Towel.Extensions.NextUpperCaseEnglishAlphaNumericString(Random,System.Int32)
  name: NextUpperCaseEnglishAlphaNumericString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NextUpperCaseEnglishAlphaNumericString_Random_System_Int32_
  commentId: M:Towel.Extensions.NextUpperCaseEnglishAlphaNumericString(Random,System.Int32)
  fullName: Towel.Extensions.NextUpperCaseEnglishAlphaNumericString(Random, System.Int32)
  nameWithType: Extensions.NextUpperCaseEnglishAlphaNumericString(Random, Int32)
- uid: Towel.Extensions.NextUpperCaseEnglishAlphaNumericString*
  name: NextUpperCaseEnglishAlphaNumericString
  href: api/Towel.Extensions.html#Towel_Extensions_NextUpperCaseEnglishAlphaNumericString_
  commentId: Overload:Towel.Extensions.NextUpperCaseEnglishAlphaNumericString
  isSpec: "True"
  fullName: Towel.Extensions.NextUpperCaseEnglishAlphaNumericString
  nameWithType: Extensions.NextUpperCaseEnglishAlphaNumericString
- uid: Towel.Extensions.NumericEnglishString(Random,System.Int32)
  name: NumericEnglishString(Random, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_NumericEnglishString_Random_System_Int32_
  commentId: M:Towel.Extensions.NumericEnglishString(Random,System.Int32)
  fullName: Towel.Extensions.NumericEnglishString(Random, System.Int32)
  nameWithType: Extensions.NumericEnglishString(Random, Int32)
- uid: Towel.Extensions.NumericEnglishString*
  name: NumericEnglishString
  href: api/Towel.Extensions.html#Towel_Extensions_NumericEnglishString_
  commentId: Overload:Towel.Extensions.NumericEnglishString
  isSpec: "True"
  fullName: Towel.Extensions.NumericEnglishString
  nameWithType: Extensions.NumericEnglishString
- uid: Towel.Extensions.PadLinesLeft(System.String,System.String)
  name: PadLinesLeft(String, String)
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesLeft_System_String_System_String_
  commentId: M:Towel.Extensions.PadLinesLeft(System.String,System.String)
  fullName: Towel.Extensions.PadLinesLeft(System.String, System.String)
  nameWithType: Extensions.PadLinesLeft(String, String)
- uid: Towel.Extensions.PadLinesLeft(System.String,System.String,System.Int32,System.Int32)
  name: PadLinesLeft(String, String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesLeft_System_String_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.PadLinesLeft(System.String,System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.PadLinesLeft(System.String, System.String, System.Int32, System.Int32)
  nameWithType: Extensions.PadLinesLeft(String, String, Int32, Int32)
- uid: Towel.Extensions.PadLinesLeft*
  name: PadLinesLeft
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesLeft_
  commentId: Overload:Towel.Extensions.PadLinesLeft
  isSpec: "True"
  fullName: Towel.Extensions.PadLinesLeft
  nameWithType: Extensions.PadLinesLeft
- uid: Towel.Extensions.PadLinesLeftBetweenIndeces(System.String,System.String,System.Int32,System.Int32)
  name: PadLinesLeftBetweenIndeces(String, String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesLeftBetweenIndeces_System_String_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.PadLinesLeftBetweenIndeces(System.String,System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.PadLinesLeftBetweenIndeces(System.String, System.String, System.Int32, System.Int32)
  nameWithType: Extensions.PadLinesLeftBetweenIndeces(String, String, Int32, Int32)
- uid: Towel.Extensions.PadLinesLeftBetweenIndeces*
  name: PadLinesLeftBetweenIndeces
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesLeftBetweenIndeces_
  commentId: Overload:Towel.Extensions.PadLinesLeftBetweenIndeces
  isSpec: "True"
  fullName: Towel.Extensions.PadLinesLeftBetweenIndeces
  nameWithType: Extensions.PadLinesLeftBetweenIndeces
- uid: Towel.Extensions.PadLinesRight(System.String,System.String,System.Int32,System.Int32)
  name: PadLinesRight(String, String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesRight_System_String_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.PadLinesRight(System.String,System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.PadLinesRight(System.String, System.String, System.Int32, System.Int32)
  nameWithType: Extensions.PadLinesRight(String, String, Int32, Int32)
- uid: Towel.Extensions.PadLinesRight*
  name: PadLinesRight
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesRight_
  commentId: Overload:Towel.Extensions.PadLinesRight
  isSpec: "True"
  fullName: Towel.Extensions.PadLinesRight
  nameWithType: Extensions.PadLinesRight
- uid: Towel.Extensions.PadLinesRightBetweenIndeces(System.String,System.String,System.Int32,System.Int32)
  name: PadLinesRightBetweenIndeces(String, String, Int32, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesRightBetweenIndeces_System_String_System_String_System_Int32_System_Int32_
  commentId: M:Towel.Extensions.PadLinesRightBetweenIndeces(System.String,System.String,System.Int32,System.Int32)
  fullName: Towel.Extensions.PadLinesRightBetweenIndeces(System.String, System.String, System.Int32, System.Int32)
  nameWithType: Extensions.PadLinesRightBetweenIndeces(String, String, Int32, Int32)
- uid: Towel.Extensions.PadLinesRightBetweenIndeces*
  name: PadLinesRightBetweenIndeces
  href: api/Towel.Extensions.html#Towel_Extensions_PadLinesRightBetweenIndeces_
  commentId: Overload:Towel.Extensions.PadLinesRightBetweenIndeces
  isSpec: "True"
  fullName: Towel.Extensions.PadLinesRightBetweenIndeces
  nameWithType: Extensions.PadLinesRightBetweenIndeces
- uid: Towel.Extensions.PadSubstringLinesRight(System.String,System.String)
  name: PadSubstringLinesRight(String, String)
  href: api/Towel.Extensions.html#Towel_Extensions_PadSubstringLinesRight_System_String_System_String_
  commentId: M:Towel.Extensions.PadSubstringLinesRight(System.String,System.String)
  fullName: Towel.Extensions.PadSubstringLinesRight(System.String, System.String)
  nameWithType: Extensions.PadSubstringLinesRight(String, String)
- uid: Towel.Extensions.PadSubstringLinesRight*
  name: PadSubstringLinesRight
  href: api/Towel.Extensions.html#Towel_Extensions_PadSubstringLinesRight_
  commentId: Overload:Towel.Extensions.PadSubstringLinesRight
  isSpec: "True"
  fullName: Towel.Extensions.PadSubstringLinesRight
  nameWithType: Extensions.PadSubstringLinesRight
- uid: Towel.Extensions.Remove(System.String,Predicate{System.Char})
  name: Remove(String, Predicate<Char>)
  href: api/Towel.Extensions.html#Towel_Extensions_Remove_System_String_Predicate_System_Char__
  commentId: M:Towel.Extensions.Remove(System.String,Predicate{System.Char})
  name.vb: Remove(String, Predicate(Of Char))
  fullName: Towel.Extensions.Remove(System.String, Predicate<System.Char>)
  fullName.vb: Towel.Extensions.Remove(System.String, Predicate(Of System.Char))
  nameWithType: Extensions.Remove(String, Predicate<Char>)
  nameWithType.vb: Extensions.Remove(String, Predicate(Of Char))
- uid: Towel.Extensions.Remove*
  name: Remove
  href: api/Towel.Extensions.html#Towel_Extensions_Remove_
  commentId: Overload:Towel.Extensions.Remove
  isSpec: "True"
  fullName: Towel.Extensions.Remove
  nameWithType: Extensions.Remove
- uid: Towel.Extensions.RemoveFromReplaceCache(System.ValueTuple{System.String,System.String}[])
  name: RemoveFromReplaceCache((String Pattern, String Replacement)[])
  href: api/Towel.Extensions.html#Towel_Extensions_RemoveFromReplaceCache_System_ValueTuple_System_String_System_String____
  commentId: M:Towel.Extensions.RemoveFromReplaceCache(System.ValueTuple{System.String,System.String}[])
  name.vb: RemoveFromReplaceCache((Pattern As String, Replacement As String)())
  fullName: Towel.Extensions.RemoveFromReplaceCache(System.ValueTuple<System.String, System.String>[])
  fullName.vb: Towel.Extensions.RemoveFromReplaceCache(System.ValueTuple(Of System.String, System.String)())
  nameWithType: Extensions.RemoveFromReplaceCache((String Pattern, String Replacement)[])
  nameWithType.vb: Extensions.RemoveFromReplaceCache((Pattern As String, Replacement As String)())
- uid: Towel.Extensions.RemoveFromReplaceCache*
  name: RemoveFromReplaceCache
  href: api/Towel.Extensions.html#Towel_Extensions_RemoveFromReplaceCache_
  commentId: Overload:Towel.Extensions.RemoveFromReplaceCache
  isSpec: "True"
  fullName: Towel.Extensions.RemoveFromReplaceCache
  nameWithType: Extensions.RemoveFromReplaceCache
- uid: Towel.Extensions.Repeat(System.String,System.Int32)
  name: Repeat(String, Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_Repeat_System_String_System_Int32_
  commentId: M:Towel.Extensions.Repeat(System.String,System.Int32)
  fullName: Towel.Extensions.Repeat(System.String, System.Int32)
  nameWithType: Extensions.Repeat(String, Int32)
- uid: Towel.Extensions.Repeat*
  name: Repeat
  href: api/Towel.Extensions.html#Towel_Extensions_Repeat_
  commentId: Overload:Towel.Extensions.Repeat
  isSpec: "True"
  fullName: Towel.Extensions.Repeat
  nameWithType: Extensions.Repeat
- uid: Towel.Extensions.Replace(System.String,System.ValueTuple{System.String,System.String}[])
  name: Replace(String, (String Pattern, String Replacement)[])
  href: api/Towel.Extensions.html#Towel_Extensions_Replace_System_String_System_ValueTuple_System_String_System_String____
  commentId: M:Towel.Extensions.Replace(System.String,System.ValueTuple{System.String,System.String}[])
  name.vb: Replace(String, (Pattern As String, Replacement As String)())
  fullName: Towel.Extensions.Replace(System.String, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Towel.Extensions.Replace(System.String, System.ValueTuple(Of System.String, System.String)())
  nameWithType: Extensions.Replace(String, (String Pattern, String Replacement)[])
  nameWithType.vb: Extensions.Replace(String, (Pattern As String, Replacement As String)())
- uid: Towel.Extensions.Replace*
  name: Replace
  href: api/Towel.Extensions.html#Towel_Extensions_Replace_
  commentId: Overload:Towel.Extensions.Replace
  isSpec: "True"
  fullName: Towel.Extensions.Replace
  nameWithType: Extensions.Replace
- uid: Towel.Extensions.ReplaceCached(System.String,System.ValueTuple{System.String,System.String}[])
  name: ReplaceCached(String, (String Pattern, String Replacement)[])
  href: api/Towel.Extensions.html#Towel_Extensions_ReplaceCached_System_String_System_ValueTuple_System_String_System_String____
  commentId: M:Towel.Extensions.ReplaceCached(System.String,System.ValueTuple{System.String,System.String}[])
  name.vb: ReplaceCached(String, (Pattern As String, Replacement As String)())
  fullName: Towel.Extensions.ReplaceCached(System.String, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Towel.Extensions.ReplaceCached(System.String, System.ValueTuple(Of System.String, System.String)())
  nameWithType: Extensions.ReplaceCached(String, (String Pattern, String Replacement)[])
  nameWithType.vb: Extensions.ReplaceCached(String, (Pattern As String, Replacement As String)())
- uid: Towel.Extensions.ReplaceCached*
  name: ReplaceCached
  href: api/Towel.Extensions.html#Towel_Extensions_ReplaceCached_
  commentId: Overload:Towel.Extensions.ReplaceCached
  isSpec: "True"
  fullName: Towel.Extensions.ReplaceCached
  nameWithType: Extensions.ReplaceCached
- uid: Towel.Extensions.Reverse(System.String)
  name: Reverse(String)
  href: api/Towel.Extensions.html#Towel_Extensions_Reverse_System_String_
  commentId: M:Towel.Extensions.Reverse(System.String)
  fullName: Towel.Extensions.Reverse(System.String)
  nameWithType: Extensions.Reverse(String)
- uid: Towel.Extensions.Reverse*
  name: Reverse
  href: api/Towel.Extensions.html#Towel_Extensions_Reverse_
  commentId: Overload:Towel.Extensions.Reverse
  isSpec: "True"
  fullName: Towel.Extensions.Reverse
  nameWithType: Extensions.Reverse
- uid: Towel.Extensions.SplitLines(System.String)
  name: SplitLines(String)
  href: api/Towel.Extensions.html#Towel_Extensions_SplitLines_System_String_
  commentId: M:Towel.Extensions.SplitLines(System.String)
  fullName: Towel.Extensions.SplitLines(System.String)
  nameWithType: Extensions.SplitLines(String)
- uid: Towel.Extensions.SplitLines*
  name: SplitLines
  href: api/Towel.Extensions.html#Towel_Extensions_SplitLines_
  commentId: Overload:Towel.Extensions.SplitLines
  isSpec: "True"
  fullName: Towel.Extensions.SplitLines
  nameWithType: Extensions.SplitLines
- uid: Towel.Extensions.Stepper*
  name: Stepper
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper_
  commentId: Overload:Towel.Extensions.Stepper
  isSpec: "True"
  fullName: Towel.Extensions.Stepper
  nameWithType: Extensions.Stepper
- uid: Towel.Extensions.Stepper``1(``0[],Action{``0})
  name: Stepper<T>(T[], Action<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___Action___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],Action{``0})
  name.vb: Stepper(Of T)(T(), Action(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], Action<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), Action(Of T))
  nameWithType: Extensions.Stepper<T>(T[], Action<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Action(Of T))
- uid: Towel.Extensions.Stepper``1(``0[],Func{``0,Towel.StepStatus})
  name: Stepper<T>(T[], Func<T, StepStatus>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___Func___0_Towel_StepStatus__
  commentId: M:Towel.Extensions.Stepper``1(``0[],Func{``0,Towel.StepStatus})
  name.vb: Stepper(Of T)(T(), Func(Of T, StepStatus))
  fullName: Towel.Extensions.Stepper<T>(T[], Func<T, Towel.StepStatus>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), Func(Of T, Towel.StepStatus))
  nameWithType: Extensions.Stepper<T>(T[], Func<T, StepStatus>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Func(Of T, StepStatus))
- uid: Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Action{``0})
  name: Stepper<T>(T[], Int32, Int32, Action<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___System_Int32_System_Int32_Action___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Action{``0})
  name.vb: Stepper(Of T)(T(), Int32, Int32, Action(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], System.Int32, System.Int32, Action<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), System.Int32, System.Int32, Action(Of T))
  nameWithType: Extensions.Stepper<T>(T[], Int32, Int32, Action<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Int32, Int32, Action(Of T))
- uid: Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Func{``0,Towel.StepStatus})
  name: Stepper<T>(T[], Int32, Int32, Func<T, StepStatus>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___System_Int32_System_Int32_Func___0_Towel_StepStatus__
  commentId: M:Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Func{``0,Towel.StepStatus})
  name.vb: Stepper(Of T)(T(), Int32, Int32, Func(Of T, StepStatus))
  fullName: Towel.Extensions.Stepper<T>(T[], System.Int32, System.Int32, Func<T, Towel.StepStatus>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), System.Int32, System.Int32, Func(Of T, Towel.StepStatus))
  nameWithType: Extensions.Stepper<T>(T[], Int32, Int32, Func<T, StepStatus>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Int32, Int32, Func(Of T, StepStatus))
- uid: Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Towel.StepRef{``0})
  name: Stepper<T>(T[], Int32, Int32, StepRef<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___System_Int32_System_Int32_Towel_StepRef___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Towel.StepRef{``0})
  name.vb: Stepper(Of T)(T(), Int32, Int32, StepRef(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], System.Int32, System.Int32, Towel.StepRef<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), System.Int32, System.Int32, Towel.StepRef(Of T))
  nameWithType: Extensions.Stepper<T>(T[], Int32, Int32, StepRef<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Int32, Int32, StepRef(Of T))
- uid: Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Towel.StepRefBreak{``0})
  name: Stepper<T>(T[], Int32, Int32, StepRefBreak<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___System_Int32_System_Int32_Towel_StepRefBreak___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],System.Int32,System.Int32,Towel.StepRefBreak{``0})
  name.vb: Stepper(Of T)(T(), Int32, Int32, StepRefBreak(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], System.Int32, System.Int32, Towel.StepRefBreak<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), System.Int32, System.Int32, Towel.StepRefBreak(Of T))
  nameWithType: Extensions.Stepper<T>(T[], Int32, Int32, StepRefBreak<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), Int32, Int32, StepRefBreak(Of T))
- uid: Towel.Extensions.Stepper``1(``0[],Towel.StepRef{``0})
  name: Stepper<T>(T[], StepRef<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___Towel_StepRef___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],Towel.StepRef{``0})
  name.vb: Stepper(Of T)(T(), StepRef(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], Towel.StepRef<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), Towel.StepRef(Of T))
  nameWithType: Extensions.Stepper<T>(T[], StepRef<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), StepRef(Of T))
- uid: Towel.Extensions.Stepper``1(``0[],Towel.StepRefBreak{``0})
  name: Stepper<T>(T[], StepRefBreak<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__1___0___Towel_StepRefBreak___0__
  commentId: M:Towel.Extensions.Stepper``1(``0[],Towel.StepRefBreak{``0})
  name.vb: Stepper(Of T)(T(), StepRefBreak(Of T))
  fullName: Towel.Extensions.Stepper<T>(T[], Towel.StepRefBreak<T>)
  fullName.vb: Towel.Extensions.Stepper(Of T)(T(), Towel.StepRefBreak(Of T))
  nameWithType: Extensions.Stepper<T>(T[], StepRefBreak<T>)
  nameWithType.vb: Extensions.Stepper(Of T)(T(), StepRefBreak(Of T))
- uid: Towel.Extensions.Stepper``2(``0[],``1)
  name: Stepper<T, Step>(T[], Step)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__2___0_____1_
  commentId: M:Towel.Extensions.Stepper``2(``0[],``1)
  name.vb: Stepper(Of T, Step)(T(), Step)
  fullName: Towel.Extensions.Stepper<T, Step>(T[], Step)
  fullName.vb: Towel.Extensions.Stepper(Of T, Step)(T(), Step)
  nameWithType: Extensions.Stepper<T, Step>(T[], Step)
  nameWithType.vb: Extensions.Stepper(Of T, Step)(T(), Step)
- uid: Towel.Extensions.Stepper``2(``0[],System.Int32,System.Int32,``1)
  name: Stepper<T, Step>(T[], Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_Stepper__2___0___System_Int32_System_Int32___1_
  commentId: M:Towel.Extensions.Stepper``2(``0[],System.Int32,System.Int32,``1)
  name.vb: Stepper(Of T, Step)(T(), Int32, Int32, Step)
  fullName: Towel.Extensions.Stepper<T, Step>(T[], System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.Stepper(Of T, Step)(T(), System.Int32, System.Int32, Step)
  nameWithType: Extensions.Stepper<T, Step>(T[], Int32, Int32, Step)
  nameWithType.vb: Extensions.Stepper(Of T, Step)(T(), Int32, Int32, Step)
- uid: Towel.Extensions.StepperBreak*
  name: StepperBreak
  href: api/Towel.Extensions.html#Towel_Extensions_StepperBreak_
  commentId: Overload:Towel.Extensions.StepperBreak
  isSpec: "True"
  fullName: Towel.Extensions.StepperBreak
  nameWithType: Extensions.StepperBreak
- uid: Towel.Extensions.StepperBreak``2(``0[],``1)
  name: StepperBreak<T, Step>(T[], Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperBreak__2___0_____1_
  commentId: M:Towel.Extensions.StepperBreak``2(``0[],``1)
  name.vb: StepperBreak(Of T, Step)(T(), Step)
  fullName: Towel.Extensions.StepperBreak<T, Step>(T[], Step)
  fullName.vb: Towel.Extensions.StepperBreak(Of T, Step)(T(), Step)
  nameWithType: Extensions.StepperBreak<T, Step>(T[], Step)
  nameWithType.vb: Extensions.StepperBreak(Of T, Step)(T(), Step)
- uid: Towel.Extensions.StepperBreak``2(``0[],System.Int32,System.Int32,``1)
  name: StepperBreak<T, Step>(T[], Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperBreak__2___0___System_Int32_System_Int32___1_
  commentId: M:Towel.Extensions.StepperBreak``2(``0[],System.Int32,System.Int32,``1)
  name.vb: StepperBreak(Of T, Step)(T(), Int32, Int32, Step)
  fullName: Towel.Extensions.StepperBreak<T, Step>(T[], System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.StepperBreak(Of T, Step)(T(), System.Int32, System.Int32, Step)
  nameWithType: Extensions.StepperBreak<T, Step>(T[], Int32, Int32, Step)
  nameWithType.vb: Extensions.StepperBreak(Of T, Step)(T(), Int32, Int32, Step)
- uid: Towel.Extensions.StepperRef*
  name: StepperRef
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRef_
  commentId: Overload:Towel.Extensions.StepperRef
  isSpec: "True"
  fullName: Towel.Extensions.StepperRef
  nameWithType: Extensions.StepperRef
- uid: Towel.Extensions.StepperRef``2(``0[],``1)
  name: StepperRef<T, Step>(T[], Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRef__2___0_____1_
  commentId: M:Towel.Extensions.StepperRef``2(``0[],``1)
  name.vb: StepperRef(Of T, Step)(T(), Step)
  fullName: Towel.Extensions.StepperRef<T, Step>(T[], Step)
  fullName.vb: Towel.Extensions.StepperRef(Of T, Step)(T(), Step)
  nameWithType: Extensions.StepperRef<T, Step>(T[], Step)
  nameWithType.vb: Extensions.StepperRef(Of T, Step)(T(), Step)
- uid: Towel.Extensions.StepperRef``2(``0[],System.Int32,System.Int32,``1)
  name: StepperRef<T, Step>(T[], Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRef__2___0___System_Int32_System_Int32___1_
  commentId: M:Towel.Extensions.StepperRef``2(``0[],System.Int32,System.Int32,``1)
  name.vb: StepperRef(Of T, Step)(T(), Int32, Int32, Step)
  fullName: Towel.Extensions.StepperRef<T, Step>(T[], System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.StepperRef(Of T, Step)(T(), System.Int32, System.Int32, Step)
  nameWithType: Extensions.StepperRef<T, Step>(T[], Int32, Int32, Step)
  nameWithType.vb: Extensions.StepperRef(Of T, Step)(T(), Int32, Int32, Step)
- uid: Towel.Extensions.StepperRefBreak*
  name: StepperRefBreak
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRefBreak_
  commentId: Overload:Towel.Extensions.StepperRefBreak
  isSpec: "True"
  fullName: Towel.Extensions.StepperRefBreak
  nameWithType: Extensions.StepperRefBreak
- uid: Towel.Extensions.StepperRefBreak``2(``0[],``1)
  name: StepperRefBreak<T, Step>(T[], Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRefBreak__2___0_____1_
  commentId: M:Towel.Extensions.StepperRefBreak``2(``0[],``1)
  name.vb: StepperRefBreak(Of T, Step)(T(), Step)
  fullName: Towel.Extensions.StepperRefBreak<T, Step>(T[], Step)
  fullName.vb: Towel.Extensions.StepperRefBreak(Of T, Step)(T(), Step)
  nameWithType: Extensions.StepperRefBreak<T, Step>(T[], Step)
  nameWithType.vb: Extensions.StepperRefBreak(Of T, Step)(T(), Step)
- uid: Towel.Extensions.StepperRefBreak``2(``0[],System.Int32,System.Int32,``1)
  name: StepperRefBreak<T, Step>(T[], Int32, Int32, Step)
  href: api/Towel.Extensions.html#Towel_Extensions_StepperRefBreak__2___0___System_Int32_System_Int32___1_
  commentId: M:Towel.Extensions.StepperRefBreak``2(``0[],System.Int32,System.Int32,``1)
  name.vb: StepperRefBreak(Of T, Step)(T(), Int32, Int32, Step)
  fullName: Towel.Extensions.StepperRefBreak<T, Step>(T[], System.Int32, System.Int32, Step)
  fullName.vb: Towel.Extensions.StepperRefBreak(Of T, Step)(T(), System.Int32, System.Int32, Step)
  nameWithType: Extensions.StepperRefBreak<T, Step>(T[], Int32, Int32, Step)
  nameWithType.vb: Extensions.StepperRefBreak(Of T, Step)(T(), Int32, Int32, Step)
- uid: Towel.Extensions.Time_DateTime(Action)
  name: Time_DateTime(Action)
  href: api/Towel.Extensions.html#Towel_Extensions_Time_DateTime_Action_
  commentId: M:Towel.Extensions.Time_DateTime(Action)
  fullName: Towel.Extensions.Time_DateTime(Action)
  nameWithType: Extensions.Time_DateTime(Action)
- uid: Towel.Extensions.Time_DateTime*
  name: Time_DateTime
  href: api/Towel.Extensions.html#Towel_Extensions_Time_DateTime_
  commentId: Overload:Towel.Extensions.Time_DateTime
  isSpec: "True"
  fullName: Towel.Extensions.Time_DateTime
  nameWithType: Extensions.Time_DateTime
- uid: Towel.Extensions.Time_StopWatch(Action)
  name: Time_StopWatch(Action)
  href: api/Towel.Extensions.html#Towel_Extensions_Time_StopWatch_Action_
  commentId: M:Towel.Extensions.Time_StopWatch(Action)
  fullName: Towel.Extensions.Time_StopWatch(Action)
  nameWithType: Extensions.Time_StopWatch(Action)
- uid: Towel.Extensions.Time_StopWatch*
  name: Time_StopWatch
  href: api/Towel.Extensions.html#Towel_Extensions_Time_StopWatch_
  commentId: Overload:Towel.Extensions.Time_StopWatch
  isSpec: "True"
  fullName: Towel.Extensions.Time_StopWatch
  nameWithType: Extensions.Time_StopWatch
- uid: Towel.Extensions.ToArray*
  name: ToArray
  href: api/Towel.Extensions.html#Towel_Extensions_ToArray_
  commentId: Overload:Towel.Extensions.ToArray
  isSpec: "True"
  fullName: Towel.Extensions.ToArray
  nameWithType: Extensions.ToArray
- uid: Towel.Extensions.ToArray``1(Action{Action{``0}})
  name: ToArray<T>(Action<Action<T>>)
  href: api/Towel.Extensions.html#Towel_Extensions_ToArray__1_Action_Action___0___
  commentId: M:Towel.Extensions.ToArray``1(Action{Action{``0}})
  name.vb: ToArray(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Extensions.ToArray<T>(Action<Action<T>>)
  fullName.vb: Towel.Extensions.ToArray(Of T)(Action(Of Action(Of T)))
  nameWithType: Extensions.ToArray<T>(Action<Action<T>>)
  nameWithType.vb: Extensions.ToArray(Of T)(Action(Of Action(Of T)))
- uid: Towel.Extensions.ToEnglishWords(System.Byte)
  name: ToEnglishWords(Byte)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_Byte_
  commentId: M:Towel.Extensions.ToEnglishWords(System.Byte)
  fullName: Towel.Extensions.ToEnglishWords(System.Byte)
  nameWithType: Extensions.ToEnglishWords(Byte)
- uid: Towel.Extensions.ToEnglishWords(System.Decimal)
  name: ToEnglishWords(Decimal)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_Decimal_
  commentId: M:Towel.Extensions.ToEnglishWords(System.Decimal)
  fullName: Towel.Extensions.ToEnglishWords(System.Decimal)
  nameWithType: Extensions.ToEnglishWords(Decimal)
- uid: Towel.Extensions.ToEnglishWords(System.Int16)
  name: ToEnglishWords(Int16)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_Int16_
  commentId: M:Towel.Extensions.ToEnglishWords(System.Int16)
  fullName: Towel.Extensions.ToEnglishWords(System.Int16)
  nameWithType: Extensions.ToEnglishWords(Int16)
- uid: Towel.Extensions.ToEnglishWords(System.Int32)
  name: ToEnglishWords(Int32)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_Int32_
  commentId: M:Towel.Extensions.ToEnglishWords(System.Int32)
  fullName: Towel.Extensions.ToEnglishWords(System.Int32)
  nameWithType: Extensions.ToEnglishWords(Int32)
- uid: Towel.Extensions.ToEnglishWords(System.Int64)
  name: ToEnglishWords(Int64)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_Int64_
  commentId: M:Towel.Extensions.ToEnglishWords(System.Int64)
  fullName: Towel.Extensions.ToEnglishWords(System.Int64)
  nameWithType: Extensions.ToEnglishWords(Int64)
- uid: Towel.Extensions.ToEnglishWords(System.SByte)
  name: ToEnglishWords(SByte)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_SByte_
  commentId: M:Towel.Extensions.ToEnglishWords(System.SByte)
  fullName: Towel.Extensions.ToEnglishWords(System.SByte)
  nameWithType: Extensions.ToEnglishWords(SByte)
- uid: Towel.Extensions.ToEnglishWords(System.UInt16)
  name: ToEnglishWords(UInt16)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_UInt16_
  commentId: M:Towel.Extensions.ToEnglishWords(System.UInt16)
  fullName: Towel.Extensions.ToEnglishWords(System.UInt16)
  nameWithType: Extensions.ToEnglishWords(UInt16)
- uid: Towel.Extensions.ToEnglishWords(System.UInt32)
  name: ToEnglishWords(UInt32)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_UInt32_
  commentId: M:Towel.Extensions.ToEnglishWords(System.UInt32)
  fullName: Towel.Extensions.ToEnglishWords(System.UInt32)
  nameWithType: Extensions.ToEnglishWords(UInt32)
- uid: Towel.Extensions.ToEnglishWords(System.UInt64)
  name: ToEnglishWords(UInt64)
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_System_UInt64_
  commentId: M:Towel.Extensions.ToEnglishWords(System.UInt64)
  fullName: Towel.Extensions.ToEnglishWords(System.UInt64)
  nameWithType: Extensions.ToEnglishWords(UInt64)
- uid: Towel.Extensions.ToEnglishWords*
  name: ToEnglishWords
  href: api/Towel.Extensions.html#Towel_Extensions_ToEnglishWords_
  commentId: Overload:Towel.Extensions.ToEnglishWords
  isSpec: "True"
  fullName: Towel.Extensions.ToEnglishWords
  nameWithType: Extensions.ToEnglishWords
- uid: Towel.Extensions.ToIEnumerable(Range)
  name: ToIEnumerable(Range)
  href: api/Towel.Extensions.html#Towel_Extensions_ToIEnumerable_Range_
  commentId: M:Towel.Extensions.ToIEnumerable(Range)
  fullName: Towel.Extensions.ToIEnumerable(Range)
  nameWithType: Extensions.ToIEnumerable(Range)
- uid: Towel.Extensions.ToIEnumerable*
  name: ToIEnumerable
  href: api/Towel.Extensions.html#Towel_Extensions_ToIEnumerable_
  commentId: Overload:Towel.Extensions.ToIEnumerable
  isSpec: "True"
  fullName: Towel.Extensions.ToIEnumerable
  nameWithType: Extensions.ToIEnumerable
- uid: Towel.Extensions.ToStepper*
  name: ToStepper
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepper_
  commentId: Overload:Towel.Extensions.ToStepper
  isSpec: "True"
  fullName: Towel.Extensions.ToStepper
  nameWithType: Extensions.ToStepper
- uid: Towel.Extensions.ToStepper``1(System.Collections.Generic.IEnumerable{``0})
  name: ToStepper<T>(System.Collections.Generic.IEnumerable<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepper__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Towel.Extensions.ToStepper``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: ToStepper(Of T)(System.Collections.Generic.IEnumerable(Of T))
  fullName: Towel.Extensions.ToStepper<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Towel.Extensions.ToStepper(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Extensions.ToStepper<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.ToStepper(Of T)(System.Collections.Generic.IEnumerable(Of T))
- uid: Towel.Extensions.ToStepperBreak*
  name: ToStepperBreak
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperBreak_
  commentId: Overload:Towel.Extensions.ToStepperBreak
  isSpec: "True"
  fullName: Towel.Extensions.ToStepperBreak
  nameWithType: Extensions.ToStepperBreak
- uid: Towel.Extensions.ToStepperBreak``1(System.Collections.Generic.IEnumerable{``0})
  name: ToStepperBreak<T>(System.Collections.Generic.IEnumerable<T>)
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperBreak__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Towel.Extensions.ToStepperBreak``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: ToStepperBreak(Of T)(System.Collections.Generic.IEnumerable(Of T))
  fullName: Towel.Extensions.ToStepperBreak<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Towel.Extensions.ToStepperBreak(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Extensions.ToStepperBreak<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.ToStepperBreak(Of T)(System.Collections.Generic.IEnumerable(Of T))
- uid: Towel.Extensions.ToStepperRef*
  name: ToStepperRef
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperRef_
  commentId: Overload:Towel.Extensions.ToStepperRef
  isSpec: "True"
  fullName: Towel.Extensions.ToStepperRef
  nameWithType: Extensions.ToStepperRef
- uid: Towel.Extensions.ToStepperRef``1(``0[])
  name: ToStepperRef<T>(T[])
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperRef__1___0___
  commentId: M:Towel.Extensions.ToStepperRef``1(``0[])
  name.vb: ToStepperRef(Of T)(T())
  fullName: Towel.Extensions.ToStepperRef<T>(T[])
  fullName.vb: Towel.Extensions.ToStepperRef(Of T)(T())
  nameWithType: Extensions.ToStepperRef<T>(T[])
  nameWithType.vb: Extensions.ToStepperRef(Of T)(T())
- uid: Towel.Extensions.ToStepperRefBreak*
  name: ToStepperRefBreak
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperRefBreak_
  commentId: Overload:Towel.Extensions.ToStepperRefBreak
  isSpec: "True"
  fullName: Towel.Extensions.ToStepperRefBreak
  nameWithType: Extensions.ToStepperRefBreak
- uid: Towel.Extensions.ToStepperRefBreak``1(``0[])
  name: ToStepperRefBreak<T>(T[])
  href: api/Towel.Extensions.html#Towel_Extensions_ToStepperRefBreak__1___0___
  commentId: M:Towel.Extensions.ToStepperRefBreak``1(``0[])
  name.vb: ToStepperRefBreak(Of T)(T())
  fullName: Towel.Extensions.ToStepperRefBreak<T>(T[])
  fullName.vb: Towel.Extensions.ToStepperRefBreak(Of T)(T())
  nameWithType: Extensions.ToStepperRefBreak<T>(T[])
  nameWithType.vb: Extensions.ToStepperRefBreak(Of T)(T())
- uid: Towel.Extensions.TryFirst*
  name: TryFirst
  href: api/Towel.Extensions.html#Towel_Extensions_TryFirst_
  commentId: Overload:Towel.Extensions.TryFirst
  isSpec: "True"
  fullName: Towel.Extensions.TryFirst
  nameWithType: Extensions.TryFirst
- uid: Towel.Extensions.TryFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  name: TryFirst<T>(System.Collections.Generic.IEnumerable<T>, out T)
  href: api/Towel.Extensions.html#Towel_Extensions_TryFirst__1_System_Collections_Generic_IEnumerable___0____0__
  commentId: M:Towel.Extensions.TryFirst``1(System.Collections.Generic.IEnumerable{``0},``0@)
  name.vb: TryFirst(Of T)(System.Collections.Generic.IEnumerable(Of T), ByRef T)
  fullName: Towel.Extensions.TryFirst<T>(System.Collections.Generic.IEnumerable<T>, out T)
  fullName.vb: Towel.Extensions.TryFirst(Of T)(System.Collections.Generic.IEnumerable(Of T), ByRef T)
  nameWithType: Extensions.TryFirst<T>(System.Collections.Generic.IEnumerable<T>, out T)
  nameWithType.vb: Extensions.TryFirst(Of T)(System.Collections.Generic.IEnumerable(Of T), ByRef T)
- uid: Towel.Extensions.Where*
  name: Where
  href: api/Towel.Extensions.html#Towel_Extensions_Where_
  commentId: Overload:Towel.Extensions.Where
  isSpec: "True"
  fullName: Towel.Extensions.Where
  nameWithType: Extensions.Where
- uid: Towel.Extensions.Where``1(Action{Action{``0}},Func{``0,System.Boolean})
  name: Where<T>(Action<Action<T>>, Func<T, Boolean>)
  href: api/Towel.Extensions.html#Towel_Extensions_Where__1_Action_Action___0___Func___0_System_Boolean__
  commentId: M:Towel.Extensions.Where``1(Action{Action{``0}},Func{``0,System.Boolean})
  name.vb: Where(Of T)(Action(Of Action(Of T)), Func(Of T, Boolean))
  fullName: Towel.Extensions.Where<T>(Action<Action<T>>, Func<T, System.Boolean>)
  fullName.vb: Towel.Extensions.Where(Of T)(Action(Of Action(Of T)), Func(Of T, System.Boolean))
  nameWithType: Extensions.Where<T>(Action<Action<T>>, Func<T, Boolean>)
  nameWithType.vb: Extensions.Where(Of T)(Action(Of Action(Of T)), Func(Of T, Boolean))
- uid: Towel.FuncRuntime`1
  name: FuncRuntime<TResult>
  href: api/Towel.FuncRuntime-1.html
  commentId: T:Towel.FuncRuntime`1
  name.vb: FuncRuntime(Of TResult)
  fullName: Towel.FuncRuntime<TResult>
  fullName.vb: Towel.FuncRuntime(Of TResult)
  nameWithType: FuncRuntime<TResult>
  nameWithType.vb: FuncRuntime(Of TResult)
- uid: Towel.FuncRuntime`1.Do
  name: Do()
  href: api/Towel.FuncRuntime-1.html#Towel_FuncRuntime_1_Do
  commentId: M:Towel.FuncRuntime`1.Do
  fullName: Towel.FuncRuntime<TResult>.Do()
  fullName.vb: Towel.FuncRuntime(Of TResult).Do()
  nameWithType: FuncRuntime<TResult>.Do()
  nameWithType.vb: FuncRuntime(Of TResult).Do()
- uid: Towel.FuncRuntime`1.Do*
  name: Do
  href: api/Towel.FuncRuntime-1.html#Towel_FuncRuntime_1_Do_
  commentId: Overload:Towel.FuncRuntime`1.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of TResult).Do
  nameWithType: FuncRuntime<TResult>.Do
  nameWithType.vb: FuncRuntime(Of TResult).Do
- uid: Towel.FuncRuntime`1.op_Implicit(Func{`0})~Towel.FuncRuntime{`0}
  name: Implicit(Func<TResult> to FuncRuntime<TResult>)
  href: api/Towel.FuncRuntime-1.html#Towel_FuncRuntime_1_op_Implicit_Func__0___Towel_FuncRuntime__0_
  commentId: M:Towel.FuncRuntime`1.op_Implicit(Func{`0})~Towel.FuncRuntime{`0}
  name.vb: Widening(Func(Of TResult) to FuncRuntime(Of TResult))
  fullName: Towel.FuncRuntime<TResult>.Implicit(Func<TResult> to Towel.FuncRuntime<TResult>)
  fullName.vb: Towel.FuncRuntime(Of TResult).Widening(Func(Of TResult) to Towel.FuncRuntime(Of TResult))
  nameWithType: FuncRuntime<TResult>.Implicit(Func<TResult> to FuncRuntime<TResult>)
  nameWithType.vb: FuncRuntime(Of TResult).Widening(Func(Of TResult) to FuncRuntime(Of TResult))
- uid: Towel.FuncRuntime`1.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-1.html#Towel_FuncRuntime_1_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of TResult).Widening
  nameWithType: FuncRuntime<TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of TResult).Widening
- uid: Towel.FuncRuntime`2
  name: FuncRuntime<T1, TResult>
  href: api/Towel.FuncRuntime-2.html
  commentId: T:Towel.FuncRuntime`2
  name.vb: FuncRuntime(Of T1, TResult)
  fullName: Towel.FuncRuntime<T1, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, TResult)
  nameWithType: FuncRuntime<T1, TResult>
  nameWithType.vb: FuncRuntime(Of T1, TResult)
- uid: Towel.FuncRuntime`2.Do(`0)
  name: Do(T1)
  href: api/Towel.FuncRuntime-2.html#Towel_FuncRuntime_2_Do__0_
  commentId: M:Towel.FuncRuntime`2.Do(`0)
  fullName: Towel.FuncRuntime<T1, TResult>.Do(T1)
  fullName.vb: Towel.FuncRuntime(Of T1, TResult).Do(T1)
  nameWithType: FuncRuntime<T1, TResult>.Do(T1)
  nameWithType.vb: FuncRuntime(Of T1, TResult).Do(T1)
- uid: Towel.FuncRuntime`2.Do*
  name: Do
  href: api/Towel.FuncRuntime-2.html#Towel_FuncRuntime_2_Do_
  commentId: Overload:Towel.FuncRuntime`2.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, TResult).Do
  nameWithType: FuncRuntime<T1, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, TResult).Do
- uid: Towel.FuncRuntime`2.op_Implicit(Func{`0,`1})~Towel.FuncRuntime{`0,`1}
  name: Implicit(Func<T1, TResult> to FuncRuntime<T1, TResult>)
  href: api/Towel.FuncRuntime-2.html#Towel_FuncRuntime_2_op_Implicit_Func__0__1___Towel_FuncRuntime__0__1_
  commentId: M:Towel.FuncRuntime`2.op_Implicit(Func{`0,`1})~Towel.FuncRuntime{`0,`1}
  name.vb: Widening(Func(Of T1, TResult) to FuncRuntime(Of T1, TResult))
  fullName: Towel.FuncRuntime<T1, TResult>.Implicit(Func<T1, TResult> to Towel.FuncRuntime<T1, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, TResult).Widening(Func(Of T1, TResult) to Towel.FuncRuntime(Of T1, TResult))
  nameWithType: FuncRuntime<T1, TResult>.Implicit(Func<T1, TResult> to FuncRuntime<T1, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, TResult).Widening(Func(Of T1, TResult) to FuncRuntime(Of T1, TResult))
- uid: Towel.FuncRuntime`2.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-2.html#Towel_FuncRuntime_2_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, TResult).Widening
  nameWithType: FuncRuntime<T1, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, TResult).Widening
- uid: Towel.FuncRuntime`3
  name: FuncRuntime<T1, T2, TResult>
  href: api/Towel.FuncRuntime-3.html
  commentId: T:Towel.FuncRuntime`3
  name.vb: FuncRuntime(Of T1, T2, TResult)
  fullName: Towel.FuncRuntime<T1, T2, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, TResult)
  nameWithType: FuncRuntime<T1, T2, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, TResult)
- uid: Towel.FuncRuntime`3.Do(`0,`1)
  name: Do(T1, T2)
  href: api/Towel.FuncRuntime-3.html#Towel_FuncRuntime_3_Do__0__1_
  commentId: M:Towel.FuncRuntime`3.Do(`0,`1)
  fullName: Towel.FuncRuntime<T1, T2, TResult>.Do(T1, T2)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, TResult).Do(T1, T2)
  nameWithType: FuncRuntime<T1, T2, TResult>.Do(T1, T2)
  nameWithType.vb: FuncRuntime(Of T1, T2, TResult).Do(T1, T2)
- uid: Towel.FuncRuntime`3.Do*
  name: Do
  href: api/Towel.FuncRuntime-3.html#Towel_FuncRuntime_3_Do_
  commentId: Overload:Towel.FuncRuntime`3.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, TResult).Do
  nameWithType: FuncRuntime<T1, T2, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, TResult).Do
- uid: Towel.FuncRuntime`3.op_Implicit(Func{`0,`1,`2})~Towel.FuncRuntime{`0,`1,`2}
  name: Implicit(Func<T1, T2, TResult> to FuncRuntime<T1, T2, TResult>)
  href: api/Towel.FuncRuntime-3.html#Towel_FuncRuntime_3_op_Implicit_Func__0__1__2___Towel_FuncRuntime__0__1__2_
  commentId: M:Towel.FuncRuntime`3.op_Implicit(Func{`0,`1,`2})~Towel.FuncRuntime{`0,`1,`2}
  name.vb: Widening(Func(Of T1, T2, TResult) to FuncRuntime(Of T1, T2, TResult))
  fullName: Towel.FuncRuntime<T1, T2, TResult>.Implicit(Func<T1, T2, TResult> to Towel.FuncRuntime<T1, T2, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, TResult).Widening(Func(Of T1, T2, TResult) to Towel.FuncRuntime(Of T1, T2, TResult))
  nameWithType: FuncRuntime<T1, T2, TResult>.Implicit(Func<T1, T2, TResult> to FuncRuntime<T1, T2, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, TResult).Widening(Func(Of T1, T2, TResult) to FuncRuntime(Of T1, T2, TResult))
- uid: Towel.FuncRuntime`3.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-3.html#Towel_FuncRuntime_3_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, TResult).Widening
- uid: Towel.FuncRuntime`4
  name: FuncRuntime<T1, T2, T3, TResult>
  href: api/Towel.FuncRuntime-4.html
  commentId: T:Towel.FuncRuntime`4
  name.vb: FuncRuntime(Of T1, T2, T3, TResult)
  fullName: Towel.FuncRuntime<T1, T2, T3, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, TResult)
  nameWithType: FuncRuntime<T1, T2, T3, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, TResult)
- uid: Towel.FuncRuntime`4.Do(`0,`1,`2)
  name: Do(T1, T2, T3)
  href: api/Towel.FuncRuntime-4.html#Towel_FuncRuntime_4_Do__0__1__2_
  commentId: M:Towel.FuncRuntime`4.Do(`0,`1,`2)
  fullName: Towel.FuncRuntime<T1, T2, T3, TResult>.Do(T1, T2, T3)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, TResult).Do(T1, T2, T3)
  nameWithType: FuncRuntime<T1, T2, T3, TResult>.Do(T1, T2, T3)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, TResult).Do(T1, T2, T3)
- uid: Towel.FuncRuntime`4.Do*
  name: Do
  href: api/Towel.FuncRuntime-4.html#Towel_FuncRuntime_4_Do_
  commentId: Overload:Towel.FuncRuntime`4.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, T3, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, TResult).Do
  nameWithType: FuncRuntime<T1, T2, T3, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, TResult).Do
- uid: Towel.FuncRuntime`4.op_Implicit(Func{`0,`1,`2,`3})~Towel.FuncRuntime{`0,`1,`2,`3}
  name: Implicit(Func<T1, T2, T3, TResult> to FuncRuntime<T1, T2, T3, TResult>)
  href: api/Towel.FuncRuntime-4.html#Towel_FuncRuntime_4_op_Implicit_Func__0__1__2__3___Towel_FuncRuntime__0__1__2__3_
  commentId: M:Towel.FuncRuntime`4.op_Implicit(Func{`0,`1,`2,`3})~Towel.FuncRuntime{`0,`1,`2,`3}
  name.vb: Widening(Func(Of T1, T2, T3, TResult) to FuncRuntime(Of T1, T2, T3, TResult))
  fullName: Towel.FuncRuntime<T1, T2, T3, TResult>.Implicit(Func<T1, T2, T3, TResult> to Towel.FuncRuntime<T1, T2, T3, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, TResult).Widening(Func(Of T1, T2, T3, TResult) to Towel.FuncRuntime(Of T1, T2, T3, TResult))
  nameWithType: FuncRuntime<T1, T2, T3, TResult>.Implicit(Func<T1, T2, T3, TResult> to FuncRuntime<T1, T2, T3, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, TResult).Widening(Func(Of T1, T2, T3, TResult) to FuncRuntime(Of T1, T2, T3, TResult))
- uid: Towel.FuncRuntime`4.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-4.html#Towel_FuncRuntime_4_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, T3, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, T3, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, TResult).Widening
- uid: Towel.FuncRuntime`5
  name: FuncRuntime<T1, T2, T3, T4, TResult>
  href: api/Towel.FuncRuntime-5.html
  commentId: T:Towel.FuncRuntime`5
  name.vb: FuncRuntime(Of T1, T2, T3, T4, TResult)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, TResult)
  nameWithType: FuncRuntime<T1, T2, T3, T4, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, TResult)
- uid: Towel.FuncRuntime`5.Do(`0,`1,`2,`3)
  name: Do(T1, T2, T3, T4)
  href: api/Towel.FuncRuntime-5.html#Towel_FuncRuntime_5_Do__0__1__2__3_
  commentId: M:Towel.FuncRuntime`5.Do(`0,`1,`2,`3)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, TResult>.Do(T1, T2, T3, T4)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, TResult).Do(T1, T2, T3, T4)
  nameWithType: FuncRuntime<T1, T2, T3, T4, TResult>.Do(T1, T2, T3, T4)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, TResult).Do(T1, T2, T3, T4)
- uid: Towel.FuncRuntime`5.Do*
  name: Do
  href: api/Towel.FuncRuntime-5.html#Towel_FuncRuntime_5_Do_
  commentId: Overload:Towel.FuncRuntime`5.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, TResult).Do
  nameWithType: FuncRuntime<T1, T2, T3, T4, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, TResult).Do
- uid: Towel.FuncRuntime`5.op_Implicit(Func{`0,`1,`2,`3,`4})~Towel.FuncRuntime{`0,`1,`2,`3,`4}
  name: Implicit(Func<T1, T2, T3, T4, TResult> to FuncRuntime<T1, T2, T3, T4, TResult>)
  href: api/Towel.FuncRuntime-5.html#Towel_FuncRuntime_5_op_Implicit_Func__0__1__2__3__4___Towel_FuncRuntime__0__1__2__3__4_
  commentId: M:Towel.FuncRuntime`5.op_Implicit(Func{`0,`1,`2,`3,`4})~Towel.FuncRuntime{`0,`1,`2,`3,`4}
  name.vb: Widening(Func(Of T1, T2, T3, T4, TResult) to FuncRuntime(Of T1, T2, T3, T4, TResult))
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, TResult>.Implicit(Func<T1, T2, T3, T4, TResult> to Towel.FuncRuntime<T1, T2, T3, T4, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, TResult).Widening(Func(Of T1, T2, T3, T4, TResult) to Towel.FuncRuntime(Of T1, T2, T3, T4, TResult))
  nameWithType: FuncRuntime<T1, T2, T3, T4, TResult>.Implicit(Func<T1, T2, T3, T4, TResult> to FuncRuntime<T1, T2, T3, T4, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, TResult).Widening(Func(Of T1, T2, T3, T4, TResult) to FuncRuntime(Of T1, T2, T3, T4, TResult))
- uid: Towel.FuncRuntime`5.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-5.html#Towel_FuncRuntime_5_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`5.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, T3, T4, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, TResult).Widening
- uid: Towel.FuncRuntime`6
  name: FuncRuntime<T1, T2, T3, T4, T5, TResult>
  href: api/Towel.FuncRuntime-6.html
  commentId: T:Towel.FuncRuntime`6
  name.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult)
- uid: Towel.FuncRuntime`6.Do(`0,`1,`2,`3,`4)
  name: Do(T1, T2, T3, T4, T5)
  href: api/Towel.FuncRuntime-6.html#Towel_FuncRuntime_6_Do__0__1__2__3__4_
  commentId: M:Towel.FuncRuntime`6.Do(`0,`1,`2,`3,`4)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>.Do(T1, T2, T3, T4, T5)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Do(T1, T2, T3, T4, T5)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, TResult>.Do(T1, T2, T3, T4, T5)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Do(T1, T2, T3, T4, T5)
- uid: Towel.FuncRuntime`6.Do*
  name: Do
  href: api/Towel.FuncRuntime-6.html#Towel_FuncRuntime_6_Do_
  commentId: Overload:Towel.FuncRuntime`6.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Do
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Do
- uid: Towel.FuncRuntime`6.op_Implicit(Func{`0,`1,`2,`3,`4,`5})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5}
  name: Implicit(Func<T1, T2, T3, T4, T5, TResult> to FuncRuntime<T1, T2, T3, T4, T5, TResult>)
  href: api/Towel.FuncRuntime-6.html#Towel_FuncRuntime_6_op_Implicit_Func__0__1__2__3__4__5___Towel_FuncRuntime__0__1__2__3__4__5_
  commentId: M:Towel.FuncRuntime`6.op_Implicit(Func{`0,`1,`2,`3,`4,`5})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5}
  name.vb: Widening(Func(Of T1, T2, T3, T4, T5, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, TResult))
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>.Implicit(Func<T1, T2, T3, T4, T5, TResult> to Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Widening(Func(Of T1, T2, T3, T4, T5, TResult) to Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult))
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, TResult>.Implicit(Func<T1, T2, T3, T4, T5, TResult> to FuncRuntime<T1, T2, T3, T4, T5, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Widening(Func(Of T1, T2, T3, T4, T5, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, TResult))
- uid: Towel.FuncRuntime`6.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-6.html#Towel_FuncRuntime_6_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`6.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, TResult).Widening
- uid: Towel.FuncRuntime`7
  name: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>
  href: api/Towel.FuncRuntime-7.html
  commentId: T:Towel.FuncRuntime`7
  name.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult)
- uid: Towel.FuncRuntime`7.Do(`0,`1,`2,`3,`4,`5)
  name: Do(T1, T2, T3, T4, T5, T6)
  href: api/Towel.FuncRuntime-7.html#Towel_FuncRuntime_7_Do__0__1__2__3__4__5_
  commentId: M:Towel.FuncRuntime`7.Do(`0,`1,`2,`3,`4,`5)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Do(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Do(T1, T2, T3, T4, T5, T6)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Do(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Do(T1, T2, T3, T4, T5, T6)
- uid: Towel.FuncRuntime`7.Do*
  name: Do
  href: api/Towel.FuncRuntime-7.html#Towel_FuncRuntime_7_Do_
  commentId: Overload:Towel.FuncRuntime`7.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Do
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Do
- uid: Towel.FuncRuntime`7.op_Implicit(Func{`0,`1,`2,`3,`4,`5,`6})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5,`6}
  name: Implicit(Func<T1, T2, T3, T4, T5, T6, TResult> to FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>)
  href: api/Towel.FuncRuntime-7.html#Towel_FuncRuntime_7_op_Implicit_Func__0__1__2__3__4__5__6___Towel_FuncRuntime__0__1__2__3__4__5__6_
  commentId: M:Towel.FuncRuntime`7.op_Implicit(Func{`0,`1,`2,`3,`4,`5,`6})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Widening(Func(Of T1, T2, T3, T4, T5, T6, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult))
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Implicit(Func<T1, T2, T3, T4, T5, T6, TResult> to Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Widening(Func(Of T1, T2, T3, T4, T5, T6, TResult) to Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult))
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Implicit(Func<T1, T2, T3, T4, T5, T6, TResult> to FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Widening(Func(Of T1, T2, T3, T4, T5, T6, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult))
- uid: Towel.FuncRuntime`7.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-7.html#Towel_FuncRuntime_7_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`7.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, TResult).Widening
- uid: Towel.FuncRuntime`8
  name: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>
  href: api/Towel.FuncRuntime-8.html
  commentId: T:Towel.FuncRuntime`8
  name.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult)
- uid: Towel.FuncRuntime`8.Do(`0,`1,`2,`3,`4,`5,`6)
  name: Do(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.FuncRuntime-8.html#Towel_FuncRuntime_8_Do__0__1__2__3__4__5__6_
  commentId: M:Towel.FuncRuntime`8.Do(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Do(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.FuncRuntime`8.Do*
  name: Do
  href: api/Towel.FuncRuntime-8.html#Towel_FuncRuntime_8_Do_
  commentId: Overload:Towel.FuncRuntime`8.Do
  isSpec: "True"
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Do
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Do
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do
- uid: Towel.FuncRuntime`8.op_Implicit(Func{`0,`1,`2,`3,`4,`5,`6,`7})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5,`6,`7}
  name: Implicit(Func<T1, T2, T3, T4, T5, T6, T7, TResult> to FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>)
  href: api/Towel.FuncRuntime-8.html#Towel_FuncRuntime_8_op_Implicit_Func__0__1__2__3__4__5__6__7___Towel_FuncRuntime__0__1__2__3__4__5__6__7_
  commentId: M:Towel.FuncRuntime`8.op_Implicit(Func{`0,`1,`2,`3,`4,`5,`6,`7})~Towel.FuncRuntime{`0,`1,`2,`3,`4,`5,`6,`7}
  name.vb: Widening(Func(Of T1, T2, T3, T4, T5, T6, T7, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit(Func<T1, T2, T3, T4, T5, T6, T7, TResult> to Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>)
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening(Func(Of T1, T2, T3, T4, T5, T6, T7, TResult) to Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit(Func<T1, T2, T3, T4, T5, T6, T7, TResult> to FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>)
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening(Func(Of T1, T2, T3, T4, T5, T6, T7, TResult) to FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult))
- uid: Towel.FuncRuntime`8.op_Implicit*
  name: Implicit
  href: api/Towel.FuncRuntime-8.html#Towel_FuncRuntime_8_op_Implicit_
  commentId: Overload:Towel.FuncRuntime`8.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit
  fullName.vb: Towel.FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening
  nameWithType: FuncRuntime<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit
  nameWithType.vb: FuncRuntime(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening
- uid: Towel.IAction
  name: IAction
  href: api/Towel.IAction.html
  commentId: T:Towel.IAction
  fullName: Towel.IAction
  nameWithType: IAction
- uid: Towel.IAction.Do
  name: Do()
  href: api/Towel.IAction.html#Towel_IAction_Do
  commentId: M:Towel.IAction.Do
  fullName: Towel.IAction.Do()
  nameWithType: IAction.Do()
- uid: Towel.IAction.Do*
  name: Do
  href: api/Towel.IAction.html#Towel_IAction_Do_
  commentId: Overload:Towel.IAction.Do
  isSpec: "True"
  fullName: Towel.IAction.Do
  nameWithType: IAction.Do
- uid: Towel.IAction`1
  name: IAction<T1>
  href: api/Towel.IAction-1.html
  commentId: T:Towel.IAction`1
  name.vb: IAction(Of T1)
  fullName: Towel.IAction<T1>
  fullName.vb: Towel.IAction(Of T1)
  nameWithType: IAction<T1>
  nameWithType.vb: IAction(Of T1)
- uid: Towel.IAction`1.Do(`0)
  name: Do(T1)
  href: api/Towel.IAction-1.html#Towel_IAction_1_Do__0_
  commentId: M:Towel.IAction`1.Do(`0)
  fullName: Towel.IAction<T1>.Do(T1)
  fullName.vb: Towel.IAction(Of T1).Do(T1)
  nameWithType: IAction<T1>.Do(T1)
  nameWithType.vb: IAction(Of T1).Do(T1)
- uid: Towel.IAction`1.Do*
  name: Do
  href: api/Towel.IAction-1.html#Towel_IAction_1_Do_
  commentId: Overload:Towel.IAction`1.Do
  isSpec: "True"
  fullName: Towel.IAction<T1>.Do
  fullName.vb: Towel.IAction(Of T1).Do
  nameWithType: IAction<T1>.Do
  nameWithType.vb: IAction(Of T1).Do
- uid: Towel.IAction`2
  name: IAction<T1, T2>
  href: api/Towel.IAction-2.html
  commentId: T:Towel.IAction`2
  name.vb: IAction(Of T1, T2)
  fullName: Towel.IAction<T1, T2>
  fullName.vb: Towel.IAction(Of T1, T2)
  nameWithType: IAction<T1, T2>
  nameWithType.vb: IAction(Of T1, T2)
- uid: Towel.IAction`2.Do(`0,`1)
  name: Do(T1, T2)
  href: api/Towel.IAction-2.html#Towel_IAction_2_Do__0__1_
  commentId: M:Towel.IAction`2.Do(`0,`1)
  fullName: Towel.IAction<T1, T2>.Do(T1, T2)
  fullName.vb: Towel.IAction(Of T1, T2).Do(T1, T2)
  nameWithType: IAction<T1, T2>.Do(T1, T2)
  nameWithType.vb: IAction(Of T1, T2).Do(T1, T2)
- uid: Towel.IAction`2.Do*
  name: Do
  href: api/Towel.IAction-2.html#Towel_IAction_2_Do_
  commentId: Overload:Towel.IAction`2.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2>.Do
  fullName.vb: Towel.IAction(Of T1, T2).Do
  nameWithType: IAction<T1, T2>.Do
  nameWithType.vb: IAction(Of T1, T2).Do
- uid: Towel.IAction`3
  name: IAction<T1, T2, T3>
  href: api/Towel.IAction-3.html
  commentId: T:Towel.IAction`3
  name.vb: IAction(Of T1, T2, T3)
  fullName: Towel.IAction<T1, T2, T3>
  fullName.vb: Towel.IAction(Of T1, T2, T3)
  nameWithType: IAction<T1, T2, T3>
  nameWithType.vb: IAction(Of T1, T2, T3)
- uid: Towel.IAction`3.Do(`0,`1,`2)
  name: Do(T1, T2, T3)
  href: api/Towel.IAction-3.html#Towel_IAction_3_Do__0__1__2_
  commentId: M:Towel.IAction`3.Do(`0,`1,`2)
  fullName: Towel.IAction<T1, T2, T3>.Do(T1, T2, T3)
  fullName.vb: Towel.IAction(Of T1, T2, T3).Do(T1, T2, T3)
  nameWithType: IAction<T1, T2, T3>.Do(T1, T2, T3)
  nameWithType.vb: IAction(Of T1, T2, T3).Do(T1, T2, T3)
- uid: Towel.IAction`3.Do*
  name: Do
  href: api/Towel.IAction-3.html#Towel_IAction_3_Do_
  commentId: Overload:Towel.IAction`3.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2, T3>.Do
  fullName.vb: Towel.IAction(Of T1, T2, T3).Do
  nameWithType: IAction<T1, T2, T3>.Do
  nameWithType.vb: IAction(Of T1, T2, T3).Do
- uid: Towel.IAction`4
  name: IAction<T1, T2, T3, T4>
  href: api/Towel.IAction-4.html
  commentId: T:Towel.IAction`4
  name.vb: IAction(Of T1, T2, T3, T4)
  fullName: Towel.IAction<T1, T2, T3, T4>
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4)
  nameWithType: IAction<T1, T2, T3, T4>
  nameWithType.vb: IAction(Of T1, T2, T3, T4)
- uid: Towel.IAction`4.Do(`0,`1,`2,`3)
  name: Do(T1, T2, T3, T4)
  href: api/Towel.IAction-4.html#Towel_IAction_4_Do__0__1__2__3_
  commentId: M:Towel.IAction`4.Do(`0,`1,`2,`3)
  fullName: Towel.IAction<T1, T2, T3, T4>.Do(T1, T2, T3, T4)
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4).Do(T1, T2, T3, T4)
  nameWithType: IAction<T1, T2, T3, T4>.Do(T1, T2, T3, T4)
  nameWithType.vb: IAction(Of T1, T2, T3, T4).Do(T1, T2, T3, T4)
- uid: Towel.IAction`4.Do*
  name: Do
  href: api/Towel.IAction-4.html#Towel_IAction_4_Do_
  commentId: Overload:Towel.IAction`4.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2, T3, T4>.Do
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4).Do
  nameWithType: IAction<T1, T2, T3, T4>.Do
  nameWithType.vb: IAction(Of T1, T2, T3, T4).Do
- uid: Towel.IAction`5
  name: IAction<T1, T2, T3, T4, T5>
  href: api/Towel.IAction-5.html
  commentId: T:Towel.IAction`5
  name.vb: IAction(Of T1, T2, T3, T4, T5)
  fullName: Towel.IAction<T1, T2, T3, T4, T5>
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5)
  nameWithType: IAction<T1, T2, T3, T4, T5>
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5)
- uid: Towel.IAction`5.Do(`0,`1,`2,`3,`4)
  name: Do(T1, T2, T3, T4, T5)
  href: api/Towel.IAction-5.html#Towel_IAction_5_Do__0__1__2__3__4_
  commentId: M:Towel.IAction`5.Do(`0,`1,`2,`3,`4)
  fullName: Towel.IAction<T1, T2, T3, T4, T5>.Do(T1, T2, T3, T4, T5)
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5).Do(T1, T2, T3, T4, T5)
  nameWithType: IAction<T1, T2, T3, T4, T5>.Do(T1, T2, T3, T4, T5)
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5).Do(T1, T2, T3, T4, T5)
- uid: Towel.IAction`5.Do*
  name: Do
  href: api/Towel.IAction-5.html#Towel_IAction_5_Do_
  commentId: Overload:Towel.IAction`5.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2, T3, T4, T5>.Do
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5).Do
  nameWithType: IAction<T1, T2, T3, T4, T5>.Do
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5).Do
- uid: Towel.IAction`6
  name: IAction<T1, T2, T3, T4, T5, T6>
  href: api/Towel.IAction-6.html
  commentId: T:Towel.IAction`6
  name.vb: IAction(Of T1, T2, T3, T4, T5, T6)
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6>
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6)
  nameWithType: IAction<T1, T2, T3, T4, T5, T6>
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6)
- uid: Towel.IAction`6.Do(`0,`1,`2,`3,`4,`5)
  name: Do(T1, T2, T3, T4, T5, T6)
  href: api/Towel.IAction-6.html#Towel_IAction_6_Do__0__1__2__3__4__5_
  commentId: M:Towel.IAction`6.Do(`0,`1,`2,`3,`4,`5)
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6>.Do(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6).Do(T1, T2, T3, T4, T5, T6)
  nameWithType: IAction<T1, T2, T3, T4, T5, T6>.Do(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6).Do(T1, T2, T3, T4, T5, T6)
- uid: Towel.IAction`6.Do*
  name: Do
  href: api/Towel.IAction-6.html#Towel_IAction_6_Do_
  commentId: Overload:Towel.IAction`6.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6>.Do
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6).Do
  nameWithType: IAction<T1, T2, T3, T4, T5, T6>.Do
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6).Do
- uid: Towel.IAction`7
  name: IAction<T1, T2, T3, T4, T5, T6, T7>
  href: api/Towel.IAction-7.html
  commentId: T:Towel.IAction`7
  name.vb: IAction(Of T1, T2, T3, T4, T5, T6, T7)
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6, T7>
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6, T7)
  nameWithType: IAction<T1, T2, T3, T4, T5, T6, T7>
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.IAction`7.Do(`0,`1,`2,`3,`4,`5,`6)
  name: Do(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.IAction-7.html#Towel_IAction_7_Do__0__1__2__3__4__5__6_
  commentId: M:Towel.IAction`7.Do(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6, T7>.Do(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6, T7).Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: IAction<T1, T2, T3, T4, T5, T6, T7>.Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6, T7).Do(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.IAction`7.Do*
  name: Do
  href: api/Towel.IAction-7.html#Towel_IAction_7_Do_
  commentId: Overload:Towel.IAction`7.Do
  isSpec: "True"
  fullName: Towel.IAction<T1, T2, T3, T4, T5, T6, T7>.Do
  fullName.vb: Towel.IAction(Of T1, T2, T3, T4, T5, T6, T7).Do
  nameWithType: IAction<T1, T2, T3, T4, T5, T6, T7>.Do
  nameWithType.vb: IAction(Of T1, T2, T3, T4, T5, T6, T7).Do
- uid: Towel.IFunc`1
  name: IFunc<TResult>
  href: api/Towel.IFunc-1.html
  commentId: T:Towel.IFunc`1
  name.vb: IFunc(Of TResult)
  fullName: Towel.IFunc<TResult>
  fullName.vb: Towel.IFunc(Of TResult)
  nameWithType: IFunc<TResult>
  nameWithType.vb: IFunc(Of TResult)
- uid: Towel.IFunc`1.Do
  name: Do()
  href: api/Towel.IFunc-1.html#Towel_IFunc_1_Do
  commentId: M:Towel.IFunc`1.Do
  fullName: Towel.IFunc<TResult>.Do()
  fullName.vb: Towel.IFunc(Of TResult).Do()
  nameWithType: IFunc<TResult>.Do()
  nameWithType.vb: IFunc(Of TResult).Do()
- uid: Towel.IFunc`1.Do*
  name: Do
  href: api/Towel.IFunc-1.html#Towel_IFunc_1_Do_
  commentId: Overload:Towel.IFunc`1.Do
  isSpec: "True"
  fullName: Towel.IFunc<TResult>.Do
  fullName.vb: Towel.IFunc(Of TResult).Do
  nameWithType: IFunc<TResult>.Do
  nameWithType.vb: IFunc(Of TResult).Do
- uid: Towel.IFunc`2
  name: IFunc<T1, TResult>
  href: api/Towel.IFunc-2.html
  commentId: T:Towel.IFunc`2
  name.vb: IFunc(Of T1, TResult)
  fullName: Towel.IFunc<T1, TResult>
  fullName.vb: Towel.IFunc(Of T1, TResult)
  nameWithType: IFunc<T1, TResult>
  nameWithType.vb: IFunc(Of T1, TResult)
- uid: Towel.IFunc`2.Do(`0)
  name: Do(T1)
  href: api/Towel.IFunc-2.html#Towel_IFunc_2_Do__0_
  commentId: M:Towel.IFunc`2.Do(`0)
  fullName: Towel.IFunc<T1, TResult>.Do(T1)
  fullName.vb: Towel.IFunc(Of T1, TResult).Do(T1)
  nameWithType: IFunc<T1, TResult>.Do(T1)
  nameWithType.vb: IFunc(Of T1, TResult).Do(T1)
- uid: Towel.IFunc`2.Do*
  name: Do
  href: api/Towel.IFunc-2.html#Towel_IFunc_2_Do_
  commentId: Overload:Towel.IFunc`2.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, TResult).Do
  nameWithType: IFunc<T1, TResult>.Do
  nameWithType.vb: IFunc(Of T1, TResult).Do
- uid: Towel.IFunc`3
  name: IFunc<T1, T2, TResult>
  href: api/Towel.IFunc-3.html
  commentId: T:Towel.IFunc`3
  name.vb: IFunc(Of T1, T2, TResult)
  fullName: Towel.IFunc<T1, T2, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, TResult)
  nameWithType: IFunc<T1, T2, TResult>
  nameWithType.vb: IFunc(Of T1, T2, TResult)
- uid: Towel.IFunc`3.Do(`0,`1)
  name: Do(T1, T2)
  href: api/Towel.IFunc-3.html#Towel_IFunc_3_Do__0__1_
  commentId: M:Towel.IFunc`3.Do(`0,`1)
  fullName: Towel.IFunc<T1, T2, TResult>.Do(T1, T2)
  fullName.vb: Towel.IFunc(Of T1, T2, TResult).Do(T1, T2)
  nameWithType: IFunc<T1, T2, TResult>.Do(T1, T2)
  nameWithType.vb: IFunc(Of T1, T2, TResult).Do(T1, T2)
- uid: Towel.IFunc`3.Do*
  name: Do
  href: api/Towel.IFunc-3.html#Towel_IFunc_3_Do_
  commentId: Overload:Towel.IFunc`3.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, TResult).Do
  nameWithType: IFunc<T1, T2, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, TResult).Do
- uid: Towel.IFunc`4
  name: IFunc<T1, T2, T3, TResult>
  href: api/Towel.IFunc-4.html
  commentId: T:Towel.IFunc`4
  name.vb: IFunc(Of T1, T2, T3, TResult)
  fullName: Towel.IFunc<T1, T2, T3, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, T3, TResult)
  nameWithType: IFunc<T1, T2, T3, TResult>
  nameWithType.vb: IFunc(Of T1, T2, T3, TResult)
- uid: Towel.IFunc`4.Do(`0,`1,`2)
  name: Do(T1, T2, T3)
  href: api/Towel.IFunc-4.html#Towel_IFunc_4_Do__0__1__2_
  commentId: M:Towel.IFunc`4.Do(`0,`1,`2)
  fullName: Towel.IFunc<T1, T2, T3, TResult>.Do(T1, T2, T3)
  fullName.vb: Towel.IFunc(Of T1, T2, T3, TResult).Do(T1, T2, T3)
  nameWithType: IFunc<T1, T2, T3, TResult>.Do(T1, T2, T3)
  nameWithType.vb: IFunc(Of T1, T2, T3, TResult).Do(T1, T2, T3)
- uid: Towel.IFunc`4.Do*
  name: Do
  href: api/Towel.IFunc-4.html#Towel_IFunc_4_Do_
  commentId: Overload:Towel.IFunc`4.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, T3, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, T3, TResult).Do
  nameWithType: IFunc<T1, T2, T3, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, T3, TResult).Do
- uid: Towel.IFunc`5
  name: IFunc<T1, T2, T3, T4, TResult>
  href: api/Towel.IFunc-5.html
  commentId: T:Towel.IFunc`5
  name.vb: IFunc(Of T1, T2, T3, T4, TResult)
  fullName: Towel.IFunc<T1, T2, T3, T4, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, TResult)
  nameWithType: IFunc<T1, T2, T3, T4, TResult>
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, TResult)
- uid: Towel.IFunc`5.Do(`0,`1,`2,`3)
  name: Do(T1, T2, T3, T4)
  href: api/Towel.IFunc-5.html#Towel_IFunc_5_Do__0__1__2__3_
  commentId: M:Towel.IFunc`5.Do(`0,`1,`2,`3)
  fullName: Towel.IFunc<T1, T2, T3, T4, TResult>.Do(T1, T2, T3, T4)
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, TResult).Do(T1, T2, T3, T4)
  nameWithType: IFunc<T1, T2, T3, T4, TResult>.Do(T1, T2, T3, T4)
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, TResult).Do(T1, T2, T3, T4)
- uid: Towel.IFunc`5.Do*
  name: Do
  href: api/Towel.IFunc-5.html#Towel_IFunc_5_Do_
  commentId: Overload:Towel.IFunc`5.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, T3, T4, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, TResult).Do
  nameWithType: IFunc<T1, T2, T3, T4, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, TResult).Do
- uid: Towel.IFunc`6
  name: IFunc<T1, T2, T3, T4, T5, TResult>
  href: api/Towel.IFunc-6.html
  commentId: T:Towel.IFunc`6
  name.vb: IFunc(Of T1, T2, T3, T4, T5, TResult)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, TResult)
  nameWithType: IFunc<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, TResult)
- uid: Towel.IFunc`6.Do(`0,`1,`2,`3,`4)
  name: Do(T1, T2, T3, T4, T5)
  href: api/Towel.IFunc-6.html#Towel_IFunc_6_Do__0__1__2__3__4_
  commentId: M:Towel.IFunc`6.Do(`0,`1,`2,`3,`4)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, TResult>.Do(T1, T2, T3, T4, T5)
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, TResult).Do(T1, T2, T3, T4, T5)
  nameWithType: IFunc<T1, T2, T3, T4, T5, TResult>.Do(T1, T2, T3, T4, T5)
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, TResult).Do(T1, T2, T3, T4, T5)
- uid: Towel.IFunc`6.Do*
  name: Do
  href: api/Towel.IFunc-6.html#Towel_IFunc_6_Do_
  commentId: Overload:Towel.IFunc`6.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, TResult).Do
  nameWithType: IFunc<T1, T2, T3, T4, T5, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, TResult).Do
- uid: Towel.IFunc`7
  name: IFunc<T1, T2, T3, T4, T5, T6, TResult>
  href: api/Towel.IFunc-7.html
  commentId: T:Towel.IFunc`7
  name.vb: IFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, TResult)
- uid: Towel.IFunc`7.Do(`0,`1,`2,`3,`4,`5)
  name: Do(T1, T2, T3, T4, T5, T6)
  href: api/Towel.IFunc-7.html#Towel_IFunc_7_Do__0__1__2__3__4__5_
  commentId: M:Towel.IFunc`7.Do(`0,`1,`2,`3,`4,`5)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, TResult>.Do(T1, T2, T3, T4, T5, T6)
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, TResult).Do(T1, T2, T3, T4, T5, T6)
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, TResult>.Do(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, TResult).Do(T1, T2, T3, T4, T5, T6)
- uid: Towel.IFunc`7.Do*
  name: Do
  href: api/Towel.IFunc-7.html#Towel_IFunc_7_Do_
  commentId: Overload:Towel.IFunc`7.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, TResult).Do
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, TResult).Do
- uid: Towel.IFunc`8
  name: IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  href: api/Towel.IFunc-8.html
  commentId: T:Towel.IFunc`8
  name.vb: IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
- uid: Towel.IFunc`8.Do(`0,`1,`2,`3,`4,`5,`6)
  name: Do(T1, T2, T3, T4, T5, T6, T7)
  href: api/Towel.IFunc-8.html#Towel_IFunc_8_Do__0__1__2__3__4__5__6_
  commentId: M:Towel.IFunc`8.Do(`0,`1,`2,`3,`4,`5,`6)
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Do(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Do(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do(T1, T2, T3, T4, T5, T6, T7)
- uid: Towel.IFunc`8.Do*
  name: Do
  href: api/Towel.IFunc-8.html#Towel_IFunc_8_Do_
  commentId: Overload:Towel.IFunc`8.Do
  isSpec: "True"
  fullName: Towel.IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Do
  fullName.vb: Towel.IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do
  nameWithType: IFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Do
  nameWithType.vb: IFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Do
- uid: Towel.InequalitySyntaxException
  name: InequalitySyntaxException
  href: api/Towel.InequalitySyntaxException.html
  commentId: T:Towel.InequalitySyntaxException
  fullName: Towel.InequalitySyntaxException
  nameWithType: InequalitySyntaxException
- uid: Towel.InequalitySyntaxException.#ctor
  name: InequalitySyntaxException()
  href: api/Towel.InequalitySyntaxException.html#Towel_InequalitySyntaxException__ctor
  commentId: M:Towel.InequalitySyntaxException.#ctor
  fullName: Towel.InequalitySyntaxException.InequalitySyntaxException()
  nameWithType: InequalitySyntaxException.InequalitySyntaxException()
- uid: Towel.InequalitySyntaxException.#ctor(System.String)
  name: InequalitySyntaxException(String)
  href: api/Towel.InequalitySyntaxException.html#Towel_InequalitySyntaxException__ctor_System_String_
  commentId: M:Towel.InequalitySyntaxException.#ctor(System.String)
  fullName: Towel.InequalitySyntaxException.InequalitySyntaxException(System.String)
  nameWithType: InequalitySyntaxException.InequalitySyntaxException(String)
- uid: Towel.InequalitySyntaxException.#ctor(System.String,Exception)
  name: InequalitySyntaxException(String, Exception)
  href: api/Towel.InequalitySyntaxException.html#Towel_InequalitySyntaxException__ctor_System_String_Exception_
  commentId: M:Towel.InequalitySyntaxException.#ctor(System.String,Exception)
  fullName: Towel.InequalitySyntaxException.InequalitySyntaxException(System.String, Exception)
  nameWithType: InequalitySyntaxException.InequalitySyntaxException(String, Exception)
- uid: Towel.InequalitySyntaxException.#ctor*
  name: InequalitySyntaxException
  href: api/Towel.InequalitySyntaxException.html#Towel_InequalitySyntaxException__ctor_
  commentId: Overload:Towel.InequalitySyntaxException.#ctor
  isSpec: "True"
  fullName: Towel.InequalitySyntaxException.InequalitySyntaxException
  nameWithType: InequalitySyntaxException.InequalitySyntaxException
- uid: Towel.IStepRef`1
  name: IStepRef<T>
  href: api/Towel.IStepRef-1.html
  commentId: T:Towel.IStepRef`1
  name.vb: IStepRef(Of T)
  fullName: Towel.IStepRef<T>
  fullName.vb: Towel.IStepRef(Of T)
  nameWithType: IStepRef<T>
  nameWithType.vb: IStepRef(Of T)
- uid: Towel.IStepRef`1.Do(`0@)
  name: Do(ref T)
  href: api/Towel.IStepRef-1.html#Towel_IStepRef_1_Do__0__
  commentId: M:Towel.IStepRef`1.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.IStepRef<T>.Do(ref T)
  fullName.vb: Towel.IStepRef(Of T).Do(ByRef T)
  nameWithType: IStepRef<T>.Do(ref T)
  nameWithType.vb: IStepRef(Of T).Do(ByRef T)
- uid: Towel.IStepRef`1.Do*
  name: Do
  href: api/Towel.IStepRef-1.html#Towel_IStepRef_1_Do_
  commentId: Overload:Towel.IStepRef`1.Do
  isSpec: "True"
  fullName: Towel.IStepRef<T>.Do
  fullName.vb: Towel.IStepRef(Of T).Do
  nameWithType: IStepRef<T>.Do
  nameWithType.vb: IStepRef(Of T).Do
- uid: Towel.IStepRefBreak`1
  name: IStepRefBreak<T>
  href: api/Towel.IStepRefBreak-1.html
  commentId: T:Towel.IStepRefBreak`1
  name.vb: IStepRefBreak(Of T)
  fullName: Towel.IStepRefBreak<T>
  fullName.vb: Towel.IStepRefBreak(Of T)
  nameWithType: IStepRefBreak<T>
  nameWithType.vb: IStepRefBreak(Of T)
- uid: Towel.IStepRefBreak`1.Do(`0@)
  name: Do(ref T)
  href: api/Towel.IStepRefBreak-1.html#Towel_IStepRefBreak_1_Do__0__
  commentId: M:Towel.IStepRefBreak`1.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.IStepRefBreak<T>.Do(ref T)
  fullName.vb: Towel.IStepRefBreak(Of T).Do(ByRef T)
  nameWithType: IStepRefBreak<T>.Do(ref T)
  nameWithType.vb: IStepRefBreak(Of T).Do(ByRef T)
- uid: Towel.IStepRefBreak`1.Do*
  name: Do
  href: api/Towel.IStepRefBreak-1.html#Towel_IStepRefBreak_1_Do_
  commentId: Overload:Towel.IStepRefBreak`1.Do
  isSpec: "True"
  fullName: Towel.IStepRefBreak<T>.Do
  fullName.vb: Towel.IStepRefBreak(Of T).Do
  nameWithType: IStepRefBreak<T>.Do
  nameWithType.vb: IStepRefBreak(Of T).Do
- uid: Towel.Mathematics
  name: Towel.Mathematics
  href: api/Towel.Mathematics.html
  commentId: N:Towel.Mathematics
  fullName: Towel.Mathematics
  nameWithType: Towel.Mathematics
- uid: Towel.Mathematics.Fraction`1
  name: Fraction<T>
  href: api/Towel.Mathematics.Fraction-1.html
  commentId: T:Towel.Mathematics.Fraction`1
  name.vb: Fraction(Of T)
  fullName: Towel.Mathematics.Fraction<T>
  fullName.vb: Towel.Mathematics.Fraction(Of T)
  nameWithType: Fraction<T>
  nameWithType.vb: Fraction(Of T)
- uid: Towel.Mathematics.Fraction`1.#ctor(`0)
  name: Fraction(T)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1__ctor__0_
  commentId: M:Towel.Mathematics.Fraction`1.#ctor(`0)
  fullName: Towel.Mathematics.Fraction<T>.Fraction(T)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Fraction(T)
  nameWithType: Fraction<T>.Fraction(T)
  nameWithType.vb: Fraction(Of T).Fraction(T)
- uid: Towel.Mathematics.Fraction`1.#ctor(`0,`0)
  name: Fraction(T, T)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1__ctor__0__0_
  commentId: M:Towel.Mathematics.Fraction`1.#ctor(`0,`0)
  fullName: Towel.Mathematics.Fraction<T>.Fraction(T, T)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Fraction(T, T)
  nameWithType: Fraction<T>.Fraction(T, T)
  nameWithType.vb: Fraction(Of T).Fraction(T, T)
- uid: Towel.Mathematics.Fraction`1.#ctor*
  name: Fraction
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1__ctor_
  commentId: Overload:Towel.Mathematics.Fraction`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Fraction
  fullName.vb: Towel.Mathematics.Fraction(Of T).Fraction
  nameWithType: Fraction<T>.Fraction
  nameWithType.vb: Fraction(Of T).Fraction
- uid: Towel.Mathematics.Fraction`1.Add(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Add(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Add_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Add(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Add(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Add(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Add(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Add(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Add(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Add*
  name: Add
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Add_
  commentId: Overload:Towel.Mathematics.Fraction`1.Add
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Add
  fullName.vb: Towel.Mathematics.Fraction(Of T).Add
  nameWithType: Fraction<T>.Add
  nameWithType.vb: Fraction(Of T).Add
- uid: Towel.Mathematics.Fraction`1.Compare(Towel.Mathematics.Fraction{`0})
  name: Compare(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Compare_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Compare(Towel.Mathematics.Fraction{`0})
  name.vb: Compare(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Compare(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Compare(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Compare(Fraction<T>)
  nameWithType.vb: Fraction(Of T).Compare(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Compare(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Compare(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Compare_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Compare(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Compare(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Compare(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Compare(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Compare(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Compare(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Compare*
  name: Compare
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Compare_
  commentId: Overload:Towel.Mathematics.Fraction`1.Compare
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Compare
  fullName.vb: Towel.Mathematics.Fraction(Of T).Compare
  nameWithType: Fraction<T>.Compare
  nameWithType.vb: Fraction(Of T).Compare
- uid: Towel.Mathematics.Fraction`1.Denominator
  name: Denominator
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Denominator
  commentId: P:Towel.Mathematics.Fraction`1.Denominator
  fullName: Towel.Mathematics.Fraction<T>.Denominator
  fullName.vb: Towel.Mathematics.Fraction(Of T).Denominator
  nameWithType: Fraction<T>.Denominator
  nameWithType.vb: Fraction(Of T).Denominator
- uid: Towel.Mathematics.Fraction`1.Denominator*
  name: Denominator
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Denominator_
  commentId: Overload:Towel.Mathematics.Fraction`1.Denominator
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Denominator
  fullName.vb: Towel.Mathematics.Fraction(Of T).Denominator
  nameWithType: Fraction<T>.Denominator
  nameWithType.vb: Fraction(Of T).Denominator
- uid: Towel.Mathematics.Fraction`1.Divide(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Divide(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Divide_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Divide(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Divide(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Divide(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Divide(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Divide(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Divide(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Divide*
  name: Divide
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Divide_
  commentId: Overload:Towel.Mathematics.Fraction`1.Divide
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Divide
  fullName.vb: Towel.Mathematics.Fraction(Of T).Divide
  nameWithType: Fraction<T>.Divide
  nameWithType.vb: Fraction(Of T).Divide
- uid: Towel.Mathematics.Fraction`1.Equality(Towel.Mathematics.Fraction{`0})
  name: Equality(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Equality_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Equality(Towel.Mathematics.Fraction{`0})
  name.vb: Equality(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Equality(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equality(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Equality(Fraction<T>)
  nameWithType.vb: Fraction(Of T).Equality(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Equality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Equality(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Equality_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Equality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Equality(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Equality(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equality(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Equality(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Equality(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Equality*
  name: Equality
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Equality_
  commentId: Overload:Towel.Mathematics.Fraction`1.Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Equality
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equality
  nameWithType: Fraction<T>.Equality
  nameWithType.vb: Fraction(Of T).Equality
- uid: Towel.Mathematics.Fraction`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Fraction`1.Equals(System.Object)
  fullName: Towel.Mathematics.Fraction<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equals(System.Object)
  nameWithType: Fraction<T>.Equals(Object)
  nameWithType.vb: Fraction(Of T).Equals(Object)
- uid: Towel.Mathematics.Fraction`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Equals_
  commentId: Overload:Towel.Mathematics.Fraction`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Equals
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equals
  nameWithType: Fraction<T>.Equals
  nameWithType.vb: Fraction(Of T).Equals
- uid: Towel.Mathematics.Fraction`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GetHashCode
  commentId: M:Towel.Mathematics.Fraction`1.GetHashCode
  fullName: Towel.Mathematics.Fraction<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Fraction(Of T).GetHashCode()
  nameWithType: Fraction<T>.GetHashCode()
  nameWithType.vb: Fraction(Of T).GetHashCode()
- uid: Towel.Mathematics.Fraction`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Fraction`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Fraction(Of T).GetHashCode
  nameWithType: Fraction<T>.GetHashCode
  nameWithType.vb: Fraction(Of T).GetHashCode
- uid: Towel.Mathematics.Fraction`1.GreaterThan(Towel.Mathematics.Fraction{`0})
  name: GreaterThan(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThan_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.GreaterThan(Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThan(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThan(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThan(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThan(Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThan(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.GreaterThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: GreaterThan(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThan_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.GreaterThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThan(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThan(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThan(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThan(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThan(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThan_
  commentId: Overload:Towel.Mathematics.Fraction`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.GreaterThan
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThan
  nameWithType: Fraction<T>.GreaterThan
  nameWithType.vb: Fraction(Of T).GreaterThan
- uid: Towel.Mathematics.Fraction`1.GreaterThanOrEqual(Towel.Mathematics.Fraction{`0})
  name: GreaterThanOrEqual(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThanOrEqual_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.GreaterThanOrEqual(Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThanOrEqual(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThanOrEqual(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThanOrEqual(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThanOrEqual(Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThanOrEqual(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.GreaterThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: GreaterThanOrEqual(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThanOrEqual_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.GreaterThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThanOrEqual(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThanOrEqual(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThanOrEqual(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThanOrEqual(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThanOrEqual(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Mathematics.Fraction`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.GreaterThanOrEqual
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThanOrEqual
  nameWithType: Fraction<T>.GreaterThanOrEqual
  nameWithType.vb: Fraction(Of T).GreaterThanOrEqual
- uid: Towel.Mathematics.Fraction`1.LessThan(Towel.Mathematics.Fraction{`0})
  name: LessThan(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThan_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.LessThan(Towel.Mathematics.Fraction{`0})
  name.vb: LessThan(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThan(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThan(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThan(Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThan(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.LessThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: LessThan(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThan_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.LessThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: LessThan(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThan(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThan(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThan(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThan(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.LessThan*
  name: LessThan
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThan_
  commentId: Overload:Towel.Mathematics.Fraction`1.LessThan
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.LessThan
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThan
  nameWithType: Fraction<T>.LessThan
  nameWithType.vb: Fraction(Of T).LessThan
- uid: Towel.Mathematics.Fraction`1.LessThanOrEqual(Towel.Mathematics.Fraction{`0})
  name: LessThanOrEqual(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThanOrEqual_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.LessThanOrEqual(Towel.Mathematics.Fraction{`0})
  name.vb: LessThanOrEqual(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThanOrEqual(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThanOrEqual(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThanOrEqual(Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThanOrEqual(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.LessThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: LessThanOrEqual(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThanOrEqual_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.LessThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: LessThanOrEqual(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThanOrEqual(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThanOrEqual(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThanOrEqual(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThanOrEqual(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_LessThanOrEqual_
  commentId: Overload:Towel.Mathematics.Fraction`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.LessThanOrEqual
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThanOrEqual
  nameWithType: Fraction<T>.LessThanOrEqual
  nameWithType.vb: Fraction(Of T).LessThanOrEqual
- uid: Towel.Mathematics.Fraction`1.Multiply(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Multiply(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Multiply_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Multiply(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Multiply(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Multiply(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Multiply(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Multiply(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Multiply(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Multiply_
  commentId: Overload:Towel.Mathematics.Fraction`1.Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Multiply
  fullName.vb: Towel.Mathematics.Fraction(Of T).Multiply
  nameWithType: Fraction<T>.Multiply
  nameWithType.vb: Fraction(Of T).Multiply
- uid: Towel.Mathematics.Fraction`1.Negate(Towel.Mathematics.Fraction{`0})
  name: Negate(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Negate_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Negate(Towel.Mathematics.Fraction{`0})
  name.vb: Negate(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Negate(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Negate(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Negate(Fraction<T>)
  nameWithType.vb: Fraction(Of T).Negate(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Negate*
  name: Negate
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Negate_
  commentId: Overload:Towel.Mathematics.Fraction`1.Negate
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Negate
  fullName.vb: Towel.Mathematics.Fraction(Of T).Negate
  nameWithType: Fraction<T>.Negate
  nameWithType.vb: Fraction(Of T).Negate
- uid: Towel.Mathematics.Fraction`1.NotEqual(Towel.Mathematics.Fraction{`0})
  name: NotEqual(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_NotEqual_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.NotEqual(Towel.Mathematics.Fraction{`0})
  name.vb: NotEqual(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.NotEqual(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).NotEqual(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.NotEqual(Fraction<T>)
  nameWithType.vb: Fraction(Of T).NotEqual(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.NotEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: NotEqual(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_NotEqual_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.NotEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: NotEqual(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.NotEqual(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).NotEqual(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.NotEqual(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).NotEqual(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.NotEqual*
  name: NotEqual
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_NotEqual_
  commentId: Overload:Towel.Mathematics.Fraction`1.NotEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.NotEqual
  fullName.vb: Towel.Mathematics.Fraction(Of T).NotEqual
  nameWithType: Fraction<T>.NotEqual
  nameWithType.vb: Fraction(Of T).NotEqual
- uid: Towel.Mathematics.Fraction`1.Numerator
  name: Numerator
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Numerator
  commentId: P:Towel.Mathematics.Fraction`1.Numerator
  fullName: Towel.Mathematics.Fraction<T>.Numerator
  fullName.vb: Towel.Mathematics.Fraction(Of T).Numerator
  nameWithType: Fraction<T>.Numerator
  nameWithType.vb: Fraction(Of T).Numerator
- uid: Towel.Mathematics.Fraction`1.Numerator*
  name: Numerator
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Numerator_
  commentId: Overload:Towel.Mathematics.Fraction`1.Numerator
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Numerator
  fullName.vb: Towel.Mathematics.Fraction(Of T).Numerator
  nameWithType: Fraction<T>.Numerator
  nameWithType.vb: Fraction(Of T).Numerator
- uid: Towel.Mathematics.Fraction`1.op_Addition(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Addition(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Addition_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Addition(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Addition(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Addition(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Addition(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Addition(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Addition(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Addition*
  name: Addition
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Addition_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Addition
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Addition
  fullName.vb: Towel.Mathematics.Fraction(Of T).Addition
  nameWithType: Fraction<T>.Addition
  nameWithType.vb: Fraction(Of T).Addition
- uid: Towel.Mathematics.Fraction`1.op_Division(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Division(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Division_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Division(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Division(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Division(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Division(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Division(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Division(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Division*
  name: Division
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Division_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Division
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Division
  fullName.vb: Towel.Mathematics.Fraction(Of T).Division
  nameWithType: Fraction<T>.Division
  nameWithType.vb: Fraction(Of T).Division
- uid: Towel.Mathematics.Fraction`1.op_Equality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Equality(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Equality_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Equality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Equality(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Equality(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equality(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Equality(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Equality(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Equality*
  name: Equality
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Equality_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Equality
  fullName.vb: Towel.Mathematics.Fraction(Of T).Equality
  nameWithType: Fraction<T>.Equality
  nameWithType.vb: Fraction(Of T).Equality
- uid: Towel.Mathematics.Fraction`1.op_GreaterThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: GreaterThan(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_GreaterThan_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_GreaterThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThan(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThan(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThan(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThan(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThan(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_GreaterThan_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.GreaterThan
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThan
  nameWithType: Fraction<T>.GreaterThan
  nameWithType.vb: Fraction(Of T).GreaterThan
- uid: Towel.Mathematics.Fraction`1.op_GreaterThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: GreaterThanOrEqual(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_GreaterThanOrEqual_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_GreaterThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: GreaterThanOrEqual(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.GreaterThanOrEqual(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThanOrEqual(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.GreaterThanOrEqual(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).GreaterThanOrEqual(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.GreaterThanOrEqual
  fullName.vb: Towel.Mathematics.Fraction(Of T).GreaterThanOrEqual
  nameWithType: Fraction<T>.GreaterThanOrEqual
  nameWithType.vb: Fraction(Of T).GreaterThanOrEqual
- uid: Towel.Mathematics.Fraction`1.op_Implicit(`0)~Towel.Mathematics.Fraction{`0}
  name: Implicit(T to Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Implicit__0__Towel_Mathematics_Fraction__0_
  commentId: M:Towel.Mathematics.Fraction`1.op_Implicit(`0)~Towel.Mathematics.Fraction{`0}
  name.vb: Widening(T to Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Implicit(T to Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Widening(T to Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Implicit(T to Fraction<T>)
  nameWithType.vb: Fraction(Of T).Widening(T to Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Implicit*
  name: Implicit
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Implicit_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Mathematics.Fraction<T>.Implicit
  fullName.vb: Towel.Mathematics.Fraction(Of T).Widening
  nameWithType: Fraction<T>.Implicit
  nameWithType.vb: Fraction(Of T).Widening
- uid: Towel.Mathematics.Fraction`1.op_Inequality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Inequality(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Inequality_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Inequality(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Inequality(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Inequality(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Inequality(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Inequality(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Inequality(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Inequality*
  name: Inequality
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Inequality_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Inequality
  fullName.vb: Towel.Mathematics.Fraction(Of T).Inequality
  nameWithType: Fraction<T>.Inequality
  nameWithType.vb: Fraction(Of T).Inequality
- uid: Towel.Mathematics.Fraction`1.op_LessThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: LessThan(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_LessThan_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_LessThan(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: LessThan(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThan(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThan(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThan(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThan(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_LessThan*
  name: LessThan
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_LessThan_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.LessThan
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThan
  nameWithType: Fraction<T>.LessThan
  nameWithType.vb: Fraction(Of T).LessThan
- uid: Towel.Mathematics.Fraction`1.op_LessThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: LessThanOrEqual(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_LessThanOrEqual_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_LessThanOrEqual(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: LessThanOrEqual(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.LessThanOrEqual(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThanOrEqual(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.LessThanOrEqual(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).LessThanOrEqual(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.LessThanOrEqual
  fullName.vb: Towel.Mathematics.Fraction(Of T).LessThanOrEqual
  nameWithType: Fraction<T>.LessThanOrEqual
  nameWithType.vb: Fraction(Of T).LessThanOrEqual
- uid: Towel.Mathematics.Fraction`1.op_Modulus(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Modulus(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Modulus_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Modulus(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Modulus(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Modulus(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Modulus(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Modulus(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Modulus(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Modulus*
  name: Modulus
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Modulus_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Modulus
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Modulus
  fullName.vb: Towel.Mathematics.Fraction(Of T).Modulus
  nameWithType: Fraction<T>.Modulus
  nameWithType.vb: Fraction(Of T).Modulus
- uid: Towel.Mathematics.Fraction`1.op_Multiply(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Multiply(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Multiply_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Multiply(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Multiply(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Multiply(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Multiply(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Multiply(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Multiply(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Multiply_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Multiply
  fullName.vb: Towel.Mathematics.Fraction(Of T).Multiply
  nameWithType: Fraction<T>.Multiply
  nameWithType.vb: Fraction(Of T).Multiply
- uid: Towel.Mathematics.Fraction`1.op_Subtraction(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Subtraction(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Subtraction_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_Subtraction(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Subtraction(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Subtraction(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Subtraction(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Subtraction(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Subtraction(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_Subtraction_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Subtraction
  fullName.vb: Towel.Mathematics.Fraction(Of T).Subtraction
  nameWithType: Fraction<T>.Subtraction
  nameWithType.vb: Fraction(Of T).Subtraction
- uid: Towel.Mathematics.Fraction`1.op_UnaryNegation(Towel.Mathematics.Fraction{`0})
  name: UnaryNegation(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_UnaryNegation_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.op_UnaryNegation(Towel.Mathematics.Fraction{`0})
  name.vb: UnaryNegation(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.UnaryNegation(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).UnaryNegation(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.UnaryNegation(Fraction<T>)
  nameWithType.vb: Fraction(Of T).UnaryNegation(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.op_UnaryNegation*
  name: UnaryNegation
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_op_UnaryNegation_
  commentId: Overload:Towel.Mathematics.Fraction`1.op_UnaryNegation
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.UnaryNegation
  fullName.vb: Towel.Mathematics.Fraction(Of T).UnaryNegation
  nameWithType: Fraction<T>.UnaryNegation
  nameWithType.vb: Fraction(Of T).UnaryNegation
- uid: Towel.Mathematics.Fraction`1.Parse(System.String)
  name: Parse(String)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Parse_System_String_
  commentId: M:Towel.Mathematics.Fraction`1.Parse(System.String)
  fullName: Towel.Mathematics.Fraction<T>.Parse(System.String)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Parse(System.String)
  nameWithType: Fraction<T>.Parse(String)
  nameWithType.vb: Fraction(Of T).Parse(String)
- uid: Towel.Mathematics.Fraction`1.Parse*
  name: Parse
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Parse_
  commentId: Overload:Towel.Mathematics.Fraction`1.Parse
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Parse
  fullName.vb: Towel.Mathematics.Fraction(Of T).Parse
  nameWithType: Fraction<T>.Parse
  nameWithType.vb: Fraction(Of T).Parse
- uid: Towel.Mathematics.Fraction`1.Reduce
  name: Reduce()
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Reduce
  commentId: M:Towel.Mathematics.Fraction`1.Reduce
  fullName: Towel.Mathematics.Fraction<T>.Reduce()
  fullName.vb: Towel.Mathematics.Fraction(Of T).Reduce()
  nameWithType: Fraction<T>.Reduce()
  nameWithType.vb: Fraction(Of T).Reduce()
- uid: Towel.Mathematics.Fraction`1.Reduce(Towel.Mathematics.Fraction{`0})
  name: Reduce(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Reduce_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Reduce(Towel.Mathematics.Fraction{`0})
  name.vb: Reduce(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Reduce(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Reduce(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Reduce(Fraction<T>)
  nameWithType.vb: Fraction(Of T).Reduce(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Reduce*
  name: Reduce
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Reduce_
  commentId: Overload:Towel.Mathematics.Fraction`1.Reduce
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Reduce
  fullName.vb: Towel.Mathematics.Fraction(Of T).Reduce
  nameWithType: Fraction<T>.Reduce
  nameWithType.vb: Fraction(Of T).Reduce
- uid: Towel.Mathematics.Fraction`1.Remainder(Towel.Mathematics.Fraction{`0})
  name: Remainder(Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Remainder_Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Remainder(Towel.Mathematics.Fraction{`0})
  name.vb: Remainder(Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Remainder(Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Remainder(Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Remainder(Fraction<T>)
  nameWithType.vb: Fraction(Of T).Remainder(Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Remainder(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Remainder(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Remainder_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Remainder(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Remainder(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Remainder(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Remainder(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Remainder(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Remainder(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Remainder*
  name: Remainder
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Remainder_
  commentId: Overload:Towel.Mathematics.Fraction`1.Remainder
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Remainder
  fullName.vb: Towel.Mathematics.Fraction(Of T).Remainder
  nameWithType: Fraction<T>.Remainder
  nameWithType.vb: Fraction(Of T).Remainder
- uid: Towel.Mathematics.Fraction`1.Subtract(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name: Subtract(Fraction<T>, Fraction<T>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Subtract_Towel_Mathematics_Fraction__0__Towel_Mathematics_Fraction__0__
  commentId: M:Towel.Mathematics.Fraction`1.Subtract(Towel.Mathematics.Fraction{`0},Towel.Mathematics.Fraction{`0})
  name.vb: Subtract(Fraction(Of T), Fraction(Of T))
  fullName: Towel.Mathematics.Fraction<T>.Subtract(Towel.Mathematics.Fraction<T>, Towel.Mathematics.Fraction<T>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).Subtract(Towel.Mathematics.Fraction(Of T), Towel.Mathematics.Fraction(Of T))
  nameWithType: Fraction<T>.Subtract(Fraction<T>, Fraction<T>)
  nameWithType.vb: Fraction(Of T).Subtract(Fraction(Of T), Fraction(Of T))
- uid: Towel.Mathematics.Fraction`1.Subtract*
  name: Subtract
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_Subtract_
  commentId: Overload:Towel.Mathematics.Fraction`1.Subtract
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.Subtract
  fullName.vb: Towel.Mathematics.Fraction(Of T).Subtract
  nameWithType: Fraction<T>.Subtract
  nameWithType.vb: Fraction(Of T).Subtract
- uid: Towel.Mathematics.Fraction`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_ToString
  commentId: M:Towel.Mathematics.Fraction`1.ToString
  fullName: Towel.Mathematics.Fraction<T>.ToString()
  fullName.vb: Towel.Mathematics.Fraction(Of T).ToString()
  nameWithType: Fraction<T>.ToString()
  nameWithType.vb: Fraction(Of T).ToString()
- uid: Towel.Mathematics.Fraction`1.ToString(Towel.Mathematics.Fraction{`0},Func{`0,System.String})
  name: ToString(Fraction<T>, Func<T, String>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_ToString_Towel_Mathematics_Fraction__0__Func__0_System_String__
  commentId: M:Towel.Mathematics.Fraction`1.ToString(Towel.Mathematics.Fraction{`0},Func{`0,System.String})
  name.vb: ToString(Fraction(Of T), Func(Of T, String))
  fullName: Towel.Mathematics.Fraction<T>.ToString(Towel.Mathematics.Fraction<T>, Func<T, System.String>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).ToString(Towel.Mathematics.Fraction(Of T), Func(Of T, System.String))
  nameWithType: Fraction<T>.ToString(Fraction<T>, Func<T, String>)
  nameWithType.vb: Fraction(Of T).ToString(Fraction(Of T), Func(Of T, String))
- uid: Towel.Mathematics.Fraction`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_ToString_
  commentId: Overload:Towel.Mathematics.Fraction`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.ToString
  fullName.vb: Towel.Mathematics.Fraction(Of T).ToString
  nameWithType: Fraction<T>.ToString
  nameWithType.vb: Fraction(Of T).ToString
- uid: Towel.Mathematics.Fraction`1.TryParse(System.String,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, Func<String, (Boolean, T)>)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_TryParse_System_String_Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Mathematics.Fraction`1.TryParse(System.String,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, Func(Of String, (Boolean, T)))
  fullName: Towel.Mathematics.Fraction<T>.TryParse(System.String, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Mathematics.Fraction(Of T).TryParse(System.String, Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Fraction<T>.TryParse(String, Func<String, (Boolean, T)>)
  nameWithType.vb: Fraction(Of T).TryParse(String, Func(Of String, (Boolean, T)))
- uid: Towel.Mathematics.Fraction`1.TryParse*
  name: TryParse
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_TryParse_
  commentId: Overload:Towel.Mathematics.Fraction`1.TryParse
  isSpec: "True"
  fullName: Towel.Mathematics.Fraction<T>.TryParse
  fullName.vb: Towel.Mathematics.Fraction(Of T).TryParse
  nameWithType: Fraction<T>.TryParse
  nameWithType.vb: Fraction(Of T).TryParse
- uid: Towel.Mathematics.Fraction`1.TryParse``1(System.String,``0)
  name: TryParse<TryParse>(String, TryParse)
  href: api/Towel.Mathematics.Fraction-1.html#Towel_Mathematics_Fraction_1_TryParse__1_System_String___0_
  commentId: M:Towel.Mathematics.Fraction`1.TryParse``1(System.String,``0)
  name.vb: TryParse(Of TryParse)(String, TryParse)
  fullName: Towel.Mathematics.Fraction<T>.TryParse<TryParse>(System.String, TryParse)
  fullName.vb: Towel.Mathematics.Fraction(Of T).TryParse(Of TryParse)(System.String, TryParse)
  nameWithType: Fraction<T>.TryParse<TryParse>(String, TryParse)
  nameWithType.vb: Fraction(Of T).TryParse(Of TryParse)(String, TryParse)
- uid: Towel.Mathematics.MathematicsDelegates
  name: MathematicsDelegates
  href: api/Towel.Mathematics.MathematicsDelegates.html
  commentId: T:Towel.Mathematics.MathematicsDelegates
  fullName: Towel.Mathematics.MathematicsDelegates
  nameWithType: MathematicsDelegates
- uid: Towel.Mathematics.MathematicsDelegates.Cosine`1
  name: MathematicsDelegates.Cosine<T>
  href: api/Towel.Mathematics.MathematicsDelegates.Cosine-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.Cosine`1
  name.vb: MathematicsDelegates.Cosine(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.Cosine<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.Cosine(Of T)
  nameWithType: MathematicsDelegates.Cosine<T>
  nameWithType.vb: MathematicsDelegates.Cosine(Of T)
- uid: Towel.Mathematics.MathematicsDelegates.InverseCosine`1
  name: MathematicsDelegates.InverseCosine<T>
  href: api/Towel.Mathematics.MathematicsDelegates.InverseCosine-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.InverseCosine`1
  name.vb: MathematicsDelegates.InverseCosine(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.InverseCosine<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.InverseCosine(Of T)
  nameWithType: MathematicsDelegates.InverseCosine<T>
  nameWithType.vb: MathematicsDelegates.InverseCosine(Of T)
- uid: Towel.Mathematics.MathematicsDelegates.InverseSine`1
  name: MathematicsDelegates.InverseSine<T>
  href: api/Towel.Mathematics.MathematicsDelegates.InverseSine-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.InverseSine`1
  name.vb: MathematicsDelegates.InverseSine(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.InverseSine<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.InverseSine(Of T)
  nameWithType: MathematicsDelegates.InverseSine<T>
  nameWithType.vb: MathematicsDelegates.InverseSine(Of T)
- uid: Towel.Mathematics.MathematicsDelegates.InverseTangent`1
  name: MathematicsDelegates.InverseTangent<T>
  href: api/Towel.Mathematics.MathematicsDelegates.InverseTangent-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.InverseTangent`1
  name.vb: MathematicsDelegates.InverseTangent(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.InverseTangent<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.InverseTangent(Of T)
  nameWithType: MathematicsDelegates.InverseTangent<T>
  nameWithType.vb: MathematicsDelegates.InverseTangent(Of T)
- uid: Towel.Mathematics.MathematicsDelegates.Sine`1
  name: MathematicsDelegates.Sine<T>
  href: api/Towel.Mathematics.MathematicsDelegates.Sine-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.Sine`1
  name.vb: MathematicsDelegates.Sine(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.Sine<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.Sine(Of T)
  nameWithType: MathematicsDelegates.Sine<T>
  nameWithType.vb: MathematicsDelegates.Sine(Of T)
- uid: Towel.Mathematics.MathematicsDelegates.Tangent`1
  name: MathematicsDelegates.Tangent<T>
  href: api/Towel.Mathematics.MathematicsDelegates.Tangent-1.html
  commentId: T:Towel.Mathematics.MathematicsDelegates.Tangent`1
  name.vb: MathematicsDelegates.Tangent(Of T)
  fullName: Towel.Mathematics.MathematicsDelegates.Tangent<T>
  fullName.vb: Towel.Mathematics.MathematicsDelegates.Tangent(Of T)
  nameWithType: MathematicsDelegates.Tangent<T>
  nameWithType.vb: MathematicsDelegates.Tangent(Of T)
- uid: Towel.Mathematics.MathematicsSyntax
  name: MathematicsSyntax
  href: api/Towel.Mathematics.MathematicsSyntax.html
  commentId: T:Towel.Mathematics.MathematicsSyntax
  fullName: Towel.Mathematics.MathematicsSyntax
  nameWithType: MathematicsSyntax
- uid: Towel.Mathematics.MathematicsSyntax.Π*
  name: Π
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax___
  commentId: Overload:Towel.Mathematics.MathematicsSyntax.Π
  isSpec: "True"
  fullName: Towel.Mathematics.MathematicsSyntax.Π
  nameWithType: MathematicsSyntax.Π
- uid: Towel.Mathematics.MathematicsSyntax.Π``1(``0,``0)
  name: Π<T>(T, T)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1___0___0_
  commentId: M:Towel.Mathematics.MathematicsSyntax.Π``1(``0,``0)
  name.vb: Π(Of T)(T, T)
  fullName: Towel.Mathematics.MathematicsSyntax.Π<T>(T, T)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Π(Of T)(T, T)
  nameWithType: MathematicsSyntax.Π<T>(T, T)
  nameWithType.vb: MathematicsSyntax.Π(Of T)(T, T)
- uid: Towel.Mathematics.MathematicsSyntax.Π``1(``0,``0,``0,``0[])
  name: Π<T>(T, T, T, T[])
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1___0___0___0___0___
  commentId: M:Towel.Mathematics.MathematicsSyntax.Π``1(``0,``0,``0,``0[])
  name.vb: Π(Of T)(T, T, T, T())
  fullName: Towel.Mathematics.MathematicsSyntax.Π<T>(T, T, T, T[])
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Π(Of T)(T, T, T, T())
  nameWithType: MathematicsSyntax.Π<T>(T, T, T, T[])
  nameWithType.vb: MathematicsSyntax.Π(Of T)(T, T, T, T())
- uid: Towel.Mathematics.MathematicsSyntax.Π``1(Action{Action{``0}})
  name: Π<T>(Action<Action<T>>)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1_Action_Action___0___
  commentId: M:Towel.Mathematics.MathematicsSyntax.Π``1(Action{Action{``0}})
  name.vb: Π(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Mathematics.MathematicsSyntax.Π<T>(Action<Action<T>>)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Π(Of T)(Action(Of Action(Of T)))
  nameWithType: MathematicsSyntax.Π<T>(Action<Action<T>>)
  nameWithType.vb: MathematicsSyntax.Π(Of T)(Action(Of Action(Of T)))
- uid: Towel.Mathematics.MathematicsSyntax.Π``3(``0,``1)
  name: Π<A, B, C>(A, B)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____3___0___1_
  commentId: M:Towel.Mathematics.MathematicsSyntax.Π``3(``0,``1)
  name.vb: Π(Of A, B, C)(A, B)
  fullName: Towel.Mathematics.MathematicsSyntax.Π<A, B, C>(A, B)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Π(Of A, B, C)(A, B)
  nameWithType: MathematicsSyntax.Π<A, B, C>(A, B)
  nameWithType.vb: MathematicsSyntax.Π(Of A, B, C)(A, B)
- uid: Towel.Mathematics.MathematicsSyntax.Σ*
  name: Σ
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax___
  commentId: Overload:Towel.Mathematics.MathematicsSyntax.Σ
  isSpec: "True"
  fullName: Towel.Mathematics.MathematicsSyntax.Σ
  nameWithType: MathematicsSyntax.Σ
- uid: Towel.Mathematics.MathematicsSyntax.Σ``1(``0,``0)
  name: Σ<T>(T, T)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1___0___0_
  commentId: M:Towel.Mathematics.MathematicsSyntax.Σ``1(``0,``0)
  name.vb: Σ(Of T)(T, T)
  fullName: Towel.Mathematics.MathematicsSyntax.Σ<T>(T, T)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Σ(Of T)(T, T)
  nameWithType: MathematicsSyntax.Σ<T>(T, T)
  nameWithType.vb: MathematicsSyntax.Σ(Of T)(T, T)
- uid: Towel.Mathematics.MathematicsSyntax.Σ``1(``0,``0,``0,``0[])
  name: Σ<T>(T, T, T, T[])
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1___0___0___0___0___
  commentId: M:Towel.Mathematics.MathematicsSyntax.Σ``1(``0,``0,``0,``0[])
  name.vb: Σ(Of T)(T, T, T, T())
  fullName: Towel.Mathematics.MathematicsSyntax.Σ<T>(T, T, T, T[])
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Σ(Of T)(T, T, T, T())
  nameWithType: MathematicsSyntax.Σ<T>(T, T, T, T[])
  nameWithType.vb: MathematicsSyntax.Σ(Of T)(T, T, T, T())
- uid: Towel.Mathematics.MathematicsSyntax.Σ``1(Action{Action{``0}})
  name: Σ<T>(Action<Action<T>>)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____1_Action_Action___0___
  commentId: M:Towel.Mathematics.MathematicsSyntax.Σ``1(Action{Action{``0}})
  name.vb: Σ(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Mathematics.MathematicsSyntax.Σ<T>(Action<Action<T>>)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Σ(Of T)(Action(Of Action(Of T)))
  nameWithType: MathematicsSyntax.Σ<T>(Action<Action<T>>)
  nameWithType.vb: MathematicsSyntax.Σ(Of T)(Action(Of Action(Of T)))
- uid: Towel.Mathematics.MathematicsSyntax.Σ``3(``0,``1)
  name: Σ<A, B, C>(A, B)
  href: api/Towel.Mathematics.MathematicsSyntax.html#Towel_Mathematics_MathematicsSyntax____3___0___1_
  commentId: M:Towel.Mathematics.MathematicsSyntax.Σ``3(``0,``1)
  name.vb: Σ(Of A, B, C)(A, B)
  fullName: Towel.Mathematics.MathematicsSyntax.Σ<A, B, C>(A, B)
  fullName.vb: Towel.Mathematics.MathematicsSyntax.Σ(Of A, B, C)(A, B)
  nameWithType: MathematicsSyntax.Σ<A, B, C>(A, B)
  nameWithType.vb: MathematicsSyntax.Σ(Of A, B, C)(A, B)
- uid: Towel.Mathematics.Matrix`1
  name: Matrix<T>
  href: api/Towel.Mathematics.Matrix-1.html
  commentId: T:Towel.Mathematics.Matrix`1
  name.vb: Matrix(Of T)
  fullName: Towel.Mathematics.Matrix<T>
  fullName.vb: Towel.Mathematics.Matrix(Of T)
  nameWithType: Matrix<T>
  nameWithType.vb: Matrix(Of T)
- uid: Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32)
  name: Matrix(Int32, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1__ctor_System_Int32_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32)
  fullName: Towel.Mathematics.Matrix<T>.Matrix(System.Int32, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Matrix(System.Int32, System.Int32)
  nameWithType: Matrix<T>.Matrix(Int32, Int32)
  nameWithType.vb: Matrix(Of T).Matrix(Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,`0[])
  name: Matrix(Int32, Int32, T[])
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1__ctor_System_Int32_System_Int32__0___
  commentId: M:Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,`0[])
  name.vb: Matrix(Int32, Int32, T())
  fullName: Towel.Mathematics.Matrix<T>.Matrix(System.Int32, System.Int32, T[])
  fullName.vb: Towel.Mathematics.Matrix(Of T).Matrix(System.Int32, System.Int32, T())
  nameWithType: Matrix<T>.Matrix(Int32, Int32, T[])
  nameWithType.vb: Matrix(Of T).Matrix(Int32, Int32, T())
- uid: Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,Func{System.Int32,`0})
  name: Matrix(Int32, Int32, Func<Int32, T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1__ctor_System_Int32_System_Int32_Func_System_Int32__0__
  commentId: M:Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,Func{System.Int32,`0})
  name.vb: Matrix(Int32, Int32, Func(Of Int32, T))
  fullName: Towel.Mathematics.Matrix<T>.Matrix(System.Int32, System.Int32, Func<System.Int32, T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Matrix(System.Int32, System.Int32, Func(Of System.Int32, T))
  nameWithType: Matrix<T>.Matrix(Int32, Int32, Func<Int32, T>)
  nameWithType.vb: Matrix(Of T).Matrix(Int32, Int32, Func(Of Int32, T))
- uid: Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,Func{System.Int32,System.Int32,`0})
  name: Matrix(Int32, Int32, Func<Int32, Int32, T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1__ctor_System_Int32_System_Int32_Func_System_Int32_System_Int32__0__
  commentId: M:Towel.Mathematics.Matrix`1.#ctor(System.Int32,System.Int32,Func{System.Int32,System.Int32,`0})
  name.vb: Matrix(Int32, Int32, Func(Of Int32, Int32, T))
  fullName: Towel.Mathematics.Matrix<T>.Matrix(System.Int32, System.Int32, Func<System.Int32, System.Int32, T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Matrix(System.Int32, System.Int32, Func(Of System.Int32, System.Int32, T))
  nameWithType: Matrix<T>.Matrix(Int32, Int32, Func<Int32, Int32, T>)
  nameWithType.vb: Matrix(Of T).Matrix(Int32, Int32, Func(Of Int32, Int32, T))
- uid: Towel.Mathematics.Matrix`1.#ctor*
  name: Matrix
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1__ctor_
  commentId: Overload:Towel.Mathematics.Matrix`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Matrix
  fullName.vb: Towel.Mathematics.Matrix(Of T).Matrix
  nameWithType: Matrix<T>.Matrix
  nameWithType.vb: Matrix(Of T).Matrix
- uid: Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0})
  name: Add(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Add_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0})
  name.vb: Add(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Add(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Add(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Add(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Add(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Add(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Add_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Add(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Add(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Add(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Add(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Add(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Add(Matrix<T>, Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Add_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Add(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Add(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Add(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Add(Matrix<T>, Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Add(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Add(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Add_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Add(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Add(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Add(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Add(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Add(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Add(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Add*
  name: Add
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Add_
  commentId: Overload:Towel.Mathematics.Matrix`1.Add
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Add
  fullName.vb: Towel.Mathematics.Matrix(Of T).Add
  nameWithType: Matrix<T>.Add
  nameWithType.vb: Matrix(Of T).Add
- uid: Towel.Mathematics.Matrix`1.Adjoint
  name: Adjoint()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Adjoint
  commentId: M:Towel.Mathematics.Matrix`1.Adjoint
  fullName: Towel.Mathematics.Matrix<T>.Adjoint()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Adjoint()
  nameWithType: Matrix<T>.Adjoint()
  nameWithType.vb: Matrix(Of T).Adjoint()
- uid: Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0})
  name: Adjoint(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Adjoint_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0})
  name.vb: Adjoint(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Adjoint(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Adjoint(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Adjoint(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Adjoint(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Adjoint(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Adjoint_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Adjoint(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Adjoint(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Adjoint(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Adjoint(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Adjoint(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0}@)
  name: Adjoint(ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Adjoint_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Adjoint(Towel.Mathematics.Matrix{`0}@)
  name.vb: Adjoint(ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Adjoint(ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Adjoint(ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Adjoint(ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Adjoint(ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Adjoint*
  name: Adjoint
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Adjoint_
  commentId: Overload:Towel.Mathematics.Matrix`1.Adjoint
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Adjoint
  fullName.vb: Towel.Mathematics.Matrix(Of T).Adjoint
  nameWithType: Matrix<T>.Adjoint
  nameWithType.vb: Matrix(Of T).Adjoint
- uid: Towel.Mathematics.Matrix`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Clone
  commentId: M:Towel.Mathematics.Matrix`1.Clone
  fullName: Towel.Mathematics.Matrix<T>.Clone()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Clone()
  nameWithType: Matrix<T>.Clone()
  nameWithType.vb: Matrix(Of T).Clone()
- uid: Towel.Mathematics.Matrix`1.Clone(Towel.Mathematics.Matrix{`0})
  name: Clone(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Clone_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Clone(Towel.Mathematics.Matrix{`0})
  name.vb: Clone(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Clone(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Clone(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Clone(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Clone(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Clone_
  commentId: Overload:Towel.Mathematics.Matrix`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Clone
  fullName.vb: Towel.Mathematics.Matrix(Of T).Clone
  nameWithType: Matrix<T>.Clone
  nameWithType.vb: Matrix(Of T).Clone
- uid: Towel.Mathematics.Matrix`1.Columns
  name: Columns
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Columns
  commentId: P:Towel.Mathematics.Matrix`1.Columns
  fullName: Towel.Mathematics.Matrix<T>.Columns
  fullName.vb: Towel.Mathematics.Matrix(Of T).Columns
  nameWithType: Matrix<T>.Columns
  nameWithType.vb: Matrix(Of T).Columns
- uid: Towel.Mathematics.Matrix`1.Columns*
  name: Columns
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Columns_
  commentId: Overload:Towel.Mathematics.Matrix`1.Columns
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Columns
  fullName.vb: Towel.Mathematics.Matrix(Of T).Columns
  nameWithType: Matrix<T>.Columns
  nameWithType.vb: Matrix(Of T).Columns
- uid: Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0})
  name: ConcatenateRowWise(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ConcatenateRowWise_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0})
  name.vb: ConcatenateRowWise(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ConcatenateRowWise(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ConcatenateRowWise(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ConcatenateRowWise(Matrix<T>)
  nameWithType.vb: Matrix(Of T).ConcatenateRowWise(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: ConcatenateRowWise(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ConcatenateRowWise_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: ConcatenateRowWise(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ConcatenateRowWise(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ConcatenateRowWise(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ConcatenateRowWise(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).ConcatenateRowWise(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: ConcatenateRowWise(Matrix<T>, Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ConcatenateRowWise_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: ConcatenateRowWise(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ConcatenateRowWise(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ConcatenateRowWise(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ConcatenateRowWise(Matrix<T>, Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).ConcatenateRowWise(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: ConcatenateRowWise(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ConcatenateRowWise_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.ConcatenateRowWise(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: ConcatenateRowWise(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ConcatenateRowWise(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ConcatenateRowWise(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ConcatenateRowWise(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).ConcatenateRowWise(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ConcatenateRowWise*
  name: ConcatenateRowWise
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ConcatenateRowWise_
  commentId: Overload:Towel.Mathematics.Matrix`1.ConcatenateRowWise
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.ConcatenateRowWise
  fullName.vb: Towel.Mathematics.Matrix(Of T).ConcatenateRowWise
  nameWithType: Matrix<T>.ConcatenateRowWise
  nameWithType.vb: Matrix(Of T).ConcatenateRowWise
- uid: Towel.Mathematics.Matrix`1.DecomposeLowerUpper(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@,Towel.Mathematics.Matrix{`0}@)
  name: DecomposeLowerUpper(Matrix<T>, ref Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DecomposeLowerUpper_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.DecomposeLowerUpper(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@,Towel.Mathematics.Matrix{`0}@)
  name.vb: DecomposeLowerUpper(Matrix(Of T), ByRef Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.DecomposeLowerUpper(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).DecomposeLowerUpper(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.DecomposeLowerUpper(Matrix<T>, ref Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).DecomposeLowerUpper(Matrix(Of T), ByRef Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.DecomposeLowerUpper(Towel.Mathematics.Matrix{`0}@,Towel.Mathematics.Matrix{`0}@)
  name: DecomposeLowerUpper(ref Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DecomposeLowerUpper_Towel_Mathematics_Matrix__0___Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.DecomposeLowerUpper(Towel.Mathematics.Matrix{`0}@,Towel.Mathematics.Matrix{`0}@)
  name.vb: DecomposeLowerUpper(ByRef Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.DecomposeLowerUpper(ref Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).DecomposeLowerUpper(ByRef Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.DecomposeLowerUpper(ref Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).DecomposeLowerUpper(ByRef Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.DecomposeLowerUpper*
  name: DecomposeLowerUpper
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DecomposeLowerUpper_
  commentId: Overload:Towel.Mathematics.Matrix`1.DecomposeLowerUpper
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.DecomposeLowerUpper
  fullName.vb: Towel.Mathematics.Matrix(Of T).DecomposeLowerUpper
  nameWithType: Matrix<T>.DecomposeLowerUpper
  nameWithType.vb: Matrix(Of T).DecomposeLowerUpper
- uid: Towel.Mathematics.Matrix`1.Determinant
  name: Determinant()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Determinant
  commentId: M:Towel.Mathematics.Matrix`1.Determinant
  fullName: Towel.Mathematics.Matrix<T>.Determinant()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Determinant()
  nameWithType: Matrix<T>.Determinant()
  nameWithType.vb: Matrix(Of T).Determinant()
- uid: Towel.Mathematics.Matrix`1.Determinant(Towel.Mathematics.Matrix{`0})
  name: Determinant(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Determinant_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Determinant(Towel.Mathematics.Matrix{`0})
  name.vb: Determinant(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Determinant(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Determinant(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Determinant(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Determinant(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Determinant*
  name: Determinant
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Determinant_
  commentId: Overload:Towel.Mathematics.Matrix`1.Determinant
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Determinant
  fullName.vb: Towel.Mathematics.Matrix(Of T).Determinant
  nameWithType: Matrix<T>.Determinant
  nameWithType.vb: Matrix(Of T).Determinant
- uid: Towel.Mathematics.Matrix`1.DeterminantGaussian
  name: DeterminantGaussian()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantGaussian
  commentId: M:Towel.Mathematics.Matrix`1.DeterminantGaussian
  fullName: Towel.Mathematics.Matrix<T>.DeterminantGaussian()
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantGaussian()
  nameWithType: Matrix<T>.DeterminantGaussian()
  nameWithType.vb: Matrix(Of T).DeterminantGaussian()
- uid: Towel.Mathematics.Matrix`1.DeterminantGaussian(Towel.Mathematics.Matrix{`0})
  name: DeterminantGaussian(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantGaussian_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.DeterminantGaussian(Towel.Mathematics.Matrix{`0})
  name.vb: DeterminantGaussian(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.DeterminantGaussian(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantGaussian(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.DeterminantGaussian(Matrix<T>)
  nameWithType.vb: Matrix(Of T).DeterminantGaussian(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.DeterminantGaussian*
  name: DeterminantGaussian
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantGaussian_
  commentId: Overload:Towel.Mathematics.Matrix`1.DeterminantGaussian
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.DeterminantGaussian
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantGaussian
  nameWithType: Matrix<T>.DeterminantGaussian
  nameWithType.vb: Matrix(Of T).DeterminantGaussian
- uid: Towel.Mathematics.Matrix`1.DeterminantLaplace
  name: DeterminantLaplace()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantLaplace
  commentId: M:Towel.Mathematics.Matrix`1.DeterminantLaplace
  fullName: Towel.Mathematics.Matrix<T>.DeterminantLaplace()
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantLaplace()
  nameWithType: Matrix<T>.DeterminantLaplace()
  nameWithType.vb: Matrix(Of T).DeterminantLaplace()
- uid: Towel.Mathematics.Matrix`1.DeterminantLaplace(Towel.Mathematics.Matrix{`0})
  name: DeterminantLaplace(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantLaplace_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.DeterminantLaplace(Towel.Mathematics.Matrix{`0})
  name.vb: DeterminantLaplace(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.DeterminantLaplace(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantLaplace(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.DeterminantLaplace(Matrix<T>)
  nameWithType.vb: Matrix(Of T).DeterminantLaplace(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.DeterminantLaplace*
  name: DeterminantLaplace
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_DeterminantLaplace_
  commentId: Overload:Towel.Mathematics.Matrix`1.DeterminantLaplace
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.DeterminantLaplace
  fullName.vb: Towel.Mathematics.Matrix(Of T).DeterminantLaplace
  nameWithType: Matrix<T>.DeterminantLaplace
  nameWithType.vb: Matrix(Of T).DeterminantLaplace
- uid: Towel.Mathematics.Matrix`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Divide__0_
  commentId: M:Towel.Mathematics.Matrix`1.Divide(`0)
  fullName: Towel.Mathematics.Matrix<T>.Divide(T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Divide(T)
  nameWithType: Matrix<T>.Divide(T)
  nameWithType.vb: Matrix(Of T).Divide(T)
- uid: Towel.Mathematics.Matrix`1.Divide(`0,Towel.Mathematics.Matrix{`0}@)
  name: Divide(T, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Divide__0_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Divide(`0,Towel.Mathematics.Matrix{`0}@)
  name.vb: Divide(T, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Divide(T, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Divide(T, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Divide(T, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Divide(T, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Divide(Towel.Mathematics.Matrix{`0},`0)
  name: Divide(Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Divide_Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.Divide(Towel.Mathematics.Matrix{`0},`0)
  name.vb: Divide(Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Divide(Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Divide(Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Divide(Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Divide(Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.Divide(Towel.Mathematics.Matrix{`0},`0,Towel.Mathematics.Matrix{`0}@)
  name: Divide(Matrix<T>, T, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Divide_Towel_Mathematics_Matrix__0___0_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Divide(Towel.Mathematics.Matrix{`0},`0,Towel.Mathematics.Matrix{`0}@)
  name.vb: Divide(Matrix(Of T), T, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Divide(Towel.Mathematics.Matrix<T>, T, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Divide(Towel.Mathematics.Matrix(Of T), T, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Divide(Matrix<T>, T, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Divide(Matrix(Of T), T, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Divide*
  name: Divide
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Divide_
  commentId: Overload:Towel.Mathematics.Matrix`1.Divide
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Divide
  fullName.vb: Towel.Mathematics.Matrix(Of T).Divide
  nameWithType: Matrix<T>.Divide
  nameWithType.vb: Matrix(Of T).Divide
- uid: Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0})
  name: Equal(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equal_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0})
  name.vb: Equal(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Equal(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equal(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Equal(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Equal(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},`0)
  name: Equal(Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equal_Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},`0)
  name.vb: Equal(Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Equal(Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equal(Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Equal(Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Equal(Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Equal(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equal_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Equal(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Equal(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equal(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Equal(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Equal(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},`0)
  name: Equal(Matrix<T>, Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equal_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.Equal(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},`0)
  name.vb: Equal(Matrix(Of T), Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Equal(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equal(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Equal(Matrix<T>, Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Equal(Matrix(Of T), Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.Equal*
  name: Equal
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equal_
  commentId: Overload:Towel.Mathematics.Matrix`1.Equal
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Equal
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equal
  nameWithType: Matrix<T>.Equal
  nameWithType.vb: Matrix(Of T).Equal
- uid: Towel.Mathematics.Matrix`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equals_System_Nullable_System_Object__
  commentId: M:Towel.Mathematics.Matrix`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Towel.Mathematics.Matrix<T>.Equals(System.Nullable<System.Object>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equals(System.Nullable(Of System.Object))
  nameWithType: Matrix<T>.Equals(Nullable<Object>)
  nameWithType.vb: Matrix(Of T).Equals(Nullable(Of Object))
- uid: Towel.Mathematics.Matrix`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Equals_
  commentId: Overload:Towel.Mathematics.Matrix`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Equals
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equals
  nameWithType: Matrix<T>.Equals
  nameWithType.vb: Matrix(Of T).Equals
- uid: Towel.Mathematics.Matrix`1.FactoryIdentity(System.Int32,System.Int32)
  name: FactoryIdentity(Int32, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryIdentity_System_Int32_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.FactoryIdentity(System.Int32,System.Int32)
  fullName: Towel.Mathematics.Matrix<T>.FactoryIdentity(System.Int32, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryIdentity(System.Int32, System.Int32)
  nameWithType: Matrix<T>.FactoryIdentity(Int32, Int32)
  nameWithType.vb: Matrix(Of T).FactoryIdentity(Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.FactoryIdentity*
  name: FactoryIdentity
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryIdentity_
  commentId: Overload:Towel.Mathematics.Matrix`1.FactoryIdentity
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.FactoryIdentity
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryIdentity
  nameWithType: Matrix<T>.FactoryIdentity
  nameWithType.vb: Matrix(Of T).FactoryIdentity
- uid: Towel.Mathematics.Matrix`1.FactoryUniform(System.Int32,System.Int32,`0)
  name: FactoryUniform(Int32, Int32, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryUniform_System_Int32_System_Int32__0_
  commentId: M:Towel.Mathematics.Matrix`1.FactoryUniform(System.Int32,System.Int32,`0)
  fullName: Towel.Mathematics.Matrix<T>.FactoryUniform(System.Int32, System.Int32, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryUniform(System.Int32, System.Int32, T)
  nameWithType: Matrix<T>.FactoryUniform(Int32, Int32, T)
  nameWithType.vb: Matrix(Of T).FactoryUniform(Int32, Int32, T)
- uid: Towel.Mathematics.Matrix`1.FactoryUniform*
  name: FactoryUniform
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryUniform_
  commentId: Overload:Towel.Mathematics.Matrix`1.FactoryUniform
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.FactoryUniform
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryUniform
  nameWithType: Matrix<T>.FactoryUniform
  nameWithType.vb: Matrix(Of T).FactoryUniform
- uid: Towel.Mathematics.Matrix`1.FactoryZero(System.Int32,System.Int32)
  name: FactoryZero(Int32, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryZero_System_Int32_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.FactoryZero(System.Int32,System.Int32)
  fullName: Towel.Mathematics.Matrix<T>.FactoryZero(System.Int32, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryZero(System.Int32, System.Int32)
  nameWithType: Matrix<T>.FactoryZero(Int32, Int32)
  nameWithType.vb: Matrix(Of T).FactoryZero(Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.FactoryZero*
  name: FactoryZero
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_FactoryZero_
  commentId: Overload:Towel.Mathematics.Matrix`1.FactoryZero
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.FactoryZero
  fullName.vb: Towel.Mathematics.Matrix(Of T).FactoryZero
  nameWithType: Matrix<T>.FactoryZero
  nameWithType.vb: Matrix(Of T).FactoryZero
- uid: Towel.Mathematics.Matrix`1.Format(Towel.Mathematics.Matrix{`0},Func{System.Int32,`0})
  name: Format(Matrix<T>, Func<Int32, T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Format_Towel_Mathematics_Matrix__0__Func_System_Int32__0__
  commentId: M:Towel.Mathematics.Matrix`1.Format(Towel.Mathematics.Matrix{`0},Func{System.Int32,`0})
  name.vb: Format(Matrix(Of T), Func(Of Int32, T))
  fullName: Towel.Mathematics.Matrix<T>.Format(Towel.Mathematics.Matrix<T>, Func<System.Int32, T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Format(Towel.Mathematics.Matrix(Of T), Func(Of System.Int32, T))
  nameWithType: Matrix<T>.Format(Matrix<T>, Func<Int32, T>)
  nameWithType.vb: Matrix(Of T).Format(Matrix(Of T), Func(Of Int32, T))
- uid: Towel.Mathematics.Matrix`1.Format(Towel.Mathematics.Matrix{`0},Func{System.Int32,System.Int32,`0})
  name: Format(Matrix<T>, Func<Int32, Int32, T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Format_Towel_Mathematics_Matrix__0__Func_System_Int32_System_Int32__0__
  commentId: M:Towel.Mathematics.Matrix`1.Format(Towel.Mathematics.Matrix{`0},Func{System.Int32,System.Int32,`0})
  name.vb: Format(Matrix(Of T), Func(Of Int32, Int32, T))
  fullName: Towel.Mathematics.Matrix<T>.Format(Towel.Mathematics.Matrix<T>, Func<System.Int32, System.Int32, T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Format(Towel.Mathematics.Matrix(Of T), Func(Of System.Int32, System.Int32, T))
  nameWithType: Matrix<T>.Format(Matrix<T>, Func<Int32, Int32, T>)
  nameWithType.vb: Matrix(Of T).Format(Matrix(Of T), Func(Of Int32, Int32, T))
- uid: Towel.Mathematics.Matrix`1.Format*
  name: Format
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Format_
  commentId: Overload:Towel.Mathematics.Matrix`1.Format
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Format
  fullName.vb: Towel.Mathematics.Matrix(Of T).Format
  nameWithType: Matrix<T>.Format
  nameWithType.vb: Matrix(Of T).Format
- uid: Towel.Mathematics.Matrix`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_GetHashCode
  commentId: M:Towel.Mathematics.Matrix`1.GetHashCode
  fullName: Towel.Mathematics.Matrix<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Matrix(Of T).GetHashCode()
  nameWithType: Matrix<T>.GetHashCode()
  nameWithType.vb: Matrix(Of T).GetHashCode()
- uid: Towel.Mathematics.Matrix`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Matrix`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Matrix(Of T).GetHashCode
  nameWithType: Matrix<T>.GetHashCode
  nameWithType.vb: Matrix(Of T).GetHashCode
- uid: Towel.Mathematics.Matrix`1.GetIsSymetric(Towel.Mathematics.Matrix{`0})
  name: GetIsSymetric(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_GetIsSymetric_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.GetIsSymetric(Towel.Mathematics.Matrix{`0})
  name.vb: GetIsSymetric(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.GetIsSymetric(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).GetIsSymetric(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.GetIsSymetric(Matrix<T>)
  nameWithType.vb: Matrix(Of T).GetIsSymetric(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.GetIsSymetric*
  name: GetIsSymetric
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_GetIsSymetric_
  commentId: Overload:Towel.Mathematics.Matrix`1.GetIsSymetric
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.GetIsSymetric
  fullName.vb: Towel.Mathematics.Matrix(Of T).GetIsSymetric
  nameWithType: Matrix<T>.GetIsSymetric
  nameWithType.vb: Matrix(Of T).GetIsSymetric
- uid: Towel.Mathematics.Matrix`1.Inverse
  name: Inverse()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Inverse
  commentId: M:Towel.Mathematics.Matrix`1.Inverse
  fullName: Towel.Mathematics.Matrix<T>.Inverse()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inverse()
  nameWithType: Matrix<T>.Inverse()
  nameWithType.vb: Matrix(Of T).Inverse()
- uid: Towel.Mathematics.Matrix`1.Inverse(Towel.Mathematics.Matrix{`0})
  name: Inverse(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Inverse_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Inverse(Towel.Mathematics.Matrix{`0})
  name.vb: Inverse(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Inverse(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inverse(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Inverse(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Inverse(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Inverse(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Inverse(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Inverse_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Inverse(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Inverse(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Inverse(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inverse(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Inverse(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Inverse(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Inverse*
  name: Inverse
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Inverse_
  commentId: Overload:Towel.Mathematics.Matrix`1.Inverse
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Inverse
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inverse
  nameWithType: Matrix<T>.Inverse
  nameWithType.vb: Matrix(Of T).Inverse
- uid: Towel.Mathematics.Matrix`1.Is2x1
  name: Is2x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is2x1
  commentId: P:Towel.Mathematics.Matrix`1.Is2x1
  fullName: Towel.Mathematics.Matrix<T>.Is2x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is2x1
  nameWithType: Matrix<T>.Is2x1
  nameWithType.vb: Matrix(Of T).Is2x1
- uid: Towel.Mathematics.Matrix`1.Is2x1*
  name: Is2x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is2x1_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is2x1
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is2x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is2x1
  nameWithType: Matrix<T>.Is2x1
  nameWithType.vb: Matrix(Of T).Is2x1
- uid: Towel.Mathematics.Matrix`1.Is2x2
  name: Is2x2
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is2x2
  commentId: P:Towel.Mathematics.Matrix`1.Is2x2
  fullName: Towel.Mathematics.Matrix<T>.Is2x2
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is2x2
  nameWithType: Matrix<T>.Is2x2
  nameWithType.vb: Matrix(Of T).Is2x2
- uid: Towel.Mathematics.Matrix`1.Is2x2*
  name: Is2x2
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is2x2_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is2x2
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is2x2
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is2x2
  nameWithType: Matrix<T>.Is2x2
  nameWithType.vb: Matrix(Of T).Is2x2
- uid: Towel.Mathematics.Matrix`1.Is3x1
  name: Is3x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is3x1
  commentId: P:Towel.Mathematics.Matrix`1.Is3x1
  fullName: Towel.Mathematics.Matrix<T>.Is3x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is3x1
  nameWithType: Matrix<T>.Is3x1
  nameWithType.vb: Matrix(Of T).Is3x1
- uid: Towel.Mathematics.Matrix`1.Is3x1*
  name: Is3x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is3x1_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is3x1
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is3x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is3x1
  nameWithType: Matrix<T>.Is3x1
  nameWithType.vb: Matrix(Of T).Is3x1
- uid: Towel.Mathematics.Matrix`1.Is3x3
  name: Is3x3
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is3x3
  commentId: P:Towel.Mathematics.Matrix`1.Is3x3
  fullName: Towel.Mathematics.Matrix<T>.Is3x3
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is3x3
  nameWithType: Matrix<T>.Is3x3
  nameWithType.vb: Matrix(Of T).Is3x3
- uid: Towel.Mathematics.Matrix`1.Is3x3*
  name: Is3x3
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is3x3_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is3x3
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is3x3
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is3x3
  nameWithType: Matrix<T>.Is3x3
  nameWithType.vb: Matrix(Of T).Is3x3
- uid: Towel.Mathematics.Matrix`1.Is4x1
  name: Is4x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is4x1
  commentId: P:Towel.Mathematics.Matrix`1.Is4x1
  fullName: Towel.Mathematics.Matrix<T>.Is4x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is4x1
  nameWithType: Matrix<T>.Is4x1
  nameWithType.vb: Matrix(Of T).Is4x1
- uid: Towel.Mathematics.Matrix`1.Is4x1*
  name: Is4x1
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is4x1_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is4x1
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is4x1
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is4x1
  nameWithType: Matrix<T>.Is4x1
  nameWithType.vb: Matrix(Of T).Is4x1
- uid: Towel.Mathematics.Matrix`1.Is4x4
  name: Is4x4
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is4x4
  commentId: P:Towel.Mathematics.Matrix`1.Is4x4
  fullName: Towel.Mathematics.Matrix<T>.Is4x4
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is4x4
  nameWithType: Matrix<T>.Is4x4
  nameWithType.vb: Matrix(Of T).Is4x4
- uid: Towel.Mathematics.Matrix`1.Is4x4*
  name: Is4x4
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Is4x4_
  commentId: Overload:Towel.Mathematics.Matrix`1.Is4x4
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Is4x4
  fullName.vb: Towel.Mathematics.Matrix(Of T).Is4x4
  nameWithType: Matrix<T>.Is4x4
  nameWithType.vb: Matrix(Of T).Is4x4
- uid: Towel.Mathematics.Matrix`1.IsSquare
  name: IsSquare
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsSquare
  commentId: P:Towel.Mathematics.Matrix`1.IsSquare
  fullName: Towel.Mathematics.Matrix<T>.IsSquare
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsSquare
  nameWithType: Matrix<T>.IsSquare
  nameWithType.vb: Matrix(Of T).IsSquare
- uid: Towel.Mathematics.Matrix`1.IsSquare*
  name: IsSquare
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsSquare_
  commentId: Overload:Towel.Mathematics.Matrix`1.IsSquare
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.IsSquare
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsSquare
  nameWithType: Matrix<T>.IsSquare
  nameWithType.vb: Matrix(Of T).IsSquare
- uid: Towel.Mathematics.Matrix`1.IsSymetric
  name: IsSymetric
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsSymetric
  commentId: P:Towel.Mathematics.Matrix`1.IsSymetric
  fullName: Towel.Mathematics.Matrix<T>.IsSymetric
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsSymetric
  nameWithType: Matrix<T>.IsSymetric
  nameWithType.vb: Matrix(Of T).IsSymetric
- uid: Towel.Mathematics.Matrix`1.IsSymetric*
  name: IsSymetric
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsSymetric_
  commentId: Overload:Towel.Mathematics.Matrix`1.IsSymetric
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.IsSymetric
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsSymetric
  nameWithType: Matrix<T>.IsSymetric
  nameWithType.vb: Matrix(Of T).IsSymetric
- uid: Towel.Mathematics.Matrix`1.IsVector
  name: IsVector
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsVector
  commentId: P:Towel.Mathematics.Matrix`1.IsVector
  fullName: Towel.Mathematics.Matrix<T>.IsVector
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsVector
  nameWithType: Matrix<T>.IsVector
  nameWithType.vb: Matrix(Of T).IsVector
- uid: Towel.Mathematics.Matrix`1.IsVector*
  name: IsVector
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_IsVector_
  commentId: Overload:Towel.Mathematics.Matrix`1.IsVector
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.IsVector
  fullName.vb: Towel.Mathematics.Matrix(Of T).IsVector
  nameWithType: Matrix<T>.IsVector
  nameWithType.vb: Matrix(Of T).IsVector
- uid: Towel.Mathematics.Matrix`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Item_System_Int32_
  commentId: P:Towel.Mathematics.Matrix`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.Mathematics.Matrix<T>.Item[System.Int32]
  fullName.vb: Towel.Mathematics.Matrix(Of T).Item(System.Int32)
  nameWithType: Matrix<T>.Item[Int32]
  nameWithType.vb: Matrix(Of T).Item(Int32)
- uid: Towel.Mathematics.Matrix`1.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Item_System_Int32_System_Int32_
  commentId: P:Towel.Mathematics.Matrix`1.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: Towel.Mathematics.Matrix<T>.Item[System.Int32, System.Int32]
  fullName.vb: Towel.Mathematics.Matrix(Of T).Item(System.Int32, System.Int32)
  nameWithType: Matrix<T>.Item[Int32, Int32]
  nameWithType.vb: Matrix(Of T).Item(Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.Item*
  name: Item
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Item_
  commentId: Overload:Towel.Mathematics.Matrix`1.Item
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Item
  fullName.vb: Towel.Mathematics.Matrix(Of T).Item
  nameWithType: Matrix<T>.Item
  nameWithType.vb: Matrix(Of T).Item
- uid: Towel.Mathematics.Matrix`1.Minor(System.Int32,System.Int32)
  name: Minor(Int32, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Minor_System_Int32_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.Minor(System.Int32,System.Int32)
  fullName: Towel.Mathematics.Matrix<T>.Minor(System.Int32, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Minor(System.Int32, System.Int32)
  nameWithType: Matrix<T>.Minor(Int32, Int32)
  nameWithType.vb: Matrix(Of T).Minor(Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.Minor(System.Int32,System.Int32,Towel.Mathematics.Matrix{`0}@)
  name: Minor(Int32, Int32, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Minor_System_Int32_System_Int32_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Minor(System.Int32,System.Int32,Towel.Mathematics.Matrix{`0}@)
  name.vb: Minor(Int32, Int32, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Minor(System.Int32, System.Int32, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Minor(System.Int32, System.Int32, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Minor(Int32, Int32, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Minor(Int32, Int32, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Minor(Towel.Mathematics.Matrix{`0},System.Int32,System.Int32)
  name: Minor(Matrix<T>, Int32, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Minor_Towel_Mathematics_Matrix__0__System_Int32_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.Minor(Towel.Mathematics.Matrix{`0},System.Int32,System.Int32)
  name.vb: Minor(Matrix(Of T), Int32, Int32)
  fullName: Towel.Mathematics.Matrix<T>.Minor(Towel.Mathematics.Matrix<T>, System.Int32, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Minor(Towel.Mathematics.Matrix(Of T), System.Int32, System.Int32)
  nameWithType: Matrix<T>.Minor(Matrix<T>, Int32, Int32)
  nameWithType.vb: Matrix(Of T).Minor(Matrix(Of T), Int32, Int32)
- uid: Towel.Mathematics.Matrix`1.Minor(Towel.Mathematics.Matrix{`0},System.Int32,System.Int32,Towel.Mathematics.Matrix{`0}@)
  name: Minor(Matrix<T>, Int32, Int32, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Minor_Towel_Mathematics_Matrix__0__System_Int32_System_Int32_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Minor(Towel.Mathematics.Matrix{`0},System.Int32,System.Int32,Towel.Mathematics.Matrix{`0}@)
  name.vb: Minor(Matrix(Of T), Int32, Int32, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Minor(Towel.Mathematics.Matrix<T>, System.Int32, System.Int32, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Minor(Towel.Mathematics.Matrix(Of T), System.Int32, System.Int32, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Minor(Matrix<T>, Int32, Int32, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Minor(Matrix(Of T), Int32, Int32, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Minor*
  name: Minor
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Minor_
  commentId: Overload:Towel.Mathematics.Matrix`1.Minor
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Minor
  fullName.vb: Towel.Mathematics.Matrix(Of T).Minor
  nameWithType: Matrix<T>.Minor
  nameWithType.vb: Matrix(Of T).Minor
- uid: Towel.Mathematics.Matrix`1.Multiply(`0)
  name: Multiply(T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply__0_
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(`0)
  fullName: Towel.Mathematics.Matrix<T>.Multiply(T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(T)
  nameWithType: Matrix<T>.Multiply(T)
  nameWithType.vb: Matrix(Of T).Multiply(T)
- uid: Towel.Mathematics.Matrix`1.Multiply(`0,Towel.Mathematics.Matrix{`0})
  name: Multiply(T, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply__0_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(`0,Towel.Mathematics.Matrix{`0})
  name.vb: Multiply(T, Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(T, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(T, Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(T, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(T, Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(`0,Towel.Mathematics.Matrix{`0}@)
  name: Multiply(T, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply__0_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(`0,Towel.Mathematics.Matrix{`0}@)
  name.vb: Multiply(T, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(T, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(T, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(T, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(T, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0})
  name: Multiply(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0})
  name.vb: Multiply(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},`0)
  name: Multiply(Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},`0)
  name.vb: Multiply(Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Multiply(Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},`0,Towel.Mathematics.Matrix{`0}@)
  name: Multiply(Matrix<T>, T, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0___0_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},`0,Towel.Mathematics.Matrix{`0}@)
  name.vb: Multiply(Matrix(Of T), T, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, T, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), T, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, T, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), T, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Multiply(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Multiply(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Multiply(Matrix<T>, Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Multiply(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Multiply(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Multiply(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0})
  name: Multiply(Matrix<T>, Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Matrix(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Vector<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Multiply(Matrix<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Multiply(Matrix(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Vector{`0})
  name: Multiply(Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Multiply(Vector<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Multiply(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Matrix`1.Multiply(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Multiply(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Multiply(Vector<T>, ref Vector<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Multiply_
  commentId: Overload:Towel.Mathematics.Matrix`1.Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Multiply
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply
  nameWithType: Matrix<T>.Multiply
  nameWithType.vb: Matrix(Of T).Multiply
- uid: Towel.Mathematics.Matrix`1.Negate
  name: Negate()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Negate
  commentId: M:Towel.Mathematics.Matrix`1.Negate
  fullName: Towel.Mathematics.Matrix<T>.Negate()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Negate()
  nameWithType: Matrix<T>.Negate()
  nameWithType.vb: Matrix(Of T).Negate()
- uid: Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0})
  name: Negate(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Negate_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0})
  name.vb: Negate(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Negate(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Negate(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Negate(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Negate(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Negate(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Negate_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Negate(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Negate(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Negate(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Negate(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Negate(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0}@)
  name: Negate(ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Negate_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Negate(Towel.Mathematics.Matrix{`0}@)
  name.vb: Negate(ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Negate(ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Negate(ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Negate(ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Negate(ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Negate*
  name: Negate
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Negate_
  commentId: Overload:Towel.Mathematics.Matrix`1.Negate
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Negate
  fullName.vb: Towel.Mathematics.Matrix(Of T).Negate
  nameWithType: Matrix<T>.Negate
  nameWithType.vb: Matrix(Of T).Negate
- uid: Towel.Mathematics.Matrix`1.op_Addition(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Addition(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Addition_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Addition(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Addition(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Addition(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Addition(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Addition(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Addition(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Addition*
  name: Addition
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Addition_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Addition
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Addition
  fullName.vb: Towel.Mathematics.Matrix(Of T).Addition
  nameWithType: Matrix<T>.Addition
  nameWithType.vb: Matrix(Of T).Addition
- uid: Towel.Mathematics.Matrix`1.op_Division(Towel.Mathematics.Matrix{`0},`0)
  name: Division(Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Division_Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.op_Division(Towel.Mathematics.Matrix{`0},`0)
  name.vb: Division(Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Division(Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Division(Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Division(Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Division(Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.op_Division*
  name: Division
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Division_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Division
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Division
  fullName.vb: Towel.Mathematics.Matrix(Of T).Division
  nameWithType: Matrix<T>.Division
  nameWithType.vb: Matrix(Of T).Division
- uid: Towel.Mathematics.Matrix`1.op_Equality(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Equality(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Equality_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Equality(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Equality(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Equality(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equality(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Equality(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Equality(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Equality*
  name: Equality
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Equality_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Equality
  fullName.vb: Towel.Mathematics.Matrix(Of T).Equality
  nameWithType: Matrix<T>.Equality
  nameWithType.vb: Matrix(Of T).Equality
- uid: Towel.Mathematics.Matrix`1.op_ExclusiveOr(Towel.Mathematics.Matrix{`0},System.Int32)
  name: ExclusiveOr(Matrix<T>, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_ExclusiveOr_Towel_Mathematics_Matrix__0__System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.op_ExclusiveOr(Towel.Mathematics.Matrix{`0},System.Int32)
  name.vb: ExclusiveOr(Matrix(Of T), Int32)
  fullName: Towel.Mathematics.Matrix<T>.ExclusiveOr(Towel.Mathematics.Matrix<T>, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ExclusiveOr(Towel.Mathematics.Matrix(Of T), System.Int32)
  nameWithType: Matrix<T>.ExclusiveOr(Matrix<T>, Int32)
  nameWithType.vb: Matrix(Of T).ExclusiveOr(Matrix(Of T), Int32)
- uid: Towel.Mathematics.Matrix`1.op_ExclusiveOr*
  name: ExclusiveOr
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_ExclusiveOr_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_ExclusiveOr
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.ExclusiveOr
  fullName.vb: Towel.Mathematics.Matrix(Of T).ExclusiveOr
  nameWithType: Matrix<T>.ExclusiveOr
  nameWithType.vb: Matrix(Of T).ExclusiveOr
- uid: Towel.Mathematics.Matrix`1.op_Explicit(Towel.Mathematics.Matrix{`0})~`0[0:,0:]
  name: Explicit(Matrix<T> to T[,])
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Explicit_Towel_Mathematics_Matrix__0____0_0__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Explicit(Towel.Mathematics.Matrix{`0})~`0[0:,0:]
  name.vb: Narrowing(Matrix(Of T) to T(,))
  fullName: Towel.Mathematics.Matrix<T>.Explicit(Towel.Mathematics.Matrix<T> to T[,])
  fullName.vb: Towel.Mathematics.Matrix(Of T).Narrowing(Towel.Mathematics.Matrix(Of T) to T(,))
  nameWithType: Matrix<T>.Explicit(Matrix<T> to T[,])
  nameWithType.vb: Matrix(Of T).Narrowing(Matrix(Of T) to T(,))
- uid: Towel.Mathematics.Matrix`1.op_Explicit*
  name: Explicit
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Explicit_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.Mathematics.Matrix<T>.Explicit
  fullName.vb: Towel.Mathematics.Matrix(Of T).Narrowing
  nameWithType: Matrix<T>.Explicit
  nameWithType.vb: Matrix(Of T).Narrowing
- uid: Towel.Mathematics.Matrix`1.op_Implicit(`0[0:,0:])~Towel.Mathematics.Matrix{`0}
  name: Implicit(T[,] to Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Implicit__0_0__0____Towel_Mathematics_Matrix__0_
  commentId: M:Towel.Mathematics.Matrix`1.op_Implicit(`0[0:,0:])~Towel.Mathematics.Matrix{`0}
  name.vb: Widening(T(,) to Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Implicit(T[,] to Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Widening(T(,) to Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Implicit(T[,] to Matrix<T>)
  nameWithType.vb: Matrix(Of T).Widening(T(,) to Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Implicit*
  name: Implicit
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Implicit_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Mathematics.Matrix<T>.Implicit
  fullName.vb: Towel.Mathematics.Matrix(Of T).Widening
  nameWithType: Matrix<T>.Implicit
  nameWithType.vb: Matrix(Of T).Widening
- uid: Towel.Mathematics.Matrix`1.op_Inequality(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Inequality(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Inequality_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Inequality(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Inequality(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Inequality(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inequality(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Inequality(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Inequality(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Inequality*
  name: Inequality
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Inequality_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Inequality
  fullName.vb: Towel.Mathematics.Matrix(Of T).Inequality
  nameWithType: Matrix<T>.Inequality
  nameWithType.vb: Matrix(Of T).Inequality
- uid: Towel.Mathematics.Matrix`1.op_Multiply(`0,Towel.Mathematics.Matrix{`0})
  name: Multiply(T, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Multiply__0_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Multiply(`0,Towel.Mathematics.Matrix{`0})
  name.vb: Multiply(T, Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(T, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(T, Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(T, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(T, Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},`0)
  name: Multiply(Matrix<T>, T)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Multiply_Towel_Mathematics_Matrix__0___0_
  commentId: M:Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},`0)
  name.vb: Multiply(Matrix(Of T), T)
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, T)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), T)
  nameWithType: Matrix<T>.Multiply(Matrix<T>, T)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), T)
- uid: Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Multiply(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Multiply(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0})
  name: Multiply(Matrix<T>, Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Multiply_Towel_Mathematics_Matrix__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Multiply(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Matrix(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Multiply(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Multiply(Matrix<T>, Vector<T>)
  nameWithType.vb: Matrix(Of T).Multiply(Matrix(Of T), Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Multiply_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Multiply
  fullName.vb: Towel.Mathematics.Matrix(Of T).Multiply
  nameWithType: Matrix<T>.Multiply
  nameWithType.vb: Matrix(Of T).Multiply
- uid: Towel.Mathematics.Matrix`1.op_Subtraction(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Subtraction(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Subtraction_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_Subtraction(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Subtraction(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Subtraction(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtraction(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Subtraction(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Subtraction(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_Subtraction_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Subtraction
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtraction
  nameWithType: Matrix<T>.Subtraction
  nameWithType.vb: Matrix(Of T).Subtraction
- uid: Towel.Mathematics.Matrix`1.op_UnaryNegation(Towel.Mathematics.Matrix{`0})
  name: UnaryNegation(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_UnaryNegation_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.op_UnaryNegation(Towel.Mathematics.Matrix{`0})
  name.vb: UnaryNegation(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.UnaryNegation(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).UnaryNegation(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.UnaryNegation(Matrix<T>)
  nameWithType.vb: Matrix(Of T).UnaryNegation(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.op_UnaryNegation*
  name: UnaryNegation
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_op_UnaryNegation_
  commentId: Overload:Towel.Mathematics.Matrix`1.op_UnaryNegation
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.UnaryNegation
  fullName.vb: Towel.Mathematics.Matrix(Of T).UnaryNegation
  nameWithType: Matrix<T>.UnaryNegation
  nameWithType.vb: Matrix(Of T).UnaryNegation
- uid: Towel.Mathematics.Matrix`1.Power(System.Int32)
  name: Power(Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Power_System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.Power(System.Int32)
  fullName: Towel.Mathematics.Matrix<T>.Power(System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Power(System.Int32)
  nameWithType: Matrix<T>.Power(Int32)
  nameWithType.vb: Matrix(Of T).Power(Int32)
- uid: Towel.Mathematics.Matrix`1.Power(System.Int32,Towel.Mathematics.Matrix{`0}@)
  name: Power(Int32, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Power_System_Int32_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Power(System.Int32,Towel.Mathematics.Matrix{`0}@)
  name.vb: Power(Int32, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Power(System.Int32, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Power(System.Int32, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Power(Int32, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Power(Int32, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Power(Towel.Mathematics.Matrix{`0},System.Int32)
  name: Power(Matrix<T>, Int32)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Power_Towel_Mathematics_Matrix__0__System_Int32_
  commentId: M:Towel.Mathematics.Matrix`1.Power(Towel.Mathematics.Matrix{`0},System.Int32)
  name.vb: Power(Matrix(Of T), Int32)
  fullName: Towel.Mathematics.Matrix<T>.Power(Towel.Mathematics.Matrix<T>, System.Int32)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Power(Towel.Mathematics.Matrix(Of T), System.Int32)
  nameWithType: Matrix<T>.Power(Matrix<T>, Int32)
  nameWithType.vb: Matrix(Of T).Power(Matrix(Of T), Int32)
- uid: Towel.Mathematics.Matrix`1.Power(Towel.Mathematics.Matrix{`0},System.Int32,Towel.Mathematics.Matrix{`0}@)
  name: Power(Matrix<T>, Int32, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Power_Towel_Mathematics_Matrix__0__System_Int32_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Power(Towel.Mathematics.Matrix{`0},System.Int32,Towel.Mathematics.Matrix{`0}@)
  name.vb: Power(Matrix(Of T), Int32, ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Power(Towel.Mathematics.Matrix<T>, System.Int32, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Power(Towel.Mathematics.Matrix(Of T), System.Int32, ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Power(Matrix<T>, Int32, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Power(Matrix(Of T), Int32, ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Power*
  name: Power
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Power_
  commentId: Overload:Towel.Mathematics.Matrix`1.Power
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Power
  fullName.vb: Towel.Mathematics.Matrix(Of T).Power
  nameWithType: Matrix<T>.Power
  nameWithType.vb: Matrix(Of T).Power
- uid: Towel.Mathematics.Matrix`1.ReducedEchelon
  name: ReducedEchelon()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ReducedEchelon
  commentId: M:Towel.Mathematics.Matrix`1.ReducedEchelon
  fullName: Towel.Mathematics.Matrix<T>.ReducedEchelon()
  fullName.vb: Towel.Mathematics.Matrix(Of T).ReducedEchelon()
  nameWithType: Matrix<T>.ReducedEchelon()
  nameWithType.vb: Matrix(Of T).ReducedEchelon()
- uid: Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0})
  name: ReducedEchelon(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ReducedEchelon_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0})
  name.vb: ReducedEchelon(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ReducedEchelon(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ReducedEchelon(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ReducedEchelon(Matrix<T>)
  nameWithType.vb: Matrix(Of T).ReducedEchelon(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: ReducedEchelon(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ReducedEchelon_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: ReducedEchelon(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ReducedEchelon(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ReducedEchelon(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ReducedEchelon(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).ReducedEchelon(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0}@)
  name: ReducedEchelon(ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ReducedEchelon_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.ReducedEchelon(Towel.Mathematics.Matrix{`0}@)
  name.vb: ReducedEchelon(ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.ReducedEchelon(ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).ReducedEchelon(ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.ReducedEchelon(ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).ReducedEchelon(ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.ReducedEchelon*
  name: ReducedEchelon
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_ReducedEchelon_
  commentId: Overload:Towel.Mathematics.Matrix`1.ReducedEchelon
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.ReducedEchelon
  fullName.vb: Towel.Mathematics.Matrix(Of T).ReducedEchelon
  nameWithType: Matrix<T>.ReducedEchelon
  nameWithType.vb: Matrix(Of T).ReducedEchelon
- uid: Towel.Mathematics.Matrix`1.Rotate4x4(Towel.Mathematics.Matrix{`0},Towel.Measurements.Angle{`0},Towel.Mathematics.Vector{`0})
  name: Rotate4x4(Matrix<T>, Angle<T>, Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Rotate4x4_Towel_Mathematics_Matrix__0__Towel_Measurements_Angle__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Matrix`1.Rotate4x4(Towel.Mathematics.Matrix{`0},Towel.Measurements.Angle{`0},Towel.Mathematics.Vector{`0})
  name.vb: Rotate4x4(Matrix(Of T), Angle(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Rotate4x4(Towel.Mathematics.Matrix<T>, Towel.Measurements.Angle<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Rotate4x4(Towel.Mathematics.Matrix(Of T), Towel.Measurements.Angle(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Rotate4x4(Matrix<T>, Angle<T>, Vector<T>)
  nameWithType.vb: Matrix(Of T).Rotate4x4(Matrix(Of T), Angle(Of T), Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Rotate4x4(Towel.Measurements.Angle{`0},Towel.Mathematics.Vector{`0})
  name: Rotate4x4(Angle<T>, Vector<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Rotate4x4_Towel_Measurements_Angle__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Matrix`1.Rotate4x4(Towel.Measurements.Angle{`0},Towel.Mathematics.Vector{`0})
  name.vb: Rotate4x4(Angle(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Rotate4x4(Towel.Measurements.Angle<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Rotate4x4(Towel.Measurements.Angle(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Matrix<T>.Rotate4x4(Angle<T>, Vector<T>)
  nameWithType.vb: Matrix(Of T).Rotate4x4(Angle(Of T), Vector(Of T))
- uid: Towel.Mathematics.Matrix`1.Rotate4x4*
  name: Rotate4x4
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Rotate4x4_
  commentId: Overload:Towel.Mathematics.Matrix`1.Rotate4x4
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Rotate4x4
  fullName.vb: Towel.Mathematics.Matrix(Of T).Rotate4x4
  nameWithType: Matrix<T>.Rotate4x4
  nameWithType.vb: Matrix(Of T).Rotate4x4
- uid: Towel.Mathematics.Matrix`1.Rows
  name: Rows
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Rows
  commentId: P:Towel.Mathematics.Matrix`1.Rows
  fullName: Towel.Mathematics.Matrix<T>.Rows
  fullName.vb: Towel.Mathematics.Matrix(Of T).Rows
  nameWithType: Matrix<T>.Rows
  nameWithType.vb: Matrix(Of T).Rows
- uid: Towel.Mathematics.Matrix`1.Rows*
  name: Rows
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Rows_
  commentId: Overload:Towel.Mathematics.Matrix`1.Rows
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Rows
  fullName.vb: Towel.Mathematics.Matrix(Of T).Rows
  nameWithType: Matrix<T>.Rows
  nameWithType.vb: Matrix(Of T).Rows
- uid: Towel.Mathematics.Matrix`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Stepper_Action__0__
  commentId: M:Towel.Mathematics.Matrix`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Stepper(Action<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Stepper(Action(Of T))
  nameWithType: Matrix<T>.Stepper(Action<T>)
  nameWithType.vb: Matrix(Of T).Stepper(Action(Of T))
- uid: Towel.Mathematics.Matrix`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.Mathematics.Matrix`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.Mathematics.Matrix<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: Matrix<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: Matrix(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.Mathematics.Matrix`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.Mathematics.Matrix`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: Matrix<T>.Stepper(StepRef<T>)
  nameWithType.vb: Matrix(Of T).Stepper(StepRef(Of T))
- uid: Towel.Mathematics.Matrix`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.Mathematics.Matrix`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: Matrix<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: Matrix(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.Mathematics.Matrix`1.Stepper*
  name: Stepper
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Stepper_
  commentId: Overload:Towel.Mathematics.Matrix`1.Stepper
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Stepper
  fullName.vb: Towel.Mathematics.Matrix(Of T).Stepper
  nameWithType: Matrix<T>.Stepper
  nameWithType.vb: Matrix(Of T).Stepper
- uid: Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0})
  name: Subtract(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Subtract_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0})
  name.vb: Subtract(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Subtract(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtract(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Subtract(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Subtract(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name: Subtract(Matrix<T>, Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Subtract_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0})
  name.vb: Subtract(Matrix(Of T), Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Subtract(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtract(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Subtract(Matrix<T>, Matrix<T>)
  nameWithType.vb: Matrix(Of T).Subtract(Matrix(Of T), Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Subtract(Matrix<T>, Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Subtract_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Subtract(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Subtract(Towel.Mathematics.Matrix<T>, Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtract(Towel.Mathematics.Matrix(Of T), Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Subtract(Matrix<T>, Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Subtract(Matrix(Of T), Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Subtract(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Subtract_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Subtract(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Subtract(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Subtract(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtract(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Subtract(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Subtract(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Subtract*
  name: Subtract
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Subtract_
  commentId: Overload:Towel.Mathematics.Matrix`1.Subtract
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Subtract
  fullName.vb: Towel.Mathematics.Matrix(Of T).Subtract
  nameWithType: Matrix<T>.Subtract
  nameWithType.vb: Matrix(Of T).Subtract
- uid: Towel.Mathematics.Matrix`1.Trace
  name: Trace()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Trace
  commentId: M:Towel.Mathematics.Matrix`1.Trace
  fullName: Towel.Mathematics.Matrix<T>.Trace()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Trace()
  nameWithType: Matrix<T>.Trace()
  nameWithType.vb: Matrix(Of T).Trace()
- uid: Towel.Mathematics.Matrix`1.Trace(Towel.Mathematics.Matrix{`0})
  name: Trace(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Trace_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Trace(Towel.Mathematics.Matrix{`0})
  name.vb: Trace(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Trace(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Trace(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Trace(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Trace(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Trace*
  name: Trace
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Trace_
  commentId: Overload:Towel.Mathematics.Matrix`1.Trace
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Trace
  fullName.vb: Towel.Mathematics.Matrix(Of T).Trace
  nameWithType: Matrix<T>.Trace
  nameWithType.vb: Matrix(Of T).Trace
- uid: Towel.Mathematics.Matrix`1.Transpose
  name: Transpose()
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Transpose
  commentId: M:Towel.Mathematics.Matrix`1.Transpose
  fullName: Towel.Mathematics.Matrix<T>.Transpose()
  fullName.vb: Towel.Mathematics.Matrix(Of T).Transpose()
  nameWithType: Matrix<T>.Transpose()
  nameWithType.vb: Matrix(Of T).Transpose()
- uid: Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0})
  name: Transpose(Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Transpose_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0})
  name.vb: Transpose(Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Transpose(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Transpose(Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Transpose(Matrix<T>)
  nameWithType.vb: Matrix(Of T).Transpose(Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name: Transpose(Matrix<T>, ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Transpose_Towel_Mathematics_Matrix__0__Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0},Towel.Mathematics.Matrix{`0}@)
  name.vb: Transpose(Matrix(Of T), ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Transpose(Towel.Mathematics.Matrix<T>, ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Transpose(Towel.Mathematics.Matrix(Of T), ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Transpose(Matrix<T>, ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Transpose(Matrix(Of T), ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0}@)
  name: Transpose(ref Matrix<T>)
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Transpose_Towel_Mathematics_Matrix__0___
  commentId: M:Towel.Mathematics.Matrix`1.Transpose(Towel.Mathematics.Matrix{`0}@)
  name.vb: Transpose(ByRef Matrix(Of T))
  fullName: Towel.Mathematics.Matrix<T>.Transpose(ref Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Matrix(Of T).Transpose(ByRef Towel.Mathematics.Matrix(Of T))
  nameWithType: Matrix<T>.Transpose(ref Matrix<T>)
  nameWithType.vb: Matrix(Of T).Transpose(ByRef Matrix(Of T))
- uid: Towel.Mathematics.Matrix`1.Transpose*
  name: Transpose
  href: api/Towel.Mathematics.Matrix-1.html#Towel_Mathematics_Matrix_1_Transpose_
  commentId: Overload:Towel.Mathematics.Matrix`1.Transpose
  isSpec: "True"
  fullName: Towel.Mathematics.Matrix<T>.Transpose
  fullName.vb: Towel.Mathematics.Matrix(Of T).Transpose
  nameWithType: Matrix<T>.Transpose
  nameWithType.vb: Matrix(Of T).Transpose
- uid: Towel.Mathematics.Quaternion`1
  name: Quaternion<T>
  href: api/Towel.Mathematics.Quaternion-1.html
  commentId: T:Towel.Mathematics.Quaternion`1
  name.vb: Quaternion(Of T)
  fullName: Towel.Mathematics.Quaternion<T>
  fullName.vb: Towel.Mathematics.Quaternion(Of T)
  nameWithType: Quaternion<T>
  nameWithType.vb: Quaternion(Of T)
- uid: Towel.Mathematics.Quaternion`1.#ctor(`0,`0,`0,`0)
  name: Quaternion(T, T, T, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1__ctor__0__0__0__0_
  commentId: M:Towel.Mathematics.Quaternion`1.#ctor(`0,`0,`0,`0)
  fullName: Towel.Mathematics.Quaternion<T>.Quaternion(T, T, T, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Quaternion(T, T, T, T)
  nameWithType: Quaternion<T>.Quaternion(T, T, T, T)
  nameWithType.vb: Quaternion(Of T).Quaternion(T, T, T, T)
- uid: Towel.Mathematics.Quaternion`1.#ctor*
  name: Quaternion
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1__ctor_
  commentId: Overload:Towel.Mathematics.Quaternion`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Quaternion
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Quaternion
  nameWithType: Quaternion<T>.Quaternion
  nameWithType.vb: Quaternion(Of T).Quaternion
- uid: Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0})
  name: Add(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Add_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0})
  name.vb: Add(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Add(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Add(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Add(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Add(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Add(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Add_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Add(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Add(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Add(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Add(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Add(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Add(Quaternion<T>, Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Add_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Add(Quaternion(Of T), Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Add(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Add(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Add(Quaternion<T>, Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Add(Quaternion(Of T), Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Add(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Add_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Add(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Add(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Add(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Add(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Add(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Add(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Add*
  name: Add
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Add_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Add
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Add
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Add
  nameWithType: Quaternion<T>.Add
  nameWithType.vb: Quaternion(Of T).Add
- uid: Towel.Mathematics.Quaternion`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Clone
  commentId: M:Towel.Mathematics.Quaternion`1.Clone
  fullName: Towel.Mathematics.Quaternion<T>.Clone()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Clone()
  nameWithType: Quaternion<T>.Clone()
  nameWithType.vb: Quaternion(Of T).Clone()
- uid: Towel.Mathematics.Quaternion`1.Clone(Towel.Mathematics.Quaternion{`0})
  name: Clone(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Clone_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Clone(Towel.Mathematics.Quaternion{`0})
  name.vb: Clone(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Clone(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Clone(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Clone(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Clone(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Clone_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Clone
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Clone
  nameWithType: Quaternion<T>.Clone
  nameWithType.vb: Quaternion(Of T).Clone
- uid: Towel.Mathematics.Quaternion`1.Conjugate
  name: Conjugate()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Conjugate
  commentId: M:Towel.Mathematics.Quaternion`1.Conjugate
  fullName: Towel.Mathematics.Quaternion<T>.Conjugate()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Conjugate()
  nameWithType: Quaternion<T>.Conjugate()
  nameWithType.vb: Quaternion(Of T).Conjugate()
- uid: Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0})
  name: Conjugate(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Conjugate_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0})
  name.vb: Conjugate(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Conjugate(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Conjugate(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Conjugate(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Conjugate(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Conjugate(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Conjugate_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Conjugate(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Conjugate(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Conjugate(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Conjugate(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Conjugate(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0}@)
  name: Conjugate(ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Conjugate_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Conjugate(Towel.Mathematics.Quaternion{`0}@)
  name.vb: Conjugate(ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Conjugate(ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Conjugate(ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Conjugate(ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Conjugate(ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Conjugate*
  name: Conjugate
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Conjugate_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Conjugate
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Conjugate
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Conjugate
  nameWithType: Quaternion<T>.Conjugate
  nameWithType.vb: Quaternion(Of T).Conjugate
- uid: Towel.Mathematics.Quaternion`1.Equal(Towel.Mathematics.Quaternion{`0})
  name: Equal(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Equal_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Equal(Towel.Mathematics.Quaternion{`0})
  name.vb: Equal(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Equal(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equal(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Equal(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Equal(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Equal(Towel.Mathematics.Quaternion{`0},`0)
  name: Equal(Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Equal_Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.Equal(Towel.Mathematics.Quaternion{`0},`0)
  name.vb: Equal(Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.Equal(Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equal(Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.Equal(Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).Equal(Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.Equal*
  name: Equal
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Equal_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Equal
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Equal
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equal
  nameWithType: Quaternion<T>.Equal
  nameWithType.vb: Quaternion(Of T).Equal
- uid: Towel.Mathematics.Quaternion`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Quaternion`1.Equals(System.Object)
  fullName: Towel.Mathematics.Quaternion<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equals(System.Object)
  nameWithType: Quaternion<T>.Equals(Object)
  nameWithType.vb: Quaternion(Of T).Equals(Object)
- uid: Towel.Mathematics.Quaternion`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Equals_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Equals
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equals
  nameWithType: Quaternion<T>.Equals
  nameWithType.vb: Quaternion(Of T).Equals
- uid: Towel.Mathematics.Quaternion`1.Factory_Matrix3x3(Towel.Mathematics.Matrix{`0})
  name: Factory_Matrix3x3(Matrix<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Factory_Matrix3x3_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Factory_Matrix3x3(Towel.Mathematics.Matrix{`0})
  name.vb: Factory_Matrix3x3(Matrix(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Factory_Matrix3x3(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Factory_Matrix3x3(Towel.Mathematics.Matrix(Of T))
  nameWithType: Quaternion<T>.Factory_Matrix3x3(Matrix<T>)
  nameWithType.vb: Quaternion(Of T).Factory_Matrix3x3(Matrix(Of T))
- uid: Towel.Mathematics.Quaternion`1.Factory_Matrix3x3*
  name: Factory_Matrix3x3
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Factory_Matrix3x3_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Factory_Matrix3x3
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Factory_Matrix3x3
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Factory_Matrix3x3
  nameWithType: Quaternion<T>.Factory_Matrix3x3
  nameWithType.vb: Quaternion(Of T).Factory_Matrix3x3
- uid: Towel.Mathematics.Quaternion`1.Factory_Matrix4x4(Towel.Mathematics.Matrix{`0})
  name: Factory_Matrix4x4(Matrix<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Factory_Matrix4x4_Towel_Mathematics_Matrix__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Factory_Matrix4x4(Towel.Mathematics.Matrix{`0})
  name.vb: Factory_Matrix4x4(Matrix(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Factory_Matrix4x4(Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Factory_Matrix4x4(Towel.Mathematics.Matrix(Of T))
  nameWithType: Quaternion<T>.Factory_Matrix4x4(Matrix<T>)
  nameWithType.vb: Quaternion(Of T).Factory_Matrix4x4(Matrix(Of T))
- uid: Towel.Mathematics.Quaternion`1.Factory_Matrix4x4*
  name: Factory_Matrix4x4
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Factory_Matrix4x4_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Factory_Matrix4x4
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Factory_Matrix4x4
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Factory_Matrix4x4
  nameWithType: Quaternion<T>.Factory_Matrix4x4
  nameWithType.vb: Quaternion(Of T).Factory_Matrix4x4
- uid: Towel.Mathematics.Quaternion`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetHashCode
  commentId: M:Towel.Mathematics.Quaternion`1.GetHashCode
  fullName: Towel.Mathematics.Quaternion<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetHashCode()
  nameWithType: Quaternion<T>.GetHashCode()
  nameWithType.vb: Quaternion(Of T).GetHashCode()
- uid: Towel.Mathematics.Quaternion`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Quaternion`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetHashCode
  nameWithType: Quaternion<T>.GetHashCode
  nameWithType.vb: Quaternion(Of T).GetHashCode
- uid: Towel.Mathematics.Quaternion`1.GetHasZeroMagnitude(Towel.Mathematics.Quaternion{`0})
  name: GetHasZeroMagnitude(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetHasZeroMagnitude_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.GetHasZeroMagnitude(Towel.Mathematics.Quaternion{`0})
  name.vb: GetHasZeroMagnitude(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.GetHasZeroMagnitude(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetHasZeroMagnitude(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.GetHasZeroMagnitude(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).GetHasZeroMagnitude(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.GetHasZeroMagnitude*
  name: GetHasZeroMagnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetHasZeroMagnitude_
  commentId: Overload:Towel.Mathematics.Quaternion`1.GetHasZeroMagnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.GetHasZeroMagnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetHasZeroMagnitude
  nameWithType: Quaternion<T>.GetHasZeroMagnitude
  nameWithType.vb: Quaternion(Of T).GetHasZeroMagnitude
- uid: Towel.Mathematics.Quaternion`1.GetMagnitude(Towel.Mathematics.Quaternion{`0})
  name: GetMagnitude(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetMagnitude_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.GetMagnitude(Towel.Mathematics.Quaternion{`0})
  name.vb: GetMagnitude(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.GetMagnitude(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetMagnitude(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.GetMagnitude(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).GetMagnitude(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.GetMagnitude*
  name: GetMagnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetMagnitude_
  commentId: Overload:Towel.Mathematics.Quaternion`1.GetMagnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.GetMagnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetMagnitude
  nameWithType: Quaternion<T>.GetMagnitude
  nameWithType.vb: Quaternion(Of T).GetMagnitude
- uid: Towel.Mathematics.Quaternion`1.GetMagnitudeSquared(Towel.Mathematics.Quaternion{`0})
  name: GetMagnitudeSquared(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetMagnitudeSquared_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.GetMagnitudeSquared(Towel.Mathematics.Quaternion{`0})
  name.vb: GetMagnitudeSquared(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.GetMagnitudeSquared(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetMagnitudeSquared(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.GetMagnitudeSquared(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).GetMagnitudeSquared(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.GetMagnitudeSquared*
  name: GetMagnitudeSquared
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_GetMagnitudeSquared_
  commentId: Overload:Towel.Mathematics.Quaternion`1.GetMagnitudeSquared
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.GetMagnitudeSquared
  fullName.vb: Towel.Mathematics.Quaternion(Of T).GetMagnitudeSquared
  nameWithType: Quaternion<T>.GetMagnitudeSquared
  nameWithType.vb: Quaternion(Of T).GetMagnitudeSquared
- uid: Towel.Mathematics.Quaternion`1.HasZeroMagnitude
  name: HasZeroMagnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_HasZeroMagnitude
  commentId: P:Towel.Mathematics.Quaternion`1.HasZeroMagnitude
  fullName: Towel.Mathematics.Quaternion<T>.HasZeroMagnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).HasZeroMagnitude
  nameWithType: Quaternion<T>.HasZeroMagnitude
  nameWithType.vb: Quaternion(Of T).HasZeroMagnitude
- uid: Towel.Mathematics.Quaternion`1.HasZeroMagnitude*
  name: HasZeroMagnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_HasZeroMagnitude_
  commentId: Overload:Towel.Mathematics.Quaternion`1.HasZeroMagnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.HasZeroMagnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).HasZeroMagnitude
  nameWithType: Quaternion<T>.HasZeroMagnitude
  nameWithType.vb: Quaternion(Of T).HasZeroMagnitude
- uid: Towel.Mathematics.Quaternion`1.Identity
  name: Identity
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Identity
  commentId: P:Towel.Mathematics.Quaternion`1.Identity
  fullName: Towel.Mathematics.Quaternion<T>.Identity
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Identity
  nameWithType: Quaternion<T>.Identity
  nameWithType.vb: Quaternion(Of T).Identity
- uid: Towel.Mathematics.Quaternion`1.Identity*
  name: Identity
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Identity_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Identity
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Identity
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Identity
  nameWithType: Quaternion<T>.Identity
  nameWithType.vb: Quaternion(Of T).Identity
- uid: Towel.Mathematics.Quaternion`1.Invert
  name: Invert()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Invert
  commentId: M:Towel.Mathematics.Quaternion`1.Invert
  fullName: Towel.Mathematics.Quaternion<T>.Invert()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Invert()
  nameWithType: Quaternion<T>.Invert()
  nameWithType.vb: Quaternion(Of T).Invert()
- uid: Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0})
  name: Invert(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Invert_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0})
  name.vb: Invert(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Invert(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Invert(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Invert(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Invert(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Invert(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Invert_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Invert(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Invert(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Invert(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Invert(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Invert(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0}@)
  name: Invert(ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Invert_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Invert(Towel.Mathematics.Quaternion{`0}@)
  name.vb: Invert(ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Invert(ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Invert(ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Invert(ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Invert(ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Invert*
  name: Invert
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Invert_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Invert
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Invert
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Invert
  nameWithType: Quaternion<T>.Invert
  nameWithType.vb: Quaternion(Of T).Invert
- uid: Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},`0)
  name: LinearInterpolation(Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_LinearInterpolation_Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},`0)
  name.vb: LinearInterpolation(Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.LinearInterpolation(Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).LinearInterpolation(Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.LinearInterpolation(Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).LinearInterpolation(Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name: LinearInterpolation(Quaternion<T>, T, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_LinearInterpolation_Towel_Mathematics_Quaternion__0___0_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name.vb: LinearInterpolation(Quaternion(Of T), T, ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.LinearInterpolation(Towel.Mathematics.Quaternion<T>, T, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).LinearInterpolation(Towel.Mathematics.Quaternion(Of T), T, ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.LinearInterpolation(Quaternion<T>, T, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).LinearInterpolation(Quaternion(Of T), T, ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0)
  name: LinearInterpolation(Quaternion<T>, Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_LinearInterpolation_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0)
  name.vb: LinearInterpolation(Quaternion(Of T), Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.LinearInterpolation(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).LinearInterpolation(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.LinearInterpolation(Quaternion<T>, Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).LinearInterpolation(Quaternion(Of T), Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name: LinearInterpolation(Quaternion<T>, Quaternion<T>, T, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_LinearInterpolation_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___0_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.LinearInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name.vb: LinearInterpolation(Quaternion(Of T), Quaternion(Of T), T, ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.LinearInterpolation(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, T, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).LinearInterpolation(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), T, ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.LinearInterpolation(Quaternion<T>, Quaternion<T>, T, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).LinearInterpolation(Quaternion(Of T), Quaternion(Of T), T, ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.LinearInterpolation*
  name: LinearInterpolation
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_LinearInterpolation_
  commentId: Overload:Towel.Mathematics.Quaternion`1.LinearInterpolation
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.LinearInterpolation
  fullName.vb: Towel.Mathematics.Quaternion(Of T).LinearInterpolation
  nameWithType: Quaternion<T>.LinearInterpolation
  nameWithType.vb: Quaternion(Of T).LinearInterpolation
- uid: Towel.Mathematics.Quaternion`1.Magnitude
  name: Magnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Magnitude
  commentId: P:Towel.Mathematics.Quaternion`1.Magnitude
  fullName: Towel.Mathematics.Quaternion<T>.Magnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Magnitude
  nameWithType: Quaternion<T>.Magnitude
  nameWithType.vb: Quaternion(Of T).Magnitude
- uid: Towel.Mathematics.Quaternion`1.Magnitude*
  name: Magnitude
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Magnitude_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Magnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Magnitude
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Magnitude
  nameWithType: Quaternion<T>.Magnitude
  nameWithType.vb: Quaternion(Of T).Magnitude
- uid: Towel.Mathematics.Quaternion`1.MagnitudeSquared
  name: MagnitudeSquared
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_MagnitudeSquared
  commentId: P:Towel.Mathematics.Quaternion`1.MagnitudeSquared
  fullName: Towel.Mathematics.Quaternion<T>.MagnitudeSquared
  fullName.vb: Towel.Mathematics.Quaternion(Of T).MagnitudeSquared
  nameWithType: Quaternion<T>.MagnitudeSquared
  nameWithType.vb: Quaternion(Of T).MagnitudeSquared
- uid: Towel.Mathematics.Quaternion`1.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_MagnitudeSquared_
  commentId: Overload:Towel.Mathematics.Quaternion`1.MagnitudeSquared
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.MagnitudeSquared
  fullName.vb: Towel.Mathematics.Quaternion(Of T).MagnitudeSquared
  nameWithType: Quaternion<T>.MagnitudeSquared
  nameWithType.vb: Quaternion(Of T).MagnitudeSquared
- uid: Towel.Mathematics.Quaternion`1.Multiply(`0)
  name: Multiply(T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply__0_
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(`0)
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(T)
  nameWithType: Quaternion<T>.Multiply(T)
  nameWithType.vb: Quaternion(Of T).Multiply(T)
- uid: Towel.Mathematics.Quaternion`1.Multiply(`0,Towel.Mathematics.Quaternion{`0})
  name: Multiply(T, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply__0_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(`0,Towel.Mathematics.Quaternion{`0})
  name.vb: Multiply(T, Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(T, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(T, Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(T, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(T, Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(`0,Towel.Mathematics.Quaternion{`0}@)
  name: Multiply(T, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply__0_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(`0,Towel.Mathematics.Quaternion{`0}@)
  name.vb: Multiply(T, ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(T, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(T, ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(T, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(T, ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0})
  name: Multiply(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0})
  name.vb: Multiply(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},`0)
  name: Multiply(Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},`0)
  name.vb: Multiply(Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Multiply(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Multiply(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Multiply(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Multiply(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name: Multiply(Quaternion<T>, Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Quaternion(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, Vector<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Multiply(Quaternion<T>, Vector<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Multiply(Quaternion(Of T), Vector(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, Vector<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), Vector(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Vector{`0})
  name: Multiply(Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Multiply(Vector<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Multiply(Vector<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_Towel_Mathematics_Vector__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Multiply(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Multiply(Vector(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Vector<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Vector(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Multiply_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Multiply
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply
  nameWithType: Quaternion<T>.Multiply
  nameWithType.vb: Quaternion(Of T).Multiply
- uid: Towel.Mathematics.Quaternion`1.Normalize
  name: Normalize()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Normalize
  commentId: M:Towel.Mathematics.Quaternion`1.Normalize
  fullName: Towel.Mathematics.Quaternion<T>.Normalize()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Normalize()
  nameWithType: Quaternion<T>.Normalize()
  nameWithType.vb: Quaternion(Of T).Normalize()
- uid: Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0})
  name: Normalize(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Normalize_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0})
  name.vb: Normalize(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Normalize(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Normalize(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Normalize(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Normalize(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Normalize(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Normalize_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Normalize(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Normalize(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Normalize(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Normalize(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Normalize(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0}@)
  name: Normalize(ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Normalize_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Normalize(Towel.Mathematics.Quaternion{`0}@)
  name.vb: Normalize(ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Normalize(ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Normalize(ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Normalize(ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Normalize(ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Normalize*
  name: Normalize
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Normalize_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Normalize
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Normalize
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Normalize
  nameWithType: Quaternion<T>.Normalize
  nameWithType.vb: Quaternion(Of T).Normalize
- uid: Towel.Mathematics.Quaternion`1.op_Addition(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Addition(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Addition_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Addition(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Addition(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Addition(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Addition(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Addition(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Addition(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Addition*
  name: Addition
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Addition_
  commentId: Overload:Towel.Mathematics.Quaternion`1.op_Addition
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Addition
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Addition
  nameWithType: Quaternion<T>.Addition
  nameWithType.vb: Quaternion(Of T).Addition
- uid: Towel.Mathematics.Quaternion`1.op_Equality(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Equality(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Equality_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Equality(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Equality(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Equality(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equality(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Equality(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Equality(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Equality*
  name: Equality
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Equality_
  commentId: Overload:Towel.Mathematics.Quaternion`1.op_Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Equality
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Equality
  nameWithType: Quaternion<T>.Equality
  nameWithType.vb: Quaternion(Of T).Equality
- uid: Towel.Mathematics.Quaternion`1.op_Inequality(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Inequality(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Inequality_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Inequality(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Inequality(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Inequality(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Inequality(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Inequality(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Inequality(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Inequality*
  name: Inequality
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Inequality_
  commentId: Overload:Towel.Mathematics.Quaternion`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Inequality
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Inequality
  nameWithType: Quaternion<T>.Inequality
  nameWithType.vb: Quaternion(Of T).Inequality
- uid: Towel.Mathematics.Quaternion`1.op_Multiply(`0,Towel.Mathematics.Quaternion{`0})
  name: Multiply(T, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Multiply__0_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Multiply(`0,Towel.Mathematics.Quaternion{`0})
  name.vb: Multiply(T, Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(T, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(T, Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(T, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(T, Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},`0)
  name: Multiply(Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Multiply_Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},`0)
  name.vb: Multiply(Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Multiply(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Multiply(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name: Multiply(Quaternion<T>, Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Multiply_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Multiply(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name.vb: Multiply(Quaternion(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Multiply(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Multiply(Quaternion<T>, Vector<T>)
  nameWithType.vb: Quaternion(Of T).Multiply(Quaternion(Of T), Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Multiply_
  commentId: Overload:Towel.Mathematics.Quaternion`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Multiply
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Multiply
  nameWithType: Quaternion<T>.Multiply
  nameWithType.vb: Quaternion(Of T).Multiply
- uid: Towel.Mathematics.Quaternion`1.op_Subtraction(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Subtraction(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Subtraction_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.op_Subtraction(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Subtraction(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Subtraction(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtraction(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Subtraction(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Subtraction(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_op_Subtraction_
  commentId: Overload:Towel.Mathematics.Quaternion`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Subtraction
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtraction
  nameWithType: Quaternion<T>.Subtraction
  nameWithType.vb: Quaternion(Of T).Subtraction
- uid: Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name: Rotate(Quaternion<T>, Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Rotate_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0})
  name.vb: Rotate(Quaternion(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Rotate(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Rotate(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Rotate(Quaternion<T>, Vector<T>)
  nameWithType.vb: Quaternion(Of T).Rotate(Quaternion(Of T), Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Rotate(Quaternion<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Rotate_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Rotate(Quaternion(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Rotate(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Rotate(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Rotate(Quaternion<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Quaternion(Of T).Rotate(Quaternion(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Vector{`0})
  name: Rotate(Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Rotate_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Vector{`0})
  name.vb: Rotate(Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Rotate(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Rotate(Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Rotate(Vector<T>)
  nameWithType.vb: Quaternion(Of T).Rotate(Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Rotate(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Rotate_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Rotate(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Rotate(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Rotate(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Rotate(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Quaternion<T>.Rotate(Vector<T>, ref Vector<T>)
  nameWithType.vb: Quaternion(Of T).Rotate(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Quaternion`1.Rotate*
  name: Rotate
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Rotate_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Rotate
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Rotate
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Rotate
  nameWithType: Quaternion<T>.Rotate
  nameWithType.vb: Quaternion(Of T).Rotate
- uid: Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},`0)
  name: SphericalInterpolation(Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_SphericalInterpolation_Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},`0)
  name.vb: SphericalInterpolation(Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.SphericalInterpolation(Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).SphericalInterpolation(Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.SphericalInterpolation(Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).SphericalInterpolation(Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name: SphericalInterpolation(Quaternion<T>, T, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_SphericalInterpolation_Towel_Mathematics_Quaternion__0___0_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name.vb: SphericalInterpolation(Quaternion(Of T), T, ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.SphericalInterpolation(Towel.Mathematics.Quaternion<T>, T, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).SphericalInterpolation(Towel.Mathematics.Quaternion(Of T), T, ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.SphericalInterpolation(Quaternion<T>, T, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).SphericalInterpolation(Quaternion(Of T), T, ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0)
  name: SphericalInterpolation(Quaternion<T>, Quaternion<T>, T)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_SphericalInterpolation_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___0_
  commentId: M:Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0)
  name.vb: SphericalInterpolation(Quaternion(Of T), Quaternion(Of T), T)
  fullName: Towel.Mathematics.Quaternion<T>.SphericalInterpolation(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, T)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).SphericalInterpolation(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), T)
  nameWithType: Quaternion<T>.SphericalInterpolation(Quaternion<T>, Quaternion<T>, T)
  nameWithType.vb: Quaternion(Of T).SphericalInterpolation(Quaternion(Of T), Quaternion(Of T), T)
- uid: Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name: SphericalInterpolation(Quaternion<T>, Quaternion<T>, T, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_SphericalInterpolation_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___0_Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.SphericalInterpolation(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},`0,Towel.Mathematics.Quaternion{`0}@)
  name.vb: SphericalInterpolation(Quaternion(Of T), Quaternion(Of T), T, ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.SphericalInterpolation(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, T, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).SphericalInterpolation(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), T, ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.SphericalInterpolation(Quaternion<T>, Quaternion<T>, T, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).SphericalInterpolation(Quaternion(Of T), Quaternion(Of T), T, ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.SphericalInterpolation*
  name: SphericalInterpolation
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_SphericalInterpolation_
  commentId: Overload:Towel.Mathematics.Quaternion`1.SphericalInterpolation
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.SphericalInterpolation
  fullName.vb: Towel.Mathematics.Quaternion(Of T).SphericalInterpolation
  nameWithType: Quaternion<T>.SphericalInterpolation
  nameWithType.vb: Quaternion(Of T).SphericalInterpolation
- uid: Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0})
  name: Subtract(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Subtract_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0})
  name.vb: Subtract(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Subtract(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtract(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Subtract(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Subtract(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name: Subtract(Quaternion<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Subtract_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: Subtract(Quaternion(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Subtract(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtract(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Subtract(Quaternion<T>, Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Subtract(Quaternion(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Subtract(Quaternion<T>, Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Subtract_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Subtract(Quaternion(Of T), Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Subtract(Towel.Mathematics.Quaternion<T>, Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtract(Towel.Mathematics.Quaternion(Of T), Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Subtract(Quaternion<T>, Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Subtract(Quaternion(Of T), Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name: Subtract(Quaternion<T>, ref Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Subtract_Towel_Mathematics_Quaternion__0__Towel_Mathematics_Quaternion__0___
  commentId: M:Towel.Mathematics.Quaternion`1.Subtract(Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Quaternion{`0}@)
  name.vb: Subtract(Quaternion(Of T), ByRef Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.Subtract(Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtract(Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.Subtract(Quaternion<T>, ref Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).Subtract(Quaternion(Of T), ByRef Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.Subtract*
  name: Subtract
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Subtract_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Subtract
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Subtract
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Subtract
  nameWithType: Quaternion<T>.Subtract
  nameWithType.vb: Quaternion(Of T).Subtract
- uid: Towel.Mathematics.Quaternion`1.ToMatrix3x3(Towel.Mathematics.Quaternion{`0})
  name: ToMatrix3x3(Quaternion<T>)
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_ToMatrix3x3_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Quaternion`1.ToMatrix3x3(Towel.Mathematics.Quaternion{`0})
  name.vb: ToMatrix3x3(Quaternion(Of T))
  fullName: Towel.Mathematics.Quaternion<T>.ToMatrix3x3(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Quaternion(Of T).ToMatrix3x3(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Quaternion<T>.ToMatrix3x3(Quaternion<T>)
  nameWithType.vb: Quaternion(Of T).ToMatrix3x3(Quaternion(Of T))
- uid: Towel.Mathematics.Quaternion`1.ToMatrix3x3*
  name: ToMatrix3x3
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_ToMatrix3x3_
  commentId: Overload:Towel.Mathematics.Quaternion`1.ToMatrix3x3
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.ToMatrix3x3
  fullName.vb: Towel.Mathematics.Quaternion(Of T).ToMatrix3x3
  nameWithType: Quaternion<T>.ToMatrix3x3
  nameWithType.vb: Quaternion(Of T).ToMatrix3x3
- uid: Towel.Mathematics.Quaternion`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_ToString
  commentId: M:Towel.Mathematics.Quaternion`1.ToString
  fullName: Towel.Mathematics.Quaternion<T>.ToString()
  fullName.vb: Towel.Mathematics.Quaternion(Of T).ToString()
  nameWithType: Quaternion<T>.ToString()
  nameWithType.vb: Quaternion(Of T).ToString()
- uid: Towel.Mathematics.Quaternion`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_ToString_
  commentId: Overload:Towel.Mathematics.Quaternion`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.ToString
  fullName.vb: Towel.Mathematics.Quaternion(Of T).ToString
  nameWithType: Quaternion<T>.ToString
  nameWithType.vb: Quaternion(Of T).ToString
- uid: Towel.Mathematics.Quaternion`1.W
  name: W
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_W
  commentId: P:Towel.Mathematics.Quaternion`1.W
  fullName: Towel.Mathematics.Quaternion<T>.W
  fullName.vb: Towel.Mathematics.Quaternion(Of T).W
  nameWithType: Quaternion<T>.W
  nameWithType.vb: Quaternion(Of T).W
- uid: Towel.Mathematics.Quaternion`1.W*
  name: W
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_W_
  commentId: Overload:Towel.Mathematics.Quaternion`1.W
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.W
  fullName.vb: Towel.Mathematics.Quaternion(Of T).W
  nameWithType: Quaternion<T>.W
  nameWithType.vb: Quaternion(Of T).W
- uid: Towel.Mathematics.Quaternion`1.X
  name: X
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_X
  commentId: P:Towel.Mathematics.Quaternion`1.X
  fullName: Towel.Mathematics.Quaternion<T>.X
  fullName.vb: Towel.Mathematics.Quaternion(Of T).X
  nameWithType: Quaternion<T>.X
  nameWithType.vb: Quaternion(Of T).X
- uid: Towel.Mathematics.Quaternion`1.X*
  name: X
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_X_
  commentId: Overload:Towel.Mathematics.Quaternion`1.X
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.X
  fullName.vb: Towel.Mathematics.Quaternion(Of T).X
  nameWithType: Quaternion<T>.X
  nameWithType.vb: Quaternion(Of T).X
- uid: Towel.Mathematics.Quaternion`1.Y
  name: Y
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Y
  commentId: P:Towel.Mathematics.Quaternion`1.Y
  fullName: Towel.Mathematics.Quaternion<T>.Y
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Y
  nameWithType: Quaternion<T>.Y
  nameWithType.vb: Quaternion(Of T).Y
- uid: Towel.Mathematics.Quaternion`1.Y*
  name: Y
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Y_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Y
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Y
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Y
  nameWithType: Quaternion<T>.Y
  nameWithType.vb: Quaternion(Of T).Y
- uid: Towel.Mathematics.Quaternion`1.Z
  name: Z
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Z
  commentId: P:Towel.Mathematics.Quaternion`1.Z
  fullName: Towel.Mathematics.Quaternion<T>.Z
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Z
  nameWithType: Quaternion<T>.Z
  nameWithType.vb: Quaternion(Of T).Z
- uid: Towel.Mathematics.Quaternion`1.Z*
  name: Z
  href: api/Towel.Mathematics.Quaternion-1.html#Towel_Mathematics_Quaternion_1_Z_
  commentId: Overload:Towel.Mathematics.Quaternion`1.Z
  isSpec: "True"
  fullName: Towel.Mathematics.Quaternion<T>.Z
  fullName.vb: Towel.Mathematics.Quaternion(Of T).Z
  nameWithType: Quaternion<T>.Z
  nameWithType.vb: Quaternion(Of T).Z
- uid: Towel.Mathematics.Symbolics
  name: Symbolics
  href: api/Towel.Mathematics.Symbolics.html
  commentId: T:Towel.Mathematics.Symbolics
  fullName: Towel.Mathematics.Symbolics
  nameWithType: Symbolics
- uid: Towel.Mathematics.Symbolics.Add
  name: Symbolics.Add
  href: api/Towel.Mathematics.Symbolics.Add.html
  commentId: T:Towel.Mathematics.Symbolics.Add
  fullName: Towel.Mathematics.Symbolics.Add
  nameWithType: Symbolics.Add
- uid: Towel.Mathematics.Symbolics.Add.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Add(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Add.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Add.Add(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Add.Add(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Add.#ctor*
  name: Add
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Add.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Add.Add
  nameWithType: Symbolics.Add.Add
- uid: Towel.Mathematics.Symbolics.Add.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Clone
  commentId: M:Towel.Mathematics.Symbolics.Add.Clone
  fullName: Towel.Mathematics.Symbolics.Add.Clone()
  nameWithType: Symbolics.Add.Clone()
- uid: Towel.Mathematics.Symbolics.Add.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Add.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Add.Clone
  nameWithType: Symbolics.Add.Clone
- uid: Towel.Mathematics.Symbolics.Add.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Add.Simplify
  fullName: Towel.Mathematics.Symbolics.Add.Simplify()
  nameWithType: Symbolics.Add.Simplify()
- uid: Towel.Mathematics.Symbolics.Add.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Add.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Add.Simplify
  nameWithType: Symbolics.Add.Simplify
- uid: Towel.Mathematics.Symbolics.Add.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Add.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Add.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Add.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Add.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Add.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Add.Substitute
  nameWithType: Symbolics.Add.Substitute
- uid: Towel.Mathematics.Symbolics.Add.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_ToString
  commentId: M:Towel.Mathematics.Symbolics.Add.ToString
  fullName: Towel.Mathematics.Symbolics.Add.ToString()
  nameWithType: Symbolics.Add.ToString()
- uid: Towel.Mathematics.Symbolics.Add.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Add.html#Towel_Mathematics_Symbolics_Add_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Add.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Add.ToString
  nameWithType: Symbolics.Add.ToString
- uid: Towel.Mathematics.Symbolics.AddOrSubtract
  name: Symbolics.AddOrSubtract
  href: api/Towel.Mathematics.Symbolics.AddOrSubtract.html
  commentId: T:Towel.Mathematics.Symbolics.AddOrSubtract
  fullName: Towel.Mathematics.Symbolics.AddOrSubtract
  nameWithType: Symbolics.AddOrSubtract
- uid: Towel.Mathematics.Symbolics.AddOrSubtract.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: AddOrSubtract(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.AddOrSubtract.html#Towel_Mathematics_Symbolics_AddOrSubtract__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.AddOrSubtract.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.AddOrSubtract.AddOrSubtract(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.AddOrSubtract.AddOrSubtract(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.AddOrSubtract.#ctor*
  name: AddOrSubtract
  href: api/Towel.Mathematics.Symbolics.AddOrSubtract.html#Towel_Mathematics_Symbolics_AddOrSubtract__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.AddOrSubtract.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.AddOrSubtract.AddOrSubtract
  nameWithType: Symbolics.AddOrSubtract.AddOrSubtract
- uid: Towel.Mathematics.Symbolics.Binary
  name: Symbolics.Binary
  href: api/Towel.Mathematics.Symbolics.Binary.html
  commentId: T:Towel.Mathematics.Symbolics.Binary
  fullName: Towel.Mathematics.Symbolics.Binary
  nameWithType: Symbolics.Binary
- uid: Towel.Mathematics.Symbolics.Binary.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Binary(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Binary.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Binary.Binary(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Binary.Binary(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Binary.#ctor*
  name: Binary
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Binary.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Binary.Binary
  nameWithType: Symbolics.Binary.Binary
- uid: Towel.Mathematics.Symbolics.Binary.A
  name: A
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_A
  commentId: P:Towel.Mathematics.Symbolics.Binary.A
  fullName: Towel.Mathematics.Symbolics.Binary.A
  nameWithType: Symbolics.Binary.A
- uid: Towel.Mathematics.Symbolics.Binary.A*
  name: A
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_A_
  commentId: Overload:Towel.Mathematics.Symbolics.Binary.A
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Binary.A
  nameWithType: Symbolics.Binary.A
- uid: Towel.Mathematics.Symbolics.Binary.B
  name: B
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_B
  commentId: P:Towel.Mathematics.Symbolics.Binary.B
  fullName: Towel.Mathematics.Symbolics.Binary.B
  nameWithType: Symbolics.Binary.B
- uid: Towel.Mathematics.Symbolics.Binary.B*
  name: B
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_B_
  commentId: Overload:Towel.Mathematics.Symbolics.Binary.B
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Binary.B
  nameWithType: Symbolics.Binary.B
- uid: Towel.Mathematics.Symbolics.Binary.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Binary.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Binary.Equals(System.Object)
  nameWithType: Symbolics.Binary.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Binary.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Binary.html#Towel_Mathematics_Symbolics_Binary_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Binary.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Binary.Equals
  nameWithType: Symbolics.Binary.Equals
- uid: Towel.Mathematics.Symbolics.Constant
  name: Symbolics.Constant
  href: api/Towel.Mathematics.Symbolics.Constant.html
  commentId: T:Towel.Mathematics.Symbolics.Constant
  fullName: Towel.Mathematics.Symbolics.Constant
  nameWithType: Symbolics.Constant
- uid: Towel.Mathematics.Symbolics.Constant.IsKnownConstant
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsKnownConstant
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsKnownConstant
  fullName: Towel.Mathematics.Symbolics.Constant.IsKnownConstant
  nameWithType: Symbolics.Constant.IsKnownConstant
- uid: Towel.Mathematics.Symbolics.Constant.IsKnownConstant*
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsKnownConstant_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsKnownConstant
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsKnownConstant
  nameWithType: Symbolics.Constant.IsKnownConstant
- uid: Towel.Mathematics.Symbolics.Constant.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsNegative
  fullName: Towel.Mathematics.Symbolics.Constant.IsNegative
  nameWithType: Symbolics.Constant.IsNegative
- uid: Towel.Mathematics.Symbolics.Constant.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsNegative
  nameWithType: Symbolics.Constant.IsNegative
- uid: Towel.Mathematics.Symbolics.Constant.IsOne
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsOne
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsOne
  fullName: Towel.Mathematics.Symbolics.Constant.IsOne
  nameWithType: Symbolics.Constant.IsOne
- uid: Towel.Mathematics.Symbolics.Constant.IsOne*
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsOne_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsOne
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsOne
  nameWithType: Symbolics.Constant.IsOne
- uid: Towel.Mathematics.Symbolics.Constant.IsPi
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsPi
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsPi
  fullName: Towel.Mathematics.Symbolics.Constant.IsPi
  nameWithType: Symbolics.Constant.IsPi
- uid: Towel.Mathematics.Symbolics.Constant.IsPi*
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsPi_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsPi
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsPi
  nameWithType: Symbolics.Constant.IsPi
- uid: Towel.Mathematics.Symbolics.Constant.IsThree
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsThree
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsThree
  fullName: Towel.Mathematics.Symbolics.Constant.IsThree
  nameWithType: Symbolics.Constant.IsThree
- uid: Towel.Mathematics.Symbolics.Constant.IsThree*
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsThree_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsThree
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsThree
  nameWithType: Symbolics.Constant.IsThree
- uid: Towel.Mathematics.Symbolics.Constant.IsTwo
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsTwo
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsTwo
  fullName: Towel.Mathematics.Symbolics.Constant.IsTwo
  nameWithType: Symbolics.Constant.IsTwo
- uid: Towel.Mathematics.Symbolics.Constant.IsTwo*
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsTwo_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsTwo
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsTwo
  nameWithType: Symbolics.Constant.IsTwo
- uid: Towel.Mathematics.Symbolics.Constant.IsZero
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsZero
  commentId: P:Towel.Mathematics.Symbolics.Constant.IsZero
  fullName: Towel.Mathematics.Symbolics.Constant.IsZero
  nameWithType: Symbolics.Constant.IsZero
- uid: Towel.Mathematics.Symbolics.Constant.IsZero*
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Constant.html#Towel_Mathematics_Symbolics_Constant_IsZero_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant.IsZero
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant.IsZero
  nameWithType: Symbolics.Constant.IsZero
- uid: Towel.Mathematics.Symbolics.Constant`1
  name: Symbolics.Constant<T>
  href: api/Towel.Mathematics.Symbolics.Constant-1.html
  commentId: T:Towel.Mathematics.Symbolics.Constant`1
  name.vb: Symbolics.Constant(Of T)
  fullName: Towel.Mathematics.Symbolics.Constant<T>
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T)
  nameWithType: Symbolics.Constant<T>
  nameWithType.vb: Symbolics.Constant(Of T)
- uid: Towel.Mathematics.Symbolics.Constant`1.#ctor(`0)
  name: Constant(T)
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1__ctor__0_
  commentId: M:Towel.Mathematics.Symbolics.Constant`1.#ctor(`0)
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Constant(T)
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Constant(T)
  nameWithType: Symbolics.Constant<T>.Constant(T)
  nameWithType.vb: Symbolics.Constant(Of T).Constant(T)
- uid: Towel.Mathematics.Symbolics.Constant`1.#ctor*
  name: Constant
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Constant
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Constant
  nameWithType: Symbolics.Constant<T>.Constant
  nameWithType.vb: Symbolics.Constant(Of T).Constant
- uid: Towel.Mathematics.Symbolics.Constant`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.Constant`1.Clone
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Clone()
  nameWithType: Symbolics.Constant<T>.Clone()
  nameWithType.vb: Symbolics.Constant(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.Constant`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Clone
  nameWithType: Symbolics.Constant<T>.Clone
  nameWithType.vb: Symbolics.Constant(Of T).Clone
- uid: Towel.Mathematics.Symbolics.Constant`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Constant`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Equals(System.Object)
  nameWithType: Symbolics.Constant<T>.Equals(Object)
  nameWithType.vb: Symbolics.Constant(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.Constant`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Equals
  nameWithType: Symbolics.Constant<T>.Equals
  nameWithType.vb: Symbolics.Constant(Of T).Equals
- uid: Towel.Mathematics.Symbolics.Constant`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Constant`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Constant<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).GetHashCode()
  nameWithType: Symbolics.Constant<T>.GetHashCode()
  nameWithType.vb: Symbolics.Constant(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.Constant`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).GetHashCode
  nameWithType: Symbolics.Constant<T>.GetHashCode
  nameWithType.vb: Symbolics.Constant(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.Constant`1.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Constant`1.IsNegative
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsNegative
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsNegative
  nameWithType: Symbolics.Constant<T>.IsNegative
  nameWithType.vb: Symbolics.Constant(Of T).IsNegative
- uid: Towel.Mathematics.Symbolics.Constant`1.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsNegative
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsNegative
  nameWithType: Symbolics.Constant<T>.IsNegative
  nameWithType.vb: Symbolics.Constant(Of T).IsNegative
- uid: Towel.Mathematics.Symbolics.Constant`1.IsOne
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsOne
  commentId: P:Towel.Mathematics.Symbolics.Constant`1.IsOne
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsOne
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsOne
  nameWithType: Symbolics.Constant<T>.IsOne
  nameWithType.vb: Symbolics.Constant(Of T).IsOne
- uid: Towel.Mathematics.Symbolics.Constant`1.IsOne*
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsOne_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.IsOne
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsOne
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsOne
  nameWithType: Symbolics.Constant<T>.IsOne
  nameWithType.vb: Symbolics.Constant(Of T).IsOne
- uid: Towel.Mathematics.Symbolics.Constant`1.IsThree
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsThree
  commentId: P:Towel.Mathematics.Symbolics.Constant`1.IsThree
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsThree
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsThree
  nameWithType: Symbolics.Constant<T>.IsThree
  nameWithType.vb: Symbolics.Constant(Of T).IsThree
- uid: Towel.Mathematics.Symbolics.Constant`1.IsThree*
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsThree_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.IsThree
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsThree
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsThree
  nameWithType: Symbolics.Constant<T>.IsThree
  nameWithType.vb: Symbolics.Constant(Of T).IsThree
- uid: Towel.Mathematics.Symbolics.Constant`1.IsTwo
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsTwo
  commentId: P:Towel.Mathematics.Symbolics.Constant`1.IsTwo
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsTwo
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsTwo
  nameWithType: Symbolics.Constant<T>.IsTwo
  nameWithType.vb: Symbolics.Constant(Of T).IsTwo
- uid: Towel.Mathematics.Symbolics.Constant`1.IsTwo*
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsTwo_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.IsTwo
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsTwo
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsTwo
  nameWithType: Symbolics.Constant<T>.IsTwo
  nameWithType.vb: Symbolics.Constant(Of T).IsTwo
- uid: Towel.Mathematics.Symbolics.Constant`1.IsZero
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsZero
  commentId: P:Towel.Mathematics.Symbolics.Constant`1.IsZero
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsZero
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsZero
  nameWithType: Symbolics.Constant<T>.IsZero
  nameWithType.vb: Symbolics.Constant(Of T).IsZero
- uid: Towel.Mathematics.Symbolics.Constant`1.IsZero*
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_IsZero_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.IsZero
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.IsZero
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).IsZero
  nameWithType: Symbolics.Constant<T>.IsZero
  nameWithType.vb: Symbolics.Constant(Of T).IsZero
- uid: Towel.Mathematics.Symbolics.Constant`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.Constant`1.ToString
  fullName: Towel.Mathematics.Symbolics.Constant<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).ToString()
  nameWithType: Symbolics.Constant<T>.ToString()
  nameWithType.vb: Symbolics.Constant(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.Constant`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Constant`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Constant<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).ToString
  nameWithType: Symbolics.Constant<T>.ToString
  nameWithType.vb: Symbolics.Constant(Of T).ToString
- uid: Towel.Mathematics.Symbolics.Constant`1.Value
  name: Value
  href: api/Towel.Mathematics.Symbolics.Constant-1.html#Towel_Mathematics_Symbolics_Constant_1_Value
  commentId: F:Towel.Mathematics.Symbolics.Constant`1.Value
  fullName: Towel.Mathematics.Symbolics.Constant<T>.Value
  fullName.vb: Towel.Mathematics.Symbolics.Constant(Of T).Value
  nameWithType: Symbolics.Constant<T>.Value
  nameWithType.vb: Symbolics.Constant(Of T).Value
- uid: Towel.Mathematics.Symbolics.Cosecant
  name: Symbolics.Cosecant
  href: api/Towel.Mathematics.Symbolics.Cosecant.html
  commentId: T:Towel.Mathematics.Symbolics.Cosecant
  fullName: Towel.Mathematics.Symbolics.Cosecant
  nameWithType: Symbolics.Cosecant
- uid: Towel.Mathematics.Symbolics.Cosecant.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Cosecant(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cosecant.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cosecant.Cosecant(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cosecant.Cosecant(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cosecant.#ctor*
  name: Cosecant
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosecant.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosecant.Cosecant
  nameWithType: Symbolics.Cosecant.Cosecant
- uid: Towel.Mathematics.Symbolics.Cosecant.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Clone
  commentId: M:Towel.Mathematics.Symbolics.Cosecant.Clone
  fullName: Towel.Mathematics.Symbolics.Cosecant.Clone()
  nameWithType: Symbolics.Cosecant.Clone()
- uid: Towel.Mathematics.Symbolics.Cosecant.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosecant.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosecant.Clone
  nameWithType: Symbolics.Cosecant.Clone
- uid: Towel.Mathematics.Symbolics.Cosecant.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Cosecant.Simplify
  fullName: Towel.Mathematics.Symbolics.Cosecant.Simplify()
  nameWithType: Symbolics.Cosecant.Simplify()
- uid: Towel.Mathematics.Symbolics.Cosecant.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosecant.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosecant.Simplify
  nameWithType: Symbolics.Cosecant.Simplify
- uid: Towel.Mathematics.Symbolics.Cosecant.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cosecant.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cosecant.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cosecant.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cosecant.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosecant.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosecant.Substitute
  nameWithType: Symbolics.Cosecant.Substitute
- uid: Towel.Mathematics.Symbolics.Cosecant.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_ToString
  commentId: M:Towel.Mathematics.Symbolics.Cosecant.ToString
  fullName: Towel.Mathematics.Symbolics.Cosecant.ToString()
  nameWithType: Symbolics.Cosecant.ToString()
- uid: Towel.Mathematics.Symbolics.Cosecant.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Cosecant.html#Towel_Mathematics_Symbolics_Cosecant_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosecant.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosecant.ToString
  nameWithType: Symbolics.Cosecant.ToString
- uid: Towel.Mathematics.Symbolics.Cosine
  name: Symbolics.Cosine
  href: api/Towel.Mathematics.Symbolics.Cosine.html
  commentId: T:Towel.Mathematics.Symbolics.Cosine
  fullName: Towel.Mathematics.Symbolics.Cosine
  nameWithType: Symbolics.Cosine
- uid: Towel.Mathematics.Symbolics.Cosine.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Cosine(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cosine.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cosine.Cosine(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cosine.Cosine(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cosine.#ctor*
  name: Cosine
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosine.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosine.Cosine
  nameWithType: Symbolics.Cosine.Cosine
- uid: Towel.Mathematics.Symbolics.Cosine.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Clone
  commentId: M:Towel.Mathematics.Symbolics.Cosine.Clone
  fullName: Towel.Mathematics.Symbolics.Cosine.Clone()
  nameWithType: Symbolics.Cosine.Clone()
- uid: Towel.Mathematics.Symbolics.Cosine.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosine.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosine.Clone
  nameWithType: Symbolics.Cosine.Clone
- uid: Towel.Mathematics.Symbolics.Cosine.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Cosine.Simplify
  fullName: Towel.Mathematics.Symbolics.Cosine.Simplify()
  nameWithType: Symbolics.Cosine.Simplify()
- uid: Towel.Mathematics.Symbolics.Cosine.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosine.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosine.Simplify
  nameWithType: Symbolics.Cosine.Simplify
- uid: Towel.Mathematics.Symbolics.Cosine.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cosine.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cosine.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cosine.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cosine.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosine.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosine.Substitute
  nameWithType: Symbolics.Cosine.Substitute
- uid: Towel.Mathematics.Symbolics.Cosine.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_ToString
  commentId: M:Towel.Mathematics.Symbolics.Cosine.ToString
  fullName: Towel.Mathematics.Symbolics.Cosine.ToString()
  nameWithType: Symbolics.Cosine.ToString()
- uid: Towel.Mathematics.Symbolics.Cosine.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Cosine.html#Towel_Mathematics_Symbolics_Cosine_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Cosine.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cosine.ToString
  nameWithType: Symbolics.Cosine.ToString
- uid: Towel.Mathematics.Symbolics.Cotangent
  name: Symbolics.Cotangent
  href: api/Towel.Mathematics.Symbolics.Cotangent.html
  commentId: T:Towel.Mathematics.Symbolics.Cotangent
  fullName: Towel.Mathematics.Symbolics.Cotangent
  nameWithType: Symbolics.Cotangent
- uid: Towel.Mathematics.Symbolics.Cotangent.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Cotangent(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cotangent.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cotangent.Cotangent(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cotangent.Cotangent(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cotangent.#ctor*
  name: Cotangent
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Cotangent.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cotangent.Cotangent
  nameWithType: Symbolics.Cotangent.Cotangent
- uid: Towel.Mathematics.Symbolics.Cotangent.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Clone
  commentId: M:Towel.Mathematics.Symbolics.Cotangent.Clone
  fullName: Towel.Mathematics.Symbolics.Cotangent.Clone()
  nameWithType: Symbolics.Cotangent.Clone()
- uid: Towel.Mathematics.Symbolics.Cotangent.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Cotangent.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cotangent.Clone
  nameWithType: Symbolics.Cotangent.Clone
- uid: Towel.Mathematics.Symbolics.Cotangent.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Cotangent.Simplify
  fullName: Towel.Mathematics.Symbolics.Cotangent.Simplify()
  nameWithType: Symbolics.Cotangent.Simplify()
- uid: Towel.Mathematics.Symbolics.Cotangent.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Cotangent.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cotangent.Simplify
  nameWithType: Symbolics.Cotangent.Simplify
- uid: Towel.Mathematics.Symbolics.Cotangent.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Cotangent.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Cotangent.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Cotangent.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Cotangent.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Cotangent.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cotangent.Substitute
  nameWithType: Symbolics.Cotangent.Substitute
- uid: Towel.Mathematics.Symbolics.Cotangent.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_ToString
  commentId: M:Towel.Mathematics.Symbolics.Cotangent.ToString
  fullName: Towel.Mathematics.Symbolics.Cotangent.ToString()
  nameWithType: Symbolics.Cotangent.ToString()
- uid: Towel.Mathematics.Symbolics.Cotangent.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Cotangent.html#Towel_Mathematics_Symbolics_Cotangent_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Cotangent.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Cotangent.ToString
  nameWithType: Symbolics.Cotangent.ToString
- uid: Towel.Mathematics.Symbolics.Divide
  name: Symbolics.Divide
  href: api/Towel.Mathematics.Symbolics.Divide.html
  commentId: T:Towel.Mathematics.Symbolics.Divide
  fullName: Towel.Mathematics.Symbolics.Divide
  nameWithType: Symbolics.Divide
- uid: Towel.Mathematics.Symbolics.Divide.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Divide(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Divide.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Divide.Divide(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Divide.Divide(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Divide.#ctor*
  name: Divide
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Divide.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Divide.Divide
  nameWithType: Symbolics.Divide.Divide
- uid: Towel.Mathematics.Symbolics.Divide.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Clone
  commentId: M:Towel.Mathematics.Symbolics.Divide.Clone
  fullName: Towel.Mathematics.Symbolics.Divide.Clone()
  nameWithType: Symbolics.Divide.Clone()
- uid: Towel.Mathematics.Symbolics.Divide.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Divide.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Divide.Clone
  nameWithType: Symbolics.Divide.Clone
- uid: Towel.Mathematics.Symbolics.Divide.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Divide.Simplify
  fullName: Towel.Mathematics.Symbolics.Divide.Simplify()
  nameWithType: Symbolics.Divide.Simplify()
- uid: Towel.Mathematics.Symbolics.Divide.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Divide.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Divide.Simplify
  nameWithType: Symbolics.Divide.Simplify
- uid: Towel.Mathematics.Symbolics.Divide.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Divide.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Divide.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Divide.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Divide.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Divide.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Divide.Substitute
  nameWithType: Symbolics.Divide.Substitute
- uid: Towel.Mathematics.Symbolics.Divide.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_ToString
  commentId: M:Towel.Mathematics.Symbolics.Divide.ToString
  fullName: Towel.Mathematics.Symbolics.Divide.ToString()
  nameWithType: Symbolics.Divide.ToString()
- uid: Towel.Mathematics.Symbolics.Divide.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Divide.html#Towel_Mathematics_Symbolics_Divide_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Divide.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Divide.ToString
  nameWithType: Symbolics.Divide.ToString
- uid: Towel.Mathematics.Symbolics.Equal
  name: Symbolics.Equal
  href: api/Towel.Mathematics.Symbolics.Equal.html
  commentId: T:Towel.Mathematics.Symbolics.Equal
  fullName: Towel.Mathematics.Symbolics.Equal
  nameWithType: Symbolics.Equal
- uid: Towel.Mathematics.Symbolics.Equal.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Equal(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Equal.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Equal.Equal(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Equal.Equal(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Equal.#ctor*
  name: Equal
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Equal.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Equal.Equal
  nameWithType: Symbolics.Equal.Equal
- uid: Towel.Mathematics.Symbolics.Equal.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Clone
  commentId: M:Towel.Mathematics.Symbolics.Equal.Clone
  fullName: Towel.Mathematics.Symbolics.Equal.Clone()
  nameWithType: Symbolics.Equal.Clone()
- uid: Towel.Mathematics.Symbolics.Equal.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Equal.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Equal.Clone
  nameWithType: Symbolics.Equal.Clone
- uid: Towel.Mathematics.Symbolics.Equal.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Equal.Simplify
  fullName: Towel.Mathematics.Symbolics.Equal.Simplify()
  nameWithType: Symbolics.Equal.Simplify()
- uid: Towel.Mathematics.Symbolics.Equal.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Equal.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Equal.Simplify
  nameWithType: Symbolics.Equal.Simplify
- uid: Towel.Mathematics.Symbolics.Equal.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Equal.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Equal.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Equal.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Equal.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Equal.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Equal.Substitute
  nameWithType: Symbolics.Equal.Substitute
- uid: Towel.Mathematics.Symbolics.Equal.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_ToString
  commentId: M:Towel.Mathematics.Symbolics.Equal.ToString
  fullName: Towel.Mathematics.Symbolics.Equal.ToString()
  nameWithType: Symbolics.Equal.ToString()
- uid: Towel.Mathematics.Symbolics.Equal.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Equal.html#Towel_Mathematics_Symbolics_Equal_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Equal.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Equal.ToString
  nameWithType: Symbolics.Equal.ToString
- uid: Towel.Mathematics.Symbolics.Exponential
  name: Symbolics.Exponential
  href: api/Towel.Mathematics.Symbolics.Exponential.html
  commentId: T:Towel.Mathematics.Symbolics.Exponential
  fullName: Towel.Mathematics.Symbolics.Exponential
  nameWithType: Symbolics.Exponential
- uid: Towel.Mathematics.Symbolics.Exponential.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Exponential(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Exponential.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Exponential.Exponential(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Exponential.Exponential(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Exponential.#ctor*
  name: Exponential
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Exponential.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Exponential.Exponential
  nameWithType: Symbolics.Exponential.Exponential
- uid: Towel.Mathematics.Symbolics.Exponential.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Clone
  commentId: M:Towel.Mathematics.Symbolics.Exponential.Clone
  fullName: Towel.Mathematics.Symbolics.Exponential.Clone()
  nameWithType: Symbolics.Exponential.Clone()
- uid: Towel.Mathematics.Symbolics.Exponential.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Exponential.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Exponential.Clone
  nameWithType: Symbolics.Exponential.Clone
- uid: Towel.Mathematics.Symbolics.Exponential.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Exponential.Simplify
  fullName: Towel.Mathematics.Symbolics.Exponential.Simplify()
  nameWithType: Symbolics.Exponential.Simplify()
- uid: Towel.Mathematics.Symbolics.Exponential.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Exponential.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Exponential.Simplify
  nameWithType: Symbolics.Exponential.Simplify
- uid: Towel.Mathematics.Symbolics.Exponential.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Exponential.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Exponential.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Exponential.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Exponential.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Exponential.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Exponential.Substitute
  nameWithType: Symbolics.Exponential.Substitute
- uid: Towel.Mathematics.Symbolics.Exponential.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_ToString
  commentId: M:Towel.Mathematics.Symbolics.Exponential.ToString
  fullName: Towel.Mathematics.Symbolics.Exponential.ToString()
  nameWithType: Symbolics.Exponential.ToString()
- uid: Towel.Mathematics.Symbolics.Exponential.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Exponential.html#Towel_Mathematics_Symbolics_Exponential_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Exponential.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Exponential.ToString
  nameWithType: Symbolics.Exponential.ToString
- uid: Towel.Mathematics.Symbolics.Expression
  name: Symbolics.Expression
  href: api/Towel.Mathematics.Symbolics.Expression.html
  commentId: T:Towel.Mathematics.Symbolics.Expression
  fullName: Towel.Mathematics.Symbolics.Expression
  nameWithType: Symbolics.Expression
- uid: Towel.Mathematics.Symbolics.Expression.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Clone
  commentId: M:Towel.Mathematics.Symbolics.Expression.Clone
  fullName: Towel.Mathematics.Symbolics.Expression.Clone()
  nameWithType: Symbolics.Expression.Clone()
- uid: Towel.Mathematics.Symbolics.Expression.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Clone
  nameWithType: Symbolics.Expression.Clone
- uid: Towel.Mathematics.Symbolics.Expression.Derive(System.String)
  name: Derive(String)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Derive_System_String_
  commentId: M:Towel.Mathematics.Symbolics.Expression.Derive(System.String)
  fullName: Towel.Mathematics.Symbolics.Expression.Derive(System.String)
  nameWithType: Symbolics.Expression.Derive(String)
- uid: Towel.Mathematics.Symbolics.Expression.Derive*
  name: Derive
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Derive_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.Derive
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Derive
  nameWithType: Symbolics.Expression.Derive
- uid: Towel.Mathematics.Symbolics.Expression.Integrate(System.String)
  name: Integrate(String)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Integrate_System_String_
  commentId: M:Towel.Mathematics.Symbolics.Expression.Integrate(System.String)
  fullName: Towel.Mathematics.Symbolics.Expression.Integrate(System.String)
  nameWithType: Symbolics.Expression.Integrate(String)
- uid: Towel.Mathematics.Symbolics.Expression.Integrate*
  name: Integrate
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Integrate_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.Integrate
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Integrate
  nameWithType: Symbolics.Expression.Integrate
- uid: Towel.Mathematics.Symbolics.Expression.op_Addition(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Addition(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Addition_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Addition(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Addition(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Addition(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Addition*
  name: Addition
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Addition_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Addition
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Addition
  nameWithType: Symbolics.Expression.Addition
- uid: Towel.Mathematics.Symbolics.Expression.op_Division(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Division(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Division_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Division(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Division(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Division(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Division*
  name: Division
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Division_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Division
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Division
  nameWithType: Symbolics.Expression.Division
- uid: Towel.Mathematics.Symbolics.Expression.op_Equality(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Equality(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Equality_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Equality(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Equality(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Equality(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Equality*
  name: Equality
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Equality_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Equality
  nameWithType: Symbolics.Expression.Equality
- uid: Towel.Mathematics.Symbolics.Expression.op_ExclusiveOr(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: ExclusiveOr(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_ExclusiveOr_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_ExclusiveOr(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.ExclusiveOr(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.ExclusiveOr(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_ExclusiveOr*
  name: ExclusiveOr
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_ExclusiveOr_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_ExclusiveOr
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.ExclusiveOr
  nameWithType: Symbolics.Expression.ExclusiveOr
- uid: Towel.Mathematics.Symbolics.Expression.op_GreaterThan(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: GreaterThan(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_GreaterThan_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_GreaterThan(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.GreaterThan(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.GreaterThan(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_GreaterThan_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.GreaterThan
  nameWithType: Symbolics.Expression.GreaterThan
- uid: Towel.Mathematics.Symbolics.Expression.op_Inequality(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Inequality(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Inequality_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Inequality(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Inequality(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Inequality(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Inequality*
  name: Inequality
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Inequality_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Inequality
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Inequality
  nameWithType: Symbolics.Expression.Inequality
- uid: Towel.Mathematics.Symbolics.Expression.op_LessThan(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: LessThan(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_LessThan_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_LessThan(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.LessThan(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.LessThan(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_LessThan*
  name: LessThan
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_LessThan_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_LessThan
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.LessThan
  nameWithType: Symbolics.Expression.LessThan
- uid: Towel.Mathematics.Symbolics.Expression.op_Multiply(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Multiply(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Multiply_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Multiply(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Multiply(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Multiply(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Multiply_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Multiply
  nameWithType: Symbolics.Expression.Multiply
- uid: Towel.Mathematics.Symbolics.Expression.op_Subtraction(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Subtraction(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Subtraction_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_Subtraction(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Subtraction(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Subtraction(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_Subtraction*
  name: Subtraction
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_Subtraction_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_Subtraction
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Subtraction
  nameWithType: Symbolics.Expression.Subtraction
- uid: Towel.Mathematics.Symbolics.Expression.op_UnaryNegation(Towel.Mathematics.Symbolics.Expression)
  name: UnaryNegation(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_UnaryNegation_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.op_UnaryNegation(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.UnaryNegation(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.UnaryNegation(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.op_UnaryNegation*
  name: UnaryNegation
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_op_UnaryNegation_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.op_UnaryNegation
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.UnaryNegation
  nameWithType: Symbolics.Expression.UnaryNegation
- uid: Towel.Mathematics.Symbolics.Expression.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Expression.Simplify
  fullName: Towel.Mathematics.Symbolics.Expression.Simplify()
  nameWithType: Symbolics.Expression.Simplify()
- uid: Towel.Mathematics.Symbolics.Expression.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Simplify
  nameWithType: Symbolics.Expression.Simplify
- uid: Towel.Mathematics.Symbolics.Expression.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Expression.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Expression.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Expression.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Expression.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Expression.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Expression.Substitute
  nameWithType: Symbolics.Expression.Substitute
- uid: Towel.Mathematics.Symbolics.Expression.Substitute``1(System.String,``0)
  name: Substitute<T>(String, T)
  href: api/Towel.Mathematics.Symbolics.Expression.html#Towel_Mathematics_Symbolics_Expression_Substitute__1_System_String___0_
  commentId: M:Towel.Mathematics.Symbolics.Expression.Substitute``1(System.String,``0)
  name.vb: Substitute(Of T)(String, T)
  fullName: Towel.Mathematics.Symbolics.Expression.Substitute<T>(System.String, T)
  fullName.vb: Towel.Mathematics.Symbolics.Expression.Substitute(Of T)(System.String, T)
  nameWithType: Symbolics.Expression.Substitute<T>(String, T)
  nameWithType.vb: Symbolics.Expression.Substitute(Of T)(String, T)
- uid: Towel.Mathematics.Symbolics.Factorial
  name: Symbolics.Factorial
  href: api/Towel.Mathematics.Symbolics.Factorial.html
  commentId: T:Towel.Mathematics.Symbolics.Factorial
  fullName: Towel.Mathematics.Symbolics.Factorial
  nameWithType: Symbolics.Factorial
- uid: Towel.Mathematics.Symbolics.Factorial.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Factorial(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Factorial.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Factorial.Factorial(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Factorial.Factorial(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Factorial.#ctor*
  name: Factorial
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Factorial.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Factorial.Factorial
  nameWithType: Symbolics.Factorial.Factorial
- uid: Towel.Mathematics.Symbolics.Factorial.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Clone
  commentId: M:Towel.Mathematics.Symbolics.Factorial.Clone
  fullName: Towel.Mathematics.Symbolics.Factorial.Clone()
  nameWithType: Symbolics.Factorial.Clone()
- uid: Towel.Mathematics.Symbolics.Factorial.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Factorial.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Factorial.Clone
  nameWithType: Symbolics.Factorial.Clone
- uid: Towel.Mathematics.Symbolics.Factorial.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Factorial.Simplify
  fullName: Towel.Mathematics.Symbolics.Factorial.Simplify()
  nameWithType: Symbolics.Factorial.Simplify()
- uid: Towel.Mathematics.Symbolics.Factorial.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Factorial.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Factorial.Simplify
  nameWithType: Symbolics.Factorial.Simplify
- uid: Towel.Mathematics.Symbolics.Factorial.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Factorial.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Factorial.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Factorial.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Factorial.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Factorial.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Factorial.Substitute
  nameWithType: Symbolics.Factorial.Substitute
- uid: Towel.Mathematics.Symbolics.Factorial.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_ToString
  commentId: M:Towel.Mathematics.Symbolics.Factorial.ToString
  fullName: Towel.Mathematics.Symbolics.Factorial.ToString()
  nameWithType: Symbolics.Factorial.ToString()
- uid: Towel.Mathematics.Symbolics.Factorial.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Factorial.html#Towel_Mathematics_Symbolics_Factorial_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Factorial.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Factorial.ToString
  nameWithType: Symbolics.Factorial.ToString
- uid: Towel.Mathematics.Symbolics.False
  name: Symbolics.False
  href: api/Towel.Mathematics.Symbolics.False.html
  commentId: T:Towel.Mathematics.Symbolics.False
  fullName: Towel.Mathematics.Symbolics.False
  nameWithType: Symbolics.False
- uid: Towel.Mathematics.Symbolics.False.#ctor
  name: False()
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False__ctor
  commentId: M:Towel.Mathematics.Symbolics.False.#ctor
  fullName: Towel.Mathematics.Symbolics.False.False()
  nameWithType: Symbolics.False.False()
- uid: Towel.Mathematics.Symbolics.False.#ctor*
  name: "False"
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.False.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.False.False
  nameWithType: Symbolics.False.False
- uid: Towel.Mathematics.Symbolics.False.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_Clone
  commentId: M:Towel.Mathematics.Symbolics.False.Clone
  fullName: Towel.Mathematics.Symbolics.False.Clone()
  nameWithType: Symbolics.False.Clone()
- uid: Towel.Mathematics.Symbolics.False.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.False.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.False.Clone
  nameWithType: Symbolics.False.Clone
- uid: Towel.Mathematics.Symbolics.False.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.False.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.False.Equals(System.Object)
  nameWithType: Symbolics.False.Equals(Object)
- uid: Towel.Mathematics.Symbolics.False.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.False.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.False.Equals
  nameWithType: Symbolics.False.Equals
- uid: Towel.Mathematics.Symbolics.False.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.False.GetHashCode
  fullName: Towel.Mathematics.Symbolics.False.GetHashCode()
  nameWithType: Symbolics.False.GetHashCode()
- uid: Towel.Mathematics.Symbolics.False.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.False.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.False.GetHashCode
  nameWithType: Symbolics.False.GetHashCode
- uid: Towel.Mathematics.Symbolics.False.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_ToString
  commentId: M:Towel.Mathematics.Symbolics.False.ToString
  fullName: Towel.Mathematics.Symbolics.False.ToString()
  nameWithType: Symbolics.False.ToString()
- uid: Towel.Mathematics.Symbolics.False.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.False.html#Towel_Mathematics_Symbolics_False_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.False.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.False.ToString
  nameWithType: Symbolics.False.ToString
- uid: Towel.Mathematics.Symbolics.GreaterThan
  name: Symbolics.GreaterThan
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html
  commentId: T:Towel.Mathematics.Symbolics.GreaterThan
  fullName: Towel.Mathematics.Symbolics.GreaterThan
  nameWithType: Symbolics.GreaterThan
- uid: Towel.Mathematics.Symbolics.GreaterThan.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: GreaterThan(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.GreaterThan.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.GreaterThan.GreaterThan(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.GreaterThan.GreaterThan(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.GreaterThan.#ctor*
  name: GreaterThan
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThan.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThan.GreaterThan
  nameWithType: Symbolics.GreaterThan.GreaterThan
- uid: Towel.Mathematics.Symbolics.GreaterThan.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Clone
  commentId: M:Towel.Mathematics.Symbolics.GreaterThan.Clone
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Clone()
  nameWithType: Symbolics.GreaterThan.Clone()
- uid: Towel.Mathematics.Symbolics.GreaterThan.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThan.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Clone
  nameWithType: Symbolics.GreaterThan.Clone
- uid: Towel.Mathematics.Symbolics.GreaterThan.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Simplify
  commentId: M:Towel.Mathematics.Symbolics.GreaterThan.Simplify
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Simplify()
  nameWithType: Symbolics.GreaterThan.Simplify()
- uid: Towel.Mathematics.Symbolics.GreaterThan.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThan.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Simplify
  nameWithType: Symbolics.GreaterThan.Simplify
- uid: Towel.Mathematics.Symbolics.GreaterThan.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.GreaterThan.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.GreaterThan.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.GreaterThan.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThan.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThan.Substitute
  nameWithType: Symbolics.GreaterThan.Substitute
- uid: Towel.Mathematics.Symbolics.GreaterThan.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_ToString
  commentId: M:Towel.Mathematics.Symbolics.GreaterThan.ToString
  fullName: Towel.Mathematics.Symbolics.GreaterThan.ToString()
  nameWithType: Symbolics.GreaterThan.ToString()
- uid: Towel.Mathematics.Symbolics.GreaterThan.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.GreaterThan.html#Towel_Mathematics_Symbolics_GreaterThan_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThan.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThan.ToString
  nameWithType: Symbolics.GreaterThan.ToString
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual
  name: Symbolics.GreaterThanOrEqual
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html
  commentId: T:Towel.Mathematics.Symbolics.GreaterThanOrEqual
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual
  nameWithType: Symbolics.GreaterThanOrEqual
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: GreaterThanOrEqual(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.GreaterThanOrEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.GreaterThanOrEqual(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.GreaterThanOrEqual.GreaterThanOrEqual(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.#ctor*
  name: GreaterThanOrEqual
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThanOrEqual.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.GreaterThanOrEqual
  nameWithType: Symbolics.GreaterThanOrEqual.GreaterThanOrEqual
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Clone
  commentId: M:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone()
  nameWithType: Symbolics.GreaterThanOrEqual.Clone()
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Clone
  nameWithType: Symbolics.GreaterThanOrEqual.Clone
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Simplify
  commentId: M:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify()
  nameWithType: Symbolics.GreaterThanOrEqual.Simplify()
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Simplify
  nameWithType: Symbolics.GreaterThanOrEqual.Simplify
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.GreaterThanOrEqual.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.Substitute
  nameWithType: Symbolics.GreaterThanOrEqual.Substitute
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_ToString
  commentId: M:Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString()
  nameWithType: Symbolics.GreaterThanOrEqual.ToString()
- uid: Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.GreaterThanOrEqual.html#Towel_Mathematics_Symbolics_GreaterThanOrEqual_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.GreaterThanOrEqual.ToString
  nameWithType: Symbolics.GreaterThanOrEqual.ToString
- uid: Towel.Mathematics.Symbolics.Invert
  name: Symbolics.Invert
  href: api/Towel.Mathematics.Symbolics.Invert.html
  commentId: T:Towel.Mathematics.Symbolics.Invert
  fullName: Towel.Mathematics.Symbolics.Invert
  nameWithType: Symbolics.Invert
- uid: Towel.Mathematics.Symbolics.Invert.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Invert(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Invert.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Invert.Invert(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Invert.Invert(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Invert.#ctor*
  name: Invert
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Invert.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Invert.Invert
  nameWithType: Symbolics.Invert.Invert
- uid: Towel.Mathematics.Symbolics.Invert.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Clone
  commentId: M:Towel.Mathematics.Symbolics.Invert.Clone
  fullName: Towel.Mathematics.Symbolics.Invert.Clone()
  nameWithType: Symbolics.Invert.Clone()
- uid: Towel.Mathematics.Symbolics.Invert.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Invert.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Invert.Clone
  nameWithType: Symbolics.Invert.Clone
- uid: Towel.Mathematics.Symbolics.Invert.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Invert.Simplify
  fullName: Towel.Mathematics.Symbolics.Invert.Simplify()
  nameWithType: Symbolics.Invert.Simplify()
- uid: Towel.Mathematics.Symbolics.Invert.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Invert.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Invert.Simplify
  nameWithType: Symbolics.Invert.Simplify
- uid: Towel.Mathematics.Symbolics.Invert.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Invert.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Invert.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Invert.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Invert.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Invert.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Invert.Substitute
  nameWithType: Symbolics.Invert.Substitute
- uid: Towel.Mathematics.Symbolics.Invert.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_ToString
  commentId: M:Towel.Mathematics.Symbolics.Invert.ToString
  fullName: Towel.Mathematics.Symbolics.Invert.ToString()
  nameWithType: Symbolics.Invert.ToString()
- uid: Towel.Mathematics.Symbolics.Invert.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Invert.html#Towel_Mathematics_Symbolics_Invert_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Invert.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Invert.ToString
  nameWithType: Symbolics.Invert.ToString
- uid: Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1
  name: Symbolics.KnownConstantOfKnownType<T>
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfKnownType-1.html
  commentId: T:Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1
  name.vb: Symbolics.KnownConstantOfKnownType(Of T)
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfKnownType<T>
  fullName.vb: Towel.Mathematics.Symbolics.KnownConstantOfKnownType(Of T)
  nameWithType: Symbolics.KnownConstantOfKnownType<T>
  nameWithType.vb: Symbolics.KnownConstantOfKnownType(Of T)
- uid: Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.#ctor(`0)
  name: KnownConstantOfKnownType(T)
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfKnownType-1.html#Towel_Mathematics_Symbolics_KnownConstantOfKnownType_1__ctor__0_
  commentId: M:Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.#ctor(`0)
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfKnownType<T>.KnownConstantOfKnownType(T)
  fullName.vb: Towel.Mathematics.Symbolics.KnownConstantOfKnownType(Of T).KnownConstantOfKnownType(T)
  nameWithType: Symbolics.KnownConstantOfKnownType<T>.KnownConstantOfKnownType(T)
  nameWithType.vb: Symbolics.KnownConstantOfKnownType(Of T).KnownConstantOfKnownType(T)
- uid: Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.#ctor*
  name: KnownConstantOfKnownType
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfKnownType-1.html#Towel_Mathematics_Symbolics_KnownConstantOfKnownType_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfKnownType<T>.KnownConstantOfKnownType
  fullName.vb: Towel.Mathematics.Symbolics.KnownConstantOfKnownType(Of T).KnownConstantOfKnownType
  nameWithType: Symbolics.KnownConstantOfKnownType<T>.KnownConstantOfKnownType
  nameWithType.vb: Symbolics.KnownConstantOfKnownType(Of T).KnownConstantOfKnownType
- uid: Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.IsKnownConstant
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfKnownType-1.html#Towel_Mathematics_Symbolics_KnownConstantOfKnownType_1_IsKnownConstant
  commentId: P:Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.IsKnownConstant
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfKnownType<T>.IsKnownConstant
  fullName.vb: Towel.Mathematics.Symbolics.KnownConstantOfKnownType(Of T).IsKnownConstant
  nameWithType: Symbolics.KnownConstantOfKnownType<T>.IsKnownConstant
  nameWithType.vb: Symbolics.KnownConstantOfKnownType(Of T).IsKnownConstant
- uid: Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.IsKnownConstant*
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfKnownType-1.html#Towel_Mathematics_Symbolics_KnownConstantOfKnownType_1_IsKnownConstant_
  commentId: Overload:Towel.Mathematics.Symbolics.KnownConstantOfKnownType`1.IsKnownConstant
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfKnownType<T>.IsKnownConstant
  fullName.vb: Towel.Mathematics.Symbolics.KnownConstantOfKnownType(Of T).IsKnownConstant
  nameWithType: Symbolics.KnownConstantOfKnownType<T>.IsKnownConstant
  nameWithType.vb: Symbolics.KnownConstantOfKnownType(Of T).IsKnownConstant
- uid: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType
  name: Symbolics.KnownConstantOfUnknownType
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.html
  commentId: T:Towel.Mathematics.Symbolics.KnownConstantOfUnknownType
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType
  nameWithType: Symbolics.KnownConstantOfUnknownType
- uid: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.html#Towel_Mathematics_Symbolics_KnownConstantOfUnknownType_IsKnownConstant
  commentId: P:Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant
  nameWithType: Symbolics.KnownConstantOfUnknownType.IsKnownConstant
- uid: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant*
  name: IsKnownConstant
  href: api/Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.html#Towel_Mathematics_Symbolics_KnownConstantOfUnknownType_IsKnownConstant_
  commentId: Overload:Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.KnownConstantOfUnknownType.IsKnownConstant
  nameWithType: Symbolics.KnownConstantOfUnknownType.IsKnownConstant
- uid: Towel.Mathematics.Symbolics.LessThan
  name: Symbolics.LessThan
  href: api/Towel.Mathematics.Symbolics.LessThan.html
  commentId: T:Towel.Mathematics.Symbolics.LessThan
  fullName: Towel.Mathematics.Symbolics.LessThan
  nameWithType: Symbolics.LessThan
- uid: Towel.Mathematics.Symbolics.LessThan.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: LessThan(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.LessThan.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.LessThan.LessThan(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.LessThan.LessThan(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.LessThan.#ctor*
  name: LessThan
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThan.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThan.LessThan
  nameWithType: Symbolics.LessThan.LessThan
- uid: Towel.Mathematics.Symbolics.LessThan.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Clone
  commentId: M:Towel.Mathematics.Symbolics.LessThan.Clone
  fullName: Towel.Mathematics.Symbolics.LessThan.Clone()
  nameWithType: Symbolics.LessThan.Clone()
- uid: Towel.Mathematics.Symbolics.LessThan.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThan.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThan.Clone
  nameWithType: Symbolics.LessThan.Clone
- uid: Towel.Mathematics.Symbolics.LessThan.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Simplify
  commentId: M:Towel.Mathematics.Symbolics.LessThan.Simplify
  fullName: Towel.Mathematics.Symbolics.LessThan.Simplify()
  nameWithType: Symbolics.LessThan.Simplify()
- uid: Towel.Mathematics.Symbolics.LessThan.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThan.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThan.Simplify
  nameWithType: Symbolics.LessThan.Simplify
- uid: Towel.Mathematics.Symbolics.LessThan.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.LessThan.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.LessThan.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.LessThan.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.LessThan.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThan.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThan.Substitute
  nameWithType: Symbolics.LessThan.Substitute
- uid: Towel.Mathematics.Symbolics.LessThan.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_ToString
  commentId: M:Towel.Mathematics.Symbolics.LessThan.ToString
  fullName: Towel.Mathematics.Symbolics.LessThan.ToString()
  nameWithType: Symbolics.LessThan.ToString()
- uid: Towel.Mathematics.Symbolics.LessThan.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.LessThan.html#Towel_Mathematics_Symbolics_LessThan_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThan.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThan.ToString
  nameWithType: Symbolics.LessThan.ToString
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual
  name: Symbolics.LessThanOrEqual
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html
  commentId: T:Towel.Mathematics.Symbolics.LessThanOrEqual
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual
  nameWithType: Symbolics.LessThanOrEqual
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: LessThanOrEqual(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.LessThanOrEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.LessThanOrEqual(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.LessThanOrEqual.LessThanOrEqual(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.#ctor*
  name: LessThanOrEqual
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThanOrEqual.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.LessThanOrEqual
  nameWithType: Symbolics.LessThanOrEqual.LessThanOrEqual
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Clone
  commentId: M:Towel.Mathematics.Symbolics.LessThanOrEqual.Clone
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Clone()
  nameWithType: Symbolics.LessThanOrEqual.Clone()
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThanOrEqual.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Clone
  nameWithType: Symbolics.LessThanOrEqual.Clone
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Simplify
  commentId: M:Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify()
  nameWithType: Symbolics.LessThanOrEqual.Simplify()
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Simplify
  nameWithType: Symbolics.LessThanOrEqual.Simplify
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.LessThanOrEqual.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.Substitute
  nameWithType: Symbolics.LessThanOrEqual.Substitute
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_ToString
  commentId: M:Towel.Mathematics.Symbolics.LessThanOrEqual.ToString
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.ToString()
  nameWithType: Symbolics.LessThanOrEqual.ToString()
- uid: Towel.Mathematics.Symbolics.LessThanOrEqual.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.LessThanOrEqual.html#Towel_Mathematics_Symbolics_LessThanOrEqual_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.LessThanOrEqual.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.LessThanOrEqual.ToString
  nameWithType: Symbolics.LessThanOrEqual.ToString
- uid: Towel.Mathematics.Symbolics.Multinary
  name: Symbolics.Multinary
  href: api/Towel.Mathematics.Symbolics.Multinary.html
  commentId: T:Towel.Mathematics.Symbolics.Multinary
  fullName: Towel.Mathematics.Symbolics.Multinary
  nameWithType: Symbolics.Multinary
- uid: Towel.Mathematics.Symbolics.Multinary.#ctor(Towel.Mathematics.Symbolics.Expression[])
  name: Multinary(Symbolics.Expression[])
  href: api/Towel.Mathematics.Symbolics.Multinary.html#Towel_Mathematics_Symbolics_Multinary__ctor_Towel_Mathematics_Symbolics_Expression___
  commentId: M:Towel.Mathematics.Symbolics.Multinary.#ctor(Towel.Mathematics.Symbolics.Expression[])
  name.vb: Multinary(Symbolics.Expression())
  fullName: Towel.Mathematics.Symbolics.Multinary.Multinary(Towel.Mathematics.Symbolics.Expression[])
  fullName.vb: Towel.Mathematics.Symbolics.Multinary.Multinary(Towel.Mathematics.Symbolics.Expression())
  nameWithType: Symbolics.Multinary.Multinary(Symbolics.Expression[])
  nameWithType.vb: Symbolics.Multinary.Multinary(Symbolics.Expression())
- uid: Towel.Mathematics.Symbolics.Multinary.#ctor*
  name: Multinary
  href: api/Towel.Mathematics.Symbolics.Multinary.html#Towel_Mathematics_Symbolics_Multinary__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Multinary.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multinary.Multinary
  nameWithType: Symbolics.Multinary.Multinary
- uid: Towel.Mathematics.Symbolics.Multinary.Operands
  name: Operands
  href: api/Towel.Mathematics.Symbolics.Multinary.html#Towel_Mathematics_Symbolics_Multinary_Operands
  commentId: P:Towel.Mathematics.Symbolics.Multinary.Operands
  fullName: Towel.Mathematics.Symbolics.Multinary.Operands
  nameWithType: Symbolics.Multinary.Operands
- uid: Towel.Mathematics.Symbolics.Multinary.Operands*
  name: Operands
  href: api/Towel.Mathematics.Symbolics.Multinary.html#Towel_Mathematics_Symbolics_Multinary_Operands_
  commentId: Overload:Towel.Mathematics.Symbolics.Multinary.Operands
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multinary.Operands
  nameWithType: Symbolics.Multinary.Operands
- uid: Towel.Mathematics.Symbolics.Multiply
  name: Symbolics.Multiply
  href: api/Towel.Mathematics.Symbolics.Multiply.html
  commentId: T:Towel.Mathematics.Symbolics.Multiply
  fullName: Towel.Mathematics.Symbolics.Multiply
  nameWithType: Symbolics.Multiply
- uid: Towel.Mathematics.Symbolics.Multiply.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Multiply(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Multiply.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Multiply.Multiply(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Multiply.Multiply(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Multiply.#ctor*
  name: Multiply
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Multiply.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multiply.Multiply
  nameWithType: Symbolics.Multiply.Multiply
- uid: Towel.Mathematics.Symbolics.Multiply.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Clone
  commentId: M:Towel.Mathematics.Symbolics.Multiply.Clone
  fullName: Towel.Mathematics.Symbolics.Multiply.Clone()
  nameWithType: Symbolics.Multiply.Clone()
- uid: Towel.Mathematics.Symbolics.Multiply.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Multiply.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multiply.Clone
  nameWithType: Symbolics.Multiply.Clone
- uid: Towel.Mathematics.Symbolics.Multiply.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Multiply.Simplify
  fullName: Towel.Mathematics.Symbolics.Multiply.Simplify()
  nameWithType: Symbolics.Multiply.Simplify()
- uid: Towel.Mathematics.Symbolics.Multiply.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Multiply.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multiply.Simplify
  nameWithType: Symbolics.Multiply.Simplify
- uid: Towel.Mathematics.Symbolics.Multiply.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Multiply.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Multiply.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Multiply.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Multiply.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Multiply.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multiply.Substitute
  nameWithType: Symbolics.Multiply.Substitute
- uid: Towel.Mathematics.Symbolics.Multiply.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_ToString
  commentId: M:Towel.Mathematics.Symbolics.Multiply.ToString
  fullName: Towel.Mathematics.Symbolics.Multiply.ToString()
  nameWithType: Symbolics.Multiply.ToString()
- uid: Towel.Mathematics.Symbolics.Multiply.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Multiply.html#Towel_Mathematics_Symbolics_Multiply_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Multiply.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Multiply.ToString
  nameWithType: Symbolics.Multiply.ToString
- uid: Towel.Mathematics.Symbolics.MultiplyOrDivide
  name: Symbolics.MultiplyOrDivide
  href: api/Towel.Mathematics.Symbolics.MultiplyOrDivide.html
  commentId: T:Towel.Mathematics.Symbolics.MultiplyOrDivide
  fullName: Towel.Mathematics.Symbolics.MultiplyOrDivide
  nameWithType: Symbolics.MultiplyOrDivide
- uid: Towel.Mathematics.Symbolics.MultiplyOrDivide.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: MultiplyOrDivide(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.MultiplyOrDivide.html#Towel_Mathematics_Symbolics_MultiplyOrDivide__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.MultiplyOrDivide.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.MultiplyOrDivide.MultiplyOrDivide(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.MultiplyOrDivide.MultiplyOrDivide(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.MultiplyOrDivide.#ctor*
  name: MultiplyOrDivide
  href: api/Towel.Mathematics.Symbolics.MultiplyOrDivide.html#Towel_Mathematics_Symbolics_MultiplyOrDivide__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.MultiplyOrDivide.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.MultiplyOrDivide.MultiplyOrDivide
  nameWithType: Symbolics.MultiplyOrDivide.MultiplyOrDivide
- uid: Towel.Mathematics.Symbolics.NaturalLog
  name: Symbolics.NaturalLog
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html
  commentId: T:Towel.Mathematics.Symbolics.NaturalLog
  fullName: Towel.Mathematics.Symbolics.NaturalLog
  nameWithType: Symbolics.NaturalLog
- uid: Towel.Mathematics.Symbolics.NaturalLog.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: NaturalLog(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.NaturalLog.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.NaturalLog.NaturalLog(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.NaturalLog.NaturalLog(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.NaturalLog.#ctor*
  name: NaturalLog
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.NaturalLog.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NaturalLog.NaturalLog
  nameWithType: Symbolics.NaturalLog.NaturalLog
- uid: Towel.Mathematics.Symbolics.NaturalLog.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Clone
  commentId: M:Towel.Mathematics.Symbolics.NaturalLog.Clone
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Clone()
  nameWithType: Symbolics.NaturalLog.Clone()
- uid: Towel.Mathematics.Symbolics.NaturalLog.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.NaturalLog.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Clone
  nameWithType: Symbolics.NaturalLog.Clone
- uid: Towel.Mathematics.Symbolics.NaturalLog.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Simplify
  commentId: M:Towel.Mathematics.Symbolics.NaturalLog.Simplify
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Simplify()
  nameWithType: Symbolics.NaturalLog.Simplify()
- uid: Towel.Mathematics.Symbolics.NaturalLog.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.NaturalLog.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Simplify
  nameWithType: Symbolics.NaturalLog.Simplify
- uid: Towel.Mathematics.Symbolics.NaturalLog.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.NaturalLog.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.NaturalLog.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.NaturalLog.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.NaturalLog.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NaturalLog.Substitute
  nameWithType: Symbolics.NaturalLog.Substitute
- uid: Towel.Mathematics.Symbolics.NaturalLog.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_ToString
  commentId: M:Towel.Mathematics.Symbolics.NaturalLog.ToString
  fullName: Towel.Mathematics.Symbolics.NaturalLog.ToString()
  nameWithType: Symbolics.NaturalLog.ToString()
- uid: Towel.Mathematics.Symbolics.NaturalLog.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.NaturalLog.html#Towel_Mathematics_Symbolics_NaturalLog_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.NaturalLog.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NaturalLog.ToString
  nameWithType: Symbolics.NaturalLog.ToString
- uid: Towel.Mathematics.Symbolics.Negate
  name: Symbolics.Negate
  href: api/Towel.Mathematics.Symbolics.Negate.html
  commentId: T:Towel.Mathematics.Symbolics.Negate
  fullName: Towel.Mathematics.Symbolics.Negate
  nameWithType: Symbolics.Negate
- uid: Towel.Mathematics.Symbolics.Negate.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Negate(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Negate.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Negate.Negate(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Negate.Negate(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Negate.#ctor*
  name: Negate
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Negate.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Negate.Negate
  nameWithType: Symbolics.Negate.Negate
- uid: Towel.Mathematics.Symbolics.Negate.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Clone
  commentId: M:Towel.Mathematics.Symbolics.Negate.Clone
  fullName: Towel.Mathematics.Symbolics.Negate.Clone()
  nameWithType: Symbolics.Negate.Clone()
- uid: Towel.Mathematics.Symbolics.Negate.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Negate.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Negate.Clone
  nameWithType: Symbolics.Negate.Clone
- uid: Towel.Mathematics.Symbolics.Negate.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Negate.Simplify
  fullName: Towel.Mathematics.Symbolics.Negate.Simplify()
  nameWithType: Symbolics.Negate.Simplify()
- uid: Towel.Mathematics.Symbolics.Negate.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Negate.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Negate.Simplify
  nameWithType: Symbolics.Negate.Simplify
- uid: Towel.Mathematics.Symbolics.Negate.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Negate.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Negate.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Negate.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Negate.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Negate.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Negate.Substitute
  nameWithType: Symbolics.Negate.Substitute
- uid: Towel.Mathematics.Symbolics.Negate.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_ToString
  commentId: M:Towel.Mathematics.Symbolics.Negate.ToString
  fullName: Towel.Mathematics.Symbolics.Negate.ToString()
  nameWithType: Symbolics.Negate.ToString()
- uid: Towel.Mathematics.Symbolics.Negate.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Negate.html#Towel_Mathematics_Symbolics_Negate_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Negate.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Negate.ToString
  nameWithType: Symbolics.Negate.ToString
- uid: Towel.Mathematics.Symbolics.NotEqual
  name: Symbolics.NotEqual
  href: api/Towel.Mathematics.Symbolics.NotEqual.html
  commentId: T:Towel.Mathematics.Symbolics.NotEqual
  fullName: Towel.Mathematics.Symbolics.NotEqual
  nameWithType: Symbolics.NotEqual
- uid: Towel.Mathematics.Symbolics.NotEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: NotEqual(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.NotEqual.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.NotEqual.NotEqual(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.NotEqual.NotEqual(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.NotEqual.#ctor*
  name: NotEqual
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.NotEqual.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NotEqual.NotEqual
  nameWithType: Symbolics.NotEqual.NotEqual
- uid: Towel.Mathematics.Symbolics.NotEqual.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Clone
  commentId: M:Towel.Mathematics.Symbolics.NotEqual.Clone
  fullName: Towel.Mathematics.Symbolics.NotEqual.Clone()
  nameWithType: Symbolics.NotEqual.Clone()
- uid: Towel.Mathematics.Symbolics.NotEqual.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.NotEqual.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NotEqual.Clone
  nameWithType: Symbolics.NotEqual.Clone
- uid: Towel.Mathematics.Symbolics.NotEqual.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Simplify
  commentId: M:Towel.Mathematics.Symbolics.NotEqual.Simplify
  fullName: Towel.Mathematics.Symbolics.NotEqual.Simplify()
  nameWithType: Symbolics.NotEqual.Simplify()
- uid: Towel.Mathematics.Symbolics.NotEqual.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.NotEqual.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NotEqual.Simplify
  nameWithType: Symbolics.NotEqual.Simplify
- uid: Towel.Mathematics.Symbolics.NotEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.NotEqual.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.NotEqual.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.NotEqual.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.NotEqual.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.NotEqual.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NotEqual.Substitute
  nameWithType: Symbolics.NotEqual.Substitute
- uid: Towel.Mathematics.Symbolics.NotEqual.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_ToString
  commentId: M:Towel.Mathematics.Symbolics.NotEqual.ToString
  fullName: Towel.Mathematics.Symbolics.NotEqual.ToString()
  nameWithType: Symbolics.NotEqual.ToString()
- uid: Towel.Mathematics.Symbolics.NotEqual.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.NotEqual.html#Towel_Mathematics_Symbolics_NotEqual_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.NotEqual.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.NotEqual.ToString
  nameWithType: Symbolics.NotEqual.ToString
- uid: Towel.Mathematics.Symbolics.One
  name: Symbolics.One
  href: api/Towel.Mathematics.Symbolics.One.html
  commentId: T:Towel.Mathematics.Symbolics.One
  fullName: Towel.Mathematics.Symbolics.One
  nameWithType: Symbolics.One
- uid: Towel.Mathematics.Symbolics.One.#ctor
  name: One()
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One__ctor
  commentId: M:Towel.Mathematics.Symbolics.One.#ctor
  fullName: Towel.Mathematics.Symbolics.One.One()
  nameWithType: Symbolics.One.One()
- uid: Towel.Mathematics.Symbolics.One.#ctor*
  name: One
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.One.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.One
  nameWithType: Symbolics.One.One
- uid: Towel.Mathematics.Symbolics.One.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_Clone
  commentId: M:Towel.Mathematics.Symbolics.One.Clone
  fullName: Towel.Mathematics.Symbolics.One.Clone()
  nameWithType: Symbolics.One.Clone()
- uid: Towel.Mathematics.Symbolics.One.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.One.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.Clone
  nameWithType: Symbolics.One.Clone
- uid: Towel.Mathematics.Symbolics.One.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.One.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.One.Equals(System.Object)
  nameWithType: Symbolics.One.Equals(Object)
- uid: Towel.Mathematics.Symbolics.One.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.One.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.Equals
  nameWithType: Symbolics.One.Equals
- uid: Towel.Mathematics.Symbolics.One.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.One.GetHashCode
  fullName: Towel.Mathematics.Symbolics.One.GetHashCode()
  nameWithType: Symbolics.One.GetHashCode()
- uid: Towel.Mathematics.Symbolics.One.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.One.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.GetHashCode
  nameWithType: Symbolics.One.GetHashCode
- uid: Towel.Mathematics.Symbolics.One.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.One.IsNegative
  fullName: Towel.Mathematics.Symbolics.One.IsNegative
  nameWithType: Symbolics.One.IsNegative
- uid: Towel.Mathematics.Symbolics.One.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.One.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.IsNegative
  nameWithType: Symbolics.One.IsNegative
- uid: Towel.Mathematics.Symbolics.One.IsOne
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_IsOne
  commentId: P:Towel.Mathematics.Symbolics.One.IsOne
  fullName: Towel.Mathematics.Symbolics.One.IsOne
  nameWithType: Symbolics.One.IsOne
- uid: Towel.Mathematics.Symbolics.One.IsOne*
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_IsOne_
  commentId: Overload:Towel.Mathematics.Symbolics.One.IsOne
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.IsOne
  nameWithType: Symbolics.One.IsOne
- uid: Towel.Mathematics.Symbolics.One.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_ToString
  commentId: M:Towel.Mathematics.Symbolics.One.ToString
  fullName: Towel.Mathematics.Symbolics.One.ToString()
  nameWithType: Symbolics.One.ToString()
- uid: Towel.Mathematics.Symbolics.One.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.One.html#Towel_Mathematics_Symbolics_One_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.One.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One.ToString
  nameWithType: Symbolics.One.ToString
- uid: Towel.Mathematics.Symbolics.One`1
  name: Symbolics.One<T>
  href: api/Towel.Mathematics.Symbolics.One-1.html
  commentId: T:Towel.Mathematics.Symbolics.One`1
  name.vb: Symbolics.One(Of T)
  fullName: Towel.Mathematics.Symbolics.One<T>
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T)
  nameWithType: Symbolics.One<T>
  nameWithType.vb: Symbolics.One(Of T)
- uid: Towel.Mathematics.Symbolics.One`1.#ctor
  name: One()
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1__ctor
  commentId: M:Towel.Mathematics.Symbolics.One`1.#ctor
  fullName: Towel.Mathematics.Symbolics.One<T>.One()
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).One()
  nameWithType: Symbolics.One<T>.One()
  nameWithType.vb: Symbolics.One(Of T).One()
- uid: Towel.Mathematics.Symbolics.One`1.#ctor*
  name: One
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.One
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).One
  nameWithType: Symbolics.One<T>.One
  nameWithType.vb: Symbolics.One(Of T).One
- uid: Towel.Mathematics.Symbolics.One`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.One`1.Clone
  fullName: Towel.Mathematics.Symbolics.One<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).Clone()
  nameWithType: Symbolics.One<T>.Clone()
  nameWithType.vb: Symbolics.One(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.One`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).Clone
  nameWithType: Symbolics.One<T>.Clone
  nameWithType.vb: Symbolics.One(Of T).Clone
- uid: Towel.Mathematics.Symbolics.One`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.One`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.One<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).Equals(System.Object)
  nameWithType: Symbolics.One<T>.Equals(Object)
  nameWithType.vb: Symbolics.One(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.One`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).Equals
  nameWithType: Symbolics.One<T>.Equals
  nameWithType.vb: Symbolics.One(Of T).Equals
- uid: Towel.Mathematics.Symbolics.One`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.One`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.One<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).GetHashCode()
  nameWithType: Symbolics.One<T>.GetHashCode()
  nameWithType.vb: Symbolics.One(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.One`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).GetHashCode
  nameWithType: Symbolics.One<T>.GetHashCode
  nameWithType.vb: Symbolics.One(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.One`1.IsOne
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_IsOne
  commentId: P:Towel.Mathematics.Symbolics.One`1.IsOne
  fullName: Towel.Mathematics.Symbolics.One<T>.IsOne
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).IsOne
  nameWithType: Symbolics.One<T>.IsOne
  nameWithType.vb: Symbolics.One(Of T).IsOne
- uid: Towel.Mathematics.Symbolics.One`1.IsOne*
  name: IsOne
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_IsOne_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.IsOne
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.IsOne
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).IsOne
  nameWithType: Symbolics.One<T>.IsOne
  nameWithType.vb: Symbolics.One(Of T).IsOne
- uid: Towel.Mathematics.Symbolics.One`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.One`1.ToString
  fullName: Towel.Mathematics.Symbolics.One<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).ToString()
  nameWithType: Symbolics.One<T>.ToString()
  nameWithType.vb: Symbolics.One(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.One`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.One-1.html#Towel_Mathematics_Symbolics_One_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.One`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.One<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.One(Of T).ToString
  nameWithType: Symbolics.One<T>.ToString
  nameWithType.vb: Symbolics.One(Of T).ToString
- uid: Towel.Mathematics.Symbolics.Operation
  name: Symbolics.Operation
  href: api/Towel.Mathematics.Symbolics.Operation.html
  commentId: T:Towel.Mathematics.Symbolics.Operation
  fullName: Towel.Mathematics.Symbolics.Operation
  nameWithType: Symbolics.Operation
- uid: Towel.Mathematics.Symbolics.Operation.ILogical
  name: Symbolics.Operation.ILogical
  href: api/Towel.Mathematics.Symbolics.Operation.ILogical.html
  commentId: T:Towel.Mathematics.Symbolics.Operation.ILogical
  fullName: Towel.Mathematics.Symbolics.Operation.ILogical
  nameWithType: Symbolics.Operation.ILogical
- uid: Towel.Mathematics.Symbolics.Operation.IMathematical
  name: Symbolics.Operation.IMathematical
  href: api/Towel.Mathematics.Symbolics.Operation.IMathematical.html
  commentId: T:Towel.Mathematics.Symbolics.Operation.IMathematical
  fullName: Towel.Mathematics.Symbolics.Operation.IMathematical
  nameWithType: Symbolics.Operation.IMathematical
- uid: Towel.Mathematics.Symbolics.Parse(System.Linq.Expressions.Expression)
  name: Parse(System.Linq.Expressions.Expression)
  href: api/Towel.Mathematics.Symbolics.html#Towel_Mathematics_Symbolics_Parse_System_Linq_Expressions_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Parse(System.Linq.Expressions.Expression)
  fullName: Towel.Mathematics.Symbolics.Parse(System.Linq.Expressions.Expression)
  nameWithType: Symbolics.Parse(System.Linq.Expressions.Expression)
- uid: Towel.Mathematics.Symbolics.Parse*
  name: Parse
  href: api/Towel.Mathematics.Symbolics.html#Towel_Mathematics_Symbolics_Parse_
  commentId: Overload:Towel.Mathematics.Symbolics.Parse
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Parse
  nameWithType: Symbolics.Parse
- uid: Towel.Mathematics.Symbolics.Parse``1(System.String,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name: Parse<T>(String, Func<String, (Boolean, T)>)
  href: api/Towel.Mathematics.Symbolics.html#Towel_Mathematics_Symbolics_Parse__1_System_String_Func_System_String_System_ValueTuple_System_Boolean___0___
  commentId: M:Towel.Mathematics.Symbolics.Parse``1(System.String,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name.vb: Parse(Of T)(String, Func(Of String, (Boolean, T)))
  fullName: Towel.Mathematics.Symbolics.Parse<T>(System.String, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Mathematics.Symbolics.Parse(Of T)(System.String, Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Symbolics.Parse<T>(String, Func<String, (Boolean, T)>)
  nameWithType.vb: Symbolics.Parse(Of T)(String, Func(Of String, (Boolean, T)))
- uid: Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant*
  name: ParseAndSimplifyToConstant
  href: api/Towel.Mathematics.Symbolics.html#Towel_Mathematics_Symbolics_ParseAndSimplifyToConstant_
  commentId: Overload:Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant
  nameWithType: Symbolics.ParseAndSimplifyToConstant
- uid: Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant``1(System.String,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name: ParseAndSimplifyToConstant<T>(String, Func<String, (Boolean, T)>)
  href: api/Towel.Mathematics.Symbolics.html#Towel_Mathematics_Symbolics_ParseAndSimplifyToConstant__1_System_String_Func_System_String_System_ValueTuple_System_Boolean___0___
  commentId: M:Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant``1(System.String,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name.vb: ParseAndSimplifyToConstant(Of T)(String, Func(Of String, (Boolean, T)))
  fullName: Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant<T>(System.String, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Mathematics.Symbolics.ParseAndSimplifyToConstant(Of T)(System.String, Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Symbolics.ParseAndSimplifyToConstant<T>(String, Func<String, (Boolean, T)>)
  nameWithType.vb: Symbolics.ParseAndSimplifyToConstant(Of T)(String, Func(Of String, (Boolean, T)))
- uid: Towel.Mathematics.Symbolics.Pi
  name: Symbolics.Pi
  href: api/Towel.Mathematics.Symbolics.Pi.html
  commentId: T:Towel.Mathematics.Symbolics.Pi
  fullName: Towel.Mathematics.Symbolics.Pi
  nameWithType: Symbolics.Pi
- uid: Towel.Mathematics.Symbolics.Pi.#ctor
  name: Pi()
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi__ctor
  commentId: M:Towel.Mathematics.Symbolics.Pi.#ctor
  fullName: Towel.Mathematics.Symbolics.Pi.Pi()
  nameWithType: Symbolics.Pi.Pi()
- uid: Towel.Mathematics.Symbolics.Pi.#ctor*
  name: Pi
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.Pi
  nameWithType: Symbolics.Pi.Pi
- uid: Towel.Mathematics.Symbolics.Pi.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_Clone
  commentId: M:Towel.Mathematics.Symbolics.Pi.Clone
  fullName: Towel.Mathematics.Symbolics.Pi.Clone()
  nameWithType: Symbolics.Pi.Clone()
- uid: Towel.Mathematics.Symbolics.Pi.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.Clone
  nameWithType: Symbolics.Pi.Clone
- uid: Towel.Mathematics.Symbolics.Pi.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Pi.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Pi.Equals(System.Object)
  nameWithType: Symbolics.Pi.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Pi.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.Equals
  nameWithType: Symbolics.Pi.Equals
- uid: Towel.Mathematics.Symbolics.Pi.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Pi.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Pi.GetHashCode()
  nameWithType: Symbolics.Pi.GetHashCode()
- uid: Towel.Mathematics.Symbolics.Pi.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.GetHashCode
  nameWithType: Symbolics.Pi.GetHashCode
- uid: Towel.Mathematics.Symbolics.Pi.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Pi.IsNegative
  fullName: Towel.Mathematics.Symbolics.Pi.IsNegative
  nameWithType: Symbolics.Pi.IsNegative
- uid: Towel.Mathematics.Symbolics.Pi.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.IsNegative
  nameWithType: Symbolics.Pi.IsNegative
- uid: Towel.Mathematics.Symbolics.Pi.IsPi
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_IsPi
  commentId: P:Towel.Mathematics.Symbolics.Pi.IsPi
  fullName: Towel.Mathematics.Symbolics.Pi.IsPi
  nameWithType: Symbolics.Pi.IsPi
- uid: Towel.Mathematics.Symbolics.Pi.IsPi*
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_IsPi_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.IsPi
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.IsPi
  nameWithType: Symbolics.Pi.IsPi
- uid: Towel.Mathematics.Symbolics.Pi.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_ToString
  commentId: M:Towel.Mathematics.Symbolics.Pi.ToString
  fullName: Towel.Mathematics.Symbolics.Pi.ToString()
  nameWithType: Symbolics.Pi.ToString()
- uid: Towel.Mathematics.Symbolics.Pi.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Pi.html#Towel_Mathematics_Symbolics_Pi_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi.ToString
  nameWithType: Symbolics.Pi.ToString
- uid: Towel.Mathematics.Symbolics.Pi`1
  name: Symbolics.Pi<T>
  href: api/Towel.Mathematics.Symbolics.Pi-1.html
  commentId: T:Towel.Mathematics.Symbolics.Pi`1
  name.vb: Symbolics.Pi(Of T)
  fullName: Towel.Mathematics.Symbolics.Pi<T>
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T)
  nameWithType: Symbolics.Pi<T>
  nameWithType.vb: Symbolics.Pi(Of T)
- uid: Towel.Mathematics.Symbolics.Pi`1.#ctor
  name: Pi()
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1__ctor
  commentId: M:Towel.Mathematics.Symbolics.Pi`1.#ctor
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Pi()
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Pi()
  nameWithType: Symbolics.Pi<T>.Pi()
  nameWithType.vb: Symbolics.Pi(Of T).Pi()
- uid: Towel.Mathematics.Symbolics.Pi`1.#ctor*
  name: Pi
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Pi
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Pi
  nameWithType: Symbolics.Pi<T>.Pi
  nameWithType.vb: Symbolics.Pi(Of T).Pi
- uid: Towel.Mathematics.Symbolics.Pi`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.Pi`1.Clone
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Clone()
  nameWithType: Symbolics.Pi<T>.Clone()
  nameWithType.vb: Symbolics.Pi(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.Pi`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Clone
  nameWithType: Symbolics.Pi<T>.Clone
  nameWithType.vb: Symbolics.Pi(Of T).Clone
- uid: Towel.Mathematics.Symbolics.Pi`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Pi`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Equals(System.Object)
  nameWithType: Symbolics.Pi<T>.Equals(Object)
  nameWithType.vb: Symbolics.Pi(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.Pi`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).Equals
  nameWithType: Symbolics.Pi<T>.Equals
  nameWithType.vb: Symbolics.Pi(Of T).Equals
- uid: Towel.Mathematics.Symbolics.Pi`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Pi`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Pi<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).GetHashCode()
  nameWithType: Symbolics.Pi<T>.GetHashCode()
  nameWithType.vb: Symbolics.Pi(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.Pi`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).GetHashCode
  nameWithType: Symbolics.Pi<T>.GetHashCode
  nameWithType.vb: Symbolics.Pi(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.Pi`1.IsPi
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_IsPi
  commentId: P:Towel.Mathematics.Symbolics.Pi`1.IsPi
  fullName: Towel.Mathematics.Symbolics.Pi<T>.IsPi
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).IsPi
  nameWithType: Symbolics.Pi<T>.IsPi
  nameWithType.vb: Symbolics.Pi(Of T).IsPi
- uid: Towel.Mathematics.Symbolics.Pi`1.IsPi*
  name: IsPi
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_IsPi_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.IsPi
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.IsPi
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).IsPi
  nameWithType: Symbolics.Pi<T>.IsPi
  nameWithType.vb: Symbolics.Pi(Of T).IsPi
- uid: Towel.Mathematics.Symbolics.Pi`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.Pi`1.ToString
  fullName: Towel.Mathematics.Symbolics.Pi<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).ToString()
  nameWithType: Symbolics.Pi<T>.ToString()
  nameWithType.vb: Symbolics.Pi(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.Pi`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Pi-1.html#Towel_Mathematics_Symbolics_Pi_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Pi`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Pi<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.Pi(Of T).ToString
  nameWithType: Symbolics.Pi<T>.ToString
  nameWithType.vb: Symbolics.Pi(Of T).ToString
- uid: Towel.Mathematics.Symbolics.Power
  name: Symbolics.Power
  href: api/Towel.Mathematics.Symbolics.Power.html
  commentId: T:Towel.Mathematics.Symbolics.Power
  fullName: Towel.Mathematics.Symbolics.Power
  nameWithType: Symbolics.Power
- uid: Towel.Mathematics.Symbolics.Power.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Power(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Power.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Power.Power(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Power.Power(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Power.#ctor*
  name: Power
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Power.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Power.Power
  nameWithType: Symbolics.Power.Power
- uid: Towel.Mathematics.Symbolics.Power.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Clone
  commentId: M:Towel.Mathematics.Symbolics.Power.Clone
  fullName: Towel.Mathematics.Symbolics.Power.Clone()
  nameWithType: Symbolics.Power.Clone()
- uid: Towel.Mathematics.Symbolics.Power.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Power.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Power.Clone
  nameWithType: Symbolics.Power.Clone
- uid: Towel.Mathematics.Symbolics.Power.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Power.Simplify
  fullName: Towel.Mathematics.Symbolics.Power.Simplify()
  nameWithType: Symbolics.Power.Simplify()
- uid: Towel.Mathematics.Symbolics.Power.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Power.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Power.Simplify
  nameWithType: Symbolics.Power.Simplify
- uid: Towel.Mathematics.Symbolics.Power.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Power.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Power.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Power.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Power.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Power.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Power.Substitute
  nameWithType: Symbolics.Power.Substitute
- uid: Towel.Mathematics.Symbolics.Power.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_ToString
  commentId: M:Towel.Mathematics.Symbolics.Power.ToString
  fullName: Towel.Mathematics.Symbolics.Power.ToString()
  nameWithType: Symbolics.Power.ToString()
- uid: Towel.Mathematics.Symbolics.Power.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Power.html#Towel_Mathematics_Symbolics_Power_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Power.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Power.ToString
  nameWithType: Symbolics.Power.ToString
- uid: Towel.Mathematics.Symbolics.Root
  name: Symbolics.Root
  href: api/Towel.Mathematics.Symbolics.Root.html
  commentId: T:Towel.Mathematics.Symbolics.Root
  fullName: Towel.Mathematics.Symbolics.Root
  nameWithType: Symbolics.Root
- uid: Towel.Mathematics.Symbolics.Root.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Root(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Root.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Root.Root(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Root.Root(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Root.#ctor*
  name: Root
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Root.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Root.Root
  nameWithType: Symbolics.Root.Root
- uid: Towel.Mathematics.Symbolics.Root.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Clone
  commentId: M:Towel.Mathematics.Symbolics.Root.Clone
  fullName: Towel.Mathematics.Symbolics.Root.Clone()
  nameWithType: Symbolics.Root.Clone()
- uid: Towel.Mathematics.Symbolics.Root.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Root.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Root.Clone
  nameWithType: Symbolics.Root.Clone
- uid: Towel.Mathematics.Symbolics.Root.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Root.Simplify
  fullName: Towel.Mathematics.Symbolics.Root.Simplify()
  nameWithType: Symbolics.Root.Simplify()
- uid: Towel.Mathematics.Symbolics.Root.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Root.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Root.Simplify
  nameWithType: Symbolics.Root.Simplify
- uid: Towel.Mathematics.Symbolics.Root.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Root.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Root.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Root.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Root.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Root.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Root.Substitute
  nameWithType: Symbolics.Root.Substitute
- uid: Towel.Mathematics.Symbolics.Root.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_ToString
  commentId: M:Towel.Mathematics.Symbolics.Root.ToString
  fullName: Towel.Mathematics.Symbolics.Root.ToString()
  nameWithType: Symbolics.Root.ToString()
- uid: Towel.Mathematics.Symbolics.Root.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Root.html#Towel_Mathematics_Symbolics_Root_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Root.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Root.ToString
  nameWithType: Symbolics.Root.ToString
- uid: Towel.Mathematics.Symbolics.Secant
  name: Symbolics.Secant
  href: api/Towel.Mathematics.Symbolics.Secant.html
  commentId: T:Towel.Mathematics.Symbolics.Secant
  fullName: Towel.Mathematics.Symbolics.Secant
  nameWithType: Symbolics.Secant
- uid: Towel.Mathematics.Symbolics.Secant.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Secant(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Secant.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Secant.Secant(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Secant.Secant(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Secant.#ctor*
  name: Secant
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Secant.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Secant.Secant
  nameWithType: Symbolics.Secant.Secant
- uid: Towel.Mathematics.Symbolics.Secant.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Clone
  commentId: M:Towel.Mathematics.Symbolics.Secant.Clone
  fullName: Towel.Mathematics.Symbolics.Secant.Clone()
  nameWithType: Symbolics.Secant.Clone()
- uid: Towel.Mathematics.Symbolics.Secant.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Secant.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Secant.Clone
  nameWithType: Symbolics.Secant.Clone
- uid: Towel.Mathematics.Symbolics.Secant.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Secant.Simplify
  fullName: Towel.Mathematics.Symbolics.Secant.Simplify()
  nameWithType: Symbolics.Secant.Simplify()
- uid: Towel.Mathematics.Symbolics.Secant.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Secant.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Secant.Simplify
  nameWithType: Symbolics.Secant.Simplify
- uid: Towel.Mathematics.Symbolics.Secant.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Secant.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Secant.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Secant.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Secant.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Secant.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Secant.Substitute
  nameWithType: Symbolics.Secant.Substitute
- uid: Towel.Mathematics.Symbolics.Secant.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_ToString
  commentId: M:Towel.Mathematics.Symbolics.Secant.ToString
  fullName: Towel.Mathematics.Symbolics.Secant.ToString()
  nameWithType: Symbolics.Secant.ToString()
- uid: Towel.Mathematics.Symbolics.Secant.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Secant.html#Towel_Mathematics_Symbolics_Secant_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Secant.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Secant.ToString
  nameWithType: Symbolics.Secant.ToString
- uid: Towel.Mathematics.Symbolics.Simplification
  name: Symbolics.Simplification
  href: api/Towel.Mathematics.Symbolics.Simplification.html
  commentId: T:Towel.Mathematics.Symbolics.Simplification
  fullName: Towel.Mathematics.Symbolics.Simplification
  nameWithType: Symbolics.Simplification
- uid: Towel.Mathematics.Symbolics.Simplification.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Simplification(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Simplification.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Simplification.Simplification(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Simplification.Simplification(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Simplification.#ctor*
  name: Simplification
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Simplification.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Simplification.Simplification
  nameWithType: Symbolics.Simplification.Simplification
- uid: Towel.Mathematics.Symbolics.Simplification.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Clone
  commentId: M:Towel.Mathematics.Symbolics.Simplification.Clone
  fullName: Towel.Mathematics.Symbolics.Simplification.Clone()
  nameWithType: Symbolics.Simplification.Clone()
- uid: Towel.Mathematics.Symbolics.Simplification.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Simplification.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Simplification.Clone
  nameWithType: Symbolics.Simplification.Clone
- uid: Towel.Mathematics.Symbolics.Simplification.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Simplification.Simplify
  fullName: Towel.Mathematics.Symbolics.Simplification.Simplify()
  nameWithType: Symbolics.Simplification.Simplify()
- uid: Towel.Mathematics.Symbolics.Simplification.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Simplification.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Simplification.Simplify
  nameWithType: Symbolics.Simplification.Simplify
- uid: Towel.Mathematics.Symbolics.Simplification.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Simplification.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Simplification.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Simplification.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Simplification.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Simplification.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Simplification.Substitute
  nameWithType: Symbolics.Simplification.Substitute
- uid: Towel.Mathematics.Symbolics.Simplification.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_ToString
  commentId: M:Towel.Mathematics.Symbolics.Simplification.ToString
  fullName: Towel.Mathematics.Symbolics.Simplification.ToString()
  nameWithType: Symbolics.Simplification.ToString()
- uid: Towel.Mathematics.Symbolics.Simplification.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Simplification.html#Towel_Mathematics_Symbolics_Simplification_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Simplification.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Simplification.ToString
  nameWithType: Symbolics.Simplification.ToString
- uid: Towel.Mathematics.Symbolics.Sine
  name: Symbolics.Sine
  href: api/Towel.Mathematics.Symbolics.Sine.html
  commentId: T:Towel.Mathematics.Symbolics.Sine
  fullName: Towel.Mathematics.Symbolics.Sine
  nameWithType: Symbolics.Sine
- uid: Towel.Mathematics.Symbolics.Sine.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Sine(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Sine.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Sine.Sine(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Sine.Sine(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Sine.#ctor*
  name: Sine
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Sine.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Sine.Sine
  nameWithType: Symbolics.Sine.Sine
- uid: Towel.Mathematics.Symbolics.Sine.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Clone
  commentId: M:Towel.Mathematics.Symbolics.Sine.Clone
  fullName: Towel.Mathematics.Symbolics.Sine.Clone()
  nameWithType: Symbolics.Sine.Clone()
- uid: Towel.Mathematics.Symbolics.Sine.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Sine.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Sine.Clone
  nameWithType: Symbolics.Sine.Clone
- uid: Towel.Mathematics.Symbolics.Sine.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Sine.Simplify
  fullName: Towel.Mathematics.Symbolics.Sine.Simplify()
  nameWithType: Symbolics.Sine.Simplify()
- uid: Towel.Mathematics.Symbolics.Sine.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Sine.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Sine.Simplify
  nameWithType: Symbolics.Sine.Simplify
- uid: Towel.Mathematics.Symbolics.Sine.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Sine.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Sine.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Sine.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Sine.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Sine.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Sine.Substitute
  nameWithType: Symbolics.Sine.Substitute
- uid: Towel.Mathematics.Symbolics.Sine.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_ToString
  commentId: M:Towel.Mathematics.Symbolics.Sine.ToString
  fullName: Towel.Mathematics.Symbolics.Sine.ToString()
  nameWithType: Symbolics.Sine.ToString()
- uid: Towel.Mathematics.Symbolics.Sine.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Sine.html#Towel_Mathematics_Symbolics_Sine_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Sine.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Sine.ToString
  nameWithType: Symbolics.Sine.ToString
- uid: Towel.Mathematics.Symbolics.SquareRoot
  name: Symbolics.SquareRoot
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html
  commentId: T:Towel.Mathematics.Symbolics.SquareRoot
  fullName: Towel.Mathematics.Symbolics.SquareRoot
  nameWithType: Symbolics.SquareRoot
- uid: Towel.Mathematics.Symbolics.SquareRoot.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: SquareRoot(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.SquareRoot.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.SquareRoot.SquareRoot(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.SquareRoot.SquareRoot(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.SquareRoot.#ctor*
  name: SquareRoot
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.SquareRoot.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.SquareRoot.SquareRoot
  nameWithType: Symbolics.SquareRoot.SquareRoot
- uid: Towel.Mathematics.Symbolics.SquareRoot.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Clone
  commentId: M:Towel.Mathematics.Symbolics.SquareRoot.Clone
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Clone()
  nameWithType: Symbolics.SquareRoot.Clone()
- uid: Towel.Mathematics.Symbolics.SquareRoot.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.SquareRoot.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Clone
  nameWithType: Symbolics.SquareRoot.Clone
- uid: Towel.Mathematics.Symbolics.SquareRoot.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Simplify
  commentId: M:Towel.Mathematics.Symbolics.SquareRoot.Simplify
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Simplify()
  nameWithType: Symbolics.SquareRoot.Simplify()
- uid: Towel.Mathematics.Symbolics.SquareRoot.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.SquareRoot.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Simplify
  nameWithType: Symbolics.SquareRoot.Simplify
- uid: Towel.Mathematics.Symbolics.SquareRoot.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.SquareRoot.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.SquareRoot.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.SquareRoot.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.SquareRoot.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.SquareRoot.Substitute
  nameWithType: Symbolics.SquareRoot.Substitute
- uid: Towel.Mathematics.Symbolics.SquareRoot.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_ToString
  commentId: M:Towel.Mathematics.Symbolics.SquareRoot.ToString
  fullName: Towel.Mathematics.Symbolics.SquareRoot.ToString()
  nameWithType: Symbolics.SquareRoot.ToString()
- uid: Towel.Mathematics.Symbolics.SquareRoot.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.SquareRoot.html#Towel_Mathematics_Symbolics_SquareRoot_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.SquareRoot.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.SquareRoot.ToString
  nameWithType: Symbolics.SquareRoot.ToString
- uid: Towel.Mathematics.Symbolics.Subtract
  name: Symbolics.Subtract
  href: api/Towel.Mathematics.Symbolics.Subtract.html
  commentId: T:Towel.Mathematics.Symbolics.Subtract
  fullName: Towel.Mathematics.Symbolics.Subtract
  nameWithType: Symbolics.Subtract
- uid: Towel.Mathematics.Symbolics.Subtract.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Subtract(Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Subtract.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Subtract.Subtract(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Subtract.Subtract(Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Subtract.#ctor*
  name: Subtract
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Subtract.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Subtract.Subtract
  nameWithType: Symbolics.Subtract.Subtract
- uid: Towel.Mathematics.Symbolics.Subtract.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Clone
  commentId: M:Towel.Mathematics.Symbolics.Subtract.Clone
  fullName: Towel.Mathematics.Symbolics.Subtract.Clone()
  nameWithType: Symbolics.Subtract.Clone()
- uid: Towel.Mathematics.Symbolics.Subtract.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Subtract.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Subtract.Clone
  nameWithType: Symbolics.Subtract.Clone
- uid: Towel.Mathematics.Symbolics.Subtract.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Subtract.Simplify
  fullName: Towel.Mathematics.Symbolics.Subtract.Simplify()
  nameWithType: Symbolics.Subtract.Simplify()
- uid: Towel.Mathematics.Symbolics.Subtract.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Subtract.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Subtract.Simplify
  nameWithType: Symbolics.Subtract.Simplify
- uid: Towel.Mathematics.Symbolics.Subtract.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Subtract.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Subtract.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Subtract.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Subtract.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Subtract.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Subtract.Substitute
  nameWithType: Symbolics.Subtract.Substitute
- uid: Towel.Mathematics.Symbolics.Subtract.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_ToString
  commentId: M:Towel.Mathematics.Symbolics.Subtract.ToString
  fullName: Towel.Mathematics.Symbolics.Subtract.ToString()
  nameWithType: Symbolics.Subtract.ToString()
- uid: Towel.Mathematics.Symbolics.Subtract.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Subtract.html#Towel_Mathematics_Symbolics_Subtract_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Subtract.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Subtract.ToString
  nameWithType: Symbolics.Subtract.ToString
- uid: Towel.Mathematics.Symbolics.Tangent
  name: Symbolics.Tangent
  href: api/Towel.Mathematics.Symbolics.Tangent.html
  commentId: T:Towel.Mathematics.Symbolics.Tangent
  fullName: Towel.Mathematics.Symbolics.Tangent
  nameWithType: Symbolics.Tangent
- uid: Towel.Mathematics.Symbolics.Tangent.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Tangent(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Tangent.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Tangent.Tangent(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Tangent.Tangent(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Tangent.#ctor*
  name: Tangent
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Tangent.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Tangent.Tangent
  nameWithType: Symbolics.Tangent.Tangent
- uid: Towel.Mathematics.Symbolics.Tangent.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Clone
  commentId: M:Towel.Mathematics.Symbolics.Tangent.Clone
  fullName: Towel.Mathematics.Symbolics.Tangent.Clone()
  nameWithType: Symbolics.Tangent.Clone()
- uid: Towel.Mathematics.Symbolics.Tangent.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Tangent.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Tangent.Clone
  nameWithType: Symbolics.Tangent.Clone
- uid: Towel.Mathematics.Symbolics.Tangent.Simplify
  name: Simplify()
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Simplify
  commentId: M:Towel.Mathematics.Symbolics.Tangent.Simplify
  fullName: Towel.Mathematics.Symbolics.Tangent.Simplify()
  nameWithType: Symbolics.Tangent.Simplify()
- uid: Towel.Mathematics.Symbolics.Tangent.Simplify*
  name: Simplify
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Simplify_
  commentId: Overload:Towel.Mathematics.Symbolics.Tangent.Simplify
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Tangent.Simplify
  nameWithType: Symbolics.Tangent.Simplify
- uid: Towel.Mathematics.Symbolics.Tangent.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Tangent.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Tangent.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Tangent.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Tangent.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Tangent.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Tangent.Substitute
  nameWithType: Symbolics.Tangent.Substitute
- uid: Towel.Mathematics.Symbolics.Tangent.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_ToString
  commentId: M:Towel.Mathematics.Symbolics.Tangent.ToString
  fullName: Towel.Mathematics.Symbolics.Tangent.ToString()
  nameWithType: Symbolics.Tangent.ToString()
- uid: Towel.Mathematics.Symbolics.Tangent.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Tangent.html#Towel_Mathematics_Symbolics_Tangent_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Tangent.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Tangent.ToString
  nameWithType: Symbolics.Tangent.ToString
- uid: Towel.Mathematics.Symbolics.Ternary
  name: Symbolics.Ternary
  href: api/Towel.Mathematics.Symbolics.Ternary.html
  commentId: T:Towel.Mathematics.Symbolics.Ternary
  fullName: Towel.Mathematics.Symbolics.Ternary
  nameWithType: Symbolics.Ternary
- uid: Towel.Mathematics.Symbolics.Ternary.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  name: Ternary(Symbolics.Expression, Symbolics.Expression, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary__ctor_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Ternary.#ctor(Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Ternary.Ternary(Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Ternary.Ternary(Symbolics.Expression, Symbolics.Expression, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Ternary.#ctor*
  name: Ternary
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Ternary.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Ternary.Ternary
  nameWithType: Symbolics.Ternary.Ternary
- uid: Towel.Mathematics.Symbolics.Ternary.A
  name: A
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_A
  commentId: P:Towel.Mathematics.Symbolics.Ternary.A
  fullName: Towel.Mathematics.Symbolics.Ternary.A
  nameWithType: Symbolics.Ternary.A
- uid: Towel.Mathematics.Symbolics.Ternary.A*
  name: A
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_A_
  commentId: Overload:Towel.Mathematics.Symbolics.Ternary.A
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Ternary.A
  nameWithType: Symbolics.Ternary.A
- uid: Towel.Mathematics.Symbolics.Ternary.B
  name: B
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_B
  commentId: P:Towel.Mathematics.Symbolics.Ternary.B
  fullName: Towel.Mathematics.Symbolics.Ternary.B
  nameWithType: Symbolics.Ternary.B
- uid: Towel.Mathematics.Symbolics.Ternary.B*
  name: B
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_B_
  commentId: Overload:Towel.Mathematics.Symbolics.Ternary.B
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Ternary.B
  nameWithType: Symbolics.Ternary.B
- uid: Towel.Mathematics.Symbolics.Ternary.C
  name: C
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_C
  commentId: P:Towel.Mathematics.Symbolics.Ternary.C
  fullName: Towel.Mathematics.Symbolics.Ternary.C
  nameWithType: Symbolics.Ternary.C
- uid: Towel.Mathematics.Symbolics.Ternary.C*
  name: C
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_C_
  commentId: Overload:Towel.Mathematics.Symbolics.Ternary.C
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Ternary.C
  nameWithType: Symbolics.Ternary.C
- uid: Towel.Mathematics.Symbolics.Ternary.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Ternary.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Ternary.Equals(System.Object)
  nameWithType: Symbolics.Ternary.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Ternary.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Ternary.html#Towel_Mathematics_Symbolics_Ternary_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Ternary.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Ternary.Equals
  nameWithType: Symbolics.Ternary.Equals
- uid: Towel.Mathematics.Symbolics.Three
  name: Symbolics.Three
  href: api/Towel.Mathematics.Symbolics.Three.html
  commentId: T:Towel.Mathematics.Symbolics.Three
  fullName: Towel.Mathematics.Symbolics.Three
  nameWithType: Symbolics.Three
- uid: Towel.Mathematics.Symbolics.Three.#ctor
  name: Three()
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three__ctor
  commentId: M:Towel.Mathematics.Symbolics.Three.#ctor
  fullName: Towel.Mathematics.Symbolics.Three.Three()
  nameWithType: Symbolics.Three.Three()
- uid: Towel.Mathematics.Symbolics.Three.#ctor*
  name: Three
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.Three
  nameWithType: Symbolics.Three.Three
- uid: Towel.Mathematics.Symbolics.Three.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_Clone
  commentId: M:Towel.Mathematics.Symbolics.Three.Clone
  fullName: Towel.Mathematics.Symbolics.Three.Clone()
  nameWithType: Symbolics.Three.Clone()
- uid: Towel.Mathematics.Symbolics.Three.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.Clone
  nameWithType: Symbolics.Three.Clone
- uid: Towel.Mathematics.Symbolics.Three.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Three.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Three.Equals(System.Object)
  nameWithType: Symbolics.Three.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Three.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.Equals
  nameWithType: Symbolics.Three.Equals
- uid: Towel.Mathematics.Symbolics.Three.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Three.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Three.GetHashCode()
  nameWithType: Symbolics.Three.GetHashCode()
- uid: Towel.Mathematics.Symbolics.Three.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.GetHashCode
  nameWithType: Symbolics.Three.GetHashCode
- uid: Towel.Mathematics.Symbolics.Three.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Three.IsNegative
  fullName: Towel.Mathematics.Symbolics.Three.IsNegative
  nameWithType: Symbolics.Three.IsNegative
- uid: Towel.Mathematics.Symbolics.Three.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.IsNegative
  nameWithType: Symbolics.Three.IsNegative
- uid: Towel.Mathematics.Symbolics.Three.IsThree
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_IsThree
  commentId: P:Towel.Mathematics.Symbolics.Three.IsThree
  fullName: Towel.Mathematics.Symbolics.Three.IsThree
  nameWithType: Symbolics.Three.IsThree
- uid: Towel.Mathematics.Symbolics.Three.IsThree*
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_IsThree_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.IsThree
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.IsThree
  nameWithType: Symbolics.Three.IsThree
- uid: Towel.Mathematics.Symbolics.Three.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_ToString
  commentId: M:Towel.Mathematics.Symbolics.Three.ToString
  fullName: Towel.Mathematics.Symbolics.Three.ToString()
  nameWithType: Symbolics.Three.ToString()
- uid: Towel.Mathematics.Symbolics.Three.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Three.html#Towel_Mathematics_Symbolics_Three_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Three.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three.ToString
  nameWithType: Symbolics.Three.ToString
- uid: Towel.Mathematics.Symbolics.Three`1
  name: Symbolics.Three<T>
  href: api/Towel.Mathematics.Symbolics.Three-1.html
  commentId: T:Towel.Mathematics.Symbolics.Three`1
  name.vb: Symbolics.Three(Of T)
  fullName: Towel.Mathematics.Symbolics.Three<T>
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T)
  nameWithType: Symbolics.Three<T>
  nameWithType.vb: Symbolics.Three(Of T)
- uid: Towel.Mathematics.Symbolics.Three`1.#ctor
  name: Three()
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1__ctor
  commentId: M:Towel.Mathematics.Symbolics.Three`1.#ctor
  fullName: Towel.Mathematics.Symbolics.Three<T>.Three()
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Three()
  nameWithType: Symbolics.Three<T>.Three()
  nameWithType.vb: Symbolics.Three(Of T).Three()
- uid: Towel.Mathematics.Symbolics.Three`1.#ctor*
  name: Three
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.Three
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Three
  nameWithType: Symbolics.Three<T>.Three
  nameWithType.vb: Symbolics.Three(Of T).Three
- uid: Towel.Mathematics.Symbolics.Three`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.Three`1.Clone
  fullName: Towel.Mathematics.Symbolics.Three<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Clone()
  nameWithType: Symbolics.Three<T>.Clone()
  nameWithType.vb: Symbolics.Three(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.Three`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Clone
  nameWithType: Symbolics.Three<T>.Clone
  nameWithType.vb: Symbolics.Three(Of T).Clone
- uid: Towel.Mathematics.Symbolics.Three`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Three`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Three<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Equals(System.Object)
  nameWithType: Symbolics.Three<T>.Equals(Object)
  nameWithType.vb: Symbolics.Three(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.Three`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).Equals
  nameWithType: Symbolics.Three<T>.Equals
  nameWithType.vb: Symbolics.Three(Of T).Equals
- uid: Towel.Mathematics.Symbolics.Three`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Three`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Three<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).GetHashCode()
  nameWithType: Symbolics.Three<T>.GetHashCode()
  nameWithType.vb: Symbolics.Three(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.Three`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).GetHashCode
  nameWithType: Symbolics.Three<T>.GetHashCode
  nameWithType.vb: Symbolics.Three(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.Three`1.IsThree
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_IsThree
  commentId: P:Towel.Mathematics.Symbolics.Three`1.IsThree
  fullName: Towel.Mathematics.Symbolics.Three<T>.IsThree
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).IsThree
  nameWithType: Symbolics.Three<T>.IsThree
  nameWithType.vb: Symbolics.Three(Of T).IsThree
- uid: Towel.Mathematics.Symbolics.Three`1.IsThree*
  name: IsThree
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_IsThree_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.IsThree
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.IsThree
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).IsThree
  nameWithType: Symbolics.Three<T>.IsThree
  nameWithType.vb: Symbolics.Three(Of T).IsThree
- uid: Towel.Mathematics.Symbolics.Three`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.Three`1.ToString
  fullName: Towel.Mathematics.Symbolics.Three<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).ToString()
  nameWithType: Symbolics.Three<T>.ToString()
  nameWithType.vb: Symbolics.Three(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.Three`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Three-1.html#Towel_Mathematics_Symbolics_Three_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Three`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Three<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.Three(Of T).ToString
  nameWithType: Symbolics.Three<T>.ToString
  nameWithType.vb: Symbolics.Three(Of T).ToString
- uid: Towel.Mathematics.Symbolics.Trigonometry
  name: Symbolics.Trigonometry
  href: api/Towel.Mathematics.Symbolics.Trigonometry.html
  commentId: T:Towel.Mathematics.Symbolics.Trigonometry
  fullName: Towel.Mathematics.Symbolics.Trigonometry
  nameWithType: Symbolics.Trigonometry
- uid: Towel.Mathematics.Symbolics.Trigonometry.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Trigonometry(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Trigonometry.html#Towel_Mathematics_Symbolics_Trigonometry__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Trigonometry.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Trigonometry.Trigonometry(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Trigonometry.Trigonometry(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Trigonometry.#ctor*
  name: Trigonometry
  href: api/Towel.Mathematics.Symbolics.Trigonometry.html#Towel_Mathematics_Symbolics_Trigonometry__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Trigonometry.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Trigonometry.Trigonometry
  nameWithType: Symbolics.Trigonometry.Trigonometry
- uid: Towel.Mathematics.Symbolics.True
  name: Symbolics.True
  href: api/Towel.Mathematics.Symbolics.True.html
  commentId: T:Towel.Mathematics.Symbolics.True
  fullName: Towel.Mathematics.Symbolics.True
  nameWithType: Symbolics.True
- uid: Towel.Mathematics.Symbolics.True.#ctor
  name: True()
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True__ctor
  commentId: M:Towel.Mathematics.Symbolics.True.#ctor
  fullName: Towel.Mathematics.Symbolics.True.True()
  nameWithType: Symbolics.True.True()
- uid: Towel.Mathematics.Symbolics.True.#ctor*
  name: "True"
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.True.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.True.True
  nameWithType: Symbolics.True.True
- uid: Towel.Mathematics.Symbolics.True.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_Clone
  commentId: M:Towel.Mathematics.Symbolics.True.Clone
  fullName: Towel.Mathematics.Symbolics.True.Clone()
  nameWithType: Symbolics.True.Clone()
- uid: Towel.Mathematics.Symbolics.True.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.True.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.True.Clone
  nameWithType: Symbolics.True.Clone
- uid: Towel.Mathematics.Symbolics.True.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.True.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.True.Equals(System.Object)
  nameWithType: Symbolics.True.Equals(Object)
- uid: Towel.Mathematics.Symbolics.True.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.True.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.True.Equals
  nameWithType: Symbolics.True.Equals
- uid: Towel.Mathematics.Symbolics.True.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.True.GetHashCode
  fullName: Towel.Mathematics.Symbolics.True.GetHashCode()
  nameWithType: Symbolics.True.GetHashCode()
- uid: Towel.Mathematics.Symbolics.True.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.True.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.True.GetHashCode
  nameWithType: Symbolics.True.GetHashCode
- uid: Towel.Mathematics.Symbolics.True.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_ToString
  commentId: M:Towel.Mathematics.Symbolics.True.ToString
  fullName: Towel.Mathematics.Symbolics.True.ToString()
  nameWithType: Symbolics.True.ToString()
- uid: Towel.Mathematics.Symbolics.True.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.True.html#Towel_Mathematics_Symbolics_True_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.True.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.True.ToString
  nameWithType: Symbolics.True.ToString
- uid: Towel.Mathematics.Symbolics.Two
  name: Symbolics.Two
  href: api/Towel.Mathematics.Symbolics.Two.html
  commentId: T:Towel.Mathematics.Symbolics.Two
  fullName: Towel.Mathematics.Symbolics.Two
  nameWithType: Symbolics.Two
- uid: Towel.Mathematics.Symbolics.Two.#ctor
  name: Two()
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two__ctor
  commentId: M:Towel.Mathematics.Symbolics.Two.#ctor
  fullName: Towel.Mathematics.Symbolics.Two.Two()
  nameWithType: Symbolics.Two.Two()
- uid: Towel.Mathematics.Symbolics.Two.#ctor*
  name: Two
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.Two
  nameWithType: Symbolics.Two.Two
- uid: Towel.Mathematics.Symbolics.Two.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_Clone
  commentId: M:Towel.Mathematics.Symbolics.Two.Clone
  fullName: Towel.Mathematics.Symbolics.Two.Clone()
  nameWithType: Symbolics.Two.Clone()
- uid: Towel.Mathematics.Symbolics.Two.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.Clone
  nameWithType: Symbolics.Two.Clone
- uid: Towel.Mathematics.Symbolics.Two.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Two.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Two.Equals(System.Object)
  nameWithType: Symbolics.Two.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Two.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.Equals
  nameWithType: Symbolics.Two.Equals
- uid: Towel.Mathematics.Symbolics.Two.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Two.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Two.GetHashCode()
  nameWithType: Symbolics.Two.GetHashCode()
- uid: Towel.Mathematics.Symbolics.Two.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.GetHashCode
  nameWithType: Symbolics.Two.GetHashCode
- uid: Towel.Mathematics.Symbolics.Two.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Two.IsNegative
  fullName: Towel.Mathematics.Symbolics.Two.IsNegative
  nameWithType: Symbolics.Two.IsNegative
- uid: Towel.Mathematics.Symbolics.Two.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.IsNegative
  nameWithType: Symbolics.Two.IsNegative
- uid: Towel.Mathematics.Symbolics.Two.IsTwo
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_IsTwo
  commentId: P:Towel.Mathematics.Symbolics.Two.IsTwo
  fullName: Towel.Mathematics.Symbolics.Two.IsTwo
  nameWithType: Symbolics.Two.IsTwo
- uid: Towel.Mathematics.Symbolics.Two.IsTwo*
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_IsTwo_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.IsTwo
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.IsTwo
  nameWithType: Symbolics.Two.IsTwo
- uid: Towel.Mathematics.Symbolics.Two.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_ToString
  commentId: M:Towel.Mathematics.Symbolics.Two.ToString
  fullName: Towel.Mathematics.Symbolics.Two.ToString()
  nameWithType: Symbolics.Two.ToString()
- uid: Towel.Mathematics.Symbolics.Two.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Two.html#Towel_Mathematics_Symbolics_Two_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Two.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two.ToString
  nameWithType: Symbolics.Two.ToString
- uid: Towel.Mathematics.Symbolics.Two`1
  name: Symbolics.Two<T>
  href: api/Towel.Mathematics.Symbolics.Two-1.html
  commentId: T:Towel.Mathematics.Symbolics.Two`1
  name.vb: Symbolics.Two(Of T)
  fullName: Towel.Mathematics.Symbolics.Two<T>
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T)
  nameWithType: Symbolics.Two<T>
  nameWithType.vb: Symbolics.Two(Of T)
- uid: Towel.Mathematics.Symbolics.Two`1.#ctor
  name: Two()
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1__ctor
  commentId: M:Towel.Mathematics.Symbolics.Two`1.#ctor
  fullName: Towel.Mathematics.Symbolics.Two<T>.Two()
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Two()
  nameWithType: Symbolics.Two<T>.Two()
  nameWithType.vb: Symbolics.Two(Of T).Two()
- uid: Towel.Mathematics.Symbolics.Two`1.#ctor*
  name: Two
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.Two
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Two
  nameWithType: Symbolics.Two<T>.Two
  nameWithType.vb: Symbolics.Two(Of T).Two
- uid: Towel.Mathematics.Symbolics.Two`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.Two`1.Clone
  fullName: Towel.Mathematics.Symbolics.Two<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Clone()
  nameWithType: Symbolics.Two<T>.Clone()
  nameWithType.vb: Symbolics.Two(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.Two`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Clone
  nameWithType: Symbolics.Two<T>.Clone
  nameWithType.vb: Symbolics.Two(Of T).Clone
- uid: Towel.Mathematics.Symbolics.Two`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Two`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Two<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Equals(System.Object)
  nameWithType: Symbolics.Two<T>.Equals(Object)
  nameWithType.vb: Symbolics.Two(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.Two`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).Equals
  nameWithType: Symbolics.Two<T>.Equals
  nameWithType.vb: Symbolics.Two(Of T).Equals
- uid: Towel.Mathematics.Symbolics.Two`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Two`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Two<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).GetHashCode()
  nameWithType: Symbolics.Two<T>.GetHashCode()
  nameWithType.vb: Symbolics.Two(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.Two`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).GetHashCode
  nameWithType: Symbolics.Two<T>.GetHashCode
  nameWithType.vb: Symbolics.Two(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.Two`1.IsTwo
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_IsTwo
  commentId: P:Towel.Mathematics.Symbolics.Two`1.IsTwo
  fullName: Towel.Mathematics.Symbolics.Two<T>.IsTwo
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).IsTwo
  nameWithType: Symbolics.Two<T>.IsTwo
  nameWithType.vb: Symbolics.Two(Of T).IsTwo
- uid: Towel.Mathematics.Symbolics.Two`1.IsTwo*
  name: IsTwo
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_IsTwo_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.IsTwo
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.IsTwo
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).IsTwo
  nameWithType: Symbolics.Two<T>.IsTwo
  nameWithType.vb: Symbolics.Two(Of T).IsTwo
- uid: Towel.Mathematics.Symbolics.Two`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.Two`1.ToString
  fullName: Towel.Mathematics.Symbolics.Two<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).ToString()
  nameWithType: Symbolics.Two<T>.ToString()
  nameWithType.vb: Symbolics.Two(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.Two`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Two-1.html#Towel_Mathematics_Symbolics_Two_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Two`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Two<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.Two(Of T).ToString
  nameWithType: Symbolics.Two<T>.ToString
  nameWithType.vb: Symbolics.Two(Of T).ToString
- uid: Towel.Mathematics.Symbolics.Unary
  name: Symbolics.Unary
  href: api/Towel.Mathematics.Symbolics.Unary.html
  commentId: T:Towel.Mathematics.Symbolics.Unary
  fullName: Towel.Mathematics.Symbolics.Unary
  nameWithType: Symbolics.Unary
- uid: Towel.Mathematics.Symbolics.Unary.#ctor(Towel.Mathematics.Symbolics.Expression)
  name: Unary(Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary__ctor_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Unary.#ctor(Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Unary.Unary(Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Unary.Unary(Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Unary.#ctor*
  name: Unary
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Unary.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Unary.Unary
  nameWithType: Symbolics.Unary.Unary
- uid: Towel.Mathematics.Symbolics.Unary.A
  name: A
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary_A
  commentId: P:Towel.Mathematics.Symbolics.Unary.A
  fullName: Towel.Mathematics.Symbolics.Unary.A
  nameWithType: Symbolics.Unary.A
- uid: Towel.Mathematics.Symbolics.Unary.A*
  name: A
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary_A_
  commentId: Overload:Towel.Mathematics.Symbolics.Unary.A
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Unary.A
  nameWithType: Symbolics.Unary.A
- uid: Towel.Mathematics.Symbolics.Unary.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Unary.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Unary.Equals(System.Object)
  nameWithType: Symbolics.Unary.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Unary.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Unary.html#Towel_Mathematics_Symbolics_Unary_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Unary.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Unary.Equals
  nameWithType: Symbolics.Unary.Equals
- uid: Towel.Mathematics.Symbolics.Variable
  name: Symbolics.Variable
  href: api/Towel.Mathematics.Symbolics.Variable.html
  commentId: T:Towel.Mathematics.Symbolics.Variable
  fullName: Towel.Mathematics.Symbolics.Variable
  nameWithType: Symbolics.Variable
- uid: Towel.Mathematics.Symbolics.Variable.#ctor(System.String)
  name: Variable(String)
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable__ctor_System_String_
  commentId: M:Towel.Mathematics.Symbolics.Variable.#ctor(System.String)
  fullName: Towel.Mathematics.Symbolics.Variable.Variable(System.String)
  nameWithType: Symbolics.Variable.Variable(String)
- uid: Towel.Mathematics.Symbolics.Variable.#ctor*
  name: Variable
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.Variable
  nameWithType: Symbolics.Variable.Variable
- uid: Towel.Mathematics.Symbolics.Variable.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Clone
  commentId: M:Towel.Mathematics.Symbolics.Variable.Clone
  fullName: Towel.Mathematics.Symbolics.Variable.Clone()
  nameWithType: Symbolics.Variable.Clone()
- uid: Towel.Mathematics.Symbolics.Variable.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.Clone
  nameWithType: Symbolics.Variable.Clone
- uid: Towel.Mathematics.Symbolics.Variable.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Variable.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Variable.Equals(System.Object)
  nameWithType: Symbolics.Variable.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Variable.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.Equals
  nameWithType: Symbolics.Variable.Equals
- uid: Towel.Mathematics.Symbolics.Variable.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Variable.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Variable.GetHashCode()
  nameWithType: Symbolics.Variable.GetHashCode()
- uid: Towel.Mathematics.Symbolics.Variable.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.GetHashCode
  nameWithType: Symbolics.Variable.GetHashCode
- uid: Towel.Mathematics.Symbolics.Variable.Name
  name: Name
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Name
  commentId: P:Towel.Mathematics.Symbolics.Variable.Name
  fullName: Towel.Mathematics.Symbolics.Variable.Name
  nameWithType: Symbolics.Variable.Name
- uid: Towel.Mathematics.Symbolics.Variable.Name*
  name: Name
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Name_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.Name
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.Name
  nameWithType: Symbolics.Variable.Name
- uid: Towel.Mathematics.Symbolics.Variable.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  name: Substitute(String, Symbolics.Expression)
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Substitute_System_String_Towel_Mathematics_Symbolics_Expression_
  commentId: M:Towel.Mathematics.Symbolics.Variable.Substitute(System.String,Towel.Mathematics.Symbolics.Expression)
  fullName: Towel.Mathematics.Symbolics.Variable.Substitute(System.String, Towel.Mathematics.Symbolics.Expression)
  nameWithType: Symbolics.Variable.Substitute(String, Symbolics.Expression)
- uid: Towel.Mathematics.Symbolics.Variable.Substitute*
  name: Substitute
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_Substitute_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.Substitute
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.Substitute
  nameWithType: Symbolics.Variable.Substitute
- uid: Towel.Mathematics.Symbolics.Variable.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_ToString
  commentId: M:Towel.Mathematics.Symbolics.Variable.ToString
  fullName: Towel.Mathematics.Symbolics.Variable.ToString()
  nameWithType: Symbolics.Variable.ToString()
- uid: Towel.Mathematics.Symbolics.Variable.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Variable.html#Towel_Mathematics_Symbolics_Variable_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Variable.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Variable.ToString
  nameWithType: Symbolics.Variable.ToString
- uid: Towel.Mathematics.Symbolics.Zero
  name: Symbolics.Zero
  href: api/Towel.Mathematics.Symbolics.Zero.html
  commentId: T:Towel.Mathematics.Symbolics.Zero
  fullName: Towel.Mathematics.Symbolics.Zero
  nameWithType: Symbolics.Zero
- uid: Towel.Mathematics.Symbolics.Zero.#ctor
  name: Zero()
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero__ctor
  commentId: M:Towel.Mathematics.Symbolics.Zero.#ctor
  fullName: Towel.Mathematics.Symbolics.Zero.Zero()
  nameWithType: Symbolics.Zero.Zero()
- uid: Towel.Mathematics.Symbolics.Zero.#ctor*
  name: Zero
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.Zero
  nameWithType: Symbolics.Zero.Zero
- uid: Towel.Mathematics.Symbolics.Zero.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_Clone
  commentId: M:Towel.Mathematics.Symbolics.Zero.Clone
  fullName: Towel.Mathematics.Symbolics.Zero.Clone()
  nameWithType: Symbolics.Zero.Clone()
- uid: Towel.Mathematics.Symbolics.Zero.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.Clone
  nameWithType: Symbolics.Zero.Clone
- uid: Towel.Mathematics.Symbolics.Zero.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Zero.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Zero.Equals(System.Object)
  nameWithType: Symbolics.Zero.Equals(Object)
- uid: Towel.Mathematics.Symbolics.Zero.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.Equals
  nameWithType: Symbolics.Zero.Equals
- uid: Towel.Mathematics.Symbolics.Zero.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Zero.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Zero.GetHashCode()
  nameWithType: Symbolics.Zero.GetHashCode()
- uid: Towel.Mathematics.Symbolics.Zero.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.GetHashCode
  nameWithType: Symbolics.Zero.GetHashCode
- uid: Towel.Mathematics.Symbolics.Zero.IsNegative
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_IsNegative
  commentId: P:Towel.Mathematics.Symbolics.Zero.IsNegative
  fullName: Towel.Mathematics.Symbolics.Zero.IsNegative
  nameWithType: Symbolics.Zero.IsNegative
- uid: Towel.Mathematics.Symbolics.Zero.IsNegative*
  name: IsNegative
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_IsNegative_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.IsNegative
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.IsNegative
  nameWithType: Symbolics.Zero.IsNegative
- uid: Towel.Mathematics.Symbolics.Zero.IsZero
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_IsZero
  commentId: P:Towel.Mathematics.Symbolics.Zero.IsZero
  fullName: Towel.Mathematics.Symbolics.Zero.IsZero
  nameWithType: Symbolics.Zero.IsZero
- uid: Towel.Mathematics.Symbolics.Zero.IsZero*
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_IsZero_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.IsZero
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.IsZero
  nameWithType: Symbolics.Zero.IsZero
- uid: Towel.Mathematics.Symbolics.Zero.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_ToString
  commentId: M:Towel.Mathematics.Symbolics.Zero.ToString
  fullName: Towel.Mathematics.Symbolics.Zero.ToString()
  nameWithType: Symbolics.Zero.ToString()
- uid: Towel.Mathematics.Symbolics.Zero.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Zero.html#Towel_Mathematics_Symbolics_Zero_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero.ToString
  nameWithType: Symbolics.Zero.ToString
- uid: Towel.Mathematics.Symbolics.Zero`1
  name: Symbolics.Zero<T>
  href: api/Towel.Mathematics.Symbolics.Zero-1.html
  commentId: T:Towel.Mathematics.Symbolics.Zero`1
  name.vb: Symbolics.Zero(Of T)
  fullName: Towel.Mathematics.Symbolics.Zero<T>
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T)
  nameWithType: Symbolics.Zero<T>
  nameWithType.vb: Symbolics.Zero(Of T)
- uid: Towel.Mathematics.Symbolics.Zero`1.#ctor
  name: Zero()
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1__ctor
  commentId: M:Towel.Mathematics.Symbolics.Zero`1.#ctor
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Zero()
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Zero()
  nameWithType: Symbolics.Zero<T>.Zero()
  nameWithType.vb: Symbolics.Zero(Of T).Zero()
- uid: Towel.Mathematics.Symbolics.Zero`1.#ctor*
  name: Zero
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1__ctor_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Zero
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Zero
  nameWithType: Symbolics.Zero<T>.Zero
  nameWithType.vb: Symbolics.Zero(Of T).Zero
- uid: Towel.Mathematics.Symbolics.Zero`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_Clone
  commentId: M:Towel.Mathematics.Symbolics.Zero`1.Clone
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Clone()
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Clone()
  nameWithType: Symbolics.Zero<T>.Clone()
  nameWithType.vb: Symbolics.Zero(Of T).Clone()
- uid: Towel.Mathematics.Symbolics.Zero`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_Clone_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Clone
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Clone
  nameWithType: Symbolics.Zero<T>.Clone
  nameWithType.vb: Symbolics.Zero(Of T).Clone
- uid: Towel.Mathematics.Symbolics.Zero`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_Equals_System_Object_
  commentId: M:Towel.Mathematics.Symbolics.Zero`1.Equals(System.Object)
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Equals(System.Object)
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Equals(System.Object)
  nameWithType: Symbolics.Zero<T>.Equals(Object)
  nameWithType.vb: Symbolics.Zero(Of T).Equals(Object)
- uid: Towel.Mathematics.Symbolics.Zero`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_Equals_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.Equals
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).Equals
  nameWithType: Symbolics.Zero<T>.Equals
  nameWithType.vb: Symbolics.Zero(Of T).Equals
- uid: Towel.Mathematics.Symbolics.Zero`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_GetHashCode
  commentId: M:Towel.Mathematics.Symbolics.Zero`1.GetHashCode
  fullName: Towel.Mathematics.Symbolics.Zero<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).GetHashCode()
  nameWithType: Symbolics.Zero<T>.GetHashCode()
  nameWithType.vb: Symbolics.Zero(Of T).GetHashCode()
- uid: Towel.Mathematics.Symbolics.Zero`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).GetHashCode
  nameWithType: Symbolics.Zero<T>.GetHashCode
  nameWithType.vb: Symbolics.Zero(Of T).GetHashCode
- uid: Towel.Mathematics.Symbolics.Zero`1.IsZero
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_IsZero
  commentId: P:Towel.Mathematics.Symbolics.Zero`1.IsZero
  fullName: Towel.Mathematics.Symbolics.Zero<T>.IsZero
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).IsZero
  nameWithType: Symbolics.Zero<T>.IsZero
  nameWithType.vb: Symbolics.Zero(Of T).IsZero
- uid: Towel.Mathematics.Symbolics.Zero`1.IsZero*
  name: IsZero
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_IsZero_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.IsZero
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.IsZero
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).IsZero
  nameWithType: Symbolics.Zero<T>.IsZero
  nameWithType.vb: Symbolics.Zero(Of T).IsZero
- uid: Towel.Mathematics.Symbolics.Zero`1.ToString
  name: ToString()
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_ToString
  commentId: M:Towel.Mathematics.Symbolics.Zero`1.ToString
  fullName: Towel.Mathematics.Symbolics.Zero<T>.ToString()
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).ToString()
  nameWithType: Symbolics.Zero<T>.ToString()
  nameWithType.vb: Symbolics.Zero(Of T).ToString()
- uid: Towel.Mathematics.Symbolics.Zero`1.ToString*
  name: ToString
  href: api/Towel.Mathematics.Symbolics.Zero-1.html#Towel_Mathematics_Symbolics_Zero_1_ToString_
  commentId: Overload:Towel.Mathematics.Symbolics.Zero`1.ToString
  isSpec: "True"
  fullName: Towel.Mathematics.Symbolics.Zero<T>.ToString
  fullName.vb: Towel.Mathematics.Symbolics.Zero(Of T).ToString
  nameWithType: Symbolics.Zero<T>.ToString
  nameWithType.vb: Symbolics.Zero(Of T).ToString
- uid: Towel.Mathematics.Vector`1
  name: Vector<T>
  href: api/Towel.Mathematics.Vector-1.html
  commentId: T:Towel.Mathematics.Vector`1
  name.vb: Vector(Of T)
  fullName: Towel.Mathematics.Vector<T>
  fullName.vb: Towel.Mathematics.Vector(Of T)
  nameWithType: Vector<T>
  nameWithType.vb: Vector(Of T)
- uid: Towel.Mathematics.Vector`1.#ctor(`0[])
  name: Vector(T[])
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1__ctor__0___
  commentId: M:Towel.Mathematics.Vector`1.#ctor(`0[])
  name.vb: Vector(T())
  fullName: Towel.Mathematics.Vector<T>.Vector(T[])
  fullName.vb: Towel.Mathematics.Vector(Of T).Vector(T())
  nameWithType: Vector<T>.Vector(T[])
  nameWithType.vb: Vector(Of T).Vector(T())
- uid: Towel.Mathematics.Vector`1.#ctor(System.Int32)
  name: Vector(Int32)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1__ctor_System_Int32_
  commentId: M:Towel.Mathematics.Vector`1.#ctor(System.Int32)
  fullName: Towel.Mathematics.Vector<T>.Vector(System.Int32)
  fullName.vb: Towel.Mathematics.Vector(Of T).Vector(System.Int32)
  nameWithType: Vector<T>.Vector(Int32)
  nameWithType.vb: Vector(Of T).Vector(Int32)
- uid: Towel.Mathematics.Vector`1.#ctor(System.Int32,Func{System.Int32,`0})
  name: Vector(Int32, Func<Int32, T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1__ctor_System_Int32_Func_System_Int32__0__
  commentId: M:Towel.Mathematics.Vector`1.#ctor(System.Int32,Func{System.Int32,`0})
  name.vb: Vector(Int32, Func(Of Int32, T))
  fullName: Towel.Mathematics.Vector<T>.Vector(System.Int32, Func<System.Int32, T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Vector(System.Int32, Func(Of System.Int32, T))
  nameWithType: Vector<T>.Vector(Int32, Func<Int32, T>)
  nameWithType.vb: Vector(Of T).Vector(Int32, Func(Of Int32, T))
- uid: Towel.Mathematics.Vector`1.#ctor*
  name: Vector
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1__ctor_
  commentId: Overload:Towel.Mathematics.Vector`1.#ctor
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Vector
  fullName.vb: Towel.Mathematics.Vector(Of T).Vector
  nameWithType: Vector<T>.Vector
  nameWithType.vb: Vector(Of T).Vector
- uid: Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0})
  name: Add(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Add_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0})
  name.vb: Add(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Add(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Add(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Add(Vector<T>)
  nameWithType.vb: Vector(Of T).Add(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Add(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Add_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Add(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Add(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Add(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Add(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Add(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Add(Vector<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Add_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Add(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Add(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Add(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Add(Vector<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Add(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Add(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Add_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Add(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Add(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Add(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Add(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Add(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Add(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Add*
  name: Add
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Add_
  commentId: Overload:Towel.Mathematics.Vector`1.Add
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Add
  fullName.vb: Towel.Mathematics.Vector(Of T).Add
  nameWithType: Vector<T>.Add
  nameWithType.vb: Vector(Of T).Add
- uid: Towel.Mathematics.Vector`1.Angle(Towel.Mathematics.Vector{`0},Towel.Mathematics.MathematicsDelegates.InverseCosine{`0})
  name: Angle(Vector<T>, MathematicsDelegates.InverseCosine<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Angle_Towel_Mathematics_Vector__0__Towel_Mathematics_MathematicsDelegates_InverseCosine__0__
  commentId: M:Towel.Mathematics.Vector`1.Angle(Towel.Mathematics.Vector{`0},Towel.Mathematics.MathematicsDelegates.InverseCosine{`0})
  name.vb: Angle(Vector(Of T), MathematicsDelegates.InverseCosine(Of T))
  fullName: Towel.Mathematics.Vector<T>.Angle(Towel.Mathematics.Vector<T>, Towel.Mathematics.MathematicsDelegates.InverseCosine<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Angle(Towel.Mathematics.Vector(Of T), Towel.Mathematics.MathematicsDelegates.InverseCosine(Of T))
  nameWithType: Vector<T>.Angle(Vector<T>, MathematicsDelegates.InverseCosine<T>)
  nameWithType.vb: Vector(Of T).Angle(Vector(Of T), MathematicsDelegates.InverseCosine(Of T))
- uid: Towel.Mathematics.Vector`1.Angle(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.MathematicsDelegates.InverseCosine{`0})
  name: Angle(Vector<T>, Vector<T>, MathematicsDelegates.InverseCosine<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Angle_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_MathematicsDelegates_InverseCosine__0__
  commentId: M:Towel.Mathematics.Vector`1.Angle(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.MathematicsDelegates.InverseCosine{`0})
  name.vb: Angle(Vector(Of T), Vector(Of T), MathematicsDelegates.InverseCosine(Of T))
  fullName: Towel.Mathematics.Vector<T>.Angle(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, Towel.Mathematics.MathematicsDelegates.InverseCosine<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Angle(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), Towel.Mathematics.MathematicsDelegates.InverseCosine(Of T))
  nameWithType: Vector<T>.Angle(Vector<T>, Vector<T>, MathematicsDelegates.InverseCosine<T>)
  nameWithType.vb: Vector(Of T).Angle(Vector(Of T), Vector(Of T), MathematicsDelegates.InverseCosine(Of T))
- uid: Towel.Mathematics.Vector`1.Angle*
  name: Angle
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Angle_
  commentId: Overload:Towel.Mathematics.Vector`1.Angle
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Angle
  fullName.vb: Towel.Mathematics.Vector(Of T).Angle
  nameWithType: Vector<T>.Angle
  nameWithType.vb: Vector(Of T).Angle
- uid: Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0)
  name: BarycentricInterpolation(Vector<T>, Vector<T>, T, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_BarycentricInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0__0_
  commentId: M:Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0)
  name.vb: BarycentricInterpolation(Vector(Of T), Vector(Of T), T, T)
  fullName: Towel.Mathematics.Vector<T>.BarycentricInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).BarycentricInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T, T)
  nameWithType: Vector<T>.BarycentricInterpolation(Vector<T>, Vector<T>, T, T)
  nameWithType.vb: Vector(Of T).BarycentricInterpolation(Vector(Of T), Vector(Of T), T, T)
- uid: Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0)
  name: BarycentricInterpolation(Vector<T>, Vector<T>, Vector<T>, T, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_BarycentricInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0__0_
  commentId: M:Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0)
  name.vb: BarycentricInterpolation(Vector(Of T), Vector(Of T), Vector(Of T), T, T)
  fullName: Towel.Mathematics.Vector<T>.BarycentricInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).BarycentricInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T, T)
  nameWithType: Vector<T>.BarycentricInterpolation(Vector<T>, Vector<T>, Vector<T>, T, T)
  nameWithType.vb: Vector(Of T).BarycentricInterpolation(Vector(Of T), Vector(Of T), Vector(Of T), T, T)
- uid: Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0,Towel.Mathematics.Vector{`0}@)
  name: BarycentricInterpolation(Vector<T>, Vector<T>, Vector<T>, T, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_BarycentricInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0__0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.BarycentricInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,`0,Towel.Mathematics.Vector{`0}@)
  name.vb: BarycentricInterpolation(Vector(Of T), Vector(Of T), Vector(Of T), T, T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.BarycentricInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).BarycentricInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T, T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.BarycentricInterpolation(Vector<T>, Vector<T>, Vector<T>, T, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).BarycentricInterpolation(Vector(Of T), Vector(Of T), Vector(Of T), T, T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.BarycentricInterpolation*
  name: BarycentricInterpolation
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_BarycentricInterpolation_
  commentId: Overload:Towel.Mathematics.Vector`1.BarycentricInterpolation
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.BarycentricInterpolation
  fullName.vb: Towel.Mathematics.Vector(Of T).BarycentricInterpolation
  nameWithType: Vector<T>.BarycentricInterpolation
  nameWithType.vb: Vector(Of T).BarycentricInterpolation
- uid: Towel.Mathematics.Vector`1.Clone
  name: Clone()
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Clone
  commentId: M:Towel.Mathematics.Vector`1.Clone
  fullName: Towel.Mathematics.Vector<T>.Clone()
  fullName.vb: Towel.Mathematics.Vector(Of T).Clone()
  nameWithType: Vector<T>.Clone()
  nameWithType.vb: Vector(Of T).Clone()
- uid: Towel.Mathematics.Vector`1.Clone(Towel.Mathematics.Vector{`0})
  name: Clone(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Clone_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Clone(Towel.Mathematics.Vector{`0})
  name.vb: Clone(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Clone(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Clone(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Clone(Vector<T>)
  nameWithType.vb: Vector(Of T).Clone(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Clone*
  name: Clone
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Clone_
  commentId: Overload:Towel.Mathematics.Vector`1.Clone
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Clone
  fullName.vb: Towel.Mathematics.Vector(Of T).Clone
  nameWithType: Vector<T>.Clone
  nameWithType.vb: Vector(Of T).Clone
- uid: Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0})
  name: CrossProduct(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_CrossProduct_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0})
  name.vb: CrossProduct(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.CrossProduct(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).CrossProduct(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.CrossProduct(Vector<T>)
  nameWithType.vb: Vector(Of T).CrossProduct(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: CrossProduct(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_CrossProduct_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: CrossProduct(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.CrossProduct(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).CrossProduct(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.CrossProduct(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).CrossProduct(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: CrossProduct(Vector<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_CrossProduct_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: CrossProduct(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.CrossProduct(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).CrossProduct(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.CrossProduct(Vector<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).CrossProduct(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: CrossProduct(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_CrossProduct_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.CrossProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: CrossProduct(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.CrossProduct(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).CrossProduct(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.CrossProduct(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).CrossProduct(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.CrossProduct*
  name: CrossProduct
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_CrossProduct_
  commentId: Overload:Towel.Mathematics.Vector`1.CrossProduct
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.CrossProduct
  fullName.vb: Towel.Mathematics.Vector(Of T).CrossProduct
  nameWithType: Vector<T>.CrossProduct
  nameWithType.vb: Vector(Of T).CrossProduct
- uid: Towel.Mathematics.Vector`1.Dimensions
  name: Dimensions
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Dimensions
  commentId: P:Towel.Mathematics.Vector`1.Dimensions
  fullName: Towel.Mathematics.Vector<T>.Dimensions
  fullName.vb: Towel.Mathematics.Vector(Of T).Dimensions
  nameWithType: Vector<T>.Dimensions
  nameWithType.vb: Vector(Of T).Dimensions
- uid: Towel.Mathematics.Vector`1.Dimensions*
  name: Dimensions
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Dimensions_
  commentId: Overload:Towel.Mathematics.Vector`1.Dimensions
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Dimensions
  fullName.vb: Towel.Mathematics.Vector(Of T).Dimensions
  nameWithType: Vector<T>.Dimensions
  nameWithType.vb: Vector(Of T).Dimensions
- uid: Towel.Mathematics.Vector`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Divide__0_
  commentId: M:Towel.Mathematics.Vector`1.Divide(`0)
  fullName: Towel.Mathematics.Vector<T>.Divide(T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Divide(T)
  nameWithType: Vector<T>.Divide(T)
  nameWithType.vb: Vector(Of T).Divide(T)
- uid: Towel.Mathematics.Vector`1.Divide(`0,Towel.Mathematics.Vector{`0}@)
  name: Divide(T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Divide__0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Divide(`0,Towel.Mathematics.Vector{`0}@)
  name.vb: Divide(T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Divide(T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Divide(T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Divide(T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Divide(T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Divide(Towel.Mathematics.Vector{`0},`0)
  name: Divide(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Divide_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.Divide(Towel.Mathematics.Vector{`0},`0)
  name.vb: Divide(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Divide(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Divide(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Divide(Vector<T>, T)
  nameWithType.vb: Vector(Of T).Divide(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.Divide(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name: Divide(Vector<T>, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Divide_Towel_Mathematics_Vector__0___0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Divide(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name.vb: Divide(Vector(Of T), T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Divide(Towel.Mathematics.Vector<T>, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Divide(Towel.Mathematics.Vector(Of T), T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Divide(Vector<T>, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Divide(Vector(Of T), T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Divide*
  name: Divide
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Divide_
  commentId: Overload:Towel.Mathematics.Vector`1.Divide
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Divide
  fullName.vb: Towel.Mathematics.Vector(Of T).Divide
  nameWithType: Vector<T>.Divide
  nameWithType.vb: Vector(Of T).Divide
- uid: Towel.Mathematics.Vector`1.DotProduct(Towel.Mathematics.Vector{`0})
  name: DotProduct(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_DotProduct_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.DotProduct(Towel.Mathematics.Vector{`0})
  name.vb: DotProduct(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.DotProduct(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).DotProduct(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.DotProduct(Vector<T>)
  nameWithType.vb: Vector(Of T).DotProduct(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.DotProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: DotProduct(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_DotProduct_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.DotProduct(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: DotProduct(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.DotProduct(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).DotProduct(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.DotProduct(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).DotProduct(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.DotProduct*
  name: DotProduct
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_DotProduct_
  commentId: Overload:Towel.Mathematics.Vector`1.DotProduct
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.DotProduct
  fullName.vb: Towel.Mathematics.Vector(Of T).DotProduct
  nameWithType: Vector<T>.DotProduct
  nameWithType.vb: Vector(Of T).DotProduct
- uid: Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0})
  name: Equal(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equal_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0})
  name.vb: Equal(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Equal(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equal(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Equal(Vector<T>)
  nameWithType.vb: Vector(Of T).Equal(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},`0)
  name: Equal(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equal_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},`0)
  name.vb: Equal(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Equal(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equal(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Equal(Vector<T>, T)
  nameWithType.vb: Vector(Of T).Equal(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Equal(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equal_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Equal(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Equal(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equal(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Equal(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Equal(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name: Equal(Vector<T>, Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equal_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.Equal(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name.vb: Equal(Vector(Of T), Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Equal(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equal(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Equal(Vector<T>, Vector<T>, T)
  nameWithType.vb: Vector(Of T).Equal(Vector(Of T), Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.Equal*
  name: Equal
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equal_
  commentId: Overload:Towel.Mathematics.Vector`1.Equal
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Equal
  fullName.vb: Towel.Mathematics.Vector(Of T).Equal
  nameWithType: Vector<T>.Equal
  nameWithType.vb: Vector(Of T).Equal
- uid: Towel.Mathematics.Vector`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equals_System_Nullable_System_Object__
  commentId: M:Towel.Mathematics.Vector`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Towel.Mathematics.Vector<T>.Equals(System.Nullable<System.Object>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equals(System.Nullable(Of System.Object))
  nameWithType: Vector<T>.Equals(Nullable<Object>)
  nameWithType.vb: Vector(Of T).Equals(Nullable(Of Object))
- uid: Towel.Mathematics.Vector`1.Equals*
  name: Equals
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Equals_
  commentId: Overload:Towel.Mathematics.Vector`1.Equals
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Equals
  fullName.vb: Towel.Mathematics.Vector(Of T).Equals
  nameWithType: Vector<T>.Equals
  nameWithType.vb: Vector(Of T).Equals
- uid: Towel.Mathematics.Vector`1.FactoryOne(System.Int32)
  name: FactoryOne(Int32)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_FactoryOne_System_Int32_
  commentId: M:Towel.Mathematics.Vector`1.FactoryOne(System.Int32)
  fullName: Towel.Mathematics.Vector<T>.FactoryOne(System.Int32)
  fullName.vb: Towel.Mathematics.Vector(Of T).FactoryOne(System.Int32)
  nameWithType: Vector<T>.FactoryOne(Int32)
  nameWithType.vb: Vector(Of T).FactoryOne(Int32)
- uid: Towel.Mathematics.Vector`1.FactoryOne*
  name: FactoryOne
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_FactoryOne_
  commentId: Overload:Towel.Mathematics.Vector`1.FactoryOne
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.FactoryOne
  fullName.vb: Towel.Mathematics.Vector(Of T).FactoryOne
  nameWithType: Vector<T>.FactoryOne
  nameWithType.vb: Vector(Of T).FactoryOne
- uid: Towel.Mathematics.Vector`1.FactoryZero(System.Int32)
  name: FactoryZero(Int32)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_FactoryZero_System_Int32_
  commentId: M:Towel.Mathematics.Vector`1.FactoryZero(System.Int32)
  fullName: Towel.Mathematics.Vector<T>.FactoryZero(System.Int32)
  fullName.vb: Towel.Mathematics.Vector(Of T).FactoryZero(System.Int32)
  nameWithType: Vector<T>.FactoryZero(Int32)
  nameWithType.vb: Vector(Of T).FactoryZero(Int32)
- uid: Towel.Mathematics.Vector`1.FactoryZero*
  name: FactoryZero
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_FactoryZero_
  commentId: Overload:Towel.Mathematics.Vector`1.FactoryZero
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.FactoryZero
  fullName.vb: Towel.Mathematics.Vector(Of T).FactoryZero
  nameWithType: Vector<T>.FactoryZero
  nameWithType.vb: Vector(Of T).FactoryZero
- uid: Towel.Mathematics.Vector`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetHashCode
  commentId: M:Towel.Mathematics.Vector`1.GetHashCode
  fullName: Towel.Mathematics.Vector<T>.GetHashCode()
  fullName.vb: Towel.Mathematics.Vector(Of T).GetHashCode()
  nameWithType: Vector<T>.GetHashCode()
  nameWithType.vb: Vector(Of T).GetHashCode()
- uid: Towel.Mathematics.Vector`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetHashCode_
  commentId: Overload:Towel.Mathematics.Vector`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.GetHashCode
  fullName.vb: Towel.Mathematics.Vector(Of T).GetHashCode
  nameWithType: Vector<T>.GetHashCode
  nameWithType.vb: Vector(Of T).GetHashCode
- uid: Towel.Mathematics.Vector`1.GetMagnitude(Towel.Mathematics.Vector{`0})
  name: GetMagnitude(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetMagnitude_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.GetMagnitude(Towel.Mathematics.Vector{`0})
  name.vb: GetMagnitude(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.GetMagnitude(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).GetMagnitude(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.GetMagnitude(Vector<T>)
  nameWithType.vb: Vector(Of T).GetMagnitude(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.GetMagnitude*
  name: GetMagnitude
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetMagnitude_
  commentId: Overload:Towel.Mathematics.Vector`1.GetMagnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.GetMagnitude
  fullName.vb: Towel.Mathematics.Vector(Of T).GetMagnitude
  nameWithType: Vector<T>.GetMagnitude
  nameWithType.vb: Vector(Of T).GetMagnitude
- uid: Towel.Mathematics.Vector`1.GetMagnitudeSquared(Towel.Mathematics.Vector{`0})
  name: GetMagnitudeSquared(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetMagnitudeSquared_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.GetMagnitudeSquared(Towel.Mathematics.Vector{`0})
  name.vb: GetMagnitudeSquared(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.GetMagnitudeSquared(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).GetMagnitudeSquared(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.GetMagnitudeSquared(Vector<T>)
  nameWithType.vb: Vector(Of T).GetMagnitudeSquared(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.GetMagnitudeSquared*
  name: GetMagnitudeSquared
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_GetMagnitudeSquared_
  commentId: Overload:Towel.Mathematics.Vector`1.GetMagnitudeSquared
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.GetMagnitudeSquared
  fullName.vb: Towel.Mathematics.Vector(Of T).GetMagnitudeSquared
  nameWithType: Vector<T>.GetMagnitudeSquared
  nameWithType.vb: Vector(Of T).GetMagnitudeSquared
- uid: Towel.Mathematics.Vector`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Item_System_Int32_
  commentId: P:Towel.Mathematics.Vector`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.Mathematics.Vector<T>.Item[System.Int32]
  fullName.vb: Towel.Mathematics.Vector(Of T).Item(System.Int32)
  nameWithType: Vector<T>.Item[Int32]
  nameWithType.vb: Vector(Of T).Item(Int32)
- uid: Towel.Mathematics.Vector`1.Item*
  name: Item
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Item_
  commentId: Overload:Towel.Mathematics.Vector`1.Item
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Item
  fullName.vb: Towel.Mathematics.Vector(Of T).Item
  nameWithType: Vector<T>.Item
  nameWithType.vb: Vector(Of T).Item
- uid: Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},`0)
  name: LinearInterpolation(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_LinearInterpolation_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},`0)
  name.vb: LinearInterpolation(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.LinearInterpolation(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).LinearInterpolation(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.LinearInterpolation(Vector<T>, T)
  nameWithType.vb: Vector(Of T).LinearInterpolation(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name: LinearInterpolation(Vector<T>, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_LinearInterpolation_Towel_Mathematics_Vector__0___0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name.vb: LinearInterpolation(Vector(Of T), T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.LinearInterpolation(Towel.Mathematics.Vector<T>, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).LinearInterpolation(Towel.Mathematics.Vector(Of T), T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.LinearInterpolation(Vector<T>, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).LinearInterpolation(Vector(Of T), T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name: LinearInterpolation(Vector<T>, Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_LinearInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name.vb: LinearInterpolation(Vector(Of T), Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.LinearInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).LinearInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.LinearInterpolation(Vector<T>, Vector<T>, T)
  nameWithType.vb: Vector(Of T).LinearInterpolation(Vector(Of T), Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name: LinearInterpolation(Vector<T>, Vector<T>, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_LinearInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.LinearInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name.vb: LinearInterpolation(Vector(Of T), Vector(Of T), T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.LinearInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).LinearInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.LinearInterpolation(Vector<T>, Vector<T>, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).LinearInterpolation(Vector(Of T), Vector(Of T), T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.LinearInterpolation*
  name: LinearInterpolation
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_LinearInterpolation_
  commentId: Overload:Towel.Mathematics.Vector`1.LinearInterpolation
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.LinearInterpolation
  fullName.vb: Towel.Mathematics.Vector(Of T).LinearInterpolation
  nameWithType: Vector<T>.LinearInterpolation
  nameWithType.vb: Vector(Of T).LinearInterpolation
- uid: Towel.Mathematics.Vector`1.Magnitude
  name: Magnitude
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Magnitude
  commentId: P:Towel.Mathematics.Vector`1.Magnitude
  fullName: Towel.Mathematics.Vector<T>.Magnitude
  fullName.vb: Towel.Mathematics.Vector(Of T).Magnitude
  nameWithType: Vector<T>.Magnitude
  nameWithType.vb: Vector(Of T).Magnitude
- uid: Towel.Mathematics.Vector`1.Magnitude*
  name: Magnitude
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Magnitude_
  commentId: Overload:Towel.Mathematics.Vector`1.Magnitude
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Magnitude
  fullName.vb: Towel.Mathematics.Vector(Of T).Magnitude
  nameWithType: Vector<T>.Magnitude
  nameWithType.vb: Vector(Of T).Magnitude
- uid: Towel.Mathematics.Vector`1.MagnitudeSquared
  name: MagnitudeSquared
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_MagnitudeSquared
  commentId: P:Towel.Mathematics.Vector`1.MagnitudeSquared
  fullName: Towel.Mathematics.Vector<T>.MagnitudeSquared
  fullName.vb: Towel.Mathematics.Vector(Of T).MagnitudeSquared
  nameWithType: Vector<T>.MagnitudeSquared
  nameWithType.vb: Vector(Of T).MagnitudeSquared
- uid: Towel.Mathematics.Vector`1.MagnitudeSquared*
  name: MagnitudeSquared
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_MagnitudeSquared_
  commentId: Overload:Towel.Mathematics.Vector`1.MagnitudeSquared
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.MagnitudeSquared
  fullName.vb: Towel.Mathematics.Vector(Of T).MagnitudeSquared
  nameWithType: Vector<T>.MagnitudeSquared
  nameWithType.vb: Vector(Of T).MagnitudeSquared
- uid: Towel.Mathematics.Vector`1.Multiply(`0)
  name: Multiply(T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Multiply__0_
  commentId: M:Towel.Mathematics.Vector`1.Multiply(`0)
  fullName: Towel.Mathematics.Vector<T>.Multiply(T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(T)
  nameWithType: Vector<T>.Multiply(T)
  nameWithType.vb: Vector(Of T).Multiply(T)
- uid: Towel.Mathematics.Vector`1.Multiply(`0,Towel.Mathematics.Vector{`0}@)
  name: Multiply(T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Multiply__0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Multiply(`0,Towel.Mathematics.Vector{`0}@)
  name.vb: Multiply(T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Multiply(T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Multiply(T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Multiply(T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Multiply(Towel.Mathematics.Vector{`0},`0)
  name: Multiply(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Multiply_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.Multiply(Towel.Mathematics.Vector{`0},`0)
  name.vb: Multiply(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Multiply(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Multiply(Vector<T>, T)
  nameWithType.vb: Vector(Of T).Multiply(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.Multiply(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name: Multiply(Vector<T>, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Multiply_Towel_Mathematics_Vector__0___0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Multiply(Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name.vb: Multiply(Vector(Of T), T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Multiply(Towel.Mathematics.Vector<T>, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(Towel.Mathematics.Vector(Of T), T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Multiply(Vector<T>, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Multiply(Vector(Of T), T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Multiply_
  commentId: Overload:Towel.Mathematics.Vector`1.Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Multiply
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply
  nameWithType: Vector<T>.Multiply
  nameWithType.vb: Vector(Of T).Multiply
- uid: Towel.Mathematics.Vector`1.Negate
  name: Negate()
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Negate
  commentId: M:Towel.Mathematics.Vector`1.Negate
  fullName: Towel.Mathematics.Vector<T>.Negate()
  fullName.vb: Towel.Mathematics.Vector(Of T).Negate()
  nameWithType: Vector<T>.Negate()
  nameWithType.vb: Vector(Of T).Negate()
- uid: Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0})
  name: Negate(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Negate_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0})
  name.vb: Negate(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Negate(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Negate(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Negate(Vector<T>)
  nameWithType.vb: Vector(Of T).Negate(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Negate(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Negate_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Negate(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Negate(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Negate(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Negate(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Negate(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0}@)
  name: Negate(ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Negate_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Negate(Towel.Mathematics.Vector{`0}@)
  name.vb: Negate(ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Negate(ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Negate(ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Negate(ref Vector<T>)
  nameWithType.vb: Vector(Of T).Negate(ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Negate*
  name: Negate
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Negate_
  commentId: Overload:Towel.Mathematics.Vector`1.Negate
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Negate
  fullName.vb: Towel.Mathematics.Vector(Of T).Negate
  nameWithType: Vector<T>.Negate
  nameWithType.vb: Vector(Of T).Negate
- uid: Towel.Mathematics.Vector`1.Normalize
  name: Normalize()
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Normalize
  commentId: M:Towel.Mathematics.Vector`1.Normalize
  fullName: Towel.Mathematics.Vector<T>.Normalize()
  fullName.vb: Towel.Mathematics.Vector(Of T).Normalize()
  nameWithType: Vector<T>.Normalize()
  nameWithType.vb: Vector(Of T).Normalize()
- uid: Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0})
  name: Normalize(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Normalize_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0})
  name.vb: Normalize(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Normalize(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Normalize(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Normalize(Vector<T>)
  nameWithType.vb: Vector(Of T).Normalize(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Normalize(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Normalize_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Normalize(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Normalize(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Normalize(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Normalize(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Normalize(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0}@)
  name: Normalize(ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Normalize_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Normalize(Towel.Mathematics.Vector{`0}@)
  name.vb: Normalize(ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Normalize(ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Normalize(ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Normalize(ref Vector<T>)
  nameWithType.vb: Vector(Of T).Normalize(ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Normalize*
  name: Normalize
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Normalize_
  commentId: Overload:Towel.Mathematics.Vector`1.Normalize
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Normalize
  fullName.vb: Towel.Mathematics.Vector(Of T).Normalize
  nameWithType: Vector<T>.Normalize
  nameWithType.vb: Vector(Of T).Normalize
- uid: Towel.Mathematics.Vector`1.NotEqual(Towel.Mathematics.Vector{`0})
  name: NotEqual(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_NotEqual_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.NotEqual(Towel.Mathematics.Vector{`0})
  name.vb: NotEqual(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.NotEqual(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).NotEqual(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.NotEqual(Vector<T>)
  nameWithType.vb: Vector(Of T).NotEqual(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.NotEqual(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: NotEqual(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_NotEqual_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.NotEqual(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: NotEqual(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.NotEqual(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).NotEqual(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.NotEqual(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).NotEqual(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.NotEqual*
  name: NotEqual
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_NotEqual_
  commentId: Overload:Towel.Mathematics.Vector`1.NotEqual
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.NotEqual
  fullName.vb: Towel.Mathematics.Vector(Of T).NotEqual
  nameWithType: Vector<T>.NotEqual
  nameWithType.vb: Vector(Of T).NotEqual
- uid: Towel.Mathematics.Vector`1.op_Addition(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Addition(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Addition_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_Addition(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Addition(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Addition(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Addition(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Addition(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Addition(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Addition*
  name: Addition
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Addition_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Addition
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Addition
  fullName.vb: Towel.Mathematics.Vector(Of T).Addition
  nameWithType: Vector<T>.Addition
  nameWithType.vb: Vector(Of T).Addition
- uid: Towel.Mathematics.Vector`1.op_Division(Towel.Mathematics.Vector{`0},`0)
  name: Division(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Division_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.op_Division(Towel.Mathematics.Vector{`0},`0)
  name.vb: Division(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Division(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Division(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Division(Vector<T>, T)
  nameWithType.vb: Vector(Of T).Division(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.op_Division*
  name: Division
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Division_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Division
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Division
  fullName.vb: Towel.Mathematics.Vector(Of T).Division
  nameWithType: Vector<T>.Division
  nameWithType.vb: Vector(Of T).Division
- uid: Towel.Mathematics.Vector`1.op_Equality(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Equality(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Equality_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_Equality(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Equality(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Equality(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Equality(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Equality(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Equality(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Equality*
  name: Equality
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Equality_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Equality
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Equality
  fullName.vb: Towel.Mathematics.Vector(Of T).Equality
  nameWithType: Vector<T>.Equality
  nameWithType.vb: Vector(Of T).Equality
- uid: Towel.Mathematics.Vector`1.op_Explicit(`0)~Towel.Mathematics.Vector{`0}
  name: Explicit(T to Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Explicit__0__Towel_Mathematics_Vector__0_
  commentId: M:Towel.Mathematics.Vector`1.op_Explicit(`0)~Towel.Mathematics.Vector{`0}
  name.vb: Narrowing(T to Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Explicit(T to Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Narrowing(T to Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Explicit(T to Vector<T>)
  nameWithType.vb: Vector(Of T).Narrowing(T to Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Explicit(Towel.Mathematics.Vector{`0})~Towel.Mathematics.Matrix{`0}
  name: Explicit(Vector<T> to Matrix<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Explicit_Towel_Mathematics_Vector__0___Towel_Mathematics_Matrix__0_
  commentId: M:Towel.Mathematics.Vector`1.op_Explicit(Towel.Mathematics.Vector{`0})~Towel.Mathematics.Matrix{`0}
  name.vb: Narrowing(Vector(Of T) to Matrix(Of T))
  fullName: Towel.Mathematics.Vector<T>.Explicit(Towel.Mathematics.Vector<T> to Towel.Mathematics.Matrix<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Narrowing(Towel.Mathematics.Vector(Of T) to Towel.Mathematics.Matrix(Of T))
  nameWithType: Vector<T>.Explicit(Vector<T> to Matrix<T>)
  nameWithType.vb: Vector(Of T).Narrowing(Vector(Of T) to Matrix(Of T))
- uid: Towel.Mathematics.Vector`1.op_Explicit*
  name: Explicit
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Explicit_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Towel.Mathematics.Vector<T>.Explicit
  fullName.vb: Towel.Mathematics.Vector(Of T).Narrowing
  nameWithType: Vector<T>.Explicit
  nameWithType.vb: Vector(Of T).Narrowing
- uid: Towel.Mathematics.Vector`1.op_Implicit(`0[])~Towel.Mathematics.Vector{`0}
  name: Implicit(T[] to Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Implicit__0____Towel_Mathematics_Vector__0_
  commentId: M:Towel.Mathematics.Vector`1.op_Implicit(`0[])~Towel.Mathematics.Vector{`0}
  name.vb: Widening(T() to Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Implicit(T[] to Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Widening(T() to Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Implicit(T[] to Vector<T>)
  nameWithType.vb: Vector(Of T).Widening(T() to Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Implicit(Towel.Mathematics.Vector{`0})~`0[]
  name: Implicit(Vector<T> to T[])
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Implicit_Towel_Mathematics_Vector__0____0__
  commentId: M:Towel.Mathematics.Vector`1.op_Implicit(Towel.Mathematics.Vector{`0})~`0[]
  name.vb: Widening(Vector(Of T) to T())
  fullName: Towel.Mathematics.Vector<T>.Implicit(Towel.Mathematics.Vector<T> to T[])
  fullName.vb: Towel.Mathematics.Vector(Of T).Widening(Towel.Mathematics.Vector(Of T) to T())
  nameWithType: Vector<T>.Implicit(Vector<T> to T[])
  nameWithType.vb: Vector(Of T).Widening(Vector(Of T) to T())
- uid: Towel.Mathematics.Vector`1.op_Implicit*
  name: Implicit
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Implicit_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Mathematics.Vector<T>.Implicit
  fullName.vb: Towel.Mathematics.Vector(Of T).Widening
  nameWithType: Vector<T>.Implicit
  nameWithType.vb: Vector(Of T).Widening
- uid: Towel.Mathematics.Vector`1.op_Inequality(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Inequality(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Inequality_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_Inequality(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Inequality(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Inequality(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Inequality(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Inequality(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Inequality(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Inequality*
  name: Inequality
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Inequality_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Inequality
  fullName.vb: Towel.Mathematics.Vector(Of T).Inequality
  nameWithType: Vector<T>.Inequality
  nameWithType.vb: Vector(Of T).Inequality
- uid: Towel.Mathematics.Vector`1.op_Multiply(`0,Towel.Mathematics.Vector{`0})
  name: Multiply(T, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Multiply__0_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_Multiply(`0,Towel.Mathematics.Vector{`0})
  name.vb: Multiply(T, Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Multiply(T, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(T, Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Multiply(T, Vector<T>)
  nameWithType.vb: Vector(Of T).Multiply(T, Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Multiply(Towel.Mathematics.Vector{`0},`0)
  name: Multiply(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Multiply_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.op_Multiply(Towel.Mathematics.Vector{`0},`0)
  name.vb: Multiply(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.Multiply(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.Multiply(Vector<T>, T)
  nameWithType.vb: Vector(Of T).Multiply(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.op_Multiply*
  name: Multiply
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Multiply_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Multiply
  fullName.vb: Towel.Mathematics.Vector(Of T).Multiply
  nameWithType: Vector<T>.Multiply
  nameWithType.vb: Vector(Of T).Multiply
- uid: Towel.Mathematics.Vector`1.op_Subtraction(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Subtraction(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Subtraction_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_Subtraction(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Subtraction(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Subtraction(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtraction(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Subtraction(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Subtraction(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_Subtraction_
  commentId: Overload:Towel.Mathematics.Vector`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Subtraction
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtraction
  nameWithType: Vector<T>.Subtraction
  nameWithType.vb: Vector(Of T).Subtraction
- uid: Towel.Mathematics.Vector`1.op_UnaryNegation(Towel.Mathematics.Vector{`0})
  name: UnaryNegation(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_UnaryNegation_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.op_UnaryNegation(Towel.Mathematics.Vector{`0})
  name.vb: UnaryNegation(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.UnaryNegation(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).UnaryNegation(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.UnaryNegation(Vector<T>)
  nameWithType.vb: Vector(Of T).UnaryNegation(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.op_UnaryNegation*
  name: UnaryNegation
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_op_UnaryNegation_
  commentId: Overload:Towel.Mathematics.Vector`1.op_UnaryNegation
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.UnaryNegation
  fullName.vb: Towel.Mathematics.Vector(Of T).UnaryNegation
  nameWithType: Vector<T>.UnaryNegation
  nameWithType.vb: Vector(Of T).UnaryNegation
- uid: Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0})
  name: Projection(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Projection_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0})
  name.vb: Projection(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Projection(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Projection(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Projection(Vector<T>)
  nameWithType.vb: Vector(Of T).Projection(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Projection(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Projection_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Projection(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Projection(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Projection(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Projection(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Projection(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Projection(Vector<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Projection_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Projection(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Projection(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Projection(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Projection(Vector<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Projection(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Projection(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Projection_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Projection(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Projection(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Projection(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Projection(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Projection(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Projection(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Projection*
  name: Projection
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Projection_
  commentId: Overload:Towel.Mathematics.Vector`1.Projection
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Projection
  fullName.vb: Towel.Mathematics.Vector(Of T).Projection
  nameWithType: Vector<T>.Projection
  nameWithType.vb: Vector(Of T).Projection
- uid: Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Quaternion{`0})
  name: RotateBy(Quaternion<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Quaternion{`0})
  name.vb: RotateBy(Quaternion(Of T))
  fullName: Towel.Mathematics.Vector<T>.RotateBy(Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy(Towel.Mathematics.Quaternion(Of T))
  nameWithType: Vector<T>.RotateBy(Quaternion<T>)
  nameWithType.vb: Vector(Of T).RotateBy(Quaternion(Of T))
- uid: Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0})
  name: RotateBy(Vector<T>, Quaternion<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_Towel_Mathematics_Vector__0__Towel_Mathematics_Quaternion__0__
  commentId: M:Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0})
  name.vb: RotateBy(Vector(Of T), Quaternion(Of T))
  fullName: Towel.Mathematics.Vector<T>.RotateBy(Towel.Mathematics.Vector<T>, Towel.Mathematics.Quaternion<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Quaternion(Of T))
  nameWithType: Vector<T>.RotateBy(Vector<T>, Quaternion<T>)
  nameWithType.vb: Vector(Of T).RotateBy(Vector(Of T), Quaternion(Of T))
- uid: Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0}@)
  name: RotateBy(Vector<T>, Quaternion<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_Towel_Mathematics_Vector__0__Towel_Mathematics_Quaternion__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Mathematics.Quaternion{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: RotateBy(Vector(Of T), Quaternion(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.RotateBy(Towel.Mathematics.Vector<T>, Towel.Mathematics.Quaternion<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Quaternion(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.RotateBy(Vector<T>, Quaternion<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).RotateBy(Vector(Of T), Quaternion(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Measurements.Angle{`0},`0,`0,`0)
  name: RotateBy(Vector<T>, Angle<T>, T, T, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_Towel_Mathematics_Vector__0__Towel_Measurements_Angle__0___0__0__0_
  commentId: M:Towel.Mathematics.Vector`1.RotateBy(Towel.Mathematics.Vector{`0},Towel.Measurements.Angle{`0},`0,`0,`0)
  name.vb: RotateBy(Vector(Of T), Angle(Of T), T, T, T)
  fullName: Towel.Mathematics.Vector<T>.RotateBy(Towel.Mathematics.Vector<T>, Towel.Measurements.Angle<T>, T, T, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy(Towel.Mathematics.Vector(Of T), Towel.Measurements.Angle(Of T), T, T, T)
  nameWithType: Vector<T>.RotateBy(Vector<T>, Angle<T>, T, T, T)
  nameWithType.vb: Vector(Of T).RotateBy(Vector(Of T), Angle(Of T), T, T, T)
- uid: Towel.Mathematics.Vector`1.RotateBy(Towel.Measurements.Angle{`0},`0,`0,`0)
  name: RotateBy(Angle<T>, T, T, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_Towel_Measurements_Angle__0___0__0__0_
  commentId: M:Towel.Mathematics.Vector`1.RotateBy(Towel.Measurements.Angle{`0},`0,`0,`0)
  name.vb: RotateBy(Angle(Of T), T, T, T)
  fullName: Towel.Mathematics.Vector<T>.RotateBy(Towel.Measurements.Angle<T>, T, T, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy(Towel.Measurements.Angle(Of T), T, T, T)
  nameWithType: Vector<T>.RotateBy(Angle<T>, T, T, T)
  nameWithType.vb: Vector(Of T).RotateBy(Angle(Of T), T, T, T)
- uid: Towel.Mathematics.Vector`1.RotateBy*
  name: RotateBy
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_RotateBy_
  commentId: Overload:Towel.Mathematics.Vector`1.RotateBy
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.RotateBy
  fullName.vb: Towel.Mathematics.Vector(Of T).RotateBy
  nameWithType: Vector<T>.RotateBy
  nameWithType.vb: Vector(Of T).RotateBy
- uid: Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},`0)
  name: SphericalInterpolation(Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_SphericalInterpolation_Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},`0)
  name.vb: SphericalInterpolation(Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.SphericalInterpolation(Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).SphericalInterpolation(Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.SphericalInterpolation(Vector<T>, T)
  nameWithType.vb: Vector(Of T).SphericalInterpolation(Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name: SphericalInterpolation(Vector<T>, Vector<T>, T)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_SphericalInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0_
  commentId: M:Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0)
  name.vb: SphericalInterpolation(Vector(Of T), Vector(Of T), T)
  fullName: Towel.Mathematics.Vector<T>.SphericalInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T)
  fullName.vb: Towel.Mathematics.Vector(Of T).SphericalInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T)
  nameWithType: Vector<T>.SphericalInterpolation(Vector<T>, Vector<T>, T)
  nameWithType.vb: Vector(Of T).SphericalInterpolation(Vector(Of T), Vector(Of T), T)
- uid: Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name: SphericalInterpolation(Vector<T>, Vector<T>, T, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_SphericalInterpolation_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___0_Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.SphericalInterpolation(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},`0,Towel.Mathematics.Vector{`0}@)
  name.vb: SphericalInterpolation(Vector(Of T), Vector(Of T), T, ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.SphericalInterpolation(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, T, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).SphericalInterpolation(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), T, ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.SphericalInterpolation(Vector<T>, Vector<T>, T, ref Vector<T>)
  nameWithType.vb: Vector(Of T).SphericalInterpolation(Vector(Of T), Vector(Of T), T, ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.SphericalInterpolation*
  name: SphericalInterpolation
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_SphericalInterpolation_
  commentId: Overload:Towel.Mathematics.Vector`1.SphericalInterpolation
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.SphericalInterpolation
  fullName.vb: Towel.Mathematics.Vector(Of T).SphericalInterpolation
  nameWithType: Vector<T>.SphericalInterpolation
  nameWithType.vb: Vector(Of T).SphericalInterpolation
- uid: Towel.Mathematics.Vector`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Stepper_Action__0__
  commentId: M:Towel.Mathematics.Vector`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.Mathematics.Vector<T>.Stepper(Action<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Stepper(Action(Of T))
  nameWithType: Vector<T>.Stepper(Action<T>)
  nameWithType.vb: Vector(Of T).Stepper(Action(Of T))
- uid: Towel.Mathematics.Vector`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.Mathematics.Vector`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.Mathematics.Vector<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: Vector<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: Vector(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.Mathematics.Vector`1.Stepper(Towel.StepRef{`0})
  name: Stepper(StepRef<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Stepper_Towel_StepRef__0__
  commentId: M:Towel.Mathematics.Vector`1.Stepper(Towel.StepRef{`0})
  name.vb: Stepper(StepRef(Of T))
  fullName: Towel.Mathematics.Vector<T>.Stepper(Towel.StepRef<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Stepper(Towel.StepRef(Of T))
  nameWithType: Vector<T>.Stepper(StepRef<T>)
  nameWithType.vb: Vector(Of T).Stepper(StepRef(Of T))
- uid: Towel.Mathematics.Vector`1.Stepper(Towel.StepRefBreak{`0})
  name: Stepper(StepRefBreak<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Stepper_Towel_StepRefBreak__0__
  commentId: M:Towel.Mathematics.Vector`1.Stepper(Towel.StepRefBreak{`0})
  name.vb: Stepper(StepRefBreak(Of T))
  fullName: Towel.Mathematics.Vector<T>.Stepper(Towel.StepRefBreak<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Stepper(Towel.StepRefBreak(Of T))
  nameWithType: Vector<T>.Stepper(StepRefBreak<T>)
  nameWithType.vb: Vector(Of T).Stepper(StepRefBreak(Of T))
- uid: Towel.Mathematics.Vector`1.Stepper*
  name: Stepper
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Stepper_
  commentId: Overload:Towel.Mathematics.Vector`1.Stepper
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Stepper
  fullName.vb: Towel.Mathematics.Vector(Of T).Stepper
  nameWithType: Vector<T>.Stepper
  nameWithType.vb: Vector(Of T).Stepper
- uid: Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0})
  name: Subtract(Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Subtract_Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0})
  name.vb: Subtract(Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Subtract(Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtract(Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Subtract(Vector<T>)
  nameWithType.vb: Vector(Of T).Subtract(Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name: Subtract(Vector<T>, Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Subtract_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__
  commentId: M:Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0})
  name.vb: Subtract(Vector(Of T), Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Subtract(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtract(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Subtract(Vector<T>, Vector<T>)
  nameWithType.vb: Vector(Of T).Subtract(Vector(Of T), Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Subtract(Vector<T>, Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Subtract_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Subtract(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Subtract(Towel.Mathematics.Vector<T>, Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtract(Towel.Mathematics.Vector(Of T), Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Subtract(Vector<T>, Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Subtract(Vector(Of T), Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name: Subtract(Vector<T>, ref Vector<T>)
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Subtract_Towel_Mathematics_Vector__0__Towel_Mathematics_Vector__0___
  commentId: M:Towel.Mathematics.Vector`1.Subtract(Towel.Mathematics.Vector{`0},Towel.Mathematics.Vector{`0}@)
  name.vb: Subtract(Vector(Of T), ByRef Vector(Of T))
  fullName: Towel.Mathematics.Vector<T>.Subtract(Towel.Mathematics.Vector<T>, ref Towel.Mathematics.Vector<T>)
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtract(Towel.Mathematics.Vector(Of T), ByRef Towel.Mathematics.Vector(Of T))
  nameWithType: Vector<T>.Subtract(Vector<T>, ref Vector<T>)
  nameWithType.vb: Vector(Of T).Subtract(Vector(Of T), ByRef Vector(Of T))
- uid: Towel.Mathematics.Vector`1.Subtract*
  name: Subtract
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Subtract_
  commentId: Overload:Towel.Mathematics.Vector`1.Subtract
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Subtract
  fullName.vb: Towel.Mathematics.Vector(Of T).Subtract
  nameWithType: Vector<T>.Subtract
  nameWithType.vb: Vector(Of T).Subtract
- uid: Towel.Mathematics.Vector`1.X
  name: X
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_X
  commentId: P:Towel.Mathematics.Vector`1.X
  fullName: Towel.Mathematics.Vector<T>.X
  fullName.vb: Towel.Mathematics.Vector(Of T).X
  nameWithType: Vector<T>.X
  nameWithType.vb: Vector(Of T).X
- uid: Towel.Mathematics.Vector`1.X*
  name: X
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_X_
  commentId: Overload:Towel.Mathematics.Vector`1.X
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.X
  fullName.vb: Towel.Mathematics.Vector(Of T).X
  nameWithType: Vector<T>.X
  nameWithType.vb: Vector(Of T).X
- uid: Towel.Mathematics.Vector`1.Y
  name: Y
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Y
  commentId: P:Towel.Mathematics.Vector`1.Y
  fullName: Towel.Mathematics.Vector<T>.Y
  fullName.vb: Towel.Mathematics.Vector(Of T).Y
  nameWithType: Vector<T>.Y
  nameWithType.vb: Vector(Of T).Y
- uid: Towel.Mathematics.Vector`1.Y*
  name: Y
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Y_
  commentId: Overload:Towel.Mathematics.Vector`1.Y
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Y
  fullName.vb: Towel.Mathematics.Vector(Of T).Y
  nameWithType: Vector<T>.Y
  nameWithType.vb: Vector(Of T).Y
- uid: Towel.Mathematics.Vector`1.Z
  name: Z
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Z
  commentId: P:Towel.Mathematics.Vector`1.Z
  fullName: Towel.Mathematics.Vector<T>.Z
  fullName.vb: Towel.Mathematics.Vector(Of T).Z
  nameWithType: Vector<T>.Z
  nameWithType.vb: Vector(Of T).Z
- uid: Towel.Mathematics.Vector`1.Z*
  name: Z
  href: api/Towel.Mathematics.Vector-1.html#Towel_Mathematics_Vector_1_Z_
  commentId: Overload:Towel.Mathematics.Vector`1.Z
  isSpec: "True"
  fullName: Towel.Mathematics.Vector<T>.Z
  fullName.vb: Towel.Mathematics.Vector(Of T).Z
  nameWithType: Vector<T>.Z
  nameWithType.vb: Vector(Of T).Z
- uid: Towel.MathematicsException
  name: MathematicsException
  href: api/Towel.MathematicsException.html
  commentId: T:Towel.MathematicsException
  fullName: Towel.MathematicsException
  nameWithType: MathematicsException
- uid: Towel.MathematicsException.#ctor(System.String)
  name: MathematicsException(String)
  href: api/Towel.MathematicsException.html#Towel_MathematicsException__ctor_System_String_
  commentId: M:Towel.MathematicsException.#ctor(System.String)
  fullName: Towel.MathematicsException.MathematicsException(System.String)
  nameWithType: MathematicsException.MathematicsException(String)
- uid: Towel.MathematicsException.#ctor(System.String,Exception)
  name: MathematicsException(String, Exception)
  href: api/Towel.MathematicsException.html#Towel_MathematicsException__ctor_System_String_Exception_
  commentId: M:Towel.MathematicsException.#ctor(System.String,Exception)
  fullName: Towel.MathematicsException.MathematicsException(System.String, Exception)
  nameWithType: MathematicsException.MathematicsException(String, Exception)
- uid: Towel.MathematicsException.#ctor*
  name: MathematicsException
  href: api/Towel.MathematicsException.html#Towel_MathematicsException__ctor_
  commentId: Overload:Towel.MathematicsException.#ctor
  isSpec: "True"
  fullName: Towel.MathematicsException.MathematicsException
  nameWithType: MathematicsException.MathematicsException
- uid: Towel.Measurements
  name: Towel.Measurements
  href: api/Towel.Measurements.html
  commentId: N:Towel.Measurements
  fullName: Towel.Measurements
  nameWithType: Towel.Measurements
- uid: Towel.Measurements.Acceleration`1
  name: Acceleration<T>
  href: api/Towel.Measurements.Acceleration-1.html
  commentId: T:Towel.Measurements.Acceleration`1
  name.vb: Acceleration(Of T)
  fullName: Towel.Measurements.Acceleration<T>
  fullName.vb: Towel.Measurements.Acceleration(Of T)
  nameWithType: Acceleration<T>
  nameWithType.vb: Acceleration(Of T)
- uid: Towel.Measurements.Acceleration`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Acceleration(T, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1__ctor__0_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Acceleration`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Acceleration<T>.Acceleration(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Acceleration(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Acceleration<T>.Acceleration(T, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Acceleration(Of T).Acceleration(T, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Acceleration`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Acceleration(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.Acceleration`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.Acceleration<T>.Acceleration(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Acceleration(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: Acceleration<T>.Acceleration(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType.vb: Acceleration(Of T).Acceleration(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.Acceleration`1.#ctor*
  name: Acceleration
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1__ctor_
  commentId: Overload:Towel.Measurements.Acceleration`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Acceleration
  fullName.vb: Towel.Measurements.Acceleration(Of T).Acceleration
  nameWithType: Acceleration<T>.Acceleration
  nameWithType.vb: Acceleration(Of T).Acceleration
- uid: Towel.Measurements.Acceleration`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Add__0_
  commentId: M:Towel.Measurements.Acceleration`1.Add(`0)
  fullName: Towel.Measurements.Acceleration<T>.Add(T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Add(T)
  nameWithType: Acceleration<T>.Add(T)
  nameWithType.vb: Acceleration(Of T).Add(T)
- uid: Towel.Measurements.Acceleration`1.Add(Towel.Measurements.Acceleration{`0})
  name: Add(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Add_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Add(Towel.Measurements.Acceleration{`0})
  name.vb: Add(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Add(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Add(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Add(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Add(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Add(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Add(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Add_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Add(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Add(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Add(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Add(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Add(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Add(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Add*
  name: Add
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Add_
  commentId: Overload:Towel.Measurements.Acceleration`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Add
  fullName.vb: Towel.Measurements.Acceleration(Of T).Add
  nameWithType: Acceleration<T>.Add
  nameWithType.vb: Acceleration(Of T).Add
- uid: Towel.Measurements.Acceleration`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Length.Units, Time.Units, Time.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Acceleration`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Acceleration<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Acceleration<T>.Convert(T, Length.Units, Time.Units, Time.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Acceleration(Of T).Convert(T, Length.Units, Time.Units, Time.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Acceleration`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.Acceleration`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.Acceleration<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: Acceleration<T>.Convert(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType.vb: Acceleration(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.Acceleration`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Convert_
  commentId: Overload:Towel.Measurements.Acceleration`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Convert
  fullName.vb: Towel.Measurements.Acceleration(Of T).Convert
  nameWithType: Acceleration<T>.Convert
  nameWithType.vb: Acceleration(Of T).Convert
- uid: Towel.Measurements.Acceleration`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Divide__0_
  commentId: M:Towel.Measurements.Acceleration`1.Divide(`0)
  fullName: Towel.Measurements.Acceleration<T>.Divide(T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Divide(T)
  nameWithType: Acceleration<T>.Divide(T)
  nameWithType.vb: Acceleration(Of T).Divide(T)
- uid: Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Divide(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0},`0)
  name: Divide(Acceleration<T>, T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Divide_Towel_Measurements_Acceleration__0___0_
  commentId: M:Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0},`0)
  name.vb: Divide(Acceleration(Of T), T)
  fullName: Towel.Measurements.Acceleration<T>.Divide(Towel.Measurements.Acceleration<T>, T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Divide(Towel.Measurements.Acceleration(Of T), T)
  nameWithType: Acceleration<T>.Divide(Acceleration<T>, T)
  nameWithType.vb: Acceleration(Of T).Divide(Acceleration(Of T), T)
- uid: Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Divide_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Divide(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Divide(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Divide(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Divide(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Divide(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Divide_
  commentId: Overload:Towel.Measurements.Acceleration`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Divide
  fullName.vb: Towel.Measurements.Acceleration(Of T).Divide
  nameWithType: Acceleration<T>.Divide
  nameWithType.vb: Acceleration(Of T).Divide
- uid: Towel.Measurements.Acceleration`1.Equal(Towel.Measurements.Acceleration{`0})
  name: Equal(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Equal_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Equal(Towel.Measurements.Acceleration{`0})
  name.vb: Equal(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Equal(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equal(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Equal(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Equal(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Equal(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Equal(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Equal_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Equal(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Equal(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Equal(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equal(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Equal(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Equal(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Equal_
  commentId: Overload:Towel.Measurements.Acceleration`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Equal
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equal
  nameWithType: Acceleration<T>.Equal
  nameWithType.vb: Acceleration(Of T).Equal
- uid: Towel.Measurements.Acceleration`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Acceleration`1.Equals(System.Object)
  fullName: Towel.Measurements.Acceleration<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equals(System.Object)
  nameWithType: Acceleration<T>.Equals(Object)
  nameWithType.vb: Acceleration(Of T).Equals(Object)
- uid: Towel.Measurements.Acceleration`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Equals_
  commentId: Overload:Towel.Measurements.Acceleration`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Equals
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equals
  nameWithType: Acceleration<T>.Equals
  nameWithType.vb: Acceleration(Of T).Equals
- uid: Towel.Measurements.Acceleration`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GetHashCode
  commentId: M:Towel.Measurements.Acceleration`1.GetHashCode
  fullName: Towel.Measurements.Acceleration<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Acceleration(Of T).GetHashCode()
  nameWithType: Acceleration<T>.GetHashCode()
  nameWithType.vb: Acceleration(Of T).GetHashCode()
- uid: Towel.Measurements.Acceleration`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Acceleration`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.GetHashCode
  fullName.vb: Towel.Measurements.Acceleration(Of T).GetHashCode
  nameWithType: Acceleration<T>.GetHashCode
  nameWithType.vb: Acceleration(Of T).GetHashCode
- uid: Towel.Measurements.Acceleration`1.GreaterThan(Towel.Measurements.Acceleration{`0})
  name: GreaterThan(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThan_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.GreaterThan(Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThan(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThan(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThan(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThan(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThan(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.GreaterThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: GreaterThan(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThan_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.GreaterThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThan(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThan(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThan(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThan(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThan(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Acceleration`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.GreaterThan
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThan
  nameWithType: Acceleration<T>.GreaterThan
  nameWithType.vb: Acceleration(Of T).GreaterThan
- uid: Towel.Measurements.Acceleration`1.GreaterThanOrEqual(Towel.Measurements.Acceleration{`0})
  name: GreaterThanOrEqual(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThanOrEqual_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.GreaterThanOrEqual(Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThanOrEqual(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThanOrEqual(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThanOrEqual(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThanOrEqual(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThanOrEqual(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.GreaterThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: GreaterThanOrEqual(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThanOrEqual_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.GreaterThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThanOrEqual(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThanOrEqual(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThanOrEqual(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThanOrEqual(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThanOrEqual(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Acceleration`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThanOrEqual
  nameWithType: Acceleration<T>.GreaterThanOrEqual
  nameWithType.vb: Acceleration(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Acceleration`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Length.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Item_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Acceleration`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Length.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.Acceleration<T>.Item[Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Acceleration(Of T).Item(Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Acceleration<T>.Item[Length.Units, Time.Units, Time.Units]
  nameWithType.vb: Acceleration(Of T).Item(Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Acceleration`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AccelerationBaseUnits]
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: P:Towel.Measurements.Acceleration`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.Acceleration<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits]
  fullName.vb: Towel.Measurements.Acceleration(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: Acceleration<T>.Item[MeasurementUnitsSyntaxTypes.AccelerationBaseUnits]
  nameWithType.vb: Acceleration(Of T).Item(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.Acceleration`1.Item*
  name: Item
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Item_
  commentId: Overload:Towel.Measurements.Acceleration`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Item
  fullName.vb: Towel.Measurements.Acceleration(Of T).Item
  nameWithType: Acceleration<T>.Item
  nameWithType.vb: Acceleration(Of T).Item
- uid: Towel.Measurements.Acceleration`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LengthUnits1
  commentId: P:Towel.Measurements.Acceleration`1.LengthUnits1
  fullName: Towel.Measurements.Acceleration<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Acceleration(Of T).LengthUnits1
  nameWithType: Acceleration<T>.LengthUnits1
  nameWithType.vb: Acceleration(Of T).LengthUnits1
- uid: Towel.Measurements.Acceleration`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.Acceleration`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Acceleration(Of T).LengthUnits1
  nameWithType: Acceleration<T>.LengthUnits1
  nameWithType.vb: Acceleration(Of T).LengthUnits1
- uid: Towel.Measurements.Acceleration`1.LessThan(Towel.Measurements.Acceleration{`0})
  name: LessThan(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThan_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.LessThan(Towel.Measurements.Acceleration{`0})
  name.vb: LessThan(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThan(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThan(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThan(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThan(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.LessThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: LessThan(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThan_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.LessThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: LessThan(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThan(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThan(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThan(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThan(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThan_
  commentId: Overload:Towel.Measurements.Acceleration`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.LessThan
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThan
  nameWithType: Acceleration<T>.LessThan
  nameWithType.vb: Acceleration(Of T).LessThan
- uid: Towel.Measurements.Acceleration`1.LessThanOrEqual(Towel.Measurements.Acceleration{`0})
  name: LessThanOrEqual(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThanOrEqual_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.LessThanOrEqual(Towel.Measurements.Acceleration{`0})
  name.vb: LessThanOrEqual(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThanOrEqual(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThanOrEqual(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThanOrEqual(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThanOrEqual(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.LessThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: LessThanOrEqual(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThanOrEqual_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.LessThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: LessThanOrEqual(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThanOrEqual(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThanOrEqual(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThanOrEqual(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThanOrEqual(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Acceleration`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThanOrEqual
  nameWithType: Acceleration<T>.LessThanOrEqual
  nameWithType.vb: Acceleration(Of T).LessThanOrEqual
- uid: Towel.Measurements.Acceleration`1.Multiply(`0,Towel.Measurements.Acceleration{`0})
  name: Multiply(T, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply__0_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(`0,Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(T, Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(T, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(T, Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Multiply(T, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(T, Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},`0)
  name: Multiply(Acceleration<T>, T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0___0_
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},`0)
  name.vb: Multiply(Acceleration(Of T), T)
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), T)
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, T)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), T)
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Acceleration<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Acceleration(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, AreaDensity<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMass{`0})
  name: Multiply(Acceleration<T>, LinearMass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Multiply(Acceleration(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, LinearMass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), LinearMass(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Acceleration<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Acceleration(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, LinearMassFlow<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Acceleration<T>, Mass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Acceleration(Of T), Mass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, Mass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), Mass(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Time{`0})
  name: Multiply(Acceleration<T>, Time<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Acceleration(Of T), Time(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, Time<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), Time(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Acceleration<T>, TimeArea<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Acceleration(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, TimeArea<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name: Multiply(AreaDensity<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(AreaDensity(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Acceleration<T>.Multiply(AreaDensity<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(AreaDensity(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.LinearMass{`0})
  name: Multiply(LinearMass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.LinearMass{`0})
  name.vb: Multiply(LinearMass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.LinearMass(Of T))
  nameWithType: Acceleration<T>.Multiply(LinearMass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(LinearMass(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(LinearMassFlow<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(LinearMassFlow(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Acceleration<T>.Multiply(LinearMassFlow<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(LinearMassFlow(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Mass{`0})
  name: Multiply(Mass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Mass{`0})
  name.vb: Multiply(Mass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Mass(Of T))
  nameWithType: Acceleration<T>.Multiply(Mass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Mass(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: Acceleration<T>.Multiply(Time<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.TimeArea{`0})
  name: Multiply(TimeArea<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Acceleration`1.Multiply(Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(TimeArea(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.TimeArea(Of T))
  nameWithType: Acceleration<T>.Multiply(TimeArea<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(TimeArea(Of T))
- uid: Towel.Measurements.Acceleration`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Multiply_
  commentId: Overload:Towel.Measurements.Acceleration`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Multiply
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply
  nameWithType: Acceleration<T>.Multiply
  nameWithType.vb: Acceleration(Of T).Multiply
- uid: Towel.Measurements.Acceleration`1.NotEqual(Towel.Measurements.Acceleration{`0})
  name: NotEqual(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_NotEqual_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.NotEqual(Towel.Measurements.Acceleration{`0})
  name.vb: NotEqual(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.NotEqual(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).NotEqual(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.NotEqual(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).NotEqual(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.NotEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: NotEqual(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_NotEqual_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.NotEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: NotEqual(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.NotEqual(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).NotEqual(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.NotEqual(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).NotEqual(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_NotEqual_
  commentId: Overload:Towel.Measurements.Acceleration`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.NotEqual
  fullName.vb: Towel.Measurements.Acceleration(Of T).NotEqual
  nameWithType: Acceleration<T>.NotEqual
  nameWithType.vb: Acceleration(Of T).NotEqual
- uid: Towel.Measurements.Acceleration`1.op_Addition(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Addition(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Addition_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Addition(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Addition(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Addition(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Addition(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Addition(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Addition(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Addition_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Addition
  fullName.vb: Towel.Measurements.Acceleration(Of T).Addition
  nameWithType: Acceleration<T>.Addition
  nameWithType.vb: Acceleration(Of T).Addition
- uid: Towel.Measurements.Acceleration`1.op_Division(Towel.Measurements.Acceleration{`0},`0)
  name: Division(Acceleration<T>, T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Division_Towel_Measurements_Acceleration__0___0_
  commentId: M:Towel.Measurements.Acceleration`1.op_Division(Towel.Measurements.Acceleration{`0},`0)
  name.vb: Division(Acceleration(Of T), T)
  fullName: Towel.Measurements.Acceleration<T>.Division(Towel.Measurements.Acceleration<T>, T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Division(Towel.Measurements.Acceleration(Of T), T)
  nameWithType: Acceleration<T>.Division(Acceleration<T>, T)
  nameWithType.vb: Acceleration(Of T).Division(Acceleration(Of T), T)
- uid: Towel.Measurements.Acceleration`1.op_Division(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Division_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Division(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Division(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Division(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Division(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Division(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Division_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Division
  fullName.vb: Towel.Measurements.Acceleration(Of T).Division
  nameWithType: Acceleration<T>.Division
  nameWithType.vb: Acceleration(Of T).Division
- uid: Towel.Measurements.Acceleration`1.op_Equality(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Equality(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Equality_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Equality(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Equality(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Equality(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equality(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Equality(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Equality(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Equality_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Equality
  fullName.vb: Towel.Measurements.Acceleration(Of T).Equality
  nameWithType: Acceleration<T>.Equality
  nameWithType.vb: Acceleration(Of T).Equality
- uid: Towel.Measurements.Acceleration`1.op_GreaterThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: GreaterThan(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_GreaterThan_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_GreaterThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThan(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThan(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThan(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThan(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThan(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.GreaterThan
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThan
  nameWithType: Acceleration<T>.GreaterThan
  nameWithType.vb: Acceleration(Of T).GreaterThan
- uid: Towel.Measurements.Acceleration`1.op_GreaterThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: GreaterThanOrEqual(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_GreaterThanOrEqual_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_GreaterThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: GreaterThanOrEqual(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.GreaterThanOrEqual(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThanOrEqual(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.GreaterThanOrEqual(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).GreaterThanOrEqual(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Acceleration(Of T).GreaterThanOrEqual
  nameWithType: Acceleration<T>.GreaterThanOrEqual
  nameWithType.vb: Acceleration(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Acceleration`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits})~Towel.Measurements.Acceleration{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits) to Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits___Towel_Measurements_Acceleration__0_
  commentId: M:Towel.Measurements.Acceleration`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits})~Towel.Measurements.Acceleration{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits) to Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits> to Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits) to Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits) to Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits) to Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Acceleration<T>.Implicit
  fullName.vb: Towel.Measurements.Acceleration(Of T).Widening
  nameWithType: Acceleration<T>.Implicit
  nameWithType.vb: Acceleration(Of T).Widening
- uid: Towel.Measurements.Acceleration`1.op_Inequality(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Inequality(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Inequality_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Inequality(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Inequality(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Inequality(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Inequality(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Inequality(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Inequality(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Inequality
  fullName.vb: Towel.Measurements.Acceleration(Of T).Inequality
  nameWithType: Acceleration<T>.Inequality
  nameWithType.vb: Acceleration(Of T).Inequality
- uid: Towel.Measurements.Acceleration`1.op_LessThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: LessThan(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_LessThan_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_LessThan(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: LessThan(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThan(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThan(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThan(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThan(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.LessThan
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThan
  nameWithType: Acceleration<T>.LessThan
  nameWithType.vb: Acceleration(Of T).LessThan
- uid: Towel.Measurements.Acceleration`1.op_LessThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: LessThanOrEqual(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_LessThanOrEqual_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_LessThanOrEqual(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: LessThanOrEqual(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.LessThanOrEqual(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThanOrEqual(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.LessThanOrEqual(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).LessThanOrEqual(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Acceleration(Of T).LessThanOrEqual
  nameWithType: Acceleration<T>.LessThanOrEqual
  nameWithType.vb: Acceleration(Of T).LessThanOrEqual
- uid: Towel.Measurements.Acceleration`1.op_Multiply(`0,Towel.Measurements.Acceleration{`0})
  name: Multiply(T, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply__0_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(`0,Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(T, Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(T, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(T, Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Multiply(T, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(T, Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},`0)
  name: Multiply(Acceleration<T>, T)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0___0_
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},`0)
  name.vb: Multiply(Acceleration(Of T), T)
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, T)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), T)
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, T)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), T)
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Acceleration<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Acceleration(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, AreaDensity<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMass{`0})
  name: Multiply(Acceleration<T>, LinearMass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Multiply(Acceleration(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, LinearMass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), LinearMass(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Acceleration<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Acceleration(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, LinearMassFlow<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Acceleration<T>, Mass<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Acceleration(Of T), Mass(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, Mass<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), Mass(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Time{`0})
  name: Multiply(Acceleration<T>, Time<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Acceleration(Of T), Time(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, Time<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), Time(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Acceleration<T>, TimeArea<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_Towel_Measurements_Acceleration__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Multiply(Towel.Measurements.Acceleration{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Acceleration(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Multiply(Towel.Measurements.Acceleration<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply(Towel.Measurements.Acceleration(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Acceleration<T>.Multiply(Acceleration<T>, TimeArea<T>)
  nameWithType.vb: Acceleration(Of T).Multiply(Acceleration(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Multiply
  fullName.vb: Towel.Measurements.Acceleration(Of T).Multiply
  nameWithType: Acceleration<T>.Multiply
  nameWithType.vb: Acceleration(Of T).Multiply
- uid: Towel.Measurements.Acceleration`1.op_Subtraction(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Subtraction(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Subtraction_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.op_Subtraction(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Subtraction(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Subtraction(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Subtraction(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Subtraction(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Subtraction(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Acceleration`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Subtraction
  fullName.vb: Towel.Measurements.Acceleration(Of T).Subtraction
  nameWithType: Acceleration<T>.Subtraction
  nameWithType.vb: Acceleration(Of T).Subtraction
- uid: Towel.Measurements.Acceleration`1.Subtract(Towel.Measurements.Acceleration{`0})
  name: Subtract(Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Subtract_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Subtract(Towel.Measurements.Acceleration{`0})
  name.vb: Subtract(Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Subtract(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Subtract(Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Subtract(Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Subtract(Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Subtract(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name: Subtract(Acceleration<T>, Acceleration<T>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Subtract_Towel_Measurements_Acceleration__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Acceleration`1.Subtract(Towel.Measurements.Acceleration{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Subtract(Acceleration(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Acceleration<T>.Subtract(Towel.Measurements.Acceleration<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).Subtract(Towel.Measurements.Acceleration(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Acceleration<T>.Subtract(Acceleration<T>, Acceleration<T>)
  nameWithType.vb: Acceleration(Of T).Subtract(Acceleration(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Acceleration`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_Subtract_
  commentId: Overload:Towel.Measurements.Acceleration`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.Subtract
  fullName.vb: Towel.Measurements.Acceleration(Of T).Subtract
  nameWithType: Acceleration<T>.Subtract
  nameWithType.vb: Acceleration(Of T).Subtract
- uid: Towel.Measurements.Acceleration`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TimeUnits2
  commentId: P:Towel.Measurements.Acceleration`1.TimeUnits2
  fullName: Towel.Measurements.Acceleration<T>.TimeUnits2
  fullName.vb: Towel.Measurements.Acceleration(Of T).TimeUnits2
  nameWithType: Acceleration<T>.TimeUnits2
  nameWithType.vb: Acceleration(Of T).TimeUnits2
- uid: Towel.Measurements.Acceleration`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.Acceleration`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.TimeUnits2
  fullName.vb: Towel.Measurements.Acceleration(Of T).TimeUnits2
  nameWithType: Acceleration<T>.TimeUnits2
  nameWithType.vb: Acceleration(Of T).TimeUnits2
- uid: Towel.Measurements.Acceleration`1.TimeUnits3
  name: TimeUnits3
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TimeUnits3
  commentId: P:Towel.Measurements.Acceleration`1.TimeUnits3
  fullName: Towel.Measurements.Acceleration<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Acceleration(Of T).TimeUnits3
  nameWithType: Acceleration<T>.TimeUnits3
  nameWithType.vb: Acceleration(Of T).TimeUnits3
- uid: Towel.Measurements.Acceleration`1.TimeUnits3*
  name: TimeUnits3
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TimeUnits3_
  commentId: Overload:Towel.Measurements.Acceleration`1.TimeUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Acceleration(Of T).TimeUnits3
  nameWithType: Acceleration<T>.TimeUnits3
  nameWithType.vb: Acceleration(Of T).TimeUnits3
- uid: Towel.Measurements.Acceleration`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_ToString
  commentId: M:Towel.Measurements.Acceleration`1.ToString
  fullName: Towel.Measurements.Acceleration<T>.ToString()
  fullName.vb: Towel.Measurements.Acceleration(Of T).ToString()
  nameWithType: Acceleration<T>.ToString()
  nameWithType.vb: Acceleration(Of T).ToString()
- uid: Towel.Measurements.Acceleration`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_ToString_
  commentId: Overload:Towel.Measurements.Acceleration`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.ToString
  fullName.vb: Towel.Measurements.Acceleration(Of T).ToString
  nameWithType: Acceleration<T>.ToString
  nameWithType.vb: Acceleration(Of T).ToString
- uid: Towel.Measurements.Acceleration`1.TryParse(System.String,Towel.Measurements.Acceleration{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Acceleration<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TryParse_System_String_Towel_Measurements_Acceleration__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Acceleration`1.TryParse(System.String,Towel.Measurements.Acceleration{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Acceleration(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Acceleration<T>.TryParse(System.String, out Towel.Measurements.Acceleration<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Acceleration(Of T).TryParse(System.String, ByRef Towel.Measurements.Acceleration(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Acceleration<T>.TryParse(String, out Acceleration<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Acceleration(Of T).TryParse(String, ByRef Acceleration(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Acceleration`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Acceleration-1.html#Towel_Measurements_Acceleration_1_TryParse_
  commentId: Overload:Towel.Measurements.Acceleration`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Acceleration<T>.TryParse
  fullName.vb: Towel.Measurements.Acceleration(Of T).TryParse
  nameWithType: Acceleration<T>.TryParse
  nameWithType.vb: Acceleration(Of T).TryParse
- uid: Towel.Measurements.Angle
  name: Angle
  href: api/Towel.Measurements.Angle.html
  commentId: T:Towel.Measurements.Angle
  fullName: Towel.Measurements.Angle
  nameWithType: Angle
- uid: Towel.Measurements.Angle.Units
  name: Angle.Units
  href: api/Towel.Measurements.Angle.Units.html
  commentId: T:Towel.Measurements.Angle.Units
  fullName: Towel.Measurements.Angle.Units
  nameWithType: Angle.Units
- uid: Towel.Measurements.Angle.Units.Degrees
  name: Degrees
  href: api/Towel.Measurements.Angle.Units.html#Towel_Measurements_Angle_Units_Degrees
  commentId: F:Towel.Measurements.Angle.Units.Degrees
  fullName: Towel.Measurements.Angle.Units.Degrees
  nameWithType: Angle.Units.Degrees
- uid: Towel.Measurements.Angle.Units.Gradians
  name: Gradians
  href: api/Towel.Measurements.Angle.Units.html#Towel_Measurements_Angle_Units_Gradians
  commentId: F:Towel.Measurements.Angle.Units.Gradians
  fullName: Towel.Measurements.Angle.Units.Gradians
  nameWithType: Angle.Units.Gradians
- uid: Towel.Measurements.Angle.Units.Radians
  name: Radians
  href: api/Towel.Measurements.Angle.Units.html#Towel_Measurements_Angle_Units_Radians
  commentId: F:Towel.Measurements.Angle.Units.Radians
  fullName: Towel.Measurements.Angle.Units.Radians
  nameWithType: Angle.Units.Radians
- uid: Towel.Measurements.Angle.Units.Revolutions
  name: Revolutions
  href: api/Towel.Measurements.Angle.Units.html#Towel_Measurements_Angle_Units_Revolutions
  commentId: F:Towel.Measurements.Angle.Units.Revolutions
  fullName: Towel.Measurements.Angle.Units.Revolutions
  nameWithType: Angle.Units.Revolutions
- uid: Towel.Measurements.Angle`1
  name: Angle<T>
  href: api/Towel.Measurements.Angle-1.html
  commentId: T:Towel.Measurements.Angle`1
  name.vb: Angle(Of T)
  fullName: Towel.Measurements.Angle<T>
  fullName.vb: Towel.Measurements.Angle(Of T)
  nameWithType: Angle<T>
  nameWithType.vb: Angle(Of T)
- uid: Towel.Measurements.Angle`1.#ctor(`0,Towel.Measurements.Angle.Units)
  name: Angle(T, Angle.Units)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1__ctor__0_Towel_Measurements_Angle_Units_
  commentId: M:Towel.Measurements.Angle`1.#ctor(`0,Towel.Measurements.Angle.Units)
  fullName: Towel.Measurements.Angle<T>.Angle(T, Towel.Measurements.Angle.Units)
  fullName.vb: Towel.Measurements.Angle(Of T).Angle(T, Towel.Measurements.Angle.Units)
  nameWithType: Angle<T>.Angle(T, Angle.Units)
  nameWithType.vb: Angle(Of T).Angle(T, Angle.Units)
- uid: Towel.Measurements.Angle`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name: Angle(T, MeasurementUnitsSyntaxTypes.AngleUnits)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_
  commentId: M:Towel.Measurements.Angle`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName: Towel.Measurements.Angle<T>.Angle(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName.vb: Towel.Measurements.Angle(Of T).Angle(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType: Angle<T>.Angle(T, MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType.vb: Angle(Of T).Angle(T, MeasurementUnitsSyntaxTypes.AngleUnits)
- uid: Towel.Measurements.Angle`1.#ctor*
  name: Angle
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1__ctor_
  commentId: Overload:Towel.Measurements.Angle`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Angle
  fullName.vb: Towel.Measurements.Angle(Of T).Angle
  nameWithType: Angle<T>.Angle
  nameWithType.vb: Angle(Of T).Angle
- uid: Towel.Measurements.Angle`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Add__0_
  commentId: M:Towel.Measurements.Angle`1.Add(`0)
  fullName: Towel.Measurements.Angle<T>.Add(T)
  fullName.vb: Towel.Measurements.Angle(Of T).Add(T)
  nameWithType: Angle<T>.Add(T)
  nameWithType.vb: Angle(Of T).Add(T)
- uid: Towel.Measurements.Angle`1.Add(Towel.Measurements.Angle{`0})
  name: Add(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Add_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Add(Towel.Measurements.Angle{`0})
  name.vb: Add(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Add(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Add(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Add(Angle<T>)
  nameWithType.vb: Angle(Of T).Add(Angle(Of T))
- uid: Towel.Measurements.Angle`1.Add(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Add(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Add_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Add(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Add(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Add(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Add(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Add(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Add(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.Add*
  name: Add
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Add_
  commentId: Overload:Towel.Measurements.Angle`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Add
  fullName.vb: Towel.Measurements.Angle(Of T).Add
  nameWithType: Angle<T>.Add
  nameWithType.vb: Angle(Of T).Add
- uid: Towel.Measurements.Angle`1.AngleUnits1
  name: AngleUnits1
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_AngleUnits1
  commentId: P:Towel.Measurements.Angle`1.AngleUnits1
  fullName: Towel.Measurements.Angle<T>.AngleUnits1
  fullName.vb: Towel.Measurements.Angle(Of T).AngleUnits1
  nameWithType: Angle<T>.AngleUnits1
  nameWithType.vb: Angle(Of T).AngleUnits1
- uid: Towel.Measurements.Angle`1.AngleUnits1*
  name: AngleUnits1
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_AngleUnits1_
  commentId: Overload:Towel.Measurements.Angle`1.AngleUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.AngleUnits1
  fullName.vb: Towel.Measurements.Angle(Of T).AngleUnits1
  nameWithType: Angle<T>.AngleUnits1
  nameWithType.vb: Angle(Of T).AngleUnits1
- uid: Towel.Measurements.Angle`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Angle.Units)
  name: Convert(T, Angle.Units, Angle.Units)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Convert__0_Towel_Measurements_Angle_Units_Towel_Measurements_Angle_Units_
  commentId: M:Towel.Measurements.Angle`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Angle.Units)
  fullName: Towel.Measurements.Angle<T>.Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Angle.Units)
  fullName.vb: Towel.Measurements.Angle(Of T).Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Angle.Units)
  nameWithType: Angle<T>.Convert(T, Angle.Units, Angle.Units)
  nameWithType.vb: Angle(Of T).Convert(T, Angle.Units, Angle.Units)
- uid: Towel.Measurements.Angle`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_
  commentId: M:Towel.Measurements.Angle`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName: Towel.Measurements.Angle<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName.vb: Towel.Measurements.Angle(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType: Angle<T>.Convert(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType.vb: Angle(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
- uid: Towel.Measurements.Angle`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Convert_
  commentId: Overload:Towel.Measurements.Angle`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Convert
  fullName.vb: Towel.Measurements.Angle(Of T).Convert
  nameWithType: Angle<T>.Convert
  nameWithType.vb: Angle(Of T).Convert
- uid: Towel.Measurements.Angle`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide__0_
  commentId: M:Towel.Measurements.Angle`1.Divide(`0)
  fullName: Towel.Measurements.Angle<T>.Divide(T)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(T)
  nameWithType: Angle<T>.Divide(T)
  nameWithType.vb: Angle(Of T).Divide(T)
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0})
  name: Divide(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0})
  name.vb: Divide(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},`0)
  name: Divide(Angle<T>, T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0___0_
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},`0)
  name.vb: Divide(Angle(Of T), T)
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, T)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), T)
  nameWithType: Angle<T>.Divide(Angle<T>, T)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), T)
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Divide(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Divide(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Divide(Angle<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(Angle(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>, AngularAcceleration<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.AngularSpeed{`0})
  name: Divide(Angle<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Divide(Angle(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>, AngularSpeed<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.Time{`0})
  name: Divide(Angle<T>, Time<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Angle(Of T), Time(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>, Time<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), Time(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.TimeArea{`0})
  name: Divide(Angle<T>, TimeArea<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Angle__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Angle{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Divide(Angle(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Angle<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Angle(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Angle<T>.Divide(Angle<T>, TimeArea<T>)
  nameWithType.vb: Angle(Of T).Divide(Angle(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name: Divide(AngularAcceleration<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(AngularAcceleration(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Angle<T>.Divide(AngularAcceleration<T>)
  nameWithType.vb: Angle(Of T).Divide(AngularAcceleration(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.AngularSpeed{`0})
  name: Divide(AngularSpeed<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.AngularSpeed{`0})
  name.vb: Divide(AngularSpeed(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Angle<T>.Divide(AngularSpeed<T>)
  nameWithType.vb: Angle(Of T).Divide(AngularSpeed(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Angle<T>.Divide(Time<T>)
  nameWithType.vb: Angle(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Angle`1.Divide(Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Angle`1.Divide(Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T))
  fullName: Towel.Measurements.Angle<T>.Divide(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Divide(Towel.Measurements.TimeArea(Of T))
  nameWithType: Angle<T>.Divide(TimeArea<T>)
  nameWithType.vb: Angle(Of T).Divide(TimeArea(Of T))
- uid: Towel.Measurements.Angle`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Divide_
  commentId: Overload:Towel.Measurements.Angle`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Divide
  fullName.vb: Towel.Measurements.Angle(Of T).Divide
  nameWithType: Angle<T>.Divide
  nameWithType.vb: Angle(Of T).Divide
- uid: Towel.Measurements.Angle`1.Equal(Towel.Measurements.Angle{`0})
  name: Equal(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Equal_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Equal(Towel.Measurements.Angle{`0})
  name.vb: Equal(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Equal(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Equal(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Equal(Angle<T>)
  nameWithType.vb: Angle(Of T).Equal(Angle(Of T))
- uid: Towel.Measurements.Angle`1.Equal(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Equal(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Equal_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Equal(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Equal(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Equal(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Equal(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Equal(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Equal(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Equal_
  commentId: Overload:Towel.Measurements.Angle`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Equal
  fullName.vb: Towel.Measurements.Angle(Of T).Equal
  nameWithType: Angle<T>.Equal
  nameWithType.vb: Angle(Of T).Equal
- uid: Towel.Measurements.Angle`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Angle`1.Equals(System.Object)
  fullName: Towel.Measurements.Angle<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Angle(Of T).Equals(System.Object)
  nameWithType: Angle<T>.Equals(Object)
  nameWithType.vb: Angle(Of T).Equals(Object)
- uid: Towel.Measurements.Angle`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Equals_
  commentId: Overload:Towel.Measurements.Angle`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Equals
  fullName.vb: Towel.Measurements.Angle(Of T).Equals
  nameWithType: Angle<T>.Equals
  nameWithType.vb: Angle(Of T).Equals
- uid: Towel.Measurements.Angle`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GetHashCode
  commentId: M:Towel.Measurements.Angle`1.GetHashCode
  fullName: Towel.Measurements.Angle<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Angle(Of T).GetHashCode()
  nameWithType: Angle<T>.GetHashCode()
  nameWithType.vb: Angle(Of T).GetHashCode()
- uid: Towel.Measurements.Angle`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Angle`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.GetHashCode
  fullName.vb: Towel.Measurements.Angle(Of T).GetHashCode
  nameWithType: Angle<T>.GetHashCode
  nameWithType.vb: Angle(Of T).GetHashCode
- uid: Towel.Measurements.Angle`1.GreaterThan(Towel.Measurements.Angle{`0})
  name: GreaterThan(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThan_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.GreaterThan(Towel.Measurements.Angle{`0})
  name.vb: GreaterThan(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThan(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThan(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThan(Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThan(Angle(Of T))
- uid: Towel.Measurements.Angle`1.GreaterThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: GreaterThan(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThan_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.GreaterThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: GreaterThan(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThan(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThan(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThan(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThan(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Angle`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.GreaterThan
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThan
  nameWithType: Angle<T>.GreaterThan
  nameWithType.vb: Angle(Of T).GreaterThan
- uid: Towel.Measurements.Angle`1.GreaterThanOrEqual(Towel.Measurements.Angle{`0})
  name: GreaterThanOrEqual(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThanOrEqual_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.GreaterThanOrEqual(Towel.Measurements.Angle{`0})
  name.vb: GreaterThanOrEqual(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThanOrEqual(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThanOrEqual(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThanOrEqual(Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThanOrEqual(Angle(Of T))
- uid: Towel.Measurements.Angle`1.GreaterThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: GreaterThanOrEqual(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThanOrEqual_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.GreaterThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: GreaterThanOrEqual(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThanOrEqual(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThanOrEqual(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThanOrEqual(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThanOrEqual(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Angle`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThanOrEqual
  nameWithType: Angle<T>.GreaterThanOrEqual
  nameWithType.vb: Angle(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Angle`1.Item(Towel.Measurements.Angle.Units)
  name: Item[Angle.Units]
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Item_Towel_Measurements_Angle_Units_
  commentId: P:Towel.Measurements.Angle`1.Item(Towel.Measurements.Angle.Units)
  name.vb: Item(Angle.Units)
  fullName: Towel.Measurements.Angle<T>.Item[Towel.Measurements.Angle.Units]
  fullName.vb: Towel.Measurements.Angle(Of T).Item(Towel.Measurements.Angle.Units)
  nameWithType: Angle<T>.Item[Angle.Units]
  nameWithType.vb: Angle(Of T).Item(Angle.Units)
- uid: Towel.Measurements.Angle`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AngleUnits]
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_
  commentId: P:Towel.Measurements.Angle`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName: Towel.Measurements.Angle<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits]
  fullName.vb: Towel.Measurements.Angle(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType: Angle<T>.Item[MeasurementUnitsSyntaxTypes.AngleUnits]
  nameWithType.vb: Angle(Of T).Item(MeasurementUnitsSyntaxTypes.AngleUnits)
- uid: Towel.Measurements.Angle`1.Item*
  name: Item
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Item_
  commentId: Overload:Towel.Measurements.Angle`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Item
  fullName.vb: Towel.Measurements.Angle(Of T).Item
  nameWithType: Angle<T>.Item
  nameWithType.vb: Angle(Of T).Item
- uid: Towel.Measurements.Angle`1.LessThan(Towel.Measurements.Angle{`0})
  name: LessThan(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThan_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.LessThan(Towel.Measurements.Angle{`0})
  name.vb: LessThan(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThan(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThan(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThan(Angle<T>)
  nameWithType.vb: Angle(Of T).LessThan(Angle(Of T))
- uid: Towel.Measurements.Angle`1.LessThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: LessThan(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThan_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.LessThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: LessThan(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThan(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThan(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThan(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).LessThan(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThan_
  commentId: Overload:Towel.Measurements.Angle`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.LessThan
  fullName.vb: Towel.Measurements.Angle(Of T).LessThan
  nameWithType: Angle<T>.LessThan
  nameWithType.vb: Angle(Of T).LessThan
- uid: Towel.Measurements.Angle`1.LessThanOrEqual(Towel.Measurements.Angle{`0})
  name: LessThanOrEqual(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThanOrEqual_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.LessThanOrEqual(Towel.Measurements.Angle{`0})
  name.vb: LessThanOrEqual(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThanOrEqual(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThanOrEqual(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThanOrEqual(Angle<T>)
  nameWithType.vb: Angle(Of T).LessThanOrEqual(Angle(Of T))
- uid: Towel.Measurements.Angle`1.LessThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: LessThanOrEqual(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThanOrEqual_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.LessThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: LessThanOrEqual(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThanOrEqual(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThanOrEqual(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThanOrEqual(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).LessThanOrEqual(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Angle`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Angle(Of T).LessThanOrEqual
  nameWithType: Angle<T>.LessThanOrEqual
  nameWithType.vb: Angle(Of T).LessThanOrEqual
- uid: Towel.Measurements.Angle`1.Multiply(`0,Towel.Measurements.Angle{`0})
  name: Multiply(T, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Multiply__0_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Multiply(`0,Towel.Measurements.Angle{`0})
  name.vb: Multiply(T, Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Multiply(T, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply(T, Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Multiply(T, Angle<T>)
  nameWithType.vb: Angle(Of T).Multiply(T, Angle(Of T))
- uid: Towel.Measurements.Angle`1.Multiply(Towel.Measurements.Angle{`0},`0)
  name: Multiply(Angle<T>, T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Multiply_Towel_Measurements_Angle__0___0_
  commentId: M:Towel.Measurements.Angle`1.Multiply(Towel.Measurements.Angle{`0},`0)
  name.vb: Multiply(Angle(Of T), T)
  fullName: Towel.Measurements.Angle<T>.Multiply(Towel.Measurements.Angle<T>, T)
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply(Towel.Measurements.Angle(Of T), T)
  nameWithType: Angle<T>.Multiply(Angle<T>, T)
  nameWithType.vb: Angle(Of T).Multiply(Angle(Of T), T)
- uid: Towel.Measurements.Angle`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Multiply_
  commentId: Overload:Towel.Measurements.Angle`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Multiply
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply
  nameWithType: Angle<T>.Multiply
  nameWithType.vb: Angle(Of T).Multiply
- uid: Towel.Measurements.Angle`1.NotEqual(Towel.Measurements.Angle{`0})
  name: NotEqual(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_NotEqual_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.NotEqual(Towel.Measurements.Angle{`0})
  name.vb: NotEqual(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.NotEqual(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).NotEqual(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.NotEqual(Angle<T>)
  nameWithType.vb: Angle(Of T).NotEqual(Angle(Of T))
- uid: Towel.Measurements.Angle`1.NotEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: NotEqual(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_NotEqual_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.NotEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: NotEqual(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.NotEqual(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).NotEqual(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.NotEqual(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).NotEqual(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_NotEqual_
  commentId: Overload:Towel.Measurements.Angle`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.NotEqual
  fullName.vb: Towel.Measurements.Angle(Of T).NotEqual
  nameWithType: Angle<T>.NotEqual
  nameWithType.vb: Angle(Of T).NotEqual
- uid: Towel.Measurements.Angle`1.op_Addition(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Addition(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Addition_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Addition(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Addition(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Addition(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Addition(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Addition(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Addition(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Addition_
  commentId: Overload:Towel.Measurements.Angle`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Addition
  fullName.vb: Towel.Measurements.Angle(Of T).Addition
  nameWithType: Angle<T>.Addition
  nameWithType.vb: Angle(Of T).Addition
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},`0)
  name: Division(Angle<T>, T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0___0_
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},`0)
  name.vb: Division(Angle(Of T), T)
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, T)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), T)
  nameWithType: Angle<T>.Division(Angle<T>, T)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), T)
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Division(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Division(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Division(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Division(Angle<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Division(Angle(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Angle<T>.Division(Angle<T>, AngularAcceleration<T>)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.AngularSpeed{`0})
  name: Division(Angle<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Division(Angle(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Angle<T>.Division(Angle<T>, AngularSpeed<T>)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.Time{`0})
  name: Division(Angle<T>, Time<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Angle(Of T), Time(Of T))
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Angle<T>.Division(Angle<T>, Time<T>)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), Time(Of T))
- uid: Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.TimeArea{`0})
  name: Division(Angle<T>, TimeArea<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_Towel_Measurements_Angle__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Angle`1.op_Division(Towel.Measurements.Angle{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Division(Angle(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Angle<T>.Division(Towel.Measurements.Angle<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Division(Towel.Measurements.Angle(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Angle<T>.Division(Angle<T>, TimeArea<T>)
  nameWithType.vb: Angle(Of T).Division(Angle(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Angle`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Division_
  commentId: Overload:Towel.Measurements.Angle`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Division
  fullName.vb: Towel.Measurements.Angle(Of T).Division
  nameWithType: Angle<T>.Division
  nameWithType.vb: Angle(Of T).Division
- uid: Towel.Measurements.Angle`1.op_Equality(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Equality(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Equality_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Equality(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Equality(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Equality(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Equality(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Equality(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Equality(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Equality_
  commentId: Overload:Towel.Measurements.Angle`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Equality
  fullName.vb: Towel.Measurements.Angle(Of T).Equality
  nameWithType: Angle<T>.Equality
  nameWithType.vb: Angle(Of T).Equality
- uid: Towel.Measurements.Angle`1.op_GreaterThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: GreaterThan(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_GreaterThan_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_GreaterThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: GreaterThan(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThan(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThan(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThan(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThan(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Angle`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.GreaterThan
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThan
  nameWithType: Angle<T>.GreaterThan
  nameWithType.vb: Angle(Of T).GreaterThan
- uid: Towel.Measurements.Angle`1.op_GreaterThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: GreaterThanOrEqual(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_GreaterThanOrEqual_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_GreaterThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: GreaterThanOrEqual(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.GreaterThanOrEqual(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThanOrEqual(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.GreaterThanOrEqual(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).GreaterThanOrEqual(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Angle`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Angle(Of T).GreaterThanOrEqual
  nameWithType: Angle<T>.GreaterThanOrEqual
  nameWithType.vb: Angle(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Angle`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits})~Towel.Measurements.Angle{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AngleUnits) to Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits___Towel_Measurements_Angle__0_
  commentId: M:Towel.Measurements.Angle`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits})~Towel.Measurements.Angle{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AngleUnits) to Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits> to Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits) to Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AngleUnits) to Angle<T>)
  nameWithType.vb: Angle(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AngleUnits) to Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Angle`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Angle<T>.Implicit
  fullName.vb: Towel.Measurements.Angle(Of T).Widening
  nameWithType: Angle<T>.Implicit
  nameWithType.vb: Angle(Of T).Widening
- uid: Towel.Measurements.Angle`1.op_Inequality(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Inequality(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Inequality_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Inequality(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Inequality(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Inequality(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Inequality(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Inequality(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Inequality(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Angle`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Inequality
  fullName.vb: Towel.Measurements.Angle(Of T).Inequality
  nameWithType: Angle<T>.Inequality
  nameWithType.vb: Angle(Of T).Inequality
- uid: Towel.Measurements.Angle`1.op_LessThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: LessThan(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_LessThan_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_LessThan(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: LessThan(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThan(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThan(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThan(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).LessThan(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Angle`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.LessThan
  fullName.vb: Towel.Measurements.Angle(Of T).LessThan
  nameWithType: Angle<T>.LessThan
  nameWithType.vb: Angle(Of T).LessThan
- uid: Towel.Measurements.Angle`1.op_LessThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: LessThanOrEqual(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_LessThanOrEqual_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_LessThanOrEqual(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: LessThanOrEqual(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.LessThanOrEqual(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).LessThanOrEqual(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.LessThanOrEqual(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).LessThanOrEqual(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Angle`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Angle(Of T).LessThanOrEqual
  nameWithType: Angle<T>.LessThanOrEqual
  nameWithType.vb: Angle(Of T).LessThanOrEqual
- uid: Towel.Measurements.Angle`1.op_Multiply(`0,Towel.Measurements.Angle{`0})
  name: Multiply(T, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Multiply__0_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Multiply(`0,Towel.Measurements.Angle{`0})
  name.vb: Multiply(T, Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Multiply(T, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply(T, Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Multiply(T, Angle<T>)
  nameWithType.vb: Angle(Of T).Multiply(T, Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Multiply(Towel.Measurements.Angle{`0},`0)
  name: Multiply(Angle<T>, T)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Multiply_Towel_Measurements_Angle__0___0_
  commentId: M:Towel.Measurements.Angle`1.op_Multiply(Towel.Measurements.Angle{`0},`0)
  name.vb: Multiply(Angle(Of T), T)
  fullName: Towel.Measurements.Angle<T>.Multiply(Towel.Measurements.Angle<T>, T)
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply(Towel.Measurements.Angle(Of T), T)
  nameWithType: Angle<T>.Multiply(Angle<T>, T)
  nameWithType.vb: Angle(Of T).Multiply(Angle(Of T), T)
- uid: Towel.Measurements.Angle`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Angle`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Multiply
  fullName.vb: Towel.Measurements.Angle(Of T).Multiply
  nameWithType: Angle<T>.Multiply
  nameWithType.vb: Angle(Of T).Multiply
- uid: Towel.Measurements.Angle`1.op_Subtraction(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Subtraction(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Subtraction_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.op_Subtraction(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Subtraction(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Subtraction(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Subtraction(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Subtraction(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Subtraction(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Angle`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Subtraction
  fullName.vb: Towel.Measurements.Angle(Of T).Subtraction
  nameWithType: Angle<T>.Subtraction
  nameWithType.vb: Angle(Of T).Subtraction
- uid: Towel.Measurements.Angle`1.Subtract(Towel.Measurements.Angle{`0})
  name: Subtract(Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Subtract_Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Subtract(Towel.Measurements.Angle{`0})
  name.vb: Subtract(Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Subtract(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Subtract(Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Subtract(Angle<T>)
  nameWithType.vb: Angle(Of T).Subtract(Angle(Of T))
- uid: Towel.Measurements.Angle`1.Subtract(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name: Subtract(Angle<T>, Angle<T>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Subtract_Towel_Measurements_Angle__0__Towel_Measurements_Angle__0__
  commentId: M:Towel.Measurements.Angle`1.Subtract(Towel.Measurements.Angle{`0},Towel.Measurements.Angle{`0})
  name.vb: Subtract(Angle(Of T), Angle(Of T))
  fullName: Towel.Measurements.Angle<T>.Subtract(Towel.Measurements.Angle<T>, Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Measurements.Angle(Of T).Subtract(Towel.Measurements.Angle(Of T), Towel.Measurements.Angle(Of T))
  nameWithType: Angle<T>.Subtract(Angle<T>, Angle<T>)
  nameWithType.vb: Angle(Of T).Subtract(Angle(Of T), Angle(Of T))
- uid: Towel.Measurements.Angle`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_Subtract_
  commentId: Overload:Towel.Measurements.Angle`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.Subtract
  fullName.vb: Towel.Measurements.Angle(Of T).Subtract
  nameWithType: Angle<T>.Subtract
  nameWithType.vb: Angle(Of T).Subtract
- uid: Towel.Measurements.Angle`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_ToString
  commentId: M:Towel.Measurements.Angle`1.ToString
  fullName: Towel.Measurements.Angle<T>.ToString()
  fullName.vb: Towel.Measurements.Angle(Of T).ToString()
  nameWithType: Angle<T>.ToString()
  nameWithType.vb: Angle(Of T).ToString()
- uid: Towel.Measurements.Angle`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_ToString_
  commentId: Overload:Towel.Measurements.Angle`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.ToString
  fullName.vb: Towel.Measurements.Angle(Of T).ToString
  nameWithType: Angle<T>.ToString
  nameWithType.vb: Angle(Of T).ToString
- uid: Towel.Measurements.Angle`1.TryParse(System.String,Towel.Measurements.Angle{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Angle<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_TryParse_System_String_Towel_Measurements_Angle__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Angle`1.TryParse(System.String,Towel.Measurements.Angle{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Angle(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Angle<T>.TryParse(System.String, out Towel.Measurements.Angle<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Angle(Of T).TryParse(System.String, ByRef Towel.Measurements.Angle(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Angle<T>.TryParse(String, out Angle<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Angle(Of T).TryParse(String, ByRef Angle(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Angle`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Angle-1.html#Towel_Measurements_Angle_1_TryParse_
  commentId: Overload:Towel.Measurements.Angle`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Angle<T>.TryParse
  fullName.vb: Towel.Measurements.Angle(Of T).TryParse
  nameWithType: Angle<T>.TryParse
  nameWithType.vb: Angle(Of T).TryParse
- uid: Towel.Measurements.AngularAcceleration`1
  name: AngularAcceleration<T>
  href: api/Towel.Measurements.AngularAcceleration-1.html
  commentId: T:Towel.Measurements.AngularAcceleration`1
  name.vb: AngularAcceleration(Of T)
  fullName: Towel.Measurements.AngularAcceleration<T>
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T)
  nameWithType: AngularAcceleration<T>
  nameWithType.vb: AngularAcceleration(Of T)
- uid: Towel.Measurements.AngularAcceleration`1.#ctor(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: AngularAcceleration(T, Angle.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1__ctor__0_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.AngularAcceleration`1.#ctor(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.AngularAcceleration<T>.AngularAcceleration(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).AngularAcceleration(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularAcceleration<T>.AngularAcceleration(T, Angle.Units, Time.Units, Time.Units)
  nameWithType.vb: AngularAcceleration(Of T).AngularAcceleration(T, Angle.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.AngularAcceleration`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name: AngularAcceleration(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_
  commentId: M:Towel.Measurements.AngularAcceleration`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName: Towel.Measurements.AngularAcceleration<T>.AngularAcceleration(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).AngularAcceleration(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType: AngularAcceleration<T>.AngularAcceleration(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType.vb: AngularAcceleration(Of T).AngularAcceleration(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
- uid: Towel.Measurements.AngularAcceleration`1.#ctor*
  name: AngularAcceleration
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1__ctor_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.AngularAcceleration
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).AngularAcceleration
  nameWithType: AngularAcceleration<T>.AngularAcceleration
  nameWithType.vb: AngularAcceleration(Of T).AngularAcceleration
- uid: Towel.Measurements.AngularAcceleration`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Add__0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Add(`0)
  fullName: Towel.Measurements.AngularAcceleration<T>.Add(T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Add(T)
  nameWithType: AngularAcceleration<T>.Add(T)
  nameWithType.vb: AngularAcceleration(Of T).Add(T)
- uid: Towel.Measurements.AngularAcceleration`1.Add(Towel.Measurements.AngularAcceleration{`0})
  name: Add(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Add_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Add(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Add(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Add(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Add(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Add(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Add(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Add(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Add(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Add_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Add(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Add(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Add(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Add(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Add(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Add(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Add*
  name: Add
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Add_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Add
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Add
  nameWithType: AngularAcceleration<T>.Add
  nameWithType.vb: AngularAcceleration(Of T).Add
- uid: Towel.Measurements.AngularAcceleration`1.AngleUnits1
  name: AngleUnits1
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_AngleUnits1
  commentId: P:Towel.Measurements.AngularAcceleration`1.AngleUnits1
  fullName: Towel.Measurements.AngularAcceleration<T>.AngleUnits1
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).AngleUnits1
  nameWithType: AngularAcceleration<T>.AngleUnits1
  nameWithType.vb: AngularAcceleration(Of T).AngleUnits1
- uid: Towel.Measurements.AngularAcceleration`1.AngleUnits1*
  name: AngleUnits1
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_AngleUnits1_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.AngleUnits1
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.AngleUnits1
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).AngleUnits1
  nameWithType: AngularAcceleration<T>.AngleUnits1
  nameWithType.vb: AngularAcceleration(Of T).AngleUnits1
- uid: Towel.Measurements.AngularAcceleration`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Angle.Units, Time.Units, Time.Units, Angle.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Convert__0_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.AngularAcceleration<T>.Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularAcceleration<T>.Convert(T, Angle.Units, Time.Units, Time.Units, Angle.Units, Time.Units, Time.Units)
  nameWithType.vb: AngularAcceleration(Of T).Convert(T, Angle.Units, Time.Units, Time.Units, Angle.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.AngularAcceleration`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName: Towel.Measurements.AngularAcceleration<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType: AngularAcceleration<T>.Convert(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType.vb: AngularAcceleration(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
- uid: Towel.Measurements.AngularAcceleration`1.Convert*
  name: Convert
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Convert_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Convert
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Convert
  nameWithType: AngularAcceleration<T>.Convert
  nameWithType.vb: AngularAcceleration(Of T).Convert
- uid: Towel.Measurements.AngularAcceleration`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Divide__0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Divide(`0)
  fullName: Towel.Measurements.AngularAcceleration<T>.Divide(T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Divide(T)
  nameWithType: AngularAcceleration<T>.Divide(T)
  nameWithType.vb: AngularAcceleration(Of T).Divide(T)
- uid: Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name: Divide(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Divide_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Divide(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Divide(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Divide(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Divide(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0},`0)
  name: Divide(AngularAcceleration<T>, T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Divide_Towel_Measurements_AngularAcceleration__0___0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0},`0)
  name.vb: Divide(AngularAcceleration(Of T), T)
  fullName: Towel.Measurements.AngularAcceleration<T>.Divide(Towel.Measurements.AngularAcceleration<T>, T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Divide(Towel.Measurements.AngularAcceleration(Of T), T)
  nameWithType: AngularAcceleration<T>.Divide(AngularAcceleration<T>, T)
  nameWithType.vb: AngularAcceleration(Of T).Divide(AngularAcceleration(Of T), T)
- uid: Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Divide(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Divide_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Divide(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Divide(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Divide(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Divide(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Divide(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Divide*
  name: Divide
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Divide_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Divide
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Divide
  nameWithType: AngularAcceleration<T>.Divide
  nameWithType.vb: AngularAcceleration(Of T).Divide
- uid: Towel.Measurements.AngularAcceleration`1.Equal(Towel.Measurements.AngularAcceleration{`0})
  name: Equal(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Equal_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Equal(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Equal(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Equal(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equal(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Equal(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Equal(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Equal(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Equal(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Equal_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Equal(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Equal(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Equal(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equal(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Equal(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Equal(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Equal*
  name: Equal
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Equal_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Equal
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equal
  nameWithType: AngularAcceleration<T>.Equal
  nameWithType.vb: AngularAcceleration(Of T).Equal
- uid: Towel.Measurements.AngularAcceleration`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Equals_System_Object_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Equals(System.Object)
  fullName: Towel.Measurements.AngularAcceleration<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equals(System.Object)
  nameWithType: AngularAcceleration<T>.Equals(Object)
  nameWithType.vb: AngularAcceleration(Of T).Equals(Object)
- uid: Towel.Measurements.AngularAcceleration`1.Equals*
  name: Equals
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Equals_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Equals
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equals
  nameWithType: AngularAcceleration<T>.Equals
  nameWithType.vb: AngularAcceleration(Of T).Equals
- uid: Towel.Measurements.AngularAcceleration`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GetHashCode
  commentId: M:Towel.Measurements.AngularAcceleration`1.GetHashCode
  fullName: Towel.Measurements.AngularAcceleration<T>.GetHashCode()
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GetHashCode()
  nameWithType: AngularAcceleration<T>.GetHashCode()
  nameWithType.vb: AngularAcceleration(Of T).GetHashCode()
- uid: Towel.Measurements.AngularAcceleration`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GetHashCode_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.GetHashCode
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GetHashCode
  nameWithType: AngularAcceleration<T>.GetHashCode
  nameWithType.vb: AngularAcceleration(Of T).GetHashCode
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThan(Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThan(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThan_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.GreaterThan(Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThan(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThan(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThan(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThan(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThan(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThan(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThan_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.GreaterThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThan(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThan(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThan(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThan_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThan
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThan
  nameWithType: AngularAcceleration<T>.GreaterThan
  nameWithType.vb: AngularAcceleration(Of T).GreaterThan
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThanOrEqual(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThanOrEqual_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThanOrEqual(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThanOrEqual(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThanOrEqual(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThanOrEqual(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThanOrEqual_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThanOrEqual(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThanOrEqual
  nameWithType: AngularAcceleration<T>.GreaterThanOrEqual
  nameWithType.vb: AngularAcceleration(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AngularAcceleration`1.Item(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Angle.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Item_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.AngularAcceleration`1.Item(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Angle.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.AngularAcceleration<T>.Item[Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Item(Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularAcceleration<T>.Item[Angle.Units, Time.Units, Time.Units]
  nameWithType.vb: AngularAcceleration(Of T).Item(Angle.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.AngularAcceleration`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits]
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_
  commentId: P:Towel.Measurements.AngularAcceleration`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName: Towel.Measurements.AngularAcceleration<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits]
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType: AngularAcceleration<T>.Item[MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits]
  nameWithType.vb: AngularAcceleration(Of T).Item(MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
- uid: Towel.Measurements.AngularAcceleration`1.Item*
  name: Item
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Item_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Item
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Item
  nameWithType: AngularAcceleration<T>.Item
  nameWithType.vb: AngularAcceleration(Of T).Item
- uid: Towel.Measurements.AngularAcceleration`1.LessThan(Towel.Measurements.AngularAcceleration{`0})
  name: LessThan(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThan_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.LessThan(Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThan(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThan(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThan(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThan(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThan(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.LessThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: LessThan(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThan_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.LessThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThan(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThan(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThan(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThan_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThan
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThan
  nameWithType: AngularAcceleration<T>.LessThan
  nameWithType.vb: AngularAcceleration(Of T).LessThan
- uid: Towel.Measurements.AngularAcceleration`1.LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0})
  name: LessThanOrEqual(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThanOrEqual_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThanOrEqual(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThanOrEqual(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThanOrEqual(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThanOrEqual(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThanOrEqual(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: LessThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThanOrEqual_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThanOrEqual(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThanOrEqual(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThanOrEqual
  nameWithType: AngularAcceleration<T>.LessThanOrEqual
  nameWithType.vb: AngularAcceleration(Of T).LessThanOrEqual
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(`0,Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(T, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply__0_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(`0,Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(T, AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(T, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(T, Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(T, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(T, AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},`0)
  name: Multiply(AngularAcceleration<T>, T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_Towel_Measurements_AngularAcceleration__0___0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},`0)
  name.vb: Multiply(AngularAcceleration(Of T), T)
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), T)
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, T)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), T)
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.Time{`0})
  name: Multiply(AngularAcceleration<T>, Time<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(AngularAcceleration(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, Time<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), Time(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(AngularAcceleration<T>, TimeArea<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(AngularAcceleration(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, TimeArea<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), TimeArea(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(Time<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.TimeArea{`0})
  name: Multiply(TimeArea<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Multiply(Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(TimeArea(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.TimeArea(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(TimeArea<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(TimeArea(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Multiply_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply
  nameWithType: AngularAcceleration<T>.Multiply
  nameWithType.vb: AngularAcceleration(Of T).Multiply
- uid: Towel.Measurements.AngularAcceleration`1.NotEqual(Towel.Measurements.AngularAcceleration{`0})
  name: NotEqual(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_NotEqual_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.NotEqual(Towel.Measurements.AngularAcceleration{`0})
  name.vb: NotEqual(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.NotEqual(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).NotEqual(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.NotEqual(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).NotEqual(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.NotEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: NotEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_NotEqual_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.NotEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: NotEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.NotEqual(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).NotEqual(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.NotEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).NotEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_NotEqual_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.NotEqual
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).NotEqual
  nameWithType: AngularAcceleration<T>.NotEqual
  nameWithType.vb: AngularAcceleration(Of T).NotEqual
- uid: Towel.Measurements.AngularAcceleration`1.op_Addition(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Addition(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Addition_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Addition(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Addition(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Addition(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Addition(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Addition(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Addition(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Addition_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Addition
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Addition
  nameWithType: AngularAcceleration<T>.Addition
  nameWithType.vb: AngularAcceleration(Of T).Addition
- uid: Towel.Measurements.AngularAcceleration`1.op_Division(Towel.Measurements.AngularAcceleration{`0},`0)
  name: Division(AngularAcceleration<T>, T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Division_Towel_Measurements_AngularAcceleration__0___0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Division(Towel.Measurements.AngularAcceleration{`0},`0)
  name.vb: Division(AngularAcceleration(Of T), T)
  fullName: Towel.Measurements.AngularAcceleration<T>.Division(Towel.Measurements.AngularAcceleration<T>, T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Division(Towel.Measurements.AngularAcceleration(Of T), T)
  nameWithType: AngularAcceleration<T>.Division(AngularAcceleration<T>, T)
  nameWithType.vb: AngularAcceleration(Of T).Division(AngularAcceleration(Of T), T)
- uid: Towel.Measurements.AngularAcceleration`1.op_Division(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Division(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Division_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Division(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Division(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Division(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Division(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Division(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Division(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Division*
  name: Division
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Division_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Division
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Division
  nameWithType: AngularAcceleration<T>.Division
  nameWithType.vb: AngularAcceleration(Of T).Division
- uid: Towel.Measurements.AngularAcceleration`1.op_Equality(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Equality(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Equality_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Equality(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Equality(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Equality(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equality(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Equality(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Equality(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Equality_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Equality
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Equality
  nameWithType: AngularAcceleration<T>.Equality
  nameWithType.vb: AngularAcceleration(Of T).Equality
- uid: Towel.Measurements.AngularAcceleration`1.op_GreaterThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThan(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_GreaterThan_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_GreaterThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThan(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThan(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThan(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThan
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThan
  nameWithType: AngularAcceleration<T>.GreaterThan
  nameWithType.vb: AngularAcceleration(Of T).GreaterThan
- uid: Towel.Measurements.AngularAcceleration`1.op_GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: GreaterThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_GreaterThanOrEqual_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_GreaterThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: GreaterThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThanOrEqual(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThanOrEqual(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.GreaterThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).GreaterThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).GreaterThanOrEqual
  nameWithType: AngularAcceleration<T>.GreaterThanOrEqual
  nameWithType.vb: AngularAcceleration(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AngularAcceleration`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits})~Towel.Measurements.AngularAcceleration{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits) to AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits___Towel_Measurements_AngularAcceleration__0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits})~Towel.Measurements.AngularAcceleration{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits) to AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits> to Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits) to Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits) to AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits) to AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Implicit_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.AngularAcceleration<T>.Implicit
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Widening
  nameWithType: AngularAcceleration<T>.Implicit
  nameWithType.vb: AngularAcceleration(Of T).Widening
- uid: Towel.Measurements.AngularAcceleration`1.op_Inequality(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Inequality(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Inequality_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Inequality(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Inequality(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Inequality(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Inequality(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Inequality(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Inequality(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Inequality_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Inequality
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Inequality
  nameWithType: AngularAcceleration<T>.Inequality
  nameWithType.vb: AngularAcceleration(Of T).Inequality
- uid: Towel.Measurements.AngularAcceleration`1.op_LessThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: LessThan(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_LessThan_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_LessThan(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThan(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThan(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThan(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThan(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_LessThan_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThan
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThan
  nameWithType: AngularAcceleration<T>.LessThan
  nameWithType.vb: AngularAcceleration(Of T).LessThan
- uid: Towel.Measurements.AngularAcceleration`1.op_LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: LessThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_LessThanOrEqual_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_LessThanOrEqual(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: LessThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThanOrEqual(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThanOrEqual(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.LessThanOrEqual(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).LessThanOrEqual(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).LessThanOrEqual
  nameWithType: AngularAcceleration<T>.LessThanOrEqual
  nameWithType.vb: AngularAcceleration(Of T).LessThanOrEqual
- uid: Towel.Measurements.AngularAcceleration`1.op_Multiply(`0,Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(T, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Multiply__0_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Multiply(`0,Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(T, AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(T, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(T, Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(T, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(T, AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},`0)
  name: Multiply(AngularAcceleration<T>, T)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Multiply_Towel_Measurements_AngularAcceleration__0___0_
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},`0)
  name.vb: Multiply(AngularAcceleration(Of T), T)
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, T)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), T)
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, T)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), T)
- uid: Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.Time{`0})
  name: Multiply(AngularAcceleration<T>, Time<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Multiply_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(AngularAcceleration(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, Time<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), Time(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(AngularAcceleration<T>, TimeArea<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Multiply_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Multiply(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(AngularAcceleration(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: AngularAcceleration<T>.Multiply(AngularAcceleration<T>, TimeArea<T>)
  nameWithType.vb: AngularAcceleration(Of T).Multiply(AngularAcceleration(Of T), TimeArea(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Multiply_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Multiply
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Multiply
  nameWithType: AngularAcceleration<T>.Multiply
  nameWithType.vb: AngularAcceleration(Of T).Multiply
- uid: Towel.Measurements.AngularAcceleration`1.op_Subtraction(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Subtraction(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Subtraction_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.op_Subtraction(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Subtraction(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Subtraction(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Subtraction(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Subtraction(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Subtraction(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Subtraction
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Subtraction
  nameWithType: AngularAcceleration<T>.Subtraction
  nameWithType.vb: AngularAcceleration(Of T).Subtraction
- uid: Towel.Measurements.AngularAcceleration`1.Subtract(Towel.Measurements.AngularAcceleration{`0})
  name: Subtract(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Subtract_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Subtract(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Subtract(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Subtract(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Subtract(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Subtract(AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Subtract(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Subtract(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Subtract(AngularAcceleration<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Subtract_Towel_Measurements_AngularAcceleration__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularAcceleration`1.Subtract(Towel.Measurements.AngularAcceleration{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Subtract(AngularAcceleration(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularAcceleration<T>.Subtract(Towel.Measurements.AngularAcceleration<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Subtract(Towel.Measurements.AngularAcceleration(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularAcceleration<T>.Subtract(AngularAcceleration<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularAcceleration(Of T).Subtract(AngularAcceleration(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularAcceleration`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_Subtract_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.Subtract
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).Subtract
  nameWithType: AngularAcceleration<T>.Subtract
  nameWithType.vb: AngularAcceleration(Of T).Subtract
- uid: Towel.Measurements.AngularAcceleration`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TimeUnits2
  commentId: P:Towel.Measurements.AngularAcceleration`1.TimeUnits2
  fullName: Towel.Measurements.AngularAcceleration<T>.TimeUnits2
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TimeUnits2
  nameWithType: AngularAcceleration<T>.TimeUnits2
  nameWithType.vb: AngularAcceleration(Of T).TimeUnits2
- uid: Towel.Measurements.AngularAcceleration`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.TimeUnits2
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TimeUnits2
  nameWithType: AngularAcceleration<T>.TimeUnits2
  nameWithType.vb: AngularAcceleration(Of T).TimeUnits2
- uid: Towel.Measurements.AngularAcceleration`1.TimeUnits3
  name: TimeUnits3
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TimeUnits3
  commentId: P:Towel.Measurements.AngularAcceleration`1.TimeUnits3
  fullName: Towel.Measurements.AngularAcceleration<T>.TimeUnits3
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TimeUnits3
  nameWithType: AngularAcceleration<T>.TimeUnits3
  nameWithType.vb: AngularAcceleration(Of T).TimeUnits3
- uid: Towel.Measurements.AngularAcceleration`1.TimeUnits3*
  name: TimeUnits3
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TimeUnits3_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.TimeUnits3
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.TimeUnits3
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TimeUnits3
  nameWithType: AngularAcceleration<T>.TimeUnits3
  nameWithType.vb: AngularAcceleration(Of T).TimeUnits3
- uid: Towel.Measurements.AngularAcceleration`1.ToString
  name: ToString()
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_ToString
  commentId: M:Towel.Measurements.AngularAcceleration`1.ToString
  fullName: Towel.Measurements.AngularAcceleration<T>.ToString()
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).ToString()
  nameWithType: AngularAcceleration<T>.ToString()
  nameWithType.vb: AngularAcceleration(Of T).ToString()
- uid: Towel.Measurements.AngularAcceleration`1.ToString*
  name: ToString
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_ToString_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.ToString
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).ToString
  nameWithType: AngularAcceleration<T>.ToString
  nameWithType.vb: AngularAcceleration(Of T).ToString
- uid: Towel.Measurements.AngularAcceleration`1.TryParse(System.String,Towel.Measurements.AngularAcceleration{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out AngularAcceleration<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TryParse_System_String_Towel_Measurements_AngularAcceleration__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.AngularAcceleration`1.TryParse(System.String,Towel.Measurements.AngularAcceleration{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef AngularAcceleration(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.AngularAcceleration<T>.TryParse(System.String, out Towel.Measurements.AngularAcceleration<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TryParse(System.String, ByRef Towel.Measurements.AngularAcceleration(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: AngularAcceleration<T>.TryParse(String, out AngularAcceleration<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: AngularAcceleration(Of T).TryParse(String, ByRef AngularAcceleration(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.AngularAcceleration`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.AngularAcceleration-1.html#Towel_Measurements_AngularAcceleration_1_TryParse_
  commentId: Overload:Towel.Measurements.AngularAcceleration`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.AngularAcceleration<T>.TryParse
  fullName.vb: Towel.Measurements.AngularAcceleration(Of T).TryParse
  nameWithType: AngularAcceleration<T>.TryParse
  nameWithType.vb: AngularAcceleration(Of T).TryParse
- uid: Towel.Measurements.AngularSpeed`1
  name: AngularSpeed<T>
  href: api/Towel.Measurements.AngularSpeed-1.html
  commentId: T:Towel.Measurements.AngularSpeed`1
  name.vb: AngularSpeed(Of T)
  fullName: Towel.Measurements.AngularSpeed<T>
  fullName.vb: Towel.Measurements.AngularSpeed(Of T)
  nameWithType: AngularSpeed<T>
  nameWithType.vb: AngularSpeed(Of T)
- uid: Towel.Measurements.AngularSpeed`1.#ctor(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  name: AngularSpeed(T, Angle.Units, Time.Units)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1__ctor__0_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.AngularSpeed`1.#ctor(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.AngularSpeed<T>.AngularSpeed(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).AngularSpeed(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularSpeed<T>.AngularSpeed(T, Angle.Units, Time.Units)
  nameWithType.vb: AngularSpeed(Of T).AngularSpeed(T, Angle.Units, Time.Units)
- uid: Towel.Measurements.AngularSpeed`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name: AngularSpeed(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_
  commentId: M:Towel.Measurements.AngularSpeed`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName: Towel.Measurements.AngularSpeed<T>.AngularSpeed(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).AngularSpeed(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType: AngularSpeed<T>.AngularSpeed(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType.vb: AngularSpeed(Of T).AngularSpeed(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
- uid: Towel.Measurements.AngularSpeed`1.#ctor*
  name: AngularSpeed
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1__ctor_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.AngularSpeed
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).AngularSpeed
  nameWithType: AngularSpeed<T>.AngularSpeed
  nameWithType.vb: AngularSpeed(Of T).AngularSpeed
- uid: Towel.Measurements.AngularSpeed`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Add__0_
  commentId: M:Towel.Measurements.AngularSpeed`1.Add(`0)
  fullName: Towel.Measurements.AngularSpeed<T>.Add(T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Add(T)
  nameWithType: AngularSpeed<T>.Add(T)
  nameWithType.vb: AngularSpeed(Of T).Add(T)
- uid: Towel.Measurements.AngularSpeed`1.Add(Towel.Measurements.AngularSpeed{`0})
  name: Add(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Add_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Add(Towel.Measurements.AngularSpeed{`0})
  name.vb: Add(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Add(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Add(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Add(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Add(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Add(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Add(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Add_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Add(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Add(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Add(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Add(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Add(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Add(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Add*
  name: Add
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Add_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Add
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Add
  nameWithType: AngularSpeed<T>.Add
  nameWithType.vb: AngularSpeed(Of T).Add
- uid: Towel.Measurements.AngularSpeed`1.AngleUnits1
  name: AngleUnits1
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_AngleUnits1
  commentId: P:Towel.Measurements.AngularSpeed`1.AngleUnits1
  fullName: Towel.Measurements.AngularSpeed<T>.AngleUnits1
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).AngleUnits1
  nameWithType: AngularSpeed<T>.AngleUnits1
  nameWithType.vb: AngularSpeed(Of T).AngleUnits1
- uid: Towel.Measurements.AngularSpeed`1.AngleUnits1*
  name: AngleUnits1
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_AngleUnits1_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.AngleUnits1
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.AngleUnits1
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).AngleUnits1
  nameWithType: AngularSpeed<T>.AngleUnits1
  nameWithType.vb: AngularSpeed(Of T).AngleUnits1
- uid: Towel.Measurements.AngularSpeed`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Angle.Units, Time.Units, Angle.Units, Time.Units)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Convert__0_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.AngularSpeed`1.Convert(`0,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.AngularSpeed<T>.Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Convert(T, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularSpeed<T>.Convert(T, Angle.Units, Time.Units, Angle.Units, Time.Units)
  nameWithType.vb: AngularSpeed(Of T).Convert(T, Angle.Units, Time.Units, Angle.Units, Time.Units)
- uid: Towel.Measurements.AngularSpeed`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_
  commentId: M:Towel.Measurements.AngularSpeed`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName: Towel.Measurements.AngularSpeed<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType: AngularSpeed<T>.Convert(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType.vb: AngularSpeed(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
- uid: Towel.Measurements.AngularSpeed`1.Convert*
  name: Convert
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Convert_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Convert
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Convert
  nameWithType: AngularSpeed<T>.Convert
  nameWithType.vb: AngularSpeed(Of T).Convert
- uid: Towel.Measurements.AngularSpeed`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide__0_
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(`0)
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(T)
  nameWithType: AngularSpeed<T>.Divide(T)
  nameWithType.vb: AngularSpeed(Of T).Divide(T)
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name: Divide(AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularSpeed<T>.Divide(AngularAcceleration<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0})
  name: Divide(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0})
  name.vb: Divide(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Divide(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},`0)
  name: Divide(AngularSpeed<T>, T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularSpeed__0___0_
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},`0)
  name.vb: Divide(AngularSpeed(Of T), T)
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularSpeed<T>, T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularSpeed(Of T), T)
  nameWithType: AngularSpeed<T>.Divide(AngularSpeed<T>, T)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularSpeed(Of T), T)
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Divide(AngularSpeed<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Divide(AngularSpeed(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularSpeed<T>.Divide(AngularSpeed<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularSpeed(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Divide(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Divide(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Divide(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name: Divide(AngularSpeed<T>, Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_AngularSpeed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(AngularSpeed(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Divide(AngularSpeed<T>, Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(AngularSpeed(Of T), Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Divide(Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Divide*
  name: Divide
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Divide_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Divide
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Divide
  nameWithType: AngularSpeed<T>.Divide
  nameWithType.vb: AngularSpeed(Of T).Divide
- uid: Towel.Measurements.AngularSpeed`1.Equal(Towel.Measurements.AngularSpeed{`0})
  name: Equal(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Equal_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Equal(Towel.Measurements.AngularSpeed{`0})
  name.vb: Equal(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Equal(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equal(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Equal(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Equal(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Equal(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Equal(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Equal_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Equal(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Equal(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Equal(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equal(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Equal(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Equal(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Equal*
  name: Equal
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Equal_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Equal
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equal
  nameWithType: AngularSpeed<T>.Equal
  nameWithType.vb: AngularSpeed(Of T).Equal
- uid: Towel.Measurements.AngularSpeed`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Equals_System_Object_
  commentId: M:Towel.Measurements.AngularSpeed`1.Equals(System.Object)
  fullName: Towel.Measurements.AngularSpeed<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equals(System.Object)
  nameWithType: AngularSpeed<T>.Equals(Object)
  nameWithType.vb: AngularSpeed(Of T).Equals(Object)
- uid: Towel.Measurements.AngularSpeed`1.Equals*
  name: Equals
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Equals_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Equals
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equals
  nameWithType: AngularSpeed<T>.Equals
  nameWithType.vb: AngularSpeed(Of T).Equals
- uid: Towel.Measurements.AngularSpeed`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GetHashCode
  commentId: M:Towel.Measurements.AngularSpeed`1.GetHashCode
  fullName: Towel.Measurements.AngularSpeed<T>.GetHashCode()
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GetHashCode()
  nameWithType: AngularSpeed<T>.GetHashCode()
  nameWithType.vb: AngularSpeed(Of T).GetHashCode()
- uid: Towel.Measurements.AngularSpeed`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GetHashCode_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.GetHashCode
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GetHashCode
  nameWithType: AngularSpeed<T>.GetHashCode
  nameWithType.vb: AngularSpeed(Of T).GetHashCode
- uid: Towel.Measurements.AngularSpeed`1.GreaterThan(Towel.Measurements.AngularSpeed{`0})
  name: GreaterThan(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThan_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.GreaterThan(Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThan(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThan(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThan(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThan(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThan(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.GreaterThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: GreaterThan(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThan_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.GreaterThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThan(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThan(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThan(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThan(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThan(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThan_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThan
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThan
  nameWithType: AngularSpeed<T>.GreaterThan
  nameWithType.vb: AngularSpeed(Of T).GreaterThan
- uid: Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0})
  name: GreaterThanOrEqual(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThanOrEqual_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThanOrEqual(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThanOrEqual(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThanOrEqual(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThanOrEqual(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThanOrEqual(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: GreaterThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThanOrEqual_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThanOrEqual(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThanOrEqual(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThanOrEqual
  nameWithType: AngularSpeed<T>.GreaterThanOrEqual
  nameWithType.vb: AngularSpeed(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AngularSpeed`1.Item(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  name: Item[Angle.Units, Time.Units]
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Item_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.AngularSpeed`1.Item(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Angle.Units, Time.Units)
  fullName: Towel.Measurements.AngularSpeed<T>.Item[Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Item(Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  nameWithType: AngularSpeed<T>.Item[Angle.Units, Time.Units]
  nameWithType.vb: AngularSpeed(Of T).Item(Angle.Units, Time.Units)
- uid: Towel.Measurements.AngularSpeed`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits]
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_
  commentId: P:Towel.Measurements.AngularSpeed`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName: Towel.Measurements.AngularSpeed<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits]
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType: AngularSpeed<T>.Item[MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits]
  nameWithType.vb: AngularSpeed(Of T).Item(MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
- uid: Towel.Measurements.AngularSpeed`1.Item*
  name: Item
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Item_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Item
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Item
  nameWithType: AngularSpeed<T>.Item
  nameWithType.vb: AngularSpeed(Of T).Item
- uid: Towel.Measurements.AngularSpeed`1.LessThan(Towel.Measurements.AngularSpeed{`0})
  name: LessThan(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThan_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.LessThan(Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThan(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThan(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThan(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThan(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThan(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.LessThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: LessThan(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThan_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.LessThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThan(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThan(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThan(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThan(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThan(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThan_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.LessThan
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThan
  nameWithType: AngularSpeed<T>.LessThan
  nameWithType.vb: AngularSpeed(Of T).LessThan
- uid: Towel.Measurements.AngularSpeed`1.LessThanOrEqual(Towel.Measurements.AngularSpeed{`0})
  name: LessThanOrEqual(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThanOrEqual_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.LessThanOrEqual(Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThanOrEqual(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThanOrEqual(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThanOrEqual(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThanOrEqual(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThanOrEqual(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.LessThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: LessThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThanOrEqual_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.LessThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThanOrEqual(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThanOrEqual(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThanOrEqual
  nameWithType: AngularSpeed<T>.LessThanOrEqual
  nameWithType.vb: AngularSpeed(Of T).LessThanOrEqual
- uid: Towel.Measurements.AngularSpeed`1.Multiply(`0,Towel.Measurements.AngularSpeed{`0})
  name: Multiply(T, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Multiply__0_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Multiply(`0,Towel.Measurements.AngularSpeed{`0})
  name.vb: Multiply(T, AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(T, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(T, Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Multiply(T, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Multiply(T, AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.AngularSpeed{`0},`0)
  name: Multiply(AngularSpeed<T>, T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Multiply_Towel_Measurements_AngularSpeed__0___0_
  commentId: M:Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.AngularSpeed{`0},`0)
  name.vb: Multiply(AngularSpeed(Of T), T)
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(Towel.Measurements.AngularSpeed<T>, T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(Towel.Measurements.AngularSpeed(Of T), T)
  nameWithType: AngularSpeed<T>.Multiply(AngularSpeed<T>, T)
  nameWithType.vb: AngularSpeed(Of T).Multiply(AngularSpeed(Of T), T)
- uid: Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name: Multiply(AngularSpeed<T>, Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Multiply_Towel_Measurements_AngularSpeed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(AngularSpeed(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Multiply(AngularSpeed<T>, Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Multiply(AngularSpeed(Of T), Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Multiply(Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Multiply_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply
  nameWithType: AngularSpeed<T>.Multiply
  nameWithType.vb: AngularSpeed(Of T).Multiply
- uid: Towel.Measurements.AngularSpeed`1.NotEqual(Towel.Measurements.AngularSpeed{`0})
  name: NotEqual(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_NotEqual_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.NotEqual(Towel.Measurements.AngularSpeed{`0})
  name.vb: NotEqual(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.NotEqual(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).NotEqual(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.NotEqual(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).NotEqual(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.NotEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: NotEqual(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_NotEqual_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.NotEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: NotEqual(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.NotEqual(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).NotEqual(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.NotEqual(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).NotEqual(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_NotEqual_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.NotEqual
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).NotEqual
  nameWithType: AngularSpeed<T>.NotEqual
  nameWithType.vb: AngularSpeed(Of T).NotEqual
- uid: Towel.Measurements.AngularSpeed`1.op_Addition(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Addition(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Addition_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Addition(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Addition(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Addition(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Addition(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Addition(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Addition(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Addition_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Addition
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Addition
  nameWithType: AngularSpeed<T>.Addition
  nameWithType.vb: AngularSpeed(Of T).Addition
- uid: Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},`0)
  name: Division(AngularSpeed<T>, T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Division_Towel_Measurements_AngularSpeed__0___0_
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},`0)
  name.vb: Division(AngularSpeed(Of T), T)
  fullName: Towel.Measurements.AngularSpeed<T>.Division(Towel.Measurements.AngularSpeed<T>, T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Division(Towel.Measurements.AngularSpeed(Of T), T)
  nameWithType: AngularSpeed<T>.Division(AngularSpeed<T>, T)
  nameWithType.vb: AngularSpeed(Of T).Division(AngularSpeed(Of T), T)
- uid: Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Division(AngularSpeed<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Division_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Division(AngularSpeed(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Division(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Division(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: AngularSpeed<T>.Division(AngularSpeed<T>, AngularAcceleration<T>)
  nameWithType.vb: AngularSpeed(Of T).Division(AngularSpeed(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Division(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Division_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Division(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Division(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Division(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Division(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Division(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name: Division(AngularSpeed<T>, Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Division_Towel_Measurements_AngularSpeed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Division(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name.vb: Division(AngularSpeed(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Division(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Division(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Division(AngularSpeed<T>, Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Division(AngularSpeed(Of T), Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Division*
  name: Division
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Division_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Division
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Division
  nameWithType: AngularSpeed<T>.Division
  nameWithType.vb: AngularSpeed(Of T).Division
- uid: Towel.Measurements.AngularSpeed`1.op_Equality(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Equality(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Equality_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Equality(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Equality(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Equality(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equality(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Equality(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Equality(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Equality_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Equality
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Equality
  nameWithType: AngularSpeed<T>.Equality
  nameWithType.vb: AngularSpeed(Of T).Equality
- uid: Towel.Measurements.AngularSpeed`1.op_GreaterThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: GreaterThan(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_GreaterThan_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_GreaterThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThan(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThan(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThan(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThan(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThan(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThan
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThan
  nameWithType: AngularSpeed<T>.GreaterThan
  nameWithType.vb: AngularSpeed(Of T).GreaterThan
- uid: Towel.Measurements.AngularSpeed`1.op_GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: GreaterThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_GreaterThanOrEqual_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_GreaterThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: GreaterThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThanOrEqual(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThanOrEqual(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.GreaterThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).GreaterThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).GreaterThanOrEqual
  nameWithType: AngularSpeed<T>.GreaterThanOrEqual
  nameWithType.vb: AngularSpeed(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AngularSpeed`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits})~Towel.Measurements.AngularSpeed{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits) to AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits___Towel_Measurements_AngularSpeed__0_
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits})~Towel.Measurements.AngularSpeed{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits) to AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits> to Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits) to Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits) to AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits) to AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Implicit_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.AngularSpeed<T>.Implicit
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Widening
  nameWithType: AngularSpeed<T>.Implicit
  nameWithType.vb: AngularSpeed(Of T).Widening
- uid: Towel.Measurements.AngularSpeed`1.op_Inequality(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Inequality(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Inequality_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Inequality(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Inequality(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Inequality(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Inequality(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Inequality(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Inequality(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Inequality_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Inequality
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Inequality
  nameWithType: AngularSpeed<T>.Inequality
  nameWithType.vb: AngularSpeed(Of T).Inequality
- uid: Towel.Measurements.AngularSpeed`1.op_LessThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: LessThan(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_LessThan_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_LessThan(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThan(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThan(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThan(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThan(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThan(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_LessThan_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.LessThan
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThan
  nameWithType: AngularSpeed<T>.LessThan
  nameWithType.vb: AngularSpeed(Of T).LessThan
- uid: Towel.Measurements.AngularSpeed`1.op_LessThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: LessThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_LessThanOrEqual_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_LessThanOrEqual(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: LessThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.LessThanOrEqual(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThanOrEqual(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.LessThanOrEqual(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).LessThanOrEqual(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).LessThanOrEqual
  nameWithType: AngularSpeed<T>.LessThanOrEqual
  nameWithType.vb: AngularSpeed(Of T).LessThanOrEqual
- uid: Towel.Measurements.AngularSpeed`1.op_Multiply(`0,Towel.Measurements.AngularSpeed{`0})
  name: Multiply(T, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Multiply__0_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Multiply(`0,Towel.Measurements.AngularSpeed{`0})
  name.vb: Multiply(T, AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(T, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(T, Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Multiply(T, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Multiply(T, AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Multiply(Towel.Measurements.AngularSpeed{`0},`0)
  name: Multiply(AngularSpeed<T>, T)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Multiply_Towel_Measurements_AngularSpeed__0___0_
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Multiply(Towel.Measurements.AngularSpeed{`0},`0)
  name.vb: Multiply(AngularSpeed(Of T), T)
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(Towel.Measurements.AngularSpeed<T>, T)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(Towel.Measurements.AngularSpeed(Of T), T)
  nameWithType: AngularSpeed<T>.Multiply(AngularSpeed<T>, T)
  nameWithType.vb: AngularSpeed(Of T).Multiply(AngularSpeed(Of T), T)
- uid: Towel.Measurements.AngularSpeed`1.op_Multiply(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name: Multiply(AngularSpeed<T>, Time<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Multiply_Towel_Measurements_AngularSpeed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Multiply(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(AngularSpeed(Of T), Time(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: AngularSpeed<T>.Multiply(AngularSpeed<T>, Time<T>)
  nameWithType.vb: AngularSpeed(Of T).Multiply(AngularSpeed(Of T), Time(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Multiply_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Multiply
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Multiply
  nameWithType: AngularSpeed<T>.Multiply
  nameWithType.vb: AngularSpeed(Of T).Multiply
- uid: Towel.Measurements.AngularSpeed`1.op_Subtraction(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Subtraction(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Subtraction_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.op_Subtraction(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Subtraction(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Subtraction(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Subtraction(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Subtraction(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Subtraction(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Subtraction
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Subtraction
  nameWithType: AngularSpeed<T>.Subtraction
  nameWithType.vb: AngularSpeed(Of T).Subtraction
- uid: Towel.Measurements.AngularSpeed`1.Subtract(Towel.Measurements.AngularSpeed{`0})
  name: Subtract(AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Subtract_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Subtract(Towel.Measurements.AngularSpeed{`0})
  name.vb: Subtract(AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Subtract(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Subtract(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Subtract(AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Subtract(AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Subtract(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name: Subtract(AngularSpeed<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Subtract_Towel_Measurements_AngularSpeed__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.AngularSpeed`1.Subtract(Towel.Measurements.AngularSpeed{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Subtract(AngularSpeed(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.AngularSpeed<T>.Subtract(Towel.Measurements.AngularSpeed<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Subtract(Towel.Measurements.AngularSpeed(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: AngularSpeed<T>.Subtract(AngularSpeed<T>, AngularSpeed<T>)
  nameWithType.vb: AngularSpeed(Of T).Subtract(AngularSpeed(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.AngularSpeed`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_Subtract_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.Subtract
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).Subtract
  nameWithType: AngularSpeed<T>.Subtract
  nameWithType.vb: AngularSpeed(Of T).Subtract
- uid: Towel.Measurements.AngularSpeed`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_TimeUnits2
  commentId: P:Towel.Measurements.AngularSpeed`1.TimeUnits2
  fullName: Towel.Measurements.AngularSpeed<T>.TimeUnits2
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).TimeUnits2
  nameWithType: AngularSpeed<T>.TimeUnits2
  nameWithType.vb: AngularSpeed(Of T).TimeUnits2
- uid: Towel.Measurements.AngularSpeed`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.TimeUnits2
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).TimeUnits2
  nameWithType: AngularSpeed<T>.TimeUnits2
  nameWithType.vb: AngularSpeed(Of T).TimeUnits2
- uid: Towel.Measurements.AngularSpeed`1.ToString
  name: ToString()
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_ToString
  commentId: M:Towel.Measurements.AngularSpeed`1.ToString
  fullName: Towel.Measurements.AngularSpeed<T>.ToString()
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).ToString()
  nameWithType: AngularSpeed<T>.ToString()
  nameWithType.vb: AngularSpeed(Of T).ToString()
- uid: Towel.Measurements.AngularSpeed`1.ToString*
  name: ToString
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_ToString_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.ToString
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).ToString
  nameWithType: AngularSpeed<T>.ToString
  nameWithType.vb: AngularSpeed(Of T).ToString
- uid: Towel.Measurements.AngularSpeed`1.TryParse(System.String,Towel.Measurements.AngularSpeed{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out AngularSpeed<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_TryParse_System_String_Towel_Measurements_AngularSpeed__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.AngularSpeed`1.TryParse(System.String,Towel.Measurements.AngularSpeed{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef AngularSpeed(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.AngularSpeed<T>.TryParse(System.String, out Towel.Measurements.AngularSpeed<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).TryParse(System.String, ByRef Towel.Measurements.AngularSpeed(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: AngularSpeed<T>.TryParse(String, out AngularSpeed<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: AngularSpeed(Of T).TryParse(String, ByRef AngularSpeed(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.AngularSpeed`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.AngularSpeed-1.html#Towel_Measurements_AngularSpeed_1_TryParse_
  commentId: Overload:Towel.Measurements.AngularSpeed`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.AngularSpeed<T>.TryParse
  fullName.vb: Towel.Measurements.AngularSpeed(Of T).TryParse
  nameWithType: AngularSpeed<T>.TryParse
  nameWithType.vb: AngularSpeed(Of T).TryParse
- uid: Towel.Measurements.Area`1
  name: Area<T>
  href: api/Towel.Measurements.Area-1.html
  commentId: T:Towel.Measurements.Area`1
  name.vb: Area(Of T)
  fullName: Towel.Measurements.Area<T>
  fullName.vb: Towel.Measurements.Area(Of T)
  nameWithType: Area<T>
  nameWithType.vb: Area(Of T)
- uid: Towel.Measurements.Area`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Area(T, Length.Units, Length.Units)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1__ctor__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Area`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Area<T>.Area(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Area(Of T).Area(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Area<T>.Area(T, Length.Units, Length.Units)
  nameWithType.vb: Area(Of T).Area(T, Length.Units, Length.Units)
- uid: Towel.Measurements.Area`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Area(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.Area`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.Area<T>.Area(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName.vb: Towel.Measurements.Area(Of T).Area(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: Area<T>.Area(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType.vb: Area(Of T).Area(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.Area`1.#ctor*
  name: Area
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1__ctor_
  commentId: Overload:Towel.Measurements.Area`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Area
  fullName.vb: Towel.Measurements.Area(Of T).Area
  nameWithType: Area<T>.Area
  nameWithType.vb: Area(Of T).Area
- uid: Towel.Measurements.Area`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Add__0_
  commentId: M:Towel.Measurements.Area`1.Add(`0)
  fullName: Towel.Measurements.Area<T>.Add(T)
  fullName.vb: Towel.Measurements.Area(Of T).Add(T)
  nameWithType: Area<T>.Add(T)
  nameWithType.vb: Area(Of T).Add(T)
- uid: Towel.Measurements.Area`1.Add(Towel.Measurements.Area{`0})
  name: Add(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Add_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Add(Towel.Measurements.Area{`0})
  name.vb: Add(Area(Of T))
  fullName: Towel.Measurements.Area<T>.Add(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Add(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Add(Area<T>)
  nameWithType.vb: Area(Of T).Add(Area(Of T))
- uid: Towel.Measurements.Area`1.Add(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Add(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Add_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Add(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Add(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Add(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Add(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Add(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Add(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.Add*
  name: Add
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Add_
  commentId: Overload:Towel.Measurements.Area`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Add
  fullName.vb: Towel.Measurements.Area(Of T).Add
  nameWithType: Area<T>.Add
  nameWithType.vb: Area(Of T).Add
- uid: Towel.Measurements.Area`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Length.Units, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Area`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Area<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Area(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Area<T>.Convert(T, Length.Units, Length.Units, Length.Units, Length.Units)
  nameWithType.vb: Area(Of T).Convert(T, Length.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Area`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.Area`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.Area<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName.vb: Towel.Measurements.Area(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: Area<T>.Convert(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType.vb: Area(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.Area`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Convert_
  commentId: Overload:Towel.Measurements.Area`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Convert
  fullName.vb: Towel.Measurements.Area(Of T).Convert
  nameWithType: Area<T>.Convert
  nameWithType.vb: Area(Of T).Convert
- uid: Towel.Measurements.Area`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide__0_
  commentId: M:Towel.Measurements.Area`1.Divide(`0)
  fullName: Towel.Measurements.Area<T>.Divide(T)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(T)
  nameWithType: Area<T>.Divide(T)
  nameWithType.vb: Area(Of T).Divide(T)
- uid: Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.Area<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Divide(Area<T>)
  nameWithType.vb: Area(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},`0)
  name: Divide(Area<T>, T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_Towel_Measurements_Area__0___0_
  commentId: M:Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},`0)
  name.vb: Divide(Area(Of T), T)
  fullName: Towel.Measurements.Area<T>.Divide(Towel.Measurements.Area<T>, T)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(Towel.Measurements.Area(Of T), T)
  nameWithType: Area<T>.Divide(Area<T>, T)
  nameWithType.vb: Area(Of T).Divide(Area(Of T), T)
- uid: Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Divide(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Divide(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Divide(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Divide(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name: Divide(Area<T>, Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_Towel_Measurements_Area__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.Divide(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(Area(Of T), Length(Of T))
  fullName: Towel.Measurements.Area<T>.Divide(Towel.Measurements.Area<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(Towel.Measurements.Area(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Divide(Area<T>, Length<T>)
  nameWithType.vb: Area(Of T).Divide(Area(Of T), Length(Of T))
- uid: Towel.Measurements.Area`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.Area<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Divide(Length<T>)
  nameWithType.vb: Area(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.Area`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Divide_
  commentId: Overload:Towel.Measurements.Area`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Divide
  fullName.vb: Towel.Measurements.Area(Of T).Divide
  nameWithType: Area<T>.Divide
  nameWithType.vb: Area(Of T).Divide
- uid: Towel.Measurements.Area`1.Equal(Towel.Measurements.Area{`0})
  name: Equal(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Equal_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Equal(Towel.Measurements.Area{`0})
  name.vb: Equal(Area(Of T))
  fullName: Towel.Measurements.Area<T>.Equal(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Equal(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Equal(Area<T>)
  nameWithType.vb: Area(Of T).Equal(Area(Of T))
- uid: Towel.Measurements.Area`1.Equal(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Equal(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Equal_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Equal(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Equal(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Equal(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Equal(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Equal(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Equal(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Equal_
  commentId: Overload:Towel.Measurements.Area`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Equal
  fullName.vb: Towel.Measurements.Area(Of T).Equal
  nameWithType: Area<T>.Equal
  nameWithType.vb: Area(Of T).Equal
- uid: Towel.Measurements.Area`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Area`1.Equals(System.Object)
  fullName: Towel.Measurements.Area<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Area(Of T).Equals(System.Object)
  nameWithType: Area<T>.Equals(Object)
  nameWithType.vb: Area(Of T).Equals(Object)
- uid: Towel.Measurements.Area`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Equals_
  commentId: Overload:Towel.Measurements.Area`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Equals
  fullName.vb: Towel.Measurements.Area(Of T).Equals
  nameWithType: Area<T>.Equals
  nameWithType.vb: Area(Of T).Equals
- uid: Towel.Measurements.Area`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GetHashCode
  commentId: M:Towel.Measurements.Area`1.GetHashCode
  fullName: Towel.Measurements.Area<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Area(Of T).GetHashCode()
  nameWithType: Area<T>.GetHashCode()
  nameWithType.vb: Area(Of T).GetHashCode()
- uid: Towel.Measurements.Area`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Area`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.GetHashCode
  fullName.vb: Towel.Measurements.Area(Of T).GetHashCode
  nameWithType: Area<T>.GetHashCode
  nameWithType.vb: Area(Of T).GetHashCode
- uid: Towel.Measurements.Area`1.GreaterThan(Towel.Measurements.Area{`0})
  name: GreaterThan(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThan_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.GreaterThan(Towel.Measurements.Area{`0})
  name.vb: GreaterThan(Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThan(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThan(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThan(Area<T>)
  nameWithType.vb: Area(Of T).GreaterThan(Area(Of T))
- uid: Towel.Measurements.Area`1.GreaterThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: GreaterThan(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThan_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.GreaterThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: GreaterThan(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThan(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThan(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThan(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).GreaterThan(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Area`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.GreaterThan
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThan
  nameWithType: Area<T>.GreaterThan
  nameWithType.vb: Area(Of T).GreaterThan
- uid: Towel.Measurements.Area`1.GreaterThanOrEqual(Towel.Measurements.Area{`0})
  name: GreaterThanOrEqual(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThanOrEqual_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.GreaterThanOrEqual(Towel.Measurements.Area{`0})
  name.vb: GreaterThanOrEqual(Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThanOrEqual(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThanOrEqual(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThanOrEqual(Area<T>)
  nameWithType.vb: Area(Of T).GreaterThanOrEqual(Area(Of T))
- uid: Towel.Measurements.Area`1.GreaterThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: GreaterThanOrEqual(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThanOrEqual_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.GreaterThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: GreaterThanOrEqual(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThanOrEqual(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThanOrEqual(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThanOrEqual(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).GreaterThanOrEqual(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Area`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThanOrEqual
  nameWithType: Area<T>.GreaterThanOrEqual
  nameWithType.vb: Area(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Area`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Item[Length.Units, Length.Units]
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Item_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.Area`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Length.Units, Length.Units)
  fullName: Towel.Measurements.Area<T>.Item[Towel.Measurements.Length.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.Area(Of T).Item(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Area<T>.Item[Length.Units, Length.Units]
  nameWithType.vb: Area(Of T).Item(Length.Units, Length.Units)
- uid: Towel.Measurements.Area`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AreaBaseUnits]
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: P:Towel.Measurements.Area`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.Area<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits]
  fullName.vb: Towel.Measurements.Area(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: Area<T>.Item[MeasurementUnitsSyntaxTypes.AreaBaseUnits]
  nameWithType.vb: Area(Of T).Item(MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.Area`1.Item*
  name: Item
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Item_
  commentId: Overload:Towel.Measurements.Area`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Item
  fullName.vb: Towel.Measurements.Area(Of T).Item
  nameWithType: Area<T>.Item
  nameWithType.vb: Area(Of T).Item
- uid: Towel.Measurements.Area`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LengthUnits1
  commentId: P:Towel.Measurements.Area`1.LengthUnits1
  fullName: Towel.Measurements.Area<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Area(Of T).LengthUnits1
  nameWithType: Area<T>.LengthUnits1
  nameWithType.vb: Area(Of T).LengthUnits1
- uid: Towel.Measurements.Area`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.Area`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Area(Of T).LengthUnits1
  nameWithType: Area<T>.LengthUnits1
  nameWithType.vb: Area(Of T).LengthUnits1
- uid: Towel.Measurements.Area`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LengthUnits2
  commentId: P:Towel.Measurements.Area`1.LengthUnits2
  fullName: Towel.Measurements.Area<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Area(Of T).LengthUnits2
  nameWithType: Area<T>.LengthUnits2
  nameWithType.vb: Area(Of T).LengthUnits2
- uid: Towel.Measurements.Area`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Area`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Area(Of T).LengthUnits2
  nameWithType: Area<T>.LengthUnits2
  nameWithType.vb: Area(Of T).LengthUnits2
- uid: Towel.Measurements.Area`1.LessThan(Towel.Measurements.Area{`0})
  name: LessThan(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThan_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.LessThan(Towel.Measurements.Area{`0})
  name.vb: LessThan(Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThan(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThan(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThan(Area<T>)
  nameWithType.vb: Area(Of T).LessThan(Area(Of T))
- uid: Towel.Measurements.Area`1.LessThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: LessThan(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThan_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.LessThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: LessThan(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThan(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThan(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThan(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).LessThan(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThan_
  commentId: Overload:Towel.Measurements.Area`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LessThan
  fullName.vb: Towel.Measurements.Area(Of T).LessThan
  nameWithType: Area<T>.LessThan
  nameWithType.vb: Area(Of T).LessThan
- uid: Towel.Measurements.Area`1.LessThanOrEqual(Towel.Measurements.Area{`0})
  name: LessThanOrEqual(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThanOrEqual_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.LessThanOrEqual(Towel.Measurements.Area{`0})
  name.vb: LessThanOrEqual(Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThanOrEqual(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThanOrEqual(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThanOrEqual(Area<T>)
  nameWithType.vb: Area(Of T).LessThanOrEqual(Area(Of T))
- uid: Towel.Measurements.Area`1.LessThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: LessThanOrEqual(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThanOrEqual_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.LessThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: LessThanOrEqual(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThanOrEqual(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThanOrEqual(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThanOrEqual(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).LessThanOrEqual(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Area`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Area(Of T).LessThanOrEqual
  nameWithType: Area<T>.LessThanOrEqual
  nameWithType.vb: Area(Of T).LessThanOrEqual
- uid: Towel.Measurements.Area`1.Multiply(`0,Towel.Measurements.Area{`0})
  name: Multiply(T, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply__0_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(`0,Towel.Measurements.Area{`0})
  name.vb: Multiply(T, Area(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(T, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(T, Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Multiply(T, Area<T>)
  nameWithType.vb: Area(Of T).Multiply(T, Area(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},`0)
  name: Multiply(Area<T>, T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0___0_
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},`0)
  name.vb: Multiply(Area(Of T), T)
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, T)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), T)
  nameWithType: Area<T>.Multiply(Area<T>, T)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), T)
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Area<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Area(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, AreaDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Density{`0})
  name: Multiply(Area<T>, Density<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Area(Of T), Density(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Density<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Density(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name: Multiply(Area<T>, Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Area(Of T), Length(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Length<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Length(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Area<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Area(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, LinearDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(Area<T>, Pressure<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Area(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Pressure<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Pressure(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Area<T>, Speed<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Area(Of T), Speed(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Speed<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Speed(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name: Multiply(AreaDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(AreaDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Area<T>.Multiply(AreaDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(AreaDensity(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Density{`0})
  name: Multiply(Density<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Density{`0})
  name.vb: Multiply(Density(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Density(Of T))
  nameWithType: Area<T>.Multiply(Density<T>)
  nameWithType.vb: Area(Of T).Multiply(Density(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Multiply(Length<T>)
  nameWithType.vb: Area(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name: Multiply(LinearDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(LinearDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.LinearDensity(Of T))
  nameWithType: Area<T>.Multiply(LinearDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(LinearDensity(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Pressure{`0})
  name: Multiply(Pressure<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Pressure(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Pressure(Of T))
  nameWithType: Area<T>.Multiply(Pressure<T>)
  nameWithType.vb: Area(Of T).Multiply(Pressure(Of T))
- uid: Towel.Measurements.Area`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Area`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: Area<T>.Multiply(Speed<T>)
  nameWithType.vb: Area(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.Area`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Multiply_
  commentId: Overload:Towel.Measurements.Area`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Multiply
  fullName.vb: Towel.Measurements.Area(Of T).Multiply
  nameWithType: Area<T>.Multiply
  nameWithType.vb: Area(Of T).Multiply
- uid: Towel.Measurements.Area`1.NotEqual(Towel.Measurements.Area{`0})
  name: NotEqual(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_NotEqual_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.NotEqual(Towel.Measurements.Area{`0})
  name.vb: NotEqual(Area(Of T))
  fullName: Towel.Measurements.Area<T>.NotEqual(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).NotEqual(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.NotEqual(Area<T>)
  nameWithType.vb: Area(Of T).NotEqual(Area(Of T))
- uid: Towel.Measurements.Area`1.NotEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: NotEqual(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_NotEqual_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.NotEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: NotEqual(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.NotEqual(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).NotEqual(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.NotEqual(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).NotEqual(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_NotEqual_
  commentId: Overload:Towel.Measurements.Area`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.NotEqual
  fullName.vb: Towel.Measurements.Area(Of T).NotEqual
  nameWithType: Area<T>.NotEqual
  nameWithType.vb: Area(Of T).NotEqual
- uid: Towel.Measurements.Area`1.op_Addition(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Addition(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Addition_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Addition(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Addition(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Addition(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Addition(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Addition(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Addition(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Addition_
  commentId: Overload:Towel.Measurements.Area`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Addition
  fullName.vb: Towel.Measurements.Area(Of T).Addition
  nameWithType: Area<T>.Addition
  nameWithType.vb: Area(Of T).Addition
- uid: Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},`0)
  name: Division(Area<T>, T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Division_Towel_Measurements_Area__0___0_
  commentId: M:Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},`0)
  name.vb: Division(Area(Of T), T)
  fullName: Towel.Measurements.Area<T>.Division(Towel.Measurements.Area<T>, T)
  fullName.vb: Towel.Measurements.Area(Of T).Division(Towel.Measurements.Area(Of T), T)
  nameWithType: Area<T>.Division(Area<T>, T)
  nameWithType.vb: Area(Of T).Division(Area(Of T), T)
- uid: Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Division(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Division_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Division(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Division(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Division(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Division(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Division(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name: Division(Area<T>, Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Division_Towel_Measurements_Area__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.op_Division(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name.vb: Division(Area(Of T), Length(Of T))
  fullName: Towel.Measurements.Area<T>.Division(Towel.Measurements.Area<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Division(Towel.Measurements.Area(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Division(Area<T>, Length<T>)
  nameWithType.vb: Area(Of T).Division(Area(Of T), Length(Of T))
- uid: Towel.Measurements.Area`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Division_
  commentId: Overload:Towel.Measurements.Area`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Division
  fullName.vb: Towel.Measurements.Area(Of T).Division
  nameWithType: Area<T>.Division
  nameWithType.vb: Area(Of T).Division
- uid: Towel.Measurements.Area`1.op_Equality(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Equality(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Equality_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Equality(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Equality(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Equality(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Equality(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Equality(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Equality(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Equality_
  commentId: Overload:Towel.Measurements.Area`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Equality
  fullName.vb: Towel.Measurements.Area(Of T).Equality
  nameWithType: Area<T>.Equality
  nameWithType.vb: Area(Of T).Equality
- uid: Towel.Measurements.Area`1.op_GreaterThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: GreaterThan(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_GreaterThan_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_GreaterThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: GreaterThan(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThan(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThan(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThan(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).GreaterThan(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Area`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.GreaterThan
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThan
  nameWithType: Area<T>.GreaterThan
  nameWithType.vb: Area(Of T).GreaterThan
- uid: Towel.Measurements.Area`1.op_GreaterThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: GreaterThanOrEqual(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_GreaterThanOrEqual_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_GreaterThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: GreaterThanOrEqual(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.GreaterThanOrEqual(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThanOrEqual(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.GreaterThanOrEqual(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).GreaterThanOrEqual(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Area`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Area(Of T).GreaterThanOrEqual
  nameWithType: Area<T>.GreaterThanOrEqual
  nameWithType.vb: Area(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Area`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits})~Towel.Measurements.Area{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AreaBaseUnits) to Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits___Towel_Measurements_Area__0_
  commentId: M:Towel.Measurements.Area`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits})~Towel.Measurements.Area{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AreaBaseUnits) to Area(Of T))
  fullName: Towel.Measurements.Area<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits> to Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits) to Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AreaBaseUnits) to Area<T>)
  nameWithType.vb: Area(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AreaBaseUnits) to Area(Of T))
- uid: Towel.Measurements.Area`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Area`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Area<T>.Implicit
  fullName.vb: Towel.Measurements.Area(Of T).Widening
  nameWithType: Area<T>.Implicit
  nameWithType.vb: Area(Of T).Widening
- uid: Towel.Measurements.Area`1.op_Inequality(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Inequality(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Inequality_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Inequality(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Inequality(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Inequality(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Inequality(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Inequality(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Inequality(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Area`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Inequality
  fullName.vb: Towel.Measurements.Area(Of T).Inequality
  nameWithType: Area<T>.Inequality
  nameWithType.vb: Area(Of T).Inequality
- uid: Towel.Measurements.Area`1.op_LessThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: LessThan(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_LessThan_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_LessThan(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: LessThan(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThan(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThan(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThan(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).LessThan(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Area`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LessThan
  fullName.vb: Towel.Measurements.Area(Of T).LessThan
  nameWithType: Area<T>.LessThan
  nameWithType.vb: Area(Of T).LessThan
- uid: Towel.Measurements.Area`1.op_LessThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: LessThanOrEqual(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_LessThanOrEqual_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_LessThanOrEqual(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: LessThanOrEqual(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.LessThanOrEqual(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).LessThanOrEqual(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.LessThanOrEqual(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).LessThanOrEqual(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Area`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Area(Of T).LessThanOrEqual
  nameWithType: Area<T>.LessThanOrEqual
  nameWithType.vb: Area(Of T).LessThanOrEqual
- uid: Towel.Measurements.Area`1.op_Multiply(`0,Towel.Measurements.Area{`0})
  name: Multiply(T, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply__0_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(`0,Towel.Measurements.Area{`0})
  name.vb: Multiply(T, Area(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(T, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(T, Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Multiply(T, Area<T>)
  nameWithType.vb: Area(Of T).Multiply(T, Area(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},`0)
  name: Multiply(Area<T>, T)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0___0_
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},`0)
  name.vb: Multiply(Area(Of T), T)
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, T)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), T)
  nameWithType: Area<T>.Multiply(Area<T>, T)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), T)
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Area<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Area(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, AreaDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Density{`0})
  name: Multiply(Area<T>, Density<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Area(Of T), Density(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Density<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Density(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name: Multiply(Area<T>, Length<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Area(Of T), Length(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Length<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Length(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Area<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Area(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, LinearDensity<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(Area<T>, Pressure<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Area(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Pressure<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Pressure(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Area<T>, Speed<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_Towel_Measurements_Area__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Area`1.op_Multiply(Towel.Measurements.Area{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Area(Of T), Speed(Of T))
  fullName: Towel.Measurements.Area<T>.Multiply(Towel.Measurements.Area<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Multiply(Towel.Measurements.Area(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Area<T>.Multiply(Area<T>, Speed<T>)
  nameWithType.vb: Area(Of T).Multiply(Area(Of T), Speed(Of T))
- uid: Towel.Measurements.Area`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Area`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Multiply
  fullName.vb: Towel.Measurements.Area(Of T).Multiply
  nameWithType: Area<T>.Multiply
  nameWithType.vb: Area(Of T).Multiply
- uid: Towel.Measurements.Area`1.op_Subtraction(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Subtraction(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Subtraction_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.op_Subtraction(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Subtraction(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Subtraction(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Subtraction(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Subtraction(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Subtraction(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Area`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Subtraction
  fullName.vb: Towel.Measurements.Area(Of T).Subtraction
  nameWithType: Area<T>.Subtraction
  nameWithType.vb: Area(Of T).Subtraction
- uid: Towel.Measurements.Area`1.Subtract(Towel.Measurements.Area{`0})
  name: Subtract(Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Subtract_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Subtract(Towel.Measurements.Area{`0})
  name.vb: Subtract(Area(Of T))
  fullName: Towel.Measurements.Area<T>.Subtract(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Subtract(Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Subtract(Area<T>)
  nameWithType.vb: Area(Of T).Subtract(Area(Of T))
- uid: Towel.Measurements.Area`1.Subtract(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name: Subtract(Area<T>, Area<T>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Subtract_Towel_Measurements_Area__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Area`1.Subtract(Towel.Measurements.Area{`0},Towel.Measurements.Area{`0})
  name.vb: Subtract(Area(Of T), Area(Of T))
  fullName: Towel.Measurements.Area<T>.Subtract(Towel.Measurements.Area<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Area(Of T).Subtract(Towel.Measurements.Area(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Area<T>.Subtract(Area<T>, Area<T>)
  nameWithType.vb: Area(Of T).Subtract(Area(Of T), Area(Of T))
- uid: Towel.Measurements.Area`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_Subtract_
  commentId: Overload:Towel.Measurements.Area`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.Subtract
  fullName.vb: Towel.Measurements.Area(Of T).Subtract
  nameWithType: Area<T>.Subtract
  nameWithType.vb: Area(Of T).Subtract
- uid: Towel.Measurements.Area`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_ToString
  commentId: M:Towel.Measurements.Area`1.ToString
  fullName: Towel.Measurements.Area<T>.ToString()
  fullName.vb: Towel.Measurements.Area(Of T).ToString()
  nameWithType: Area<T>.ToString()
  nameWithType.vb: Area(Of T).ToString()
- uid: Towel.Measurements.Area`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_ToString_
  commentId: Overload:Towel.Measurements.Area`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.ToString
  fullName.vb: Towel.Measurements.Area(Of T).ToString
  nameWithType: Area<T>.ToString
  nameWithType.vb: Area(Of T).ToString
- uid: Towel.Measurements.Area`1.TryParse(System.String,Towel.Measurements.Area{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Area<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_TryParse_System_String_Towel_Measurements_Area__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Area`1.TryParse(System.String,Towel.Measurements.Area{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Area(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Area<T>.TryParse(System.String, out Towel.Measurements.Area<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Area(Of T).TryParse(System.String, ByRef Towel.Measurements.Area(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Area<T>.TryParse(String, out Area<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Area(Of T).TryParse(String, ByRef Area(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Area`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Area-1.html#Towel_Measurements_Area_1_TryParse_
  commentId: Overload:Towel.Measurements.Area`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Area<T>.TryParse
  fullName.vb: Towel.Measurements.Area(Of T).TryParse
  nameWithType: Area<T>.TryParse
  nameWithType.vb: Area(Of T).TryParse
- uid: Towel.Measurements.AreaDensity`1
  name: AreaDensity<T>
  href: api/Towel.Measurements.AreaDensity-1.html
  commentId: T:Towel.Measurements.AreaDensity`1
  name.vb: AreaDensity(Of T)
  fullName: Towel.Measurements.AreaDensity<T>
  fullName.vb: Towel.Measurements.AreaDensity(Of T)
  nameWithType: AreaDensity<T>
  nameWithType.vb: AreaDensity(Of T)
- uid: Towel.Measurements.AreaDensity`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: AreaDensity(T, Mass.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.AreaDensity`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.AreaDensity<T>.AreaDensity(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).AreaDensity(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: AreaDensity<T>.AreaDensity(T, Mass.Units, Length.Units, Length.Units)
  nameWithType.vb: AreaDensity(Of T).AreaDensity(T, Mass.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.AreaDensity`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name: AreaDensity(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_
  commentId: M:Towel.Measurements.AreaDensity`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName: Towel.Measurements.AreaDensity<T>.AreaDensity(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).AreaDensity(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType: AreaDensity<T>.AreaDensity(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType.vb: AreaDensity(Of T).AreaDensity(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
- uid: Towel.Measurements.AreaDensity`1.#ctor*
  name: AreaDensity
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1__ctor_
  commentId: Overload:Towel.Measurements.AreaDensity`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.AreaDensity
  fullName.vb: Towel.Measurements.AreaDensity(Of T).AreaDensity
  nameWithType: AreaDensity<T>.AreaDensity
  nameWithType.vb: AreaDensity(Of T).AreaDensity
- uid: Towel.Measurements.AreaDensity`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Add__0_
  commentId: M:Towel.Measurements.AreaDensity`1.Add(`0)
  fullName: Towel.Measurements.AreaDensity<T>.Add(T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Add(T)
  nameWithType: AreaDensity<T>.Add(T)
  nameWithType.vb: AreaDensity(Of T).Add(T)
- uid: Towel.Measurements.AreaDensity`1.Add(Towel.Measurements.AreaDensity{`0})
  name: Add(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Add_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Add(Towel.Measurements.AreaDensity{`0})
  name.vb: Add(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Add(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Add(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Add(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Add(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Add(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Add(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Add_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Add(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Add(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Add(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Add(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Add(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Add(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Add*
  name: Add
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Add_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Add
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Add
  nameWithType: AreaDensity<T>.Add
  nameWithType.vb: AreaDensity(Of T).Add
- uid: Towel.Measurements.AreaDensity`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Mass.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.AreaDensity`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.AreaDensity<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: AreaDensity<T>.Convert(T, Mass.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units)
  nameWithType.vb: AreaDensity(Of T).Convert(T, Mass.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.AreaDensity`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_
  commentId: M:Towel.Measurements.AreaDensity`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName: Towel.Measurements.AreaDensity<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType: AreaDensity<T>.Convert(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType.vb: AreaDensity(Of T).Convert(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
- uid: Towel.Measurements.AreaDensity`1.Convert*
  name: Convert
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Convert_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Convert
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Convert
  nameWithType: AreaDensity<T>.Convert
  nameWithType.vb: AreaDensity(Of T).Convert
- uid: Towel.Measurements.AreaDensity`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide__0_
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(`0)
  fullName: Towel.Measurements.AreaDensity<T>.Divide(T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(T)
  nameWithType: AreaDensity<T>.Divide(T)
  nameWithType.vb: AreaDensity(Of T).Divide(T)
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Divide(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},`0)
  name: Divide(AreaDensity<T>, T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_AreaDensity__0___0_
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},`0)
  name.vb: Divide(AreaDensity(Of T), T)
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.AreaDensity<T>, T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T), T)
  nameWithType: AreaDensity<T>.Divide(AreaDensity<T>, T)
  nameWithType.vb: AreaDensity(Of T).Divide(AreaDensity(Of T), T)
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Divide(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Density{`0})
  name: Divide(AreaDensity<T>, Density<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_AreaDensity__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Density{`0})
  name.vb: Divide(AreaDensity(Of T), Density(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Density(Of T))
  nameWithType: AreaDensity<T>.Divide(AreaDensity<T>, Density<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(AreaDensity(Of T), Density(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name: Divide(AreaDensity<T>, Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_AreaDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(AreaDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Divide(AreaDensity<T>, Length<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(AreaDensity(Of T), Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.Density{`0})
  name: Divide(Density<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.Density(Of T))
  nameWithType: AreaDensity<T>.Divide(Density<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(Density(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Divide(Length<T>)
  nameWithType.vb: AreaDensity(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.Divide*
  name: Divide
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Divide_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Divide
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Divide
  nameWithType: AreaDensity<T>.Divide
  nameWithType.vb: AreaDensity(Of T).Divide
- uid: Towel.Measurements.AreaDensity`1.Equal(Towel.Measurements.AreaDensity{`0})
  name: Equal(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Equal_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Equal(Towel.Measurements.AreaDensity{`0})
  name.vb: Equal(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Equal(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equal(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Equal(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Equal(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Equal(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Equal(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Equal_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Equal(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Equal(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Equal(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equal(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Equal(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Equal(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Equal*
  name: Equal
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Equal_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Equal
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equal
  nameWithType: AreaDensity<T>.Equal
  nameWithType.vb: AreaDensity(Of T).Equal
- uid: Towel.Measurements.AreaDensity`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Equals_System_Object_
  commentId: M:Towel.Measurements.AreaDensity`1.Equals(System.Object)
  fullName: Towel.Measurements.AreaDensity<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equals(System.Object)
  nameWithType: AreaDensity<T>.Equals(Object)
  nameWithType.vb: AreaDensity(Of T).Equals(Object)
- uid: Towel.Measurements.AreaDensity`1.Equals*
  name: Equals
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Equals_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Equals
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equals
  nameWithType: AreaDensity<T>.Equals
  nameWithType.vb: AreaDensity(Of T).Equals
- uid: Towel.Measurements.AreaDensity`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GetHashCode
  commentId: M:Towel.Measurements.AreaDensity`1.GetHashCode
  fullName: Towel.Measurements.AreaDensity<T>.GetHashCode()
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GetHashCode()
  nameWithType: AreaDensity<T>.GetHashCode()
  nameWithType.vb: AreaDensity(Of T).GetHashCode()
- uid: Towel.Measurements.AreaDensity`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GetHashCode_
  commentId: Overload:Towel.Measurements.AreaDensity`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.GetHashCode
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GetHashCode
  nameWithType: AreaDensity<T>.GetHashCode
  nameWithType.vb: AreaDensity(Of T).GetHashCode
- uid: Towel.Measurements.AreaDensity`1.GreaterThan(Towel.Measurements.AreaDensity{`0})
  name: GreaterThan(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThan_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.GreaterThan(Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThan(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThan(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThan(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThan(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThan(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.GreaterThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: GreaterThan(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThan_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.GreaterThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThan(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThan(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThan(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThan(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThan(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThan_
  commentId: Overload:Towel.Measurements.AreaDensity`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThan
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThan
  nameWithType: AreaDensity<T>.GreaterThan
  nameWithType.vb: AreaDensity(Of T).GreaterThan
- uid: Towel.Measurements.AreaDensity`1.GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0})
  name: GreaterThanOrEqual(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThanOrEqual_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThanOrEqual(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThanOrEqual(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThanOrEqual(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThanOrEqual(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThanOrEqual(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: GreaterThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThanOrEqual_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThanOrEqual(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThanOrEqual(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AreaDensity`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThanOrEqual
  nameWithType: AreaDensity<T>.GreaterThanOrEqual
  nameWithType.vb: AreaDensity(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AreaDensity`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Item[Mass.Units, Length.Units, Length.Units]
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.AreaDensity`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Mass.Units, Length.Units, Length.Units)
  fullName: Towel.Measurements.AreaDensity<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: AreaDensity<T>.Item[Mass.Units, Length.Units, Length.Units]
  nameWithType.vb: AreaDensity(Of T).Item(Mass.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.AreaDensity`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits]
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_
  commentId: P:Towel.Measurements.AreaDensity`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName: Towel.Measurements.AreaDensity<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits]
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType: AreaDensity<T>.Item[MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits]
  nameWithType.vb: AreaDensity(Of T).Item(MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
- uid: Towel.Measurements.AreaDensity`1.Item*
  name: Item
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Item_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Item
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Item
  nameWithType: AreaDensity<T>.Item
  nameWithType.vb: AreaDensity(Of T).Item
- uid: Towel.Measurements.AreaDensity`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LengthUnits2
  commentId: P:Towel.Measurements.AreaDensity`1.LengthUnits2
  fullName: Towel.Measurements.AreaDensity<T>.LengthUnits2
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LengthUnits2
  nameWithType: AreaDensity<T>.LengthUnits2
  nameWithType.vb: AreaDensity(Of T).LengthUnits2
- uid: Towel.Measurements.AreaDensity`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.AreaDensity`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LengthUnits2
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LengthUnits2
  nameWithType: AreaDensity<T>.LengthUnits2
  nameWithType.vb: AreaDensity(Of T).LengthUnits2
- uid: Towel.Measurements.AreaDensity`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LengthUnits3
  commentId: P:Towel.Measurements.AreaDensity`1.LengthUnits3
  fullName: Towel.Measurements.AreaDensity<T>.LengthUnits3
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LengthUnits3
  nameWithType: AreaDensity<T>.LengthUnits3
  nameWithType.vb: AreaDensity(Of T).LengthUnits3
- uid: Towel.Measurements.AreaDensity`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.AreaDensity`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LengthUnits3
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LengthUnits3
  nameWithType: AreaDensity<T>.LengthUnits3
  nameWithType.vb: AreaDensity(Of T).LengthUnits3
- uid: Towel.Measurements.AreaDensity`1.LessThan(Towel.Measurements.AreaDensity{`0})
  name: LessThan(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThan_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.LessThan(Towel.Measurements.AreaDensity{`0})
  name.vb: LessThan(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThan(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThan(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThan(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThan(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.LessThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: LessThan(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThan_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.LessThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: LessThan(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThan(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThan(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThan(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThan(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThan_
  commentId: Overload:Towel.Measurements.AreaDensity`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LessThan
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThan
  nameWithType: AreaDensity<T>.LessThan
  nameWithType.vb: AreaDensity(Of T).LessThan
- uid: Towel.Measurements.AreaDensity`1.LessThanOrEqual(Towel.Measurements.AreaDensity{`0})
  name: LessThanOrEqual(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThanOrEqual_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.LessThanOrEqual(Towel.Measurements.AreaDensity{`0})
  name.vb: LessThanOrEqual(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThanOrEqual(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThanOrEqual(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThanOrEqual(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThanOrEqual(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.LessThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: LessThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThanOrEqual_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.LessThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: LessThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThanOrEqual(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThanOrEqual(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AreaDensity`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThanOrEqual
  nameWithType: AreaDensity<T>.LessThanOrEqual
  nameWithType.vb: AreaDensity(Of T).LessThanOrEqual
- uid: Towel.Measurements.AreaDensity`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_MassUnits1
  commentId: P:Towel.Measurements.AreaDensity`1.MassUnits1
  fullName: Towel.Measurements.AreaDensity<T>.MassUnits1
  fullName.vb: Towel.Measurements.AreaDensity(Of T).MassUnits1
  nameWithType: AreaDensity<T>.MassUnits1
  nameWithType.vb: AreaDensity(Of T).MassUnits1
- uid: Towel.Measurements.AreaDensity`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_MassUnits1_
  commentId: Overload:Towel.Measurements.AreaDensity`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.MassUnits1
  fullName.vb: Towel.Measurements.AreaDensity(Of T).MassUnits1
  nameWithType: AreaDensity<T>.MassUnits1
  nameWithType.vb: AreaDensity(Of T).MassUnits1
- uid: Towel.Measurements.AreaDensity`1.Multiply(`0,Towel.Measurements.AreaDensity{`0})
  name: Multiply(T, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply__0_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(`0,Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(T, AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(T, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(T, Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Multiply(T, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(T, AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: AreaDensity<T>.Multiply(Acceleration<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: AreaDensity<T>.Multiply(Area<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},`0)
  name: Multiply(AreaDensity<T>, T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0___0_
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},`0)
  name.vb: Multiply(AreaDensity(Of T), T)
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), T)
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, T)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), T)
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(AreaDensity<T>, Acceleration<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(AreaDensity(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Acceleration<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Acceleration(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Area{`0})
  name: Multiply(AreaDensity<T>, Area<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(AreaDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Area<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Area(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name: Multiply(AreaDensity<T>, Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(AreaDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Length<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Volume{`0})
  name: Multiply(AreaDensity<T>, Volume<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(AreaDensity(Of T), Volume(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Volume<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Volume(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(AreaDensity<T>, VolumeRate<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(AreaDensity(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, VolumeRate<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Multiply(Length<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Volume{`0})
  name: Multiply(Volume<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.Volume{`0})
  name.vb: Multiply(Volume(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.Volume(Of T))
  nameWithType: AreaDensity<T>.Multiply(Volume<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(Volume(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name: Multiply(VolumeRate<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(VolumeRate(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.VolumeRate(Of T))
  nameWithType: AreaDensity<T>.Multiply(VolumeRate<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(VolumeRate(Of T))
- uid: Towel.Measurements.AreaDensity`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Multiply_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Multiply
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply
  nameWithType: AreaDensity<T>.Multiply
  nameWithType.vb: AreaDensity(Of T).Multiply
- uid: Towel.Measurements.AreaDensity`1.NotEqual(Towel.Measurements.AreaDensity{`0})
  name: NotEqual(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_NotEqual_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.NotEqual(Towel.Measurements.AreaDensity{`0})
  name.vb: NotEqual(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.NotEqual(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).NotEqual(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.NotEqual(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).NotEqual(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.NotEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: NotEqual(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_NotEqual_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.NotEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: NotEqual(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.NotEqual(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).NotEqual(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.NotEqual(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).NotEqual(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_NotEqual_
  commentId: Overload:Towel.Measurements.AreaDensity`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.NotEqual
  fullName.vb: Towel.Measurements.AreaDensity(Of T).NotEqual
  nameWithType: AreaDensity<T>.NotEqual
  nameWithType.vb: AreaDensity(Of T).NotEqual
- uid: Towel.Measurements.AreaDensity`1.op_Addition(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Addition(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Addition_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Addition(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Addition(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Addition(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Addition(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Addition(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Addition(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Addition_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Addition
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Addition
  nameWithType: AreaDensity<T>.Addition
  nameWithType.vb: AreaDensity(Of T).Addition
- uid: Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},`0)
  name: Division(AreaDensity<T>, T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Division_Towel_Measurements_AreaDensity__0___0_
  commentId: M:Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},`0)
  name.vb: Division(AreaDensity(Of T), T)
  fullName: Towel.Measurements.AreaDensity<T>.Division(Towel.Measurements.AreaDensity<T>, T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Division(Towel.Measurements.AreaDensity(Of T), T)
  nameWithType: AreaDensity<T>.Division(AreaDensity<T>, T)
  nameWithType.vb: AreaDensity(Of T).Division(AreaDensity(Of T), T)
- uid: Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Division_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Division(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Division(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Division(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Division(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Density{`0})
  name: Division(AreaDensity<T>, Density<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Division_Towel_Measurements_AreaDensity__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Density{`0})
  name.vb: Division(AreaDensity(Of T), Density(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Division(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Division(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Density(Of T))
  nameWithType: AreaDensity<T>.Division(AreaDensity<T>, Density<T>)
  nameWithType.vb: AreaDensity(Of T).Division(AreaDensity(Of T), Density(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name: Division(AreaDensity<T>, Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Division_Towel_Measurements_AreaDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Division(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Division(AreaDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Division(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Division(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Division(AreaDensity<T>, Length<T>)
  nameWithType.vb: AreaDensity(Of T).Division(AreaDensity(Of T), Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Division*
  name: Division
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Division_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Division
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Division
  nameWithType: AreaDensity<T>.Division
  nameWithType.vb: AreaDensity(Of T).Division
- uid: Towel.Measurements.AreaDensity`1.op_Equality(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Equality(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Equality_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Equality(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Equality(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Equality(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equality(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Equality(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Equality(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Equality_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Equality
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Equality
  nameWithType: AreaDensity<T>.Equality
  nameWithType.vb: AreaDensity(Of T).Equality
- uid: Towel.Measurements.AreaDensity`1.op_GreaterThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: GreaterThan(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_GreaterThan_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_GreaterThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThan(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThan(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThan(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThan(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThan(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThan
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThan
  nameWithType: AreaDensity<T>.GreaterThan
  nameWithType.vb: AreaDensity(Of T).GreaterThan
- uid: Towel.Measurements.AreaDensity`1.op_GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: GreaterThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_GreaterThanOrEqual_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_GreaterThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: GreaterThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThanOrEqual(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThanOrEqual(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.GreaterThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).GreaterThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.AreaDensity(Of T).GreaterThanOrEqual
  nameWithType: AreaDensity<T>.GreaterThanOrEqual
  nameWithType.vb: AreaDensity(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.AreaDensity`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits})~Towel.Measurements.AreaDensity{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits) to AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits___Towel_Measurements_AreaDensity__0_
  commentId: M:Towel.Measurements.AreaDensity`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits})~Towel.Measurements.AreaDensity{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits) to AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits> to Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits) to Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Implicit((T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits) to AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Widening((T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits) to AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Implicit_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.AreaDensity<T>.Implicit
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Widening
  nameWithType: AreaDensity<T>.Implicit
  nameWithType.vb: AreaDensity(Of T).Widening
- uid: Towel.Measurements.AreaDensity`1.op_Inequality(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Inequality(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Inequality_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Inequality(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Inequality(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Inequality(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Inequality(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Inequality(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Inequality(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Inequality_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Inequality
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Inequality
  nameWithType: AreaDensity<T>.Inequality
  nameWithType.vb: AreaDensity(Of T).Inequality
- uid: Towel.Measurements.AreaDensity`1.op_LessThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: LessThan(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_LessThan_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_LessThan(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: LessThan(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThan(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThan(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThan(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThan(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_LessThan_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LessThan
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThan
  nameWithType: AreaDensity<T>.LessThan
  nameWithType.vb: AreaDensity(Of T).LessThan
- uid: Towel.Measurements.AreaDensity`1.op_LessThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: LessThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_LessThanOrEqual_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_LessThanOrEqual(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: LessThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.LessThanOrEqual(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThanOrEqual(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.LessThanOrEqual(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).LessThanOrEqual(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.AreaDensity(Of T).LessThanOrEqual
  nameWithType: AreaDensity<T>.LessThanOrEqual
  nameWithType.vb: AreaDensity(Of T).LessThanOrEqual
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(`0,Towel.Measurements.AreaDensity{`0})
  name: Multiply(T, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply__0_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(`0,Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(T, AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(T, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(T, Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Multiply(T, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(T, AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},`0)
  name: Multiply(AreaDensity<T>, T)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0___0_
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},`0)
  name.vb: Multiply(AreaDensity(Of T), T)
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, T)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), T)
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, T)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), T)
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(AreaDensity<T>, Acceleration<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(AreaDensity(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Acceleration<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Acceleration(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Area{`0})
  name: Multiply(AreaDensity<T>, Area<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(AreaDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Area<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Area(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name: Multiply(AreaDensity<T>, Length<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(AreaDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Length<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Length(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Volume{`0})
  name: Multiply(AreaDensity<T>, Volume<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(AreaDensity(Of T), Volume(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, Volume<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), Volume(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(AreaDensity<T>, VolumeRate<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_Towel_Measurements_AreaDensity__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Multiply(Towel.Measurements.AreaDensity{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(AreaDensity(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Multiply(Towel.Measurements.AreaDensity<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: AreaDensity<T>.Multiply(AreaDensity<T>, VolumeRate<T>)
  nameWithType.vb: AreaDensity(Of T).Multiply(AreaDensity(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Multiply_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Multiply
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Multiply
  nameWithType: AreaDensity<T>.Multiply
  nameWithType.vb: AreaDensity(Of T).Multiply
- uid: Towel.Measurements.AreaDensity`1.op_Subtraction(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Subtraction(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Subtraction_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.op_Subtraction(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Subtraction(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Subtraction(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Subtraction(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Subtraction(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Subtraction(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.AreaDensity`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Subtraction
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Subtraction
  nameWithType: AreaDensity<T>.Subtraction
  nameWithType.vb: AreaDensity(Of T).Subtraction
- uid: Towel.Measurements.AreaDensity`1.Subtract(Towel.Measurements.AreaDensity{`0})
  name: Subtract(AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Subtract_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Subtract(Towel.Measurements.AreaDensity{`0})
  name.vb: Subtract(AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Subtract(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Subtract(Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Subtract(AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Subtract(AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Subtract(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Subtract(AreaDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Subtract_Towel_Measurements_AreaDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.AreaDensity`1.Subtract(Towel.Measurements.AreaDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Subtract(AreaDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.AreaDensity<T>.Subtract(Towel.Measurements.AreaDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Subtract(Towel.Measurements.AreaDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: AreaDensity<T>.Subtract(AreaDensity<T>, AreaDensity<T>)
  nameWithType.vb: AreaDensity(Of T).Subtract(AreaDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.AreaDensity`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_Subtract_
  commentId: Overload:Towel.Measurements.AreaDensity`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.Subtract
  fullName.vb: Towel.Measurements.AreaDensity(Of T).Subtract
  nameWithType: AreaDensity<T>.Subtract
  nameWithType.vb: AreaDensity(Of T).Subtract
- uid: Towel.Measurements.AreaDensity`1.ToString
  name: ToString()
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_ToString
  commentId: M:Towel.Measurements.AreaDensity`1.ToString
  fullName: Towel.Measurements.AreaDensity<T>.ToString()
  fullName.vb: Towel.Measurements.AreaDensity(Of T).ToString()
  nameWithType: AreaDensity<T>.ToString()
  nameWithType.vb: AreaDensity(Of T).ToString()
- uid: Towel.Measurements.AreaDensity`1.ToString*
  name: ToString
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_ToString_
  commentId: Overload:Towel.Measurements.AreaDensity`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.ToString
  fullName.vb: Towel.Measurements.AreaDensity(Of T).ToString
  nameWithType: AreaDensity<T>.ToString
  nameWithType.vb: AreaDensity(Of T).ToString
- uid: Towel.Measurements.AreaDensity`1.TryParse(System.String,Towel.Measurements.AreaDensity{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out AreaDensity<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_TryParse_System_String_Towel_Measurements_AreaDensity__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.AreaDensity`1.TryParse(System.String,Towel.Measurements.AreaDensity{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef AreaDensity(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.AreaDensity<T>.TryParse(System.String, out Towel.Measurements.AreaDensity<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.AreaDensity(Of T).TryParse(System.String, ByRef Towel.Measurements.AreaDensity(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: AreaDensity<T>.TryParse(String, out AreaDensity<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: AreaDensity(Of T).TryParse(String, ByRef AreaDensity(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.AreaDensity`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.AreaDensity-1.html#Towel_Measurements_AreaDensity_1_TryParse_
  commentId: Overload:Towel.Measurements.AreaDensity`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.AreaDensity<T>.TryParse
  fullName.vb: Towel.Measurements.AreaDensity(Of T).TryParse
  nameWithType: AreaDensity<T>.TryParse
  nameWithType.vb: AreaDensity(Of T).TryParse
- uid: Towel.Measurements.Density`1
  name: Density<T>
  href: api/Towel.Measurements.Density-1.html
  commentId: T:Towel.Measurements.Density`1
  name.vb: Density(Of T)
  fullName: Towel.Measurements.Density<T>
  fullName.vb: Towel.Measurements.Density(Of T)
  nameWithType: Density<T>
  nameWithType.vb: Density(Of T)
- uid: Towel.Measurements.Density`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Density(T, Mass.Units, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Density`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Density<T>.Density(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Density(Of T).Density(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Density<T>.Density(T, Mass.Units, Length.Units, Length.Units, Length.Units)
  nameWithType.vb: Density(Of T).Density(T, Mass.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Density`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name: Density(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_
  commentId: M:Towel.Measurements.Density`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName: Towel.Measurements.Density<T>.Density(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName.vb: Towel.Measurements.Density(Of T).Density(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType: Density<T>.Density(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType.vb: Density(Of T).Density(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
- uid: Towel.Measurements.Density`1.#ctor*
  name: Density
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1__ctor_
  commentId: Overload:Towel.Measurements.Density`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Density
  fullName.vb: Towel.Measurements.Density(Of T).Density
  nameWithType: Density<T>.Density
  nameWithType.vb: Density(Of T).Density
- uid: Towel.Measurements.Density`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Add__0_
  commentId: M:Towel.Measurements.Density`1.Add(`0)
  fullName: Towel.Measurements.Density<T>.Add(T)
  fullName.vb: Towel.Measurements.Density(Of T).Add(T)
  nameWithType: Density<T>.Add(T)
  nameWithType.vb: Density(Of T).Add(T)
- uid: Towel.Measurements.Density`1.Add(Towel.Measurements.Density{`0})
  name: Add(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Add_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Add(Towel.Measurements.Density{`0})
  name.vb: Add(Density(Of T))
  fullName: Towel.Measurements.Density<T>.Add(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Add(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Add(Density<T>)
  nameWithType.vb: Density(Of T).Add(Density(Of T))
- uid: Towel.Measurements.Density`1.Add(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Add(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Add_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Add(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Add(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Add(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Add(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Add(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Add(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.Add*
  name: Add
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Add_
  commentId: Overload:Towel.Measurements.Density`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Add
  fullName.vb: Towel.Measurements.Density(Of T).Add
  nameWithType: Density<T>.Add
  nameWithType.vb: Density(Of T).Add
- uid: Towel.Measurements.Density`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Mass.Units, Length.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Density`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Density<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Density(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Density<T>.Convert(T, Mass.Units, Length.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units, Length.Units)
  nameWithType.vb: Density(Of T).Convert(T, Mass.Units, Length.Units, Length.Units, Length.Units, Mass.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Density`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_
  commentId: M:Towel.Measurements.Density`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName: Towel.Measurements.Density<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName.vb: Towel.Measurements.Density(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType: Density<T>.Convert(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType.vb: Density(Of T).Convert(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
- uid: Towel.Measurements.Density`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Convert_
  commentId: Overload:Towel.Measurements.Density`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Convert
  fullName.vb: Towel.Measurements.Density(Of T).Convert
  nameWithType: Density<T>.Convert
  nameWithType.vb: Density(Of T).Convert
- uid: Towel.Measurements.Density`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Divide__0_
  commentId: M:Towel.Measurements.Density`1.Divide(`0)
  fullName: Towel.Measurements.Density<T>.Divide(T)
  fullName.vb: Towel.Measurements.Density(Of T).Divide(T)
  nameWithType: Density<T>.Divide(T)
  nameWithType.vb: Density(Of T).Divide(T)
- uid: Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0})
  name: Divide(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Divide_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T))
  fullName: Towel.Measurements.Density<T>.Divide(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Divide(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Divide(Density<T>)
  nameWithType.vb: Density(Of T).Divide(Density(Of T))
- uid: Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0},`0)
  name: Divide(Density<T>, T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Divide_Towel_Measurements_Density__0___0_
  commentId: M:Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0},`0)
  name.vb: Divide(Density(Of T), T)
  fullName: Towel.Measurements.Density<T>.Divide(Towel.Measurements.Density<T>, T)
  fullName.vb: Towel.Measurements.Density(Of T).Divide(Towel.Measurements.Density(Of T), T)
  nameWithType: Density<T>.Divide(Density<T>, T)
  nameWithType.vb: Density(Of T).Divide(Density(Of T), T)
- uid: Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Divide(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Divide_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Divide(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Divide(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Divide(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Divide(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Divide(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Divide_
  commentId: Overload:Towel.Measurements.Density`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Divide
  fullName.vb: Towel.Measurements.Density(Of T).Divide
  nameWithType: Density<T>.Divide
  nameWithType.vb: Density(Of T).Divide
- uid: Towel.Measurements.Density`1.Equal(Towel.Measurements.Density{`0})
  name: Equal(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Equal_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Equal(Towel.Measurements.Density{`0})
  name.vb: Equal(Density(Of T))
  fullName: Towel.Measurements.Density<T>.Equal(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Equal(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Equal(Density<T>)
  nameWithType.vb: Density(Of T).Equal(Density(Of T))
- uid: Towel.Measurements.Density`1.Equal(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Equal(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Equal_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Equal(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Equal(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Equal(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Equal(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Equal(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Equal(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Equal_
  commentId: Overload:Towel.Measurements.Density`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Equal
  fullName.vb: Towel.Measurements.Density(Of T).Equal
  nameWithType: Density<T>.Equal
  nameWithType.vb: Density(Of T).Equal
- uid: Towel.Measurements.Density`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Density`1.Equals(System.Object)
  fullName: Towel.Measurements.Density<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Density(Of T).Equals(System.Object)
  nameWithType: Density<T>.Equals(Object)
  nameWithType.vb: Density(Of T).Equals(Object)
- uid: Towel.Measurements.Density`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Equals_
  commentId: Overload:Towel.Measurements.Density`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Equals
  fullName.vb: Towel.Measurements.Density(Of T).Equals
  nameWithType: Density<T>.Equals
  nameWithType.vb: Density(Of T).Equals
- uid: Towel.Measurements.Density`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GetHashCode
  commentId: M:Towel.Measurements.Density`1.GetHashCode
  fullName: Towel.Measurements.Density<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Density(Of T).GetHashCode()
  nameWithType: Density<T>.GetHashCode()
  nameWithType.vb: Density(Of T).GetHashCode()
- uid: Towel.Measurements.Density`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Density`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.GetHashCode
  fullName.vb: Towel.Measurements.Density(Of T).GetHashCode
  nameWithType: Density<T>.GetHashCode
  nameWithType.vb: Density(Of T).GetHashCode
- uid: Towel.Measurements.Density`1.GreaterThan(Towel.Measurements.Density{`0})
  name: GreaterThan(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThan_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.GreaterThan(Towel.Measurements.Density{`0})
  name.vb: GreaterThan(Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThan(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThan(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThan(Density<T>)
  nameWithType.vb: Density(Of T).GreaterThan(Density(Of T))
- uid: Towel.Measurements.Density`1.GreaterThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: GreaterThan(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThan_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.GreaterThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: GreaterThan(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThan(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThan(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThan(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).GreaterThan(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Density`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.GreaterThan
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThan
  nameWithType: Density<T>.GreaterThan
  nameWithType.vb: Density(Of T).GreaterThan
- uid: Towel.Measurements.Density`1.GreaterThanOrEqual(Towel.Measurements.Density{`0})
  name: GreaterThanOrEqual(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThanOrEqual_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.GreaterThanOrEqual(Towel.Measurements.Density{`0})
  name.vb: GreaterThanOrEqual(Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThanOrEqual(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThanOrEqual(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThanOrEqual(Density<T>)
  nameWithType.vb: Density(Of T).GreaterThanOrEqual(Density(Of T))
- uid: Towel.Measurements.Density`1.GreaterThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: GreaterThanOrEqual(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThanOrEqual_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.GreaterThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: GreaterThanOrEqual(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThanOrEqual(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThanOrEqual(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThanOrEqual(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).GreaterThanOrEqual(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Density`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThanOrEqual
  nameWithType: Density<T>.GreaterThanOrEqual
  nameWithType.vb: Density(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Density`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Item[Mass.Units, Length.Units, Length.Units, Length.Units]
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.Density`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Mass.Units, Length.Units, Length.Units, Length.Units)
  fullName: Towel.Measurements.Density<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.Density(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Density<T>.Item[Mass.Units, Length.Units, Length.Units, Length.Units]
  nameWithType.vb: Density(Of T).Item(Mass.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Density`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.DensityBaseUnits]
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_
  commentId: P:Towel.Measurements.Density`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName: Towel.Measurements.Density<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits]
  fullName.vb: Towel.Measurements.Density(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType: Density<T>.Item[MeasurementUnitsSyntaxTypes.DensityBaseUnits]
  nameWithType.vb: Density(Of T).Item(MeasurementUnitsSyntaxTypes.DensityBaseUnits)
- uid: Towel.Measurements.Density`1.Item*
  name: Item
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Item_
  commentId: Overload:Towel.Measurements.Density`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Item
  fullName.vb: Towel.Measurements.Density(Of T).Item
  nameWithType: Density<T>.Item
  nameWithType.vb: Density(Of T).Item
- uid: Towel.Measurements.Density`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits2
  commentId: P:Towel.Measurements.Density`1.LengthUnits2
  fullName: Towel.Measurements.Density<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits2
  nameWithType: Density<T>.LengthUnits2
  nameWithType.vb: Density(Of T).LengthUnits2
- uid: Towel.Measurements.Density`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Density`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits2
  nameWithType: Density<T>.LengthUnits2
  nameWithType.vb: Density(Of T).LengthUnits2
- uid: Towel.Measurements.Density`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits3
  commentId: P:Towel.Measurements.Density`1.LengthUnits3
  fullName: Towel.Measurements.Density<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits3
  nameWithType: Density<T>.LengthUnits3
  nameWithType.vb: Density(Of T).LengthUnits3
- uid: Towel.Measurements.Density`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.Density`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits3
  nameWithType: Density<T>.LengthUnits3
  nameWithType.vb: Density(Of T).LengthUnits3
- uid: Towel.Measurements.Density`1.LengthUnits4
  name: LengthUnits4
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits4
  commentId: P:Towel.Measurements.Density`1.LengthUnits4
  fullName: Towel.Measurements.Density<T>.LengthUnits4
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits4
  nameWithType: Density<T>.LengthUnits4
  nameWithType.vb: Density(Of T).LengthUnits4
- uid: Towel.Measurements.Density`1.LengthUnits4*
  name: LengthUnits4
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LengthUnits4_
  commentId: Overload:Towel.Measurements.Density`1.LengthUnits4
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LengthUnits4
  fullName.vb: Towel.Measurements.Density(Of T).LengthUnits4
  nameWithType: Density<T>.LengthUnits4
  nameWithType.vb: Density(Of T).LengthUnits4
- uid: Towel.Measurements.Density`1.LessThan(Towel.Measurements.Density{`0})
  name: LessThan(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThan_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.LessThan(Towel.Measurements.Density{`0})
  name.vb: LessThan(Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThan(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThan(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThan(Density<T>)
  nameWithType.vb: Density(Of T).LessThan(Density(Of T))
- uid: Towel.Measurements.Density`1.LessThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: LessThan(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThan_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.LessThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: LessThan(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThan(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThan(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThan(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).LessThan(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThan_
  commentId: Overload:Towel.Measurements.Density`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LessThan
  fullName.vb: Towel.Measurements.Density(Of T).LessThan
  nameWithType: Density<T>.LessThan
  nameWithType.vb: Density(Of T).LessThan
- uid: Towel.Measurements.Density`1.LessThanOrEqual(Towel.Measurements.Density{`0})
  name: LessThanOrEqual(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThanOrEqual_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.LessThanOrEqual(Towel.Measurements.Density{`0})
  name.vb: LessThanOrEqual(Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThanOrEqual(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThanOrEqual(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThanOrEqual(Density<T>)
  nameWithType.vb: Density(Of T).LessThanOrEqual(Density(Of T))
- uid: Towel.Measurements.Density`1.LessThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: LessThanOrEqual(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThanOrEqual_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.LessThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: LessThanOrEqual(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThanOrEqual(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThanOrEqual(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThanOrEqual(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).LessThanOrEqual(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Density`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Density(Of T).LessThanOrEqual
  nameWithType: Density<T>.LessThanOrEqual
  nameWithType.vb: Density(Of T).LessThanOrEqual
- uid: Towel.Measurements.Density`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_MassUnits1
  commentId: P:Towel.Measurements.Density`1.MassUnits1
  fullName: Towel.Measurements.Density<T>.MassUnits1
  fullName.vb: Towel.Measurements.Density(Of T).MassUnits1
  nameWithType: Density<T>.MassUnits1
  nameWithType.vb: Density(Of T).MassUnits1
- uid: Towel.Measurements.Density`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Density`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.MassUnits1
  fullName.vb: Towel.Measurements.Density(Of T).MassUnits1
  nameWithType: Density<T>.MassUnits1
  nameWithType.vb: Density(Of T).MassUnits1
- uid: Towel.Measurements.Density`1.Multiply(`0,Towel.Measurements.Density{`0})
  name: Multiply(T, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply__0_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(`0,Towel.Measurements.Density{`0})
  name.vb: Multiply(T, Density(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(T, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(T, Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Multiply(T, Density<T>)
  nameWithType.vb: Density(Of T).Multiply(T, Density(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: Density<T>.Multiply(Area<T>)
  nameWithType.vb: Density(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},`0)
  name: Multiply(Density<T>, T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Density__0___0_
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},`0)
  name.vb: Multiply(Density(Of T), T)
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, T)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), T)
  nameWithType: Density<T>.Multiply(Density<T>, T)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), T)
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Area{`0})
  name: Multiply(Density<T>, Area<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Density(Of T), Area(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Area<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Area(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Length{`0})
  name: Multiply(Density<T>, Length<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Density(Of T), Length(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Length<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Length(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Volume{`0})
  name: Multiply(Density<T>, Volume<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(Density(Of T), Volume(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Volume<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Volume(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Density<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Density__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Density{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Density(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, VolumeRate<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: Density<T>.Multiply(Length<T>)
  nameWithType.vb: Density(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.Volume{`0})
  name: Multiply(Volume<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.Volume{`0})
  name.vb: Multiply(Volume(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Volume(Of T))
  nameWithType: Density<T>.Multiply(Volume<T>)
  nameWithType.vb: Density(Of T).Multiply(Volume(Of T))
- uid: Towel.Measurements.Density`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name: Multiply(VolumeRate<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Density`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(VolumeRate(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.VolumeRate(Of T))
  nameWithType: Density<T>.Multiply(VolumeRate<T>)
  nameWithType.vb: Density(Of T).Multiply(VolumeRate(Of T))
- uid: Towel.Measurements.Density`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Multiply_
  commentId: Overload:Towel.Measurements.Density`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Multiply
  fullName.vb: Towel.Measurements.Density(Of T).Multiply
  nameWithType: Density<T>.Multiply
  nameWithType.vb: Density(Of T).Multiply
- uid: Towel.Measurements.Density`1.NotEqual(Towel.Measurements.Density{`0})
  name: NotEqual(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_NotEqual_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.NotEqual(Towel.Measurements.Density{`0})
  name.vb: NotEqual(Density(Of T))
  fullName: Towel.Measurements.Density<T>.NotEqual(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).NotEqual(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.NotEqual(Density<T>)
  nameWithType.vb: Density(Of T).NotEqual(Density(Of T))
- uid: Towel.Measurements.Density`1.NotEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: NotEqual(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_NotEqual_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.NotEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: NotEqual(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.NotEqual(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).NotEqual(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.NotEqual(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).NotEqual(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_NotEqual_
  commentId: Overload:Towel.Measurements.Density`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.NotEqual
  fullName.vb: Towel.Measurements.Density(Of T).NotEqual
  nameWithType: Density<T>.NotEqual
  nameWithType.vb: Density(Of T).NotEqual
- uid: Towel.Measurements.Density`1.op_Addition(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Addition(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Addition_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Addition(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Addition(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Addition(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Addition(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Addition(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Addition(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Addition_
  commentId: Overload:Towel.Measurements.Density`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Addition
  fullName.vb: Towel.Measurements.Density(Of T).Addition
  nameWithType: Density<T>.Addition
  nameWithType.vb: Density(Of T).Addition
- uid: Towel.Measurements.Density`1.op_Division(Towel.Measurements.Density{`0},`0)
  name: Division(Density<T>, T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Division_Towel_Measurements_Density__0___0_
  commentId: M:Towel.Measurements.Density`1.op_Division(Towel.Measurements.Density{`0},`0)
  name.vb: Division(Density(Of T), T)
  fullName: Towel.Measurements.Density<T>.Division(Towel.Measurements.Density<T>, T)
  fullName.vb: Towel.Measurements.Density(Of T).Division(Towel.Measurements.Density(Of T), T)
  nameWithType: Density<T>.Division(Density<T>, T)
  nameWithType.vb: Density(Of T).Division(Density(Of T), T)
- uid: Towel.Measurements.Density`1.op_Division(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Division(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Division_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Division(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Division(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Division(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Division(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Division(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Division(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Division_
  commentId: Overload:Towel.Measurements.Density`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Division
  fullName.vb: Towel.Measurements.Density(Of T).Division
  nameWithType: Density<T>.Division
  nameWithType.vb: Density(Of T).Division
- uid: Towel.Measurements.Density`1.op_Equality(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Equality(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Equality_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Equality(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Equality(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Equality(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Equality(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Equality(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Equality(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Equality_
  commentId: Overload:Towel.Measurements.Density`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Equality
  fullName.vb: Towel.Measurements.Density(Of T).Equality
  nameWithType: Density<T>.Equality
  nameWithType.vb: Density(Of T).Equality
- uid: Towel.Measurements.Density`1.op_GreaterThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: GreaterThan(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_GreaterThan_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_GreaterThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: GreaterThan(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThan(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThan(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThan(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).GreaterThan(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Density`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.GreaterThan
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThan
  nameWithType: Density<T>.GreaterThan
  nameWithType.vb: Density(Of T).GreaterThan
- uid: Towel.Measurements.Density`1.op_GreaterThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: GreaterThanOrEqual(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_GreaterThanOrEqual_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_GreaterThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: GreaterThanOrEqual(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.GreaterThanOrEqual(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThanOrEqual(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.GreaterThanOrEqual(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).GreaterThanOrEqual(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Density`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Density(Of T).GreaterThanOrEqual
  nameWithType: Density<T>.GreaterThanOrEqual
  nameWithType.vb: Density(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Density`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits})~Towel.Measurements.Density{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.DensityBaseUnits) to Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits___Towel_Measurements_Density__0_
  commentId: M:Towel.Measurements.Density`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits})~Towel.Measurements.Density{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.DensityBaseUnits) to Density(Of T))
  fullName: Towel.Measurements.Density<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits> to Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits) to Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Implicit((T, MeasurementUnitsSyntaxTypes.DensityBaseUnits) to Density<T>)
  nameWithType.vb: Density(Of T).Widening((T, MeasurementUnitsSyntaxTypes.DensityBaseUnits) to Density(Of T))
- uid: Towel.Measurements.Density`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Density`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Density<T>.Implicit
  fullName.vb: Towel.Measurements.Density(Of T).Widening
  nameWithType: Density<T>.Implicit
  nameWithType.vb: Density(Of T).Widening
- uid: Towel.Measurements.Density`1.op_Inequality(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Inequality(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Inequality_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Inequality(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Inequality(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Inequality(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Inequality(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Inequality(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Inequality(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Density`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Inequality
  fullName.vb: Towel.Measurements.Density(Of T).Inequality
  nameWithType: Density<T>.Inequality
  nameWithType.vb: Density(Of T).Inequality
- uid: Towel.Measurements.Density`1.op_LessThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: LessThan(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_LessThan_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_LessThan(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: LessThan(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThan(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThan(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThan(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).LessThan(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Density`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LessThan
  fullName.vb: Towel.Measurements.Density(Of T).LessThan
  nameWithType: Density<T>.LessThan
  nameWithType.vb: Density(Of T).LessThan
- uid: Towel.Measurements.Density`1.op_LessThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: LessThanOrEqual(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_LessThanOrEqual_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_LessThanOrEqual(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: LessThanOrEqual(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.LessThanOrEqual(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).LessThanOrEqual(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.LessThanOrEqual(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).LessThanOrEqual(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Density`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Density(Of T).LessThanOrEqual
  nameWithType: Density<T>.LessThanOrEqual
  nameWithType.vb: Density(Of T).LessThanOrEqual
- uid: Towel.Measurements.Density`1.op_Multiply(`0,Towel.Measurements.Density{`0})
  name: Multiply(T, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply__0_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Multiply(`0,Towel.Measurements.Density{`0})
  name.vb: Multiply(T, Density(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(T, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(T, Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Multiply(T, Density<T>)
  nameWithType.vb: Density(Of T).Multiply(T, Density(Of T))
- uid: Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},`0)
  name: Multiply(Density<T>, T)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_Towel_Measurements_Density__0___0_
  commentId: M:Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},`0)
  name.vb: Multiply(Density(Of T), T)
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, T)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), T)
  nameWithType: Density<T>.Multiply(Density<T>, T)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), T)
- uid: Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Area{`0})
  name: Multiply(Density<T>, Area<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Density(Of T), Area(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Area<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Area(Of T))
- uid: Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Length{`0})
  name: Multiply(Density<T>, Length<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Density(Of T), Length(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Length<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Length(Of T))
- uid: Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Volume{`0})
  name: Multiply(Density<T>, Volume<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_Towel_Measurements_Density__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(Density(Of T), Volume(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, Volume<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), Volume(Of T))
- uid: Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Density<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_Towel_Measurements_Density__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Density`1.op_Multiply(Towel.Measurements.Density{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Density(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Density<T>.Multiply(Towel.Measurements.Density<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Multiply(Towel.Measurements.Density(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Density<T>.Multiply(Density<T>, VolumeRate<T>)
  nameWithType.vb: Density(Of T).Multiply(Density(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Density`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Density`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Multiply
  fullName.vb: Towel.Measurements.Density(Of T).Multiply
  nameWithType: Density<T>.Multiply
  nameWithType.vb: Density(Of T).Multiply
- uid: Towel.Measurements.Density`1.op_Subtraction(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Subtraction(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Subtraction_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.op_Subtraction(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Subtraction(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Subtraction(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Subtraction(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Subtraction(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Subtraction(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Density`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Subtraction
  fullName.vb: Towel.Measurements.Density(Of T).Subtraction
  nameWithType: Density<T>.Subtraction
  nameWithType.vb: Density(Of T).Subtraction
- uid: Towel.Measurements.Density`1.Subtract(Towel.Measurements.Density{`0})
  name: Subtract(Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Subtract_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Subtract(Towel.Measurements.Density{`0})
  name.vb: Subtract(Density(Of T))
  fullName: Towel.Measurements.Density<T>.Subtract(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Subtract(Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Subtract(Density<T>)
  nameWithType.vb: Density(Of T).Subtract(Density(Of T))
- uid: Towel.Measurements.Density`1.Subtract(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name: Subtract(Density<T>, Density<T>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Subtract_Towel_Measurements_Density__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Density`1.Subtract(Towel.Measurements.Density{`0},Towel.Measurements.Density{`0})
  name.vb: Subtract(Density(Of T), Density(Of T))
  fullName: Towel.Measurements.Density<T>.Subtract(Towel.Measurements.Density<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Density(Of T).Subtract(Towel.Measurements.Density(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Density<T>.Subtract(Density<T>, Density<T>)
  nameWithType.vb: Density(Of T).Subtract(Density(Of T), Density(Of T))
- uid: Towel.Measurements.Density`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_Subtract_
  commentId: Overload:Towel.Measurements.Density`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.Subtract
  fullName.vb: Towel.Measurements.Density(Of T).Subtract
  nameWithType: Density<T>.Subtract
  nameWithType.vb: Density(Of T).Subtract
- uid: Towel.Measurements.Density`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_ToString
  commentId: M:Towel.Measurements.Density`1.ToString
  fullName: Towel.Measurements.Density<T>.ToString()
  fullName.vb: Towel.Measurements.Density(Of T).ToString()
  nameWithType: Density<T>.ToString()
  nameWithType.vb: Density(Of T).ToString()
- uid: Towel.Measurements.Density`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_ToString_
  commentId: Overload:Towel.Measurements.Density`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.ToString
  fullName.vb: Towel.Measurements.Density(Of T).ToString
  nameWithType: Density<T>.ToString
  nameWithType.vb: Density(Of T).ToString
- uid: Towel.Measurements.Density`1.TryParse(System.String,Towel.Measurements.Density{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Density<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_TryParse_System_String_Towel_Measurements_Density__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Density`1.TryParse(System.String,Towel.Measurements.Density{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Density(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Density<T>.TryParse(System.String, out Towel.Measurements.Density<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Density(Of T).TryParse(System.String, ByRef Towel.Measurements.Density(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Density<T>.TryParse(String, out Density<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Density(Of T).TryParse(String, ByRef Density(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Density`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Density-1.html#Towel_Measurements_Density_1_TryParse_
  commentId: Overload:Towel.Measurements.Density`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Density<T>.TryParse
  fullName.vb: Towel.Measurements.Density(Of T).TryParse
  nameWithType: Density<T>.TryParse
  nameWithType.vb: Density(Of T).TryParse
- uid: Towel.Measurements.ElectricCharge
  name: ElectricCharge
  href: api/Towel.Measurements.ElectricCharge.html
  commentId: T:Towel.Measurements.ElectricCharge
  fullName: Towel.Measurements.ElectricCharge
  nameWithType: ElectricCharge
- uid: Towel.Measurements.ElectricCharge.Units
  name: ElectricCharge.Units
  href: api/Towel.Measurements.ElectricCharge.Units.html
  commentId: T:Towel.Measurements.ElectricCharge.Units
  fullName: Towel.Measurements.ElectricCharge.Units
  nameWithType: ElectricCharge.Units
- uid: Towel.Measurements.ElectricCharge.Units.Attocoulombs
  name: Attocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Attocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Attocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Attocoulombs
  nameWithType: ElectricCharge.Units.Attocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Centicoulombs
  name: Centicoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Centicoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Centicoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Centicoulombs
  nameWithType: ElectricCharge.Units.Centicoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Coulombs
  name: Coulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Coulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Coulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Coulombs
  nameWithType: ElectricCharge.Units.Coulombs
- uid: Towel.Measurements.ElectricCharge.Units.Decicoulombs
  name: Decicoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Decicoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Decicoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Decicoulombs
  nameWithType: ElectricCharge.Units.Decicoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Dekacoulombs
  name: Dekacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Dekacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Dekacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Dekacoulombs
  nameWithType: ElectricCharge.Units.Dekacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Exacoulombs
  name: Exacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Exacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Exacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Exacoulombs
  nameWithType: ElectricCharge.Units.Exacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Femtocoulombs
  name: Femtocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Femtocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Femtocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Femtocoulombs
  nameWithType: ElectricCharge.Units.Femtocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Gigacoulombs
  name: Gigacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Gigacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Gigacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Gigacoulombs
  nameWithType: ElectricCharge.Units.Gigacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Hectocoulombs
  name: Hectocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Hectocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Hectocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Hectocoulombs
  nameWithType: ElectricCharge.Units.Hectocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Kilocoulombs
  name: Kilocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Kilocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Kilocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Kilocoulombs
  nameWithType: ElectricCharge.Units.Kilocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Megacoulombs
  name: Megacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Megacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Megacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Megacoulombs
  nameWithType: ElectricCharge.Units.Megacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Microcoulombs
  name: Microcoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Microcoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Microcoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Microcoulombs
  nameWithType: ElectricCharge.Units.Microcoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Millicoulombs
  name: Millicoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Millicoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Millicoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Millicoulombs
  nameWithType: ElectricCharge.Units.Millicoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Nanocoulombs
  name: Nanocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Nanocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Nanocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Nanocoulombs
  nameWithType: ElectricCharge.Units.Nanocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Petacoulombs
  name: Petacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Petacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Petacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Petacoulombs
  nameWithType: ElectricCharge.Units.Petacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Picocoulombs
  name: Picocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Picocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Picocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Picocoulombs
  nameWithType: ElectricCharge.Units.Picocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Teracoulombs
  name: Teracoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Teracoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Teracoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Teracoulombs
  nameWithType: ElectricCharge.Units.Teracoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Yoctocoulombs
  name: Yoctocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Yoctocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Yoctocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Yoctocoulombs
  nameWithType: ElectricCharge.Units.Yoctocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Yottacoulombs
  name: Yottacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Yottacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Yottacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Yottacoulombs
  nameWithType: ElectricCharge.Units.Yottacoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Zeptocoulombs
  name: Zeptocoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Zeptocoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Zeptocoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Zeptocoulombs
  nameWithType: ElectricCharge.Units.Zeptocoulombs
- uid: Towel.Measurements.ElectricCharge.Units.Zettacoulombs
  name: Zettacoulombs
  href: api/Towel.Measurements.ElectricCharge.Units.html#Towel_Measurements_ElectricCharge_Units_Zettacoulombs
  commentId: F:Towel.Measurements.ElectricCharge.Units.Zettacoulombs
  fullName: Towel.Measurements.ElectricCharge.Units.Zettacoulombs
  nameWithType: ElectricCharge.Units.Zettacoulombs
- uid: Towel.Measurements.ElectricCharge`1
  name: ElectricCharge<T>
  href: api/Towel.Measurements.ElectricCharge-1.html
  commentId: T:Towel.Measurements.ElectricCharge`1
  name.vb: ElectricCharge(Of T)
  fullName: Towel.Measurements.ElectricCharge<T>
  fullName.vb: Towel.Measurements.ElectricCharge(Of T)
  nameWithType: ElectricCharge<T>
  nameWithType.vb: ElectricCharge(Of T)
- uid: Towel.Measurements.ElectricCharge`1.#ctor(`0,Towel.Measurements.ElectricCharge.Units)
  name: ElectricCharge(T, ElectricCharge.Units)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1__ctor__0_Towel_Measurements_ElectricCharge_Units_
  commentId: M:Towel.Measurements.ElectricCharge`1.#ctor(`0,Towel.Measurements.ElectricCharge.Units)
  fullName: Towel.Measurements.ElectricCharge<T>.ElectricCharge(T, Towel.Measurements.ElectricCharge.Units)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ElectricCharge(T, Towel.Measurements.ElectricCharge.Units)
  nameWithType: ElectricCharge<T>.ElectricCharge(T, ElectricCharge.Units)
  nameWithType.vb: ElectricCharge(Of T).ElectricCharge(T, ElectricCharge.Units)
- uid: Towel.Measurements.ElectricCharge`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name: ElectricCharge(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_
  commentId: M:Towel.Measurements.ElectricCharge`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName: Towel.Measurements.ElectricCharge<T>.ElectricCharge(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ElectricCharge(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType: ElectricCharge<T>.ElectricCharge(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType.vb: ElectricCharge(Of T).ElectricCharge(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
- uid: Towel.Measurements.ElectricCharge`1.#ctor*
  name: ElectricCharge
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1__ctor_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.ElectricCharge
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ElectricCharge
  nameWithType: ElectricCharge<T>.ElectricCharge
  nameWithType.vb: ElectricCharge(Of T).ElectricCharge
- uid: Towel.Measurements.ElectricCharge`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Add__0_
  commentId: M:Towel.Measurements.ElectricCharge`1.Add(`0)
  fullName: Towel.Measurements.ElectricCharge<T>.Add(T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Add(T)
  nameWithType: ElectricCharge<T>.Add(T)
  nameWithType.vb: ElectricCharge(Of T).Add(T)
- uid: Towel.Measurements.ElectricCharge`1.Add(Towel.Measurements.ElectricCharge{`0})
  name: Add(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Add_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Add(Towel.Measurements.ElectricCharge{`0})
  name.vb: Add(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Add(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Add(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Add(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Add(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Add(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Add(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Add_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Add(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Add(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Add(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Add(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Add(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Add(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Add*
  name: Add
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Add_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Add
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Add
  nameWithType: ElectricCharge<T>.Add
  nameWithType.vb: ElectricCharge(Of T).Add
- uid: Towel.Measurements.ElectricCharge`1.Convert(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.ElectricCharge.Units)
  name: Convert(T, ElectricCharge.Units, ElectricCharge.Units)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Convert__0_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_ElectricCharge_Units_
  commentId: M:Towel.Measurements.ElectricCharge`1.Convert(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.ElectricCharge.Units)
  fullName: Towel.Measurements.ElectricCharge<T>.Convert(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.ElectricCharge.Units)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Convert(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.ElectricCharge.Units)
  nameWithType: ElectricCharge<T>.Convert(T, ElectricCharge.Units, ElectricCharge.Units)
  nameWithType.vb: ElectricCharge(Of T).Convert(T, ElectricCharge.Units, ElectricCharge.Units)
- uid: Towel.Measurements.ElectricCharge`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_
  commentId: M:Towel.Measurements.ElectricCharge`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName: Towel.Measurements.ElectricCharge<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType: ElectricCharge<T>.Convert(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType.vb: ElectricCharge(Of T).Convert(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
- uid: Towel.Measurements.ElectricCharge`1.Convert*
  name: Convert
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Convert_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Convert
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Convert
  nameWithType: ElectricCharge<T>.Convert
  nameWithType.vb: ElectricCharge(Of T).Convert
- uid: Towel.Measurements.ElectricCharge`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide__0_
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(`0)
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(T)
  nameWithType: ElectricCharge<T>.Divide(T)
  nameWithType.vb: ElectricCharge(Of T).Divide(T)
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0})
  name: Divide(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0})
  name.vb: Divide(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Divide(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},`0)
  name: Divide(ElectricCharge<T>, T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCharge__0___0_
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},`0)
  name.vb: Divide(ElectricCharge(Of T), T)
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCharge<T>, T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCharge(Of T), T)
  nameWithType: ElectricCharge<T>.Divide(ElectricCharge<T>, T)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCharge(Of T), T)
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Divide(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Divide(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Divide(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Divide(ElectricCharge<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Divide(ElectricCharge(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCharge<T>.Divide(ElectricCharge<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCharge(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.Time{`0})
  name: Divide(ElectricCharge<T>, Time<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCharge__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(ElectricCharge(Of T), Time(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.Time(Of T))
  nameWithType: ElectricCharge<T>.Divide(ElectricCharge<T>, Time<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCharge(Of T), Time(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCurrent{`0})
  name: Divide(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Divide(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCharge<T>.Divide(ElectricCurrent<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: ElectricCharge<T>.Divide(Time<T>)
  nameWithType.vb: ElectricCharge(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Divide*
  name: Divide
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Divide_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Divide
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Divide
  nameWithType: ElectricCharge<T>.Divide
  nameWithType.vb: ElectricCharge(Of T).Divide
- uid: Towel.Measurements.ElectricCharge`1.ElectricChargeUnits1
  name: ElectricChargeUnits1
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_ElectricChargeUnits1
  commentId: P:Towel.Measurements.ElectricCharge`1.ElectricChargeUnits1
  fullName: Towel.Measurements.ElectricCharge<T>.ElectricChargeUnits1
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ElectricChargeUnits1
  nameWithType: ElectricCharge<T>.ElectricChargeUnits1
  nameWithType.vb: ElectricCharge(Of T).ElectricChargeUnits1
- uid: Towel.Measurements.ElectricCharge`1.ElectricChargeUnits1*
  name: ElectricChargeUnits1
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_ElectricChargeUnits1_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.ElectricChargeUnits1
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.ElectricChargeUnits1
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ElectricChargeUnits1
  nameWithType: ElectricCharge<T>.ElectricChargeUnits1
  nameWithType.vb: ElectricCharge(Of T).ElectricChargeUnits1
- uid: Towel.Measurements.ElectricCharge`1.Equal(Towel.Measurements.ElectricCharge{`0})
  name: Equal(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Equal_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Equal(Towel.Measurements.ElectricCharge{`0})
  name.vb: Equal(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Equal(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equal(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Equal(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Equal(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Equal(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Equal(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Equal_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Equal(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Equal(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Equal(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equal(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Equal(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Equal(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Equal*
  name: Equal
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Equal_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Equal
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equal
  nameWithType: ElectricCharge<T>.Equal
  nameWithType.vb: ElectricCharge(Of T).Equal
- uid: Towel.Measurements.ElectricCharge`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Equals_System_Object_
  commentId: M:Towel.Measurements.ElectricCharge`1.Equals(System.Object)
  fullName: Towel.Measurements.ElectricCharge<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equals(System.Object)
  nameWithType: ElectricCharge<T>.Equals(Object)
  nameWithType.vb: ElectricCharge(Of T).Equals(Object)
- uid: Towel.Measurements.ElectricCharge`1.Equals*
  name: Equals
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Equals_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Equals
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equals
  nameWithType: ElectricCharge<T>.Equals
  nameWithType.vb: ElectricCharge(Of T).Equals
- uid: Towel.Measurements.ElectricCharge`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GetHashCode
  commentId: M:Towel.Measurements.ElectricCharge`1.GetHashCode
  fullName: Towel.Measurements.ElectricCharge<T>.GetHashCode()
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GetHashCode()
  nameWithType: ElectricCharge<T>.GetHashCode()
  nameWithType.vb: ElectricCharge(Of T).GetHashCode()
- uid: Towel.Measurements.ElectricCharge`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GetHashCode_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.GetHashCode
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GetHashCode
  nameWithType: ElectricCharge<T>.GetHashCode
  nameWithType.vb: ElectricCharge(Of T).GetHashCode
- uid: Towel.Measurements.ElectricCharge`1.GreaterThan(Towel.Measurements.ElectricCharge{`0})
  name: GreaterThan(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThan_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.GreaterThan(Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThan(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThan(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThan(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThan(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThan(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.GreaterThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: GreaterThan(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThan_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.GreaterThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThan(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThan(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThan(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThan(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThan(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThan_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThan
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThan
  nameWithType: ElectricCharge<T>.GreaterThan
  nameWithType.vb: ElectricCharge(Of T).GreaterThan
- uid: Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0})
  name: GreaterThanOrEqual(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThanOrEqual_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThanOrEqual(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThanOrEqual(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThanOrEqual(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: GreaterThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThanOrEqual_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThanOrEqual
  nameWithType: ElectricCharge<T>.GreaterThanOrEqual
  nameWithType.vb: ElectricCharge(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.ElectricCharge`1.Item(Towel.Measurements.ElectricCharge.Units)
  name: Item[ElectricCharge.Units]
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Item_Towel_Measurements_ElectricCharge_Units_
  commentId: P:Towel.Measurements.ElectricCharge`1.Item(Towel.Measurements.ElectricCharge.Units)
  name.vb: Item(ElectricCharge.Units)
  fullName: Towel.Measurements.ElectricCharge<T>.Item[Towel.Measurements.ElectricCharge.Units]
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Item(Towel.Measurements.ElectricCharge.Units)
  nameWithType: ElectricCharge<T>.Item[ElectricCharge.Units]
  nameWithType.vb: ElectricCharge(Of T).Item(ElectricCharge.Units)
- uid: Towel.Measurements.ElectricCharge`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name: Item[MeasurementUnitsSyntaxTypes.ElectricChargeUnits]
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_
  commentId: P:Towel.Measurements.ElectricCharge`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName: Towel.Measurements.ElectricCharge<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits]
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType: ElectricCharge<T>.Item[MeasurementUnitsSyntaxTypes.ElectricChargeUnits]
  nameWithType.vb: ElectricCharge(Of T).Item(MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
- uid: Towel.Measurements.ElectricCharge`1.Item*
  name: Item
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Item_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Item
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Item
  nameWithType: ElectricCharge<T>.Item
  nameWithType.vb: ElectricCharge(Of T).Item
- uid: Towel.Measurements.ElectricCharge`1.LessThan(Towel.Measurements.ElectricCharge{`0})
  name: LessThan(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThan_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.LessThan(Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThan(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThan(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThan(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThan(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThan(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.LessThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: LessThan(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThan_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.LessThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThan(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThan(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThan(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThan(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThan(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThan_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.LessThan
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThan
  nameWithType: ElectricCharge<T>.LessThan
  nameWithType.vb: ElectricCharge(Of T).LessThan
- uid: Towel.Measurements.ElectricCharge`1.LessThanOrEqual(Towel.Measurements.ElectricCharge{`0})
  name: LessThanOrEqual(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThanOrEqual_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.LessThanOrEqual(Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThanOrEqual(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThanOrEqual(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThanOrEqual(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThanOrEqual(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThanOrEqual(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.LessThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: LessThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThanOrEqual_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.LessThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThanOrEqual(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThanOrEqual(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThanOrEqual
  nameWithType: ElectricCharge<T>.LessThanOrEqual
  nameWithType.vb: ElectricCharge(Of T).LessThanOrEqual
- uid: Towel.Measurements.ElectricCharge`1.Multiply(`0,Towel.Measurements.ElectricCharge{`0})
  name: Multiply(T, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Multiply__0_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Multiply(`0,Towel.Measurements.ElectricCharge{`0})
  name.vb: Multiply(T, ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply(T, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply(T, Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Multiply(T, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Multiply(T, ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Multiply(Towel.Measurements.ElectricCharge{`0},`0)
  name: Multiply(ElectricCharge<T>, T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Multiply_Towel_Measurements_ElectricCharge__0___0_
  commentId: M:Towel.Measurements.ElectricCharge`1.Multiply(Towel.Measurements.ElectricCharge{`0},`0)
  name.vb: Multiply(ElectricCharge(Of T), T)
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply(Towel.Measurements.ElectricCharge<T>, T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply(Towel.Measurements.ElectricCharge(Of T), T)
  nameWithType: ElectricCharge<T>.Multiply(ElectricCharge<T>, T)
  nameWithType.vb: ElectricCharge(Of T).Multiply(ElectricCharge(Of T), T)
- uid: Towel.Measurements.ElectricCharge`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Multiply_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply
  nameWithType: ElectricCharge<T>.Multiply
  nameWithType.vb: ElectricCharge(Of T).Multiply
- uid: Towel.Measurements.ElectricCharge`1.NotEqual(Towel.Measurements.ElectricCharge{`0})
  name: NotEqual(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_NotEqual_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.NotEqual(Towel.Measurements.ElectricCharge{`0})
  name.vb: NotEqual(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.NotEqual(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).NotEqual(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.NotEqual(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).NotEqual(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.NotEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: NotEqual(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_NotEqual_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.NotEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: NotEqual(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.NotEqual(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).NotEqual(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.NotEqual(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).NotEqual(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_NotEqual_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.NotEqual
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).NotEqual
  nameWithType: ElectricCharge<T>.NotEqual
  nameWithType.vb: ElectricCharge(Of T).NotEqual
- uid: Towel.Measurements.ElectricCharge`1.op_Addition(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Addition(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Addition_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Addition(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Addition(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Addition(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Addition(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Addition(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Addition(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Addition_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Addition
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Addition
  nameWithType: ElectricCharge<T>.Addition
  nameWithType.vb: ElectricCharge(Of T).Addition
- uid: Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},`0)
  name: Division(ElectricCharge<T>, T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Division_Towel_Measurements_ElectricCharge__0___0_
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},`0)
  name.vb: Division(ElectricCharge(Of T), T)
  fullName: Towel.Measurements.ElectricCharge<T>.Division(Towel.Measurements.ElectricCharge<T>, T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Division(Towel.Measurements.ElectricCharge(Of T), T)
  nameWithType: ElectricCharge<T>.Division(ElectricCharge<T>, T)
  nameWithType.vb: ElectricCharge(Of T).Division(ElectricCharge(Of T), T)
- uid: Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Division(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Division_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Division(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Division(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Division(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Division(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Division(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Division(ElectricCharge<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Division_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Division(ElectricCharge(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Division(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Division(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCharge<T>.Division(ElectricCharge<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCharge(Of T).Division(ElectricCharge(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.Time{`0})
  name: Division(ElectricCharge<T>, Time<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Division_Towel_Measurements_ElectricCharge__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Division(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.Time{`0})
  name.vb: Division(ElectricCharge(Of T), Time(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Division(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Division(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.Time(Of T))
  nameWithType: ElectricCharge<T>.Division(ElectricCharge<T>, Time<T>)
  nameWithType.vb: ElectricCharge(Of T).Division(ElectricCharge(Of T), Time(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Division*
  name: Division
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Division_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Division
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Division
  nameWithType: ElectricCharge<T>.Division
  nameWithType.vb: ElectricCharge(Of T).Division
- uid: Towel.Measurements.ElectricCharge`1.op_Equality(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Equality(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Equality_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Equality(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Equality(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Equality(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equality(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Equality(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Equality(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Equality_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Equality
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Equality
  nameWithType: ElectricCharge<T>.Equality
  nameWithType.vb: ElectricCharge(Of T).Equality
- uid: Towel.Measurements.ElectricCharge`1.op_GreaterThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: GreaterThan(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_GreaterThan_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_GreaterThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThan(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThan(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThan(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThan(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThan(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThan
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThan
  nameWithType: ElectricCharge<T>.GreaterThan
  nameWithType.vb: ElectricCharge(Of T).GreaterThan
- uid: Towel.Measurements.ElectricCharge`1.op_GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: GreaterThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_GreaterThanOrEqual_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_GreaterThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: GreaterThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.GreaterThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).GreaterThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).GreaterThanOrEqual
  nameWithType: ElectricCharge<T>.GreaterThanOrEqual
  nameWithType.vb: ElectricCharge(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.ElectricCharge`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits})~Towel.Measurements.ElectricCharge{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits) to ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits___Towel_Measurements_ElectricCharge__0_
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits})~Towel.Measurements.ElectricCharge{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits) to ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits> to Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits) to Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Implicit((T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits) to ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Widening((T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits) to ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Implicit_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.ElectricCharge<T>.Implicit
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Widening
  nameWithType: ElectricCharge<T>.Implicit
  nameWithType.vb: ElectricCharge(Of T).Widening
- uid: Towel.Measurements.ElectricCharge`1.op_Inequality(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Inequality(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Inequality_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Inequality(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Inequality(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Inequality(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Inequality(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Inequality(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Inequality(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Inequality_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Inequality
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Inequality
  nameWithType: ElectricCharge<T>.Inequality
  nameWithType.vb: ElectricCharge(Of T).Inequality
- uid: Towel.Measurements.ElectricCharge`1.op_LessThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: LessThan(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_LessThan_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_LessThan(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThan(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThan(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThan(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThan(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThan(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_LessThan_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.LessThan
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThan
  nameWithType: ElectricCharge<T>.LessThan
  nameWithType.vb: ElectricCharge(Of T).LessThan
- uid: Towel.Measurements.ElectricCharge`1.op_LessThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: LessThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_LessThanOrEqual_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_LessThanOrEqual(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: LessThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.LessThanOrEqual(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThanOrEqual(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.LessThanOrEqual(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).LessThanOrEqual(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).LessThanOrEqual
  nameWithType: ElectricCharge<T>.LessThanOrEqual
  nameWithType.vb: ElectricCharge(Of T).LessThanOrEqual
- uid: Towel.Measurements.ElectricCharge`1.op_Multiply(`0,Towel.Measurements.ElectricCharge{`0})
  name: Multiply(T, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Multiply__0_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Multiply(`0,Towel.Measurements.ElectricCharge{`0})
  name.vb: Multiply(T, ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply(T, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply(T, Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Multiply(T, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Multiply(T, ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Multiply(Towel.Measurements.ElectricCharge{`0},`0)
  name: Multiply(ElectricCharge<T>, T)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Multiply_Towel_Measurements_ElectricCharge__0___0_
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Multiply(Towel.Measurements.ElectricCharge{`0},`0)
  name.vb: Multiply(ElectricCharge(Of T), T)
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply(Towel.Measurements.ElectricCharge<T>, T)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply(Towel.Measurements.ElectricCharge(Of T), T)
  nameWithType: ElectricCharge<T>.Multiply(ElectricCharge<T>, T)
  nameWithType.vb: ElectricCharge(Of T).Multiply(ElectricCharge(Of T), T)
- uid: Towel.Measurements.ElectricCharge`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Multiply_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Multiply
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Multiply
  nameWithType: ElectricCharge<T>.Multiply
  nameWithType.vb: ElectricCharge(Of T).Multiply
- uid: Towel.Measurements.ElectricCharge`1.op_Subtraction(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Subtraction(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Subtraction_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.op_Subtraction(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Subtraction(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Subtraction(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Subtraction(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Subtraction(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Subtraction(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Subtraction
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Subtraction
  nameWithType: ElectricCharge<T>.Subtraction
  nameWithType.vb: ElectricCharge(Of T).Subtraction
- uid: Towel.Measurements.ElectricCharge`1.Subtract(Towel.Measurements.ElectricCharge{`0})
  name: Subtract(ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Subtract_Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Subtract(Towel.Measurements.ElectricCharge{`0})
  name.vb: Subtract(ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Subtract(Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Subtract(Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Subtract(ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Subtract(ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Subtract(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name: Subtract(ElectricCharge<T>, ElectricCharge<T>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Subtract_Towel_Measurements_ElectricCharge__0__Towel_Measurements_ElectricCharge__0__
  commentId: M:Towel.Measurements.ElectricCharge`1.Subtract(Towel.Measurements.ElectricCharge{`0},Towel.Measurements.ElectricCharge{`0})
  name.vb: Subtract(ElectricCharge(Of T), ElectricCharge(Of T))
  fullName: Towel.Measurements.ElectricCharge<T>.Subtract(Towel.Measurements.ElectricCharge<T>, Towel.Measurements.ElectricCharge<T>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Subtract(Towel.Measurements.ElectricCharge(Of T), Towel.Measurements.ElectricCharge(Of T))
  nameWithType: ElectricCharge<T>.Subtract(ElectricCharge<T>, ElectricCharge<T>)
  nameWithType.vb: ElectricCharge(Of T).Subtract(ElectricCharge(Of T), ElectricCharge(Of T))
- uid: Towel.Measurements.ElectricCharge`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_Subtract_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.Subtract
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).Subtract
  nameWithType: ElectricCharge<T>.Subtract
  nameWithType.vb: ElectricCharge(Of T).Subtract
- uid: Towel.Measurements.ElectricCharge`1.ToString
  name: ToString()
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_ToString
  commentId: M:Towel.Measurements.ElectricCharge`1.ToString
  fullName: Towel.Measurements.ElectricCharge<T>.ToString()
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ToString()
  nameWithType: ElectricCharge<T>.ToString()
  nameWithType.vb: ElectricCharge(Of T).ToString()
- uid: Towel.Measurements.ElectricCharge`1.ToString*
  name: ToString
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_ToString_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.ToString
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).ToString
  nameWithType: ElectricCharge<T>.ToString
  nameWithType.vb: ElectricCharge(Of T).ToString
- uid: Towel.Measurements.ElectricCharge`1.TryParse(System.String,Towel.Measurements.ElectricCharge{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out ElectricCharge<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_TryParse_System_String_Towel_Measurements_ElectricCharge__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.ElectricCharge`1.TryParse(System.String,Towel.Measurements.ElectricCharge{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef ElectricCharge(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.ElectricCharge<T>.TryParse(System.String, out Towel.Measurements.ElectricCharge<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).TryParse(System.String, ByRef Towel.Measurements.ElectricCharge(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: ElectricCharge<T>.TryParse(String, out ElectricCharge<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: ElectricCharge(Of T).TryParse(String, ByRef ElectricCharge(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.ElectricCharge`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.ElectricCharge-1.html#Towel_Measurements_ElectricCharge_1_TryParse_
  commentId: Overload:Towel.Measurements.ElectricCharge`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCharge<T>.TryParse
  fullName.vb: Towel.Measurements.ElectricCharge(Of T).TryParse
  nameWithType: ElectricCharge<T>.TryParse
  nameWithType.vb: ElectricCharge(Of T).TryParse
- uid: Towel.Measurements.ElectricCurrent`1
  name: ElectricCurrent<T>
  href: api/Towel.Measurements.ElectricCurrent-1.html
  commentId: T:Towel.Measurements.ElectricCurrent`1
  name.vb: ElectricCurrent(Of T)
  fullName: Towel.Measurements.ElectricCurrent<T>
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T)
  nameWithType: ElectricCurrent<T>
  nameWithType.vb: ElectricCurrent(Of T)
- uid: Towel.Measurements.ElectricCurrent`1.#ctor(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  name: ElectricCurrent(T, ElectricCharge.Units, Time.Units)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1__ctor__0_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.ElectricCurrent`1.#ctor(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.ElectricCurrent<T>.ElectricCurrent(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ElectricCurrent(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  nameWithType: ElectricCurrent<T>.ElectricCurrent(T, ElectricCharge.Units, Time.Units)
  nameWithType.vb: ElectricCurrent(Of T).ElectricCurrent(T, ElectricCharge.Units, Time.Units)
- uid: Towel.Measurements.ElectricCurrent`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name: ElectricCurrent(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_
  commentId: M:Towel.Measurements.ElectricCurrent`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName: Towel.Measurements.ElectricCurrent<T>.ElectricCurrent(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ElectricCurrent(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType: ElectricCurrent<T>.ElectricCurrent(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType.vb: ElectricCurrent(Of T).ElectricCurrent(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
- uid: Towel.Measurements.ElectricCurrent`1.#ctor*
  name: ElectricCurrent
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1__ctor_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.ElectricCurrent
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ElectricCurrent
  nameWithType: ElectricCurrent<T>.ElectricCurrent
  nameWithType.vb: ElectricCurrent(Of T).ElectricCurrent
- uid: Towel.Measurements.ElectricCurrent`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Add__0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Add(`0)
  fullName: Towel.Measurements.ElectricCurrent<T>.Add(T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Add(T)
  nameWithType: ElectricCurrent<T>.Add(T)
  nameWithType.vb: ElectricCurrent(Of T).Add(T)
- uid: Towel.Measurements.ElectricCurrent`1.Add(Towel.Measurements.ElectricCurrent{`0})
  name: Add(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Add_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Add(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Add(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Add(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Add(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Add(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Add(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Add(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Add(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Add_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Add(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Add(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Add(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Add(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Add(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Add(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Add*
  name: Add
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Add_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Add
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Add
  nameWithType: ElectricCurrent<T>.Add
  nameWithType.vb: ElectricCurrent(Of T).Add
- uid: Towel.Measurements.ElectricCurrent`1.Convert(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  name: Convert(T, ElectricCharge.Units, Time.Units, ElectricCharge.Units, Time.Units)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Convert__0_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_Time_Units_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Convert(`0,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units,Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.ElectricCurrent<T>.Convert(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Convert(T, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units, Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  nameWithType: ElectricCurrent<T>.Convert(T, ElectricCharge.Units, Time.Units, ElectricCharge.Units, Time.Units)
  nameWithType.vb: ElectricCurrent(Of T).Convert(T, ElectricCharge.Units, Time.Units, ElectricCharge.Units, Time.Units)
- uid: Towel.Measurements.ElectricCurrent`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName: Towel.Measurements.ElectricCurrent<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType: ElectricCurrent<T>.Convert(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType.vb: ElectricCurrent(Of T).Convert(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
- uid: Towel.Measurements.ElectricCurrent`1.Convert*
  name: Convert
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Convert_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Convert
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Convert
  nameWithType: ElectricCurrent<T>.Convert
  nameWithType.vb: ElectricCurrent(Of T).Convert
- uid: Towel.Measurements.ElectricCurrent`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Divide__0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Divide(`0)
  fullName: Towel.Measurements.ElectricCurrent<T>.Divide(T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Divide(T)
  nameWithType: ElectricCurrent<T>.Divide(T)
  nameWithType.vb: ElectricCurrent(Of T).Divide(T)
- uid: Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0})
  name: Divide(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Divide_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Divide(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Divide(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Divide(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Divide(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Divide(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0},`0)
  name: Divide(ElectricCurrent<T>, T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Divide_Towel_Measurements_ElectricCurrent__0___0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0},`0)
  name.vb: Divide(ElectricCurrent(Of T), T)
  fullName: Towel.Measurements.ElectricCurrent<T>.Divide(Towel.Measurements.ElectricCurrent<T>, T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Divide(Towel.Measurements.ElectricCurrent(Of T), T)
  nameWithType: ElectricCurrent<T>.Divide(ElectricCurrent<T>, T)
  nameWithType.vb: ElectricCurrent(Of T).Divide(ElectricCurrent(Of T), T)
- uid: Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Divide(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Divide_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Divide(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Divide(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Divide(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Divide(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Divide(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Divide(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Divide*
  name: Divide
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Divide_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Divide
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Divide
  nameWithType: ElectricCurrent<T>.Divide
  nameWithType.vb: ElectricCurrent(Of T).Divide
- uid: Towel.Measurements.ElectricCurrent`1.ElectricChargeUnits1
  name: ElectricChargeUnits1
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_ElectricChargeUnits1
  commentId: P:Towel.Measurements.ElectricCurrent`1.ElectricChargeUnits1
  fullName: Towel.Measurements.ElectricCurrent<T>.ElectricChargeUnits1
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ElectricChargeUnits1
  nameWithType: ElectricCurrent<T>.ElectricChargeUnits1
  nameWithType.vb: ElectricCurrent(Of T).ElectricChargeUnits1
- uid: Towel.Measurements.ElectricCurrent`1.ElectricChargeUnits1*
  name: ElectricChargeUnits1
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_ElectricChargeUnits1_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.ElectricChargeUnits1
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.ElectricChargeUnits1
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ElectricChargeUnits1
  nameWithType: ElectricCurrent<T>.ElectricChargeUnits1
  nameWithType.vb: ElectricCurrent(Of T).ElectricChargeUnits1
- uid: Towel.Measurements.ElectricCurrent`1.Equal(Towel.Measurements.ElectricCurrent{`0})
  name: Equal(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Equal_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Equal(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Equal(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Equal(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equal(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Equal(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Equal(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Equal(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Equal(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Equal_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Equal(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Equal(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Equal(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equal(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Equal(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Equal(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Equal*
  name: Equal
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Equal_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Equal
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equal
  nameWithType: ElectricCurrent<T>.Equal
  nameWithType.vb: ElectricCurrent(Of T).Equal
- uid: Towel.Measurements.ElectricCurrent`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Equals_System_Object_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Equals(System.Object)
  fullName: Towel.Measurements.ElectricCurrent<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equals(System.Object)
  nameWithType: ElectricCurrent<T>.Equals(Object)
  nameWithType.vb: ElectricCurrent(Of T).Equals(Object)
- uid: Towel.Measurements.ElectricCurrent`1.Equals*
  name: Equals
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Equals_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Equals
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equals
  nameWithType: ElectricCurrent<T>.Equals
  nameWithType.vb: ElectricCurrent(Of T).Equals
- uid: Towel.Measurements.ElectricCurrent`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GetHashCode
  commentId: M:Towel.Measurements.ElectricCurrent`1.GetHashCode
  fullName: Towel.Measurements.ElectricCurrent<T>.GetHashCode()
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GetHashCode()
  nameWithType: ElectricCurrent<T>.GetHashCode()
  nameWithType.vb: ElectricCurrent(Of T).GetHashCode()
- uid: Towel.Measurements.ElectricCurrent`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GetHashCode_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.GetHashCode
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GetHashCode
  nameWithType: ElectricCurrent<T>.GetHashCode
  nameWithType.vb: ElectricCurrent(Of T).GetHashCode
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThan(Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThan(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThan_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.GreaterThan(Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThan(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThan(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThan(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThan(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThan(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThan(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThan_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.GreaterThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThan(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThan(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThan(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThan_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThan
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThan
  nameWithType: ElectricCurrent<T>.GreaterThan
  nameWithType.vb: ElectricCurrent(Of T).GreaterThan
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThanOrEqual(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThanOrEqual_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThanOrEqual(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThanOrEqual(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThanOrEqual(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThanOrEqual_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThanOrEqual
  nameWithType: ElectricCurrent<T>.GreaterThanOrEqual
  nameWithType.vb: ElectricCurrent(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.ElectricCurrent`1.Item(Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  name: Item[ElectricCharge.Units, Time.Units]
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Item_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.ElectricCurrent`1.Item(Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  name.vb: Item(ElectricCharge.Units, Time.Units)
  fullName: Towel.Measurements.ElectricCurrent<T>.Item[Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Item(Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  nameWithType: ElectricCurrent<T>.Item[ElectricCharge.Units, Time.Units]
  nameWithType.vb: ElectricCurrent(Of T).Item(ElectricCharge.Units, Time.Units)
- uid: Towel.Measurements.ElectricCurrent`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits]
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_
  commentId: P:Towel.Measurements.ElectricCurrent`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName: Towel.Measurements.ElectricCurrent<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits]
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType: ElectricCurrent<T>.Item[MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits]
  nameWithType.vb: ElectricCurrent(Of T).Item(MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
- uid: Towel.Measurements.ElectricCurrent`1.Item*
  name: Item
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Item_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Item
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Item
  nameWithType: ElectricCurrent<T>.Item
  nameWithType.vb: ElectricCurrent(Of T).Item
- uid: Towel.Measurements.ElectricCurrent`1.LessThan(Towel.Measurements.ElectricCurrent{`0})
  name: LessThan(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThan_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.LessThan(Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThan(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThan(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThan(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThan(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThan(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.LessThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: LessThan(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThan_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.LessThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThan(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThan(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThan(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThan_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThan
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThan
  nameWithType: ElectricCurrent<T>.LessThan
  nameWithType.vb: ElectricCurrent(Of T).LessThan
- uid: Towel.Measurements.ElectricCurrent`1.LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0})
  name: LessThanOrEqual(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThanOrEqual_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThanOrEqual(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThanOrEqual(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThanOrEqual(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThanOrEqual(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThanOrEqual(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: LessThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThanOrEqual_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThanOrEqual(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThanOrEqual(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThanOrEqual
  nameWithType: ElectricCurrent<T>.LessThanOrEqual
  nameWithType.vb: ElectricCurrent(Of T).LessThanOrEqual
- uid: Towel.Measurements.ElectricCurrent`1.Multiply(`0,Towel.Measurements.ElectricCurrent{`0})
  name: Multiply(T, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Multiply__0_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Multiply(`0,Towel.Measurements.ElectricCurrent{`0})
  name.vb: Multiply(T, ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(T, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(T, Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Multiply(T, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(T, ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.ElectricCurrent{`0},`0)
  name: Multiply(ElectricCurrent<T>, T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Multiply_Towel_Measurements_ElectricCurrent__0___0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.ElectricCurrent{`0},`0)
  name.vb: Multiply(ElectricCurrent(Of T), T)
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(Towel.Measurements.ElectricCurrent<T>, T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(Towel.Measurements.ElectricCurrent(Of T), T)
  nameWithType: ElectricCurrent<T>.Multiply(ElectricCurrent<T>, T)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(ElectricCurrent(Of T), T)
- uid: Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.Time{`0})
  name: Multiply(ElectricCurrent<T>, Time<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Multiply_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(ElectricCurrent(Of T), Time(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.Time(Of T))
  nameWithType: ElectricCurrent<T>.Multiply(ElectricCurrent<T>, Time<T>)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(ElectricCurrent(Of T), Time(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: ElectricCurrent<T>.Multiply(Time<T>)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Multiply_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply
  nameWithType: ElectricCurrent<T>.Multiply
  nameWithType.vb: ElectricCurrent(Of T).Multiply
- uid: Towel.Measurements.ElectricCurrent`1.NotEqual(Towel.Measurements.ElectricCurrent{`0})
  name: NotEqual(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_NotEqual_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.NotEqual(Towel.Measurements.ElectricCurrent{`0})
  name.vb: NotEqual(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.NotEqual(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).NotEqual(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.NotEqual(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).NotEqual(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.NotEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: NotEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_NotEqual_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.NotEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: NotEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.NotEqual(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).NotEqual(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.NotEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).NotEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_NotEqual_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.NotEqual
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).NotEqual
  nameWithType: ElectricCurrent<T>.NotEqual
  nameWithType.vb: ElectricCurrent(Of T).NotEqual
- uid: Towel.Measurements.ElectricCurrent`1.op_Addition(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Addition(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Addition_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Addition(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Addition(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Addition(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Addition(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Addition(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Addition(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Addition_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Addition
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Addition
  nameWithType: ElectricCurrent<T>.Addition
  nameWithType.vb: ElectricCurrent(Of T).Addition
- uid: Towel.Measurements.ElectricCurrent`1.op_Division(Towel.Measurements.ElectricCurrent{`0},`0)
  name: Division(ElectricCurrent<T>, T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Division_Towel_Measurements_ElectricCurrent__0___0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Division(Towel.Measurements.ElectricCurrent{`0},`0)
  name.vb: Division(ElectricCurrent(Of T), T)
  fullName: Towel.Measurements.ElectricCurrent<T>.Division(Towel.Measurements.ElectricCurrent<T>, T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Division(Towel.Measurements.ElectricCurrent(Of T), T)
  nameWithType: ElectricCurrent<T>.Division(ElectricCurrent<T>, T)
  nameWithType.vb: ElectricCurrent(Of T).Division(ElectricCurrent(Of T), T)
- uid: Towel.Measurements.ElectricCurrent`1.op_Division(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Division(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Division_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Division(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Division(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Division(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Division(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Division(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Division(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Division*
  name: Division
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Division_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Division
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Division
  nameWithType: ElectricCurrent<T>.Division
  nameWithType.vb: ElectricCurrent(Of T).Division
- uid: Towel.Measurements.ElectricCurrent`1.op_Equality(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Equality(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Equality_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Equality(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Equality(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Equality(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equality(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Equality(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Equality(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Equality_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Equality
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Equality
  nameWithType: ElectricCurrent<T>.Equality
  nameWithType.vb: ElectricCurrent(Of T).Equality
- uid: Towel.Measurements.ElectricCurrent`1.op_GreaterThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThan(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_GreaterThan_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_GreaterThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThan(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThan(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThan(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThan
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThan
  nameWithType: ElectricCurrent<T>.GreaterThan
  nameWithType.vb: ElectricCurrent(Of T).GreaterThan
- uid: Towel.Measurements.ElectricCurrent`1.op_GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: GreaterThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_GreaterThanOrEqual_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_GreaterThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: GreaterThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThanOrEqual(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThanOrEqual(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.GreaterThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).GreaterThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).GreaterThanOrEqual
  nameWithType: ElectricCurrent<T>.GreaterThanOrEqual
  nameWithType.vb: ElectricCurrent(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.ElectricCurrent`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits})~Towel.Measurements.ElectricCurrent{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits) to ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits___Towel_Measurements_ElectricCurrent__0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits})~Towel.Measurements.ElectricCurrent{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits) to ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits> to Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits) to Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Implicit((T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits) to ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Widening((T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits) to ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Implicit_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.ElectricCurrent<T>.Implicit
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Widening
  nameWithType: ElectricCurrent<T>.Implicit
  nameWithType.vb: ElectricCurrent(Of T).Widening
- uid: Towel.Measurements.ElectricCurrent`1.op_Inequality(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Inequality(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Inequality_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Inequality(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Inequality(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Inequality(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Inequality(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Inequality(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Inequality(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Inequality_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Inequality
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Inequality
  nameWithType: ElectricCurrent<T>.Inequality
  nameWithType.vb: ElectricCurrent(Of T).Inequality
- uid: Towel.Measurements.ElectricCurrent`1.op_LessThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: LessThan(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_LessThan_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_LessThan(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThan(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThan(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThan(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThan(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_LessThan_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThan
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThan
  nameWithType: ElectricCurrent<T>.LessThan
  nameWithType.vb: ElectricCurrent(Of T).LessThan
- uid: Towel.Measurements.ElectricCurrent`1.op_LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: LessThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_LessThanOrEqual_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_LessThanOrEqual(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: LessThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThanOrEqual(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThanOrEqual(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.LessThanOrEqual(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).LessThanOrEqual(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).LessThanOrEqual
  nameWithType: ElectricCurrent<T>.LessThanOrEqual
  nameWithType.vb: ElectricCurrent(Of T).LessThanOrEqual
- uid: Towel.Measurements.ElectricCurrent`1.op_Multiply(`0,Towel.Measurements.ElectricCurrent{`0})
  name: Multiply(T, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Multiply__0_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Multiply(`0,Towel.Measurements.ElectricCurrent{`0})
  name.vb: Multiply(T, ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(T, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(T, Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Multiply(T, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(T, ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Multiply(Towel.Measurements.ElectricCurrent{`0},`0)
  name: Multiply(ElectricCurrent<T>, T)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Multiply_Towel_Measurements_ElectricCurrent__0___0_
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Multiply(Towel.Measurements.ElectricCurrent{`0},`0)
  name.vb: Multiply(ElectricCurrent(Of T), T)
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(Towel.Measurements.ElectricCurrent<T>, T)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(Towel.Measurements.ElectricCurrent(Of T), T)
  nameWithType: ElectricCurrent<T>.Multiply(ElectricCurrent<T>, T)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(ElectricCurrent(Of T), T)
- uid: Towel.Measurements.ElectricCurrent`1.op_Multiply(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.Time{`0})
  name: Multiply(ElectricCurrent<T>, Time<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Multiply_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Multiply(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(ElectricCurrent(Of T), Time(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.Time(Of T))
  nameWithType: ElectricCurrent<T>.Multiply(ElectricCurrent<T>, Time<T>)
  nameWithType.vb: ElectricCurrent(Of T).Multiply(ElectricCurrent(Of T), Time(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Multiply_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Multiply
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Multiply
  nameWithType: ElectricCurrent<T>.Multiply
  nameWithType.vb: ElectricCurrent(Of T).Multiply
- uid: Towel.Measurements.ElectricCurrent`1.op_Subtraction(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Subtraction(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Subtraction_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.op_Subtraction(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Subtraction(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Subtraction(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Subtraction(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Subtraction(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Subtraction(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Subtraction
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Subtraction
  nameWithType: ElectricCurrent<T>.Subtraction
  nameWithType.vb: ElectricCurrent(Of T).Subtraction
- uid: Towel.Measurements.ElectricCurrent`1.Subtract(Towel.Measurements.ElectricCurrent{`0})
  name: Subtract(ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Subtract_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Subtract(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Subtract(ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Subtract(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Subtract(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Subtract(ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Subtract(ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Subtract(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Subtract(ElectricCurrent<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Subtract_Towel_Measurements_ElectricCurrent__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.ElectricCurrent`1.Subtract(Towel.Measurements.ElectricCurrent{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Subtract(ElectricCurrent(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.ElectricCurrent<T>.Subtract(Towel.Measurements.ElectricCurrent<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Subtract(Towel.Measurements.ElectricCurrent(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: ElectricCurrent<T>.Subtract(ElectricCurrent<T>, ElectricCurrent<T>)
  nameWithType.vb: ElectricCurrent(Of T).Subtract(ElectricCurrent(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.ElectricCurrent`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_Subtract_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.Subtract
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).Subtract
  nameWithType: ElectricCurrent<T>.Subtract
  nameWithType.vb: ElectricCurrent(Of T).Subtract
- uid: Towel.Measurements.ElectricCurrent`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_TimeUnits2
  commentId: P:Towel.Measurements.ElectricCurrent`1.TimeUnits2
  fullName: Towel.Measurements.ElectricCurrent<T>.TimeUnits2
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).TimeUnits2
  nameWithType: ElectricCurrent<T>.TimeUnits2
  nameWithType.vb: ElectricCurrent(Of T).TimeUnits2
- uid: Towel.Measurements.ElectricCurrent`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.TimeUnits2
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).TimeUnits2
  nameWithType: ElectricCurrent<T>.TimeUnits2
  nameWithType.vb: ElectricCurrent(Of T).TimeUnits2
- uid: Towel.Measurements.ElectricCurrent`1.ToString
  name: ToString()
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_ToString
  commentId: M:Towel.Measurements.ElectricCurrent`1.ToString
  fullName: Towel.Measurements.ElectricCurrent<T>.ToString()
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ToString()
  nameWithType: ElectricCurrent<T>.ToString()
  nameWithType.vb: ElectricCurrent(Of T).ToString()
- uid: Towel.Measurements.ElectricCurrent`1.ToString*
  name: ToString
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_ToString_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.ToString
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).ToString
  nameWithType: ElectricCurrent<T>.ToString
  nameWithType.vb: ElectricCurrent(Of T).ToString
- uid: Towel.Measurements.ElectricCurrent`1.TryParse(System.String,Towel.Measurements.ElectricCurrent{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out ElectricCurrent<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_TryParse_System_String_Towel_Measurements_ElectricCurrent__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.ElectricCurrent`1.TryParse(System.String,Towel.Measurements.ElectricCurrent{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef ElectricCurrent(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.ElectricCurrent<T>.TryParse(System.String, out Towel.Measurements.ElectricCurrent<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).TryParse(System.String, ByRef Towel.Measurements.ElectricCurrent(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: ElectricCurrent<T>.TryParse(String, out ElectricCurrent<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: ElectricCurrent(Of T).TryParse(String, ByRef ElectricCurrent(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.ElectricCurrent`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.ElectricCurrent-1.html#Towel_Measurements_ElectricCurrent_1_TryParse_
  commentId: Overload:Towel.Measurements.ElectricCurrent`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.ElectricCurrent<T>.TryParse
  fullName.vb: Towel.Measurements.ElectricCurrent(Of T).TryParse
  nameWithType: ElectricCurrent<T>.TryParse
  nameWithType.vb: ElectricCurrent(Of T).TryParse
- uid: Towel.Measurements.Energy`1
  name: Energy<T>
  href: api/Towel.Measurements.Energy-1.html
  commentId: T:Towel.Measurements.Energy`1
  name.vb: Energy(Of T)
  fullName: Towel.Measurements.Energy<T>
  fullName.vb: Towel.Measurements.Energy(Of T)
  nameWithType: Energy<T>
  nameWithType.vb: Energy(Of T)
- uid: Towel.Measurements.Energy`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Energy(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Energy`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Energy<T>.Energy(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Energy(Of T).Energy(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Energy<T>.Energy(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Energy(Of T).Energy(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Energy`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name: Energy(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_
  commentId: M:Towel.Measurements.Energy`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName: Towel.Measurements.Energy<T>.Energy(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName.vb: Towel.Measurements.Energy(Of T).Energy(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType: Energy<T>.Energy(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType.vb: Energy(Of T).Energy(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
- uid: Towel.Measurements.Energy`1.#ctor*
  name: Energy
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1__ctor_
  commentId: Overload:Towel.Measurements.Energy`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Energy
  fullName.vb: Towel.Measurements.Energy(Of T).Energy
  nameWithType: Energy<T>.Energy
  nameWithType.vb: Energy(Of T).Energy
- uid: Towel.Measurements.Energy`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Add__0_
  commentId: M:Towel.Measurements.Energy`1.Add(`0)
  fullName: Towel.Measurements.Energy<T>.Add(T)
  fullName.vb: Towel.Measurements.Energy(Of T).Add(T)
  nameWithType: Energy<T>.Add(T)
  nameWithType.vb: Energy(Of T).Add(T)
- uid: Towel.Measurements.Energy`1.Add(Towel.Measurements.Energy{`0})
  name: Add(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Add_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Add(Towel.Measurements.Energy{`0})
  name.vb: Add(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Add(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Add(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Add(Energy<T>)
  nameWithType.vb: Energy(Of T).Add(Energy(Of T))
- uid: Towel.Measurements.Energy`1.Add(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Add(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Add_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Add(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Add(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Add(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Add(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Add(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Add(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.Add*
  name: Add
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Add_
  commentId: Overload:Towel.Measurements.Energy`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Add
  fullName.vb: Towel.Measurements.Energy(Of T).Add
  nameWithType: Energy<T>.Add
  nameWithType.vb: Energy(Of T).Add
- uid: Towel.Measurements.Energy`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Energy`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Energy<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Energy(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Energy<T>.Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Energy(Of T).Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Energy`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_
  commentId: M:Towel.Measurements.Energy`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName: Towel.Measurements.Energy<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName.vb: Towel.Measurements.Energy(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType: Energy<T>.Convert(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType.vb: Energy(Of T).Convert(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
- uid: Towel.Measurements.Energy`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Convert_
  commentId: Overload:Towel.Measurements.Energy`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Convert
  fullName.vb: Towel.Measurements.Energy(Of T).Convert
  nameWithType: Energy<T>.Convert
  nameWithType.vb: Energy(Of T).Convert
- uid: Towel.Measurements.Energy`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide__0_
  commentId: M:Towel.Measurements.Energy`1.Divide(`0)
  fullName: Towel.Measurements.Energy<T>.Divide(T)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(T)
  nameWithType: Energy<T>.Divide(T)
  nameWithType.vb: Energy(Of T).Divide(T)
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Energy<T>.Divide(Acceleration<T>)
  nameWithType.vb: Energy(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0})
  name: Divide(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0})
  name.vb: Divide(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},`0)
  name: Divide(Energy<T>, T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0___0_
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},`0)
  name.vb: Divide(Energy(Of T), T)
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, T)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), T)
  nameWithType: Energy<T>.Divide(Energy<T>, T)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), T)
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Energy<T>, Acceleration<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Energy(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Acceleration<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Divide(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Divide(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Force{`0})
  name: Divide(Energy<T>, Force<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Force{`0})
  name.vb: Divide(Energy(Of T), Force(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Force<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Force(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Length{`0})
  name: Divide(Energy<T>, Length<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(Energy(Of T), Length(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Length<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Length(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMass{`0})
  name: Divide(Energy<T>, LinearMass<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Divide(Energy(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, LinearMass<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), LinearMass(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Divide(Energy<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(Energy(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, LinearMassFlow<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Power{`0})
  name: Divide(Energy<T>, Power<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Power{`0})
  name.vb: Divide(Energy(Of T), Power(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Power<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Power(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Pressure{`0})
  name: Divide(Energy<T>, Pressure<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Pressure{`0})
  name.vb: Divide(Energy(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Pressure<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Pressure(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Speed{`0})
  name: Divide(Energy<T>, Speed<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(Energy(Of T), Speed(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Speed<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Speed(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Time{`0})
  name: Divide(Energy<T>, Time<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Energy(Of T), Time(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Time<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Time(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Volume{`0})
  name: Divide(Energy<T>, Volume<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Energy__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Energy{`0},Towel.Measurements.Volume{`0})
  name.vb: Divide(Energy(Of T), Volume(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Energy<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Energy(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Energy<T>.Divide(Energy<T>, Volume<T>)
  nameWithType.vb: Energy(Of T).Divide(Energy(Of T), Volume(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Force{`0})
  name: Divide(Force<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Force(Of T))
  nameWithType: Energy<T>.Divide(Force<T>)
  nameWithType.vb: Energy(Of T).Divide(Force(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: Energy<T>.Divide(Length<T>)
  nameWithType.vb: Energy(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.LinearMass{`0})
  name: Divide(LinearMass<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.LinearMass{`0})
  name.vb: Divide(LinearMass(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.LinearMass(Of T))
  nameWithType: Energy<T>.Divide(LinearMass<T>)
  nameWithType.vb: Energy(Of T).Divide(LinearMass(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMassFlow<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMassFlow(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Energy<T>.Divide(LinearMassFlow<T>)
  nameWithType.vb: Energy(Of T).Divide(LinearMassFlow(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Power{`0})
  name: Divide(Power<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Power{`0})
  name.vb: Divide(Power(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Power(Of T))
  nameWithType: Energy<T>.Divide(Power<T>)
  nameWithType.vb: Energy(Of T).Divide(Power(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Pressure(Of T))
  nameWithType: Energy<T>.Divide(Pressure<T>)
  nameWithType.vb: Energy(Of T).Divide(Pressure(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: Energy<T>.Divide(Speed<T>)
  nameWithType.vb: Energy(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Energy<T>.Divide(Time<T>)
  nameWithType.vb: Energy(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Energy`1.Divide(Towel.Measurements.Volume{`0})
  name: Divide(Volume<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Energy`1.Divide(Towel.Measurements.Volume{`0})
  name.vb: Divide(Volume(Of T))
  fullName: Towel.Measurements.Energy<T>.Divide(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Divide(Towel.Measurements.Volume(Of T))
  nameWithType: Energy<T>.Divide(Volume<T>)
  nameWithType.vb: Energy(Of T).Divide(Volume(Of T))
- uid: Towel.Measurements.Energy`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Divide_
  commentId: Overload:Towel.Measurements.Energy`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Divide
  fullName.vb: Towel.Measurements.Energy(Of T).Divide
  nameWithType: Energy<T>.Divide
  nameWithType.vb: Energy(Of T).Divide
- uid: Towel.Measurements.Energy`1.Equal(Towel.Measurements.Energy{`0})
  name: Equal(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Equal_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Equal(Towel.Measurements.Energy{`0})
  name.vb: Equal(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Equal(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Equal(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Equal(Energy<T>)
  nameWithType.vb: Energy(Of T).Equal(Energy(Of T))
- uid: Towel.Measurements.Energy`1.Equal(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Equal(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Equal_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Equal(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Equal(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Equal(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Equal(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Equal(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Equal(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Equal_
  commentId: Overload:Towel.Measurements.Energy`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Equal
  fullName.vb: Towel.Measurements.Energy(Of T).Equal
  nameWithType: Energy<T>.Equal
  nameWithType.vb: Energy(Of T).Equal
- uid: Towel.Measurements.Energy`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Energy`1.Equals(System.Object)
  fullName: Towel.Measurements.Energy<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Energy(Of T).Equals(System.Object)
  nameWithType: Energy<T>.Equals(Object)
  nameWithType.vb: Energy(Of T).Equals(Object)
- uid: Towel.Measurements.Energy`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Equals_
  commentId: Overload:Towel.Measurements.Energy`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Equals
  fullName.vb: Towel.Measurements.Energy(Of T).Equals
  nameWithType: Energy<T>.Equals
  nameWithType.vb: Energy(Of T).Equals
- uid: Towel.Measurements.Energy`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GetHashCode
  commentId: M:Towel.Measurements.Energy`1.GetHashCode
  fullName: Towel.Measurements.Energy<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Energy(Of T).GetHashCode()
  nameWithType: Energy<T>.GetHashCode()
  nameWithType.vb: Energy(Of T).GetHashCode()
- uid: Towel.Measurements.Energy`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Energy`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.GetHashCode
  fullName.vb: Towel.Measurements.Energy(Of T).GetHashCode
  nameWithType: Energy<T>.GetHashCode
  nameWithType.vb: Energy(Of T).GetHashCode
- uid: Towel.Measurements.Energy`1.GreaterThan(Towel.Measurements.Energy{`0})
  name: GreaterThan(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThan_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.GreaterThan(Towel.Measurements.Energy{`0})
  name.vb: GreaterThan(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThan(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThan(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThan(Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThan(Energy(Of T))
- uid: Towel.Measurements.Energy`1.GreaterThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: GreaterThan(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThan_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.GreaterThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: GreaterThan(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThan(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThan(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThan(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThan(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Energy`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.GreaterThan
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThan
  nameWithType: Energy<T>.GreaterThan
  nameWithType.vb: Energy(Of T).GreaterThan
- uid: Towel.Measurements.Energy`1.GreaterThanOrEqual(Towel.Measurements.Energy{`0})
  name: GreaterThanOrEqual(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThanOrEqual_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.GreaterThanOrEqual(Towel.Measurements.Energy{`0})
  name.vb: GreaterThanOrEqual(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThanOrEqual(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThanOrEqual(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThanOrEqual(Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThanOrEqual(Energy(Of T))
- uid: Towel.Measurements.Energy`1.GreaterThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: GreaterThanOrEqual(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThanOrEqual_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.GreaterThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: GreaterThanOrEqual(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThanOrEqual(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThanOrEqual(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThanOrEqual(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThanOrEqual(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Energy`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThanOrEqual
  nameWithType: Energy<T>.GreaterThanOrEqual
  nameWithType.vb: Energy(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Energy`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Energy`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.Energy<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Energy(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Energy<T>.Item[Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units]
  nameWithType.vb: Energy(Of T).Item(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Energy`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.EnergyBaseUnits]
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_
  commentId: P:Towel.Measurements.Energy`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName: Towel.Measurements.Energy<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits]
  fullName.vb: Towel.Measurements.Energy(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType: Energy<T>.Item[MeasurementUnitsSyntaxTypes.EnergyBaseUnits]
  nameWithType.vb: Energy(Of T).Item(MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
- uid: Towel.Measurements.Energy`1.Item*
  name: Item
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Item_
  commentId: Overload:Towel.Measurements.Energy`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Item
  fullName.vb: Towel.Measurements.Energy(Of T).Item
  nameWithType: Energy<T>.Item
  nameWithType.vb: Energy(Of T).Item
- uid: Towel.Measurements.Energy`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LengthUnits2
  commentId: P:Towel.Measurements.Energy`1.LengthUnits2
  fullName: Towel.Measurements.Energy<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Energy(Of T).LengthUnits2
  nameWithType: Energy<T>.LengthUnits2
  nameWithType.vb: Energy(Of T).LengthUnits2
- uid: Towel.Measurements.Energy`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Energy`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Energy(Of T).LengthUnits2
  nameWithType: Energy<T>.LengthUnits2
  nameWithType.vb: Energy(Of T).LengthUnits2
- uid: Towel.Measurements.Energy`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LengthUnits3
  commentId: P:Towel.Measurements.Energy`1.LengthUnits3
  fullName: Towel.Measurements.Energy<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Energy(Of T).LengthUnits3
  nameWithType: Energy<T>.LengthUnits3
  nameWithType.vb: Energy(Of T).LengthUnits3
- uid: Towel.Measurements.Energy`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.Energy`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Energy(Of T).LengthUnits3
  nameWithType: Energy<T>.LengthUnits3
  nameWithType.vb: Energy(Of T).LengthUnits3
- uid: Towel.Measurements.Energy`1.LessThan(Towel.Measurements.Energy{`0})
  name: LessThan(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThan_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.LessThan(Towel.Measurements.Energy{`0})
  name.vb: LessThan(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThan(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThan(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThan(Energy<T>)
  nameWithType.vb: Energy(Of T).LessThan(Energy(Of T))
- uid: Towel.Measurements.Energy`1.LessThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: LessThan(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThan_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.LessThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: LessThan(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThan(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThan(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThan(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).LessThan(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThan_
  commentId: Overload:Towel.Measurements.Energy`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LessThan
  fullName.vb: Towel.Measurements.Energy(Of T).LessThan
  nameWithType: Energy<T>.LessThan
  nameWithType.vb: Energy(Of T).LessThan
- uid: Towel.Measurements.Energy`1.LessThanOrEqual(Towel.Measurements.Energy{`0})
  name: LessThanOrEqual(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThanOrEqual_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.LessThanOrEqual(Towel.Measurements.Energy{`0})
  name.vb: LessThanOrEqual(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThanOrEqual(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThanOrEqual(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThanOrEqual(Energy<T>)
  nameWithType.vb: Energy(Of T).LessThanOrEqual(Energy(Of T))
- uid: Towel.Measurements.Energy`1.LessThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: LessThanOrEqual(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThanOrEqual_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.LessThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: LessThanOrEqual(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThanOrEqual(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThanOrEqual(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThanOrEqual(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).LessThanOrEqual(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Energy`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Energy(Of T).LessThanOrEqual
  nameWithType: Energy<T>.LessThanOrEqual
  nameWithType.vb: Energy(Of T).LessThanOrEqual
- uid: Towel.Measurements.Energy`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_MassUnits1
  commentId: P:Towel.Measurements.Energy`1.MassUnits1
  fullName: Towel.Measurements.Energy<T>.MassUnits1
  fullName.vb: Towel.Measurements.Energy(Of T).MassUnits1
  nameWithType: Energy<T>.MassUnits1
  nameWithType.vb: Energy(Of T).MassUnits1
- uid: Towel.Measurements.Energy`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Energy`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.MassUnits1
  fullName.vb: Towel.Measurements.Energy(Of T).MassUnits1
  nameWithType: Energy<T>.MassUnits1
  nameWithType.vb: Energy(Of T).MassUnits1
- uid: Towel.Measurements.Energy`1.Multiply(`0,Towel.Measurements.Energy{`0})
  name: Multiply(T, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Multiply__0_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Multiply(`0,Towel.Measurements.Energy{`0})
  name.vb: Multiply(T, Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Multiply(T, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply(T, Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Multiply(T, Energy<T>)
  nameWithType.vb: Energy(Of T).Multiply(T, Energy(Of T))
- uid: Towel.Measurements.Energy`1.Multiply(Towel.Measurements.Energy{`0},`0)
  name: Multiply(Energy<T>, T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Multiply_Towel_Measurements_Energy__0___0_
  commentId: M:Towel.Measurements.Energy`1.Multiply(Towel.Measurements.Energy{`0},`0)
  name.vb: Multiply(Energy(Of T), T)
  fullName: Towel.Measurements.Energy<T>.Multiply(Towel.Measurements.Energy<T>, T)
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply(Towel.Measurements.Energy(Of T), T)
  nameWithType: Energy<T>.Multiply(Energy<T>, T)
  nameWithType.vb: Energy(Of T).Multiply(Energy(Of T), T)
- uid: Towel.Measurements.Energy`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Multiply_
  commentId: Overload:Towel.Measurements.Energy`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Multiply
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply
  nameWithType: Energy<T>.Multiply
  nameWithType.vb: Energy(Of T).Multiply
- uid: Towel.Measurements.Energy`1.NotEqual(Towel.Measurements.Energy{`0})
  name: NotEqual(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_NotEqual_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.NotEqual(Towel.Measurements.Energy{`0})
  name.vb: NotEqual(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.NotEqual(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).NotEqual(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.NotEqual(Energy<T>)
  nameWithType.vb: Energy(Of T).NotEqual(Energy(Of T))
- uid: Towel.Measurements.Energy`1.NotEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: NotEqual(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_NotEqual_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.NotEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: NotEqual(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.NotEqual(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).NotEqual(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.NotEqual(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).NotEqual(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_NotEqual_
  commentId: Overload:Towel.Measurements.Energy`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.NotEqual
  fullName.vb: Towel.Measurements.Energy(Of T).NotEqual
  nameWithType: Energy<T>.NotEqual
  nameWithType.vb: Energy(Of T).NotEqual
- uid: Towel.Measurements.Energy`1.op_Addition(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Addition(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Addition_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Addition(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Addition(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Addition(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Addition(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Addition(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Addition(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Addition_
  commentId: Overload:Towel.Measurements.Energy`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Addition
  fullName.vb: Towel.Measurements.Energy(Of T).Addition
  nameWithType: Energy<T>.Addition
  nameWithType.vb: Energy(Of T).Addition
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},`0)
  name: Division(Energy<T>, T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0___0_
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},`0)
  name.vb: Division(Energy(Of T), T)
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, T)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), T)
  nameWithType: Energy<T>.Division(Energy<T>, T)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), T)
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Energy<T>, Acceleration<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Energy(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Acceleration<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Division(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Division(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Force{`0})
  name: Division(Energy<T>, Force<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Force{`0})
  name.vb: Division(Energy(Of T), Force(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Force<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Force(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Length{`0})
  name: Division(Energy<T>, Length<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Length{`0})
  name.vb: Division(Energy(Of T), Length(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Length<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Length(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMass{`0})
  name: Division(Energy<T>, LinearMass<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Division(Energy(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, LinearMass<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), LinearMass(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Division(Energy<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Division(Energy(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, LinearMassFlow<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Power{`0})
  name: Division(Energy<T>, Power<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Power{`0})
  name.vb: Division(Energy(Of T), Power(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Power<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Power(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Pressure{`0})
  name: Division(Energy<T>, Pressure<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Pressure{`0})
  name.vb: Division(Energy(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Pressure<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Pressure(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Speed{`0})
  name: Division(Energy<T>, Speed<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(Energy(Of T), Speed(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Speed<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Speed(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Time{`0})
  name: Division(Energy<T>, Time<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Energy(Of T), Time(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Time<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Time(Of T))
- uid: Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Volume{`0})
  name: Division(Energy<T>, Volume<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_Towel_Measurements_Energy__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Energy`1.op_Division(Towel.Measurements.Energy{`0},Towel.Measurements.Volume{`0})
  name.vb: Division(Energy(Of T), Volume(Of T))
  fullName: Towel.Measurements.Energy<T>.Division(Towel.Measurements.Energy<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Division(Towel.Measurements.Energy(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Energy<T>.Division(Energy<T>, Volume<T>)
  nameWithType.vb: Energy(Of T).Division(Energy(Of T), Volume(Of T))
- uid: Towel.Measurements.Energy`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Division_
  commentId: Overload:Towel.Measurements.Energy`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Division
  fullName.vb: Towel.Measurements.Energy(Of T).Division
  nameWithType: Energy<T>.Division
  nameWithType.vb: Energy(Of T).Division
- uid: Towel.Measurements.Energy`1.op_Equality(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Equality(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Equality_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Equality(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Equality(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Equality(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Equality(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Equality(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Equality(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Equality_
  commentId: Overload:Towel.Measurements.Energy`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Equality
  fullName.vb: Towel.Measurements.Energy(Of T).Equality
  nameWithType: Energy<T>.Equality
  nameWithType.vb: Energy(Of T).Equality
- uid: Towel.Measurements.Energy`1.op_GreaterThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: GreaterThan(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_GreaterThan_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_GreaterThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: GreaterThan(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThan(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThan(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThan(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThan(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Energy`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.GreaterThan
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThan
  nameWithType: Energy<T>.GreaterThan
  nameWithType.vb: Energy(Of T).GreaterThan
- uid: Towel.Measurements.Energy`1.op_GreaterThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: GreaterThanOrEqual(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_GreaterThanOrEqual_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_GreaterThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: GreaterThanOrEqual(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.GreaterThanOrEqual(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThanOrEqual(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.GreaterThanOrEqual(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).GreaterThanOrEqual(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Energy`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Energy(Of T).GreaterThanOrEqual
  nameWithType: Energy<T>.GreaterThanOrEqual
  nameWithType.vb: Energy(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Energy`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits})~Towel.Measurements.Energy{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits) to Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits___Towel_Measurements_Energy__0_
  commentId: M:Towel.Measurements.Energy`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits})~Towel.Measurements.Energy{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits) to Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits> to Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits) to Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Implicit((T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits) to Energy<T>)
  nameWithType.vb: Energy(Of T).Widening((T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits) to Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Energy`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Energy<T>.Implicit
  fullName.vb: Towel.Measurements.Energy(Of T).Widening
  nameWithType: Energy<T>.Implicit
  nameWithType.vb: Energy(Of T).Widening
- uid: Towel.Measurements.Energy`1.op_Inequality(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Inequality(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Inequality_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Inequality(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Inequality(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Inequality(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Inequality(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Inequality(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Inequality(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Energy`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Inequality
  fullName.vb: Towel.Measurements.Energy(Of T).Inequality
  nameWithType: Energy<T>.Inequality
  nameWithType.vb: Energy(Of T).Inequality
- uid: Towel.Measurements.Energy`1.op_LessThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: LessThan(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_LessThan_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_LessThan(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: LessThan(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThan(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThan(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThan(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).LessThan(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Energy`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LessThan
  fullName.vb: Towel.Measurements.Energy(Of T).LessThan
  nameWithType: Energy<T>.LessThan
  nameWithType.vb: Energy(Of T).LessThan
- uid: Towel.Measurements.Energy`1.op_LessThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: LessThanOrEqual(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_LessThanOrEqual_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_LessThanOrEqual(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: LessThanOrEqual(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.LessThanOrEqual(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).LessThanOrEqual(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.LessThanOrEqual(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).LessThanOrEqual(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Energy`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Energy(Of T).LessThanOrEqual
  nameWithType: Energy<T>.LessThanOrEqual
  nameWithType.vb: Energy(Of T).LessThanOrEqual
- uid: Towel.Measurements.Energy`1.op_Multiply(`0,Towel.Measurements.Energy{`0})
  name: Multiply(T, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Multiply__0_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Multiply(`0,Towel.Measurements.Energy{`0})
  name.vb: Multiply(T, Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Multiply(T, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply(T, Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Multiply(T, Energy<T>)
  nameWithType.vb: Energy(Of T).Multiply(T, Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Multiply(Towel.Measurements.Energy{`0},`0)
  name: Multiply(Energy<T>, T)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Multiply_Towel_Measurements_Energy__0___0_
  commentId: M:Towel.Measurements.Energy`1.op_Multiply(Towel.Measurements.Energy{`0},`0)
  name.vb: Multiply(Energy(Of T), T)
  fullName: Towel.Measurements.Energy<T>.Multiply(Towel.Measurements.Energy<T>, T)
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply(Towel.Measurements.Energy(Of T), T)
  nameWithType: Energy<T>.Multiply(Energy<T>, T)
  nameWithType.vb: Energy(Of T).Multiply(Energy(Of T), T)
- uid: Towel.Measurements.Energy`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Energy`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Multiply
  fullName.vb: Towel.Measurements.Energy(Of T).Multiply
  nameWithType: Energy<T>.Multiply
  nameWithType.vb: Energy(Of T).Multiply
- uid: Towel.Measurements.Energy`1.op_Subtraction(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Subtraction(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Subtraction_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.op_Subtraction(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Subtraction(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Subtraction(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Subtraction(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Subtraction(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Subtraction(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Energy`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Subtraction
  fullName.vb: Towel.Measurements.Energy(Of T).Subtraction
  nameWithType: Energy<T>.Subtraction
  nameWithType.vb: Energy(Of T).Subtraction
- uid: Towel.Measurements.Energy`1.Subtract(Towel.Measurements.Energy{`0})
  name: Subtract(Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Subtract_Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Subtract(Towel.Measurements.Energy{`0})
  name.vb: Subtract(Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Subtract(Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Subtract(Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Subtract(Energy<T>)
  nameWithType.vb: Energy(Of T).Subtract(Energy(Of T))
- uid: Towel.Measurements.Energy`1.Subtract(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name: Subtract(Energy<T>, Energy<T>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Subtract_Towel_Measurements_Energy__0__Towel_Measurements_Energy__0__
  commentId: M:Towel.Measurements.Energy`1.Subtract(Towel.Measurements.Energy{`0},Towel.Measurements.Energy{`0})
  name.vb: Subtract(Energy(Of T), Energy(Of T))
  fullName: Towel.Measurements.Energy<T>.Subtract(Towel.Measurements.Energy<T>, Towel.Measurements.Energy<T>)
  fullName.vb: Towel.Measurements.Energy(Of T).Subtract(Towel.Measurements.Energy(Of T), Towel.Measurements.Energy(Of T))
  nameWithType: Energy<T>.Subtract(Energy<T>, Energy<T>)
  nameWithType.vb: Energy(Of T).Subtract(Energy(Of T), Energy(Of T))
- uid: Towel.Measurements.Energy`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_Subtract_
  commentId: Overload:Towel.Measurements.Energy`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.Subtract
  fullName.vb: Towel.Measurements.Energy(Of T).Subtract
  nameWithType: Energy<T>.Subtract
  nameWithType.vb: Energy(Of T).Subtract
- uid: Towel.Measurements.Energy`1.TimeUnits4
  name: TimeUnits4
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TimeUnits4
  commentId: P:Towel.Measurements.Energy`1.TimeUnits4
  fullName: Towel.Measurements.Energy<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Energy(Of T).TimeUnits4
  nameWithType: Energy<T>.TimeUnits4
  nameWithType.vb: Energy(Of T).TimeUnits4
- uid: Towel.Measurements.Energy`1.TimeUnits4*
  name: TimeUnits4
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TimeUnits4_
  commentId: Overload:Towel.Measurements.Energy`1.TimeUnits4
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Energy(Of T).TimeUnits4
  nameWithType: Energy<T>.TimeUnits4
  nameWithType.vb: Energy(Of T).TimeUnits4
- uid: Towel.Measurements.Energy`1.TimeUnits5
  name: TimeUnits5
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TimeUnits5
  commentId: P:Towel.Measurements.Energy`1.TimeUnits5
  fullName: Towel.Measurements.Energy<T>.TimeUnits5
  fullName.vb: Towel.Measurements.Energy(Of T).TimeUnits5
  nameWithType: Energy<T>.TimeUnits5
  nameWithType.vb: Energy(Of T).TimeUnits5
- uid: Towel.Measurements.Energy`1.TimeUnits5*
  name: TimeUnits5
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TimeUnits5_
  commentId: Overload:Towel.Measurements.Energy`1.TimeUnits5
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.TimeUnits5
  fullName.vb: Towel.Measurements.Energy(Of T).TimeUnits5
  nameWithType: Energy<T>.TimeUnits5
  nameWithType.vb: Energy(Of T).TimeUnits5
- uid: Towel.Measurements.Energy`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_ToString
  commentId: M:Towel.Measurements.Energy`1.ToString
  fullName: Towel.Measurements.Energy<T>.ToString()
  fullName.vb: Towel.Measurements.Energy(Of T).ToString()
  nameWithType: Energy<T>.ToString()
  nameWithType.vb: Energy(Of T).ToString()
- uid: Towel.Measurements.Energy`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_ToString_
  commentId: Overload:Towel.Measurements.Energy`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.ToString
  fullName.vb: Towel.Measurements.Energy(Of T).ToString
  nameWithType: Energy<T>.ToString
  nameWithType.vb: Energy(Of T).ToString
- uid: Towel.Measurements.Energy`1.TryParse(System.String,Towel.Measurements.Energy{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Energy<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TryParse_System_String_Towel_Measurements_Energy__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Energy`1.TryParse(System.String,Towel.Measurements.Energy{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Energy(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Energy<T>.TryParse(System.String, out Towel.Measurements.Energy<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Energy(Of T).TryParse(System.String, ByRef Towel.Measurements.Energy(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Energy<T>.TryParse(String, out Energy<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Energy(Of T).TryParse(String, ByRef Energy(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Energy`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Energy-1.html#Towel_Measurements_Energy_1_TryParse_
  commentId: Overload:Towel.Measurements.Energy`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Energy<T>.TryParse
  fullName.vb: Towel.Measurements.Energy(Of T).TryParse
  nameWithType: Energy<T>.TryParse
  nameWithType.vb: Energy(Of T).TryParse
- uid: Towel.Measurements.Force`1
  name: Force<T>
  href: api/Towel.Measurements.Force-1.html
  commentId: T:Towel.Measurements.Force`1
  name.vb: Force(Of T)
  fullName: Towel.Measurements.Force<T>
  fullName.vb: Towel.Measurements.Force(Of T)
  nameWithType: Force<T>
  nameWithType.vb: Force(Of T)
- uid: Towel.Measurements.Force`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Force(T, Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Force`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Force<T>.Force(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Force(Of T).Force(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Force<T>.Force(T, Mass.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Force(Of T).Force(T, Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Force`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Force(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: M:Towel.Measurements.Force`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.Force<T>.Force(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName.vb: Towel.Measurements.Force(Of T).Force(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: Force<T>.Force(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType.vb: Force(Of T).Force(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.Force`1.#ctor*
  name: Force
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1__ctor_
  commentId: Overload:Towel.Measurements.Force`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Force
  fullName.vb: Towel.Measurements.Force(Of T).Force
  nameWithType: Force<T>.Force
  nameWithType.vb: Force(Of T).Force
- uid: Towel.Measurements.Force`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Add__0_
  commentId: M:Towel.Measurements.Force`1.Add(`0)
  fullName: Towel.Measurements.Force<T>.Add(T)
  fullName.vb: Towel.Measurements.Force(Of T).Add(T)
  nameWithType: Force<T>.Add(T)
  nameWithType.vb: Force(Of T).Add(T)
- uid: Towel.Measurements.Force`1.Add(Towel.Measurements.Force{`0})
  name: Add(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Add_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Add(Towel.Measurements.Force{`0})
  name.vb: Add(Force(Of T))
  fullName: Towel.Measurements.Force<T>.Add(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Add(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Add(Force<T>)
  nameWithType.vb: Force(Of T).Add(Force(Of T))
- uid: Towel.Measurements.Force`1.Add(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Add(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Add_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Add(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Add(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Add(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Add(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Add(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Add(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.Add*
  name: Add
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Add_
  commentId: Overload:Towel.Measurements.Force`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Add
  fullName.vb: Towel.Measurements.Force(Of T).Add
  nameWithType: Force<T>.Add
  nameWithType.vb: Force(Of T).Add
- uid: Towel.Measurements.Force`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Force`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Force<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Force(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Force<T>.Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Force(Of T).Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Force`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: M:Towel.Measurements.Force`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.Force<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName.vb: Towel.Measurements.Force(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: Force<T>.Convert(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType.vb: Force(Of T).Convert(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.Force`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Convert_
  commentId: Overload:Towel.Measurements.Force`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Convert
  fullName.vb: Towel.Measurements.Force(Of T).Convert
  nameWithType: Force<T>.Convert
  nameWithType.vb: Force(Of T).Convert
- uid: Towel.Measurements.Force`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide__0_
  commentId: M:Towel.Measurements.Force`1.Divide(`0)
  fullName: Towel.Measurements.Force<T>.Divide(T)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(T)
  nameWithType: Force<T>.Divide(T)
  nameWithType.vb: Force(Of T).Divide(T)
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Force<T>.Divide(Acceleration<T>)
  nameWithType.vb: Force(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: Force<T>.Divide(Area<T>)
  nameWithType.vb: Force(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0})
  name: Divide(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Divide(Force<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},`0)
  name: Divide(Force<T>, T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0___0_
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},`0)
  name.vb: Divide(Force(Of T), T)
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, T)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), T)
  nameWithType: Force<T>.Divide(Force<T>, T)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), T)
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Force<T>, Acceleration<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Force(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Acceleration<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Area{`0})
  name: Divide(Force<T>, Area<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(Force(Of T), Area(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Area<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Area(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Divide(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Mass{`0})
  name: Divide(Force<T>, Mass<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Mass{`0})
  name.vb: Divide(Force(Of T), Mass(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Mass<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Mass(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.MassRate{`0})
  name: Divide(Force<T>, MassRate<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.MassRate{`0})
  name.vb: Divide(Force(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Force<T>.Divide(Force<T>, MassRate<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), MassRate(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Pressure{`0})
  name: Divide(Force<T>, Pressure<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Pressure{`0})
  name.vb: Divide(Force(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Pressure<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Pressure(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name: Divide(Force<T>, Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Force__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(Force(Of T), Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Force<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Force(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Divide(Force<T>, Speed<T>)
  nameWithType.vb: Force(Of T).Divide(Force(Of T), Speed(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Mass{`0})
  name: Divide(Mass<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Mass{`0})
  name.vb: Divide(Mass(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Mass(Of T))
  nameWithType: Force<T>.Divide(Mass<T>)
  nameWithType.vb: Force(Of T).Divide(Mass(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.MassRate{`0})
  name: Divide(MassRate<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.MassRate{`0})
  name.vb: Divide(MassRate(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.MassRate(Of T))
  nameWithType: Force<T>.Divide(MassRate<T>)
  nameWithType.vb: Force(Of T).Divide(MassRate(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Pressure(Of T))
  nameWithType: Force<T>.Divide(Pressure<T>)
  nameWithType.vb: Force(Of T).Divide(Pressure(Of T))
- uid: Towel.Measurements.Force`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Divide(Speed<T>)
  nameWithType.vb: Force(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.Force`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Divide_
  commentId: Overload:Towel.Measurements.Force`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Divide
  fullName.vb: Towel.Measurements.Force(Of T).Divide
  nameWithType: Force<T>.Divide
  nameWithType.vb: Force(Of T).Divide
- uid: Towel.Measurements.Force`1.Equal(Towel.Measurements.Force{`0})
  name: Equal(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Equal_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Equal(Towel.Measurements.Force{`0})
  name.vb: Equal(Force(Of T))
  fullName: Towel.Measurements.Force<T>.Equal(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Equal(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Equal(Force<T>)
  nameWithType.vb: Force(Of T).Equal(Force(Of T))
- uid: Towel.Measurements.Force`1.Equal(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Equal(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Equal_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Equal(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Equal(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Equal(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Equal(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Equal(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Equal(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Equal_
  commentId: Overload:Towel.Measurements.Force`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Equal
  fullName.vb: Towel.Measurements.Force(Of T).Equal
  nameWithType: Force<T>.Equal
  nameWithType.vb: Force(Of T).Equal
- uid: Towel.Measurements.Force`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Force`1.Equals(System.Object)
  fullName: Towel.Measurements.Force<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Force(Of T).Equals(System.Object)
  nameWithType: Force<T>.Equals(Object)
  nameWithType.vb: Force(Of T).Equals(Object)
- uid: Towel.Measurements.Force`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Equals_
  commentId: Overload:Towel.Measurements.Force`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Equals
  fullName.vb: Towel.Measurements.Force(Of T).Equals
  nameWithType: Force<T>.Equals
  nameWithType.vb: Force(Of T).Equals
- uid: Towel.Measurements.Force`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GetHashCode
  commentId: M:Towel.Measurements.Force`1.GetHashCode
  fullName: Towel.Measurements.Force<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Force(Of T).GetHashCode()
  nameWithType: Force<T>.GetHashCode()
  nameWithType.vb: Force(Of T).GetHashCode()
- uid: Towel.Measurements.Force`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Force`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.GetHashCode
  fullName.vb: Towel.Measurements.Force(Of T).GetHashCode
  nameWithType: Force<T>.GetHashCode
  nameWithType.vb: Force(Of T).GetHashCode
- uid: Towel.Measurements.Force`1.GreaterThan(Towel.Measurements.Force{`0})
  name: GreaterThan(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThan_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.GreaterThan(Towel.Measurements.Force{`0})
  name.vb: GreaterThan(Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThan(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThan(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThan(Force<T>)
  nameWithType.vb: Force(Of T).GreaterThan(Force(Of T))
- uid: Towel.Measurements.Force`1.GreaterThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: GreaterThan(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThan_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.GreaterThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: GreaterThan(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThan(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThan(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThan(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).GreaterThan(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Force`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.GreaterThan
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThan
  nameWithType: Force<T>.GreaterThan
  nameWithType.vb: Force(Of T).GreaterThan
- uid: Towel.Measurements.Force`1.GreaterThanOrEqual(Towel.Measurements.Force{`0})
  name: GreaterThanOrEqual(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThanOrEqual_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.GreaterThanOrEqual(Towel.Measurements.Force{`0})
  name.vb: GreaterThanOrEqual(Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThanOrEqual(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThanOrEqual(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThanOrEqual(Force<T>)
  nameWithType.vb: Force(Of T).GreaterThanOrEqual(Force(Of T))
- uid: Towel.Measurements.Force`1.GreaterThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: GreaterThanOrEqual(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThanOrEqual_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.GreaterThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: GreaterThanOrEqual(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThanOrEqual(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThanOrEqual(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThanOrEqual(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).GreaterThanOrEqual(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Force`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThanOrEqual
  nameWithType: Force<T>.GreaterThanOrEqual
  nameWithType.vb: Force(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Force`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Length.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Force`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Length.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.Force<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Force(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Force<T>.Item[Mass.Units, Length.Units, Time.Units, Time.Units]
  nameWithType.vb: Force(Of T).Item(Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Force`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.ForceBaseUnits]
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: P:Towel.Measurements.Force`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.Force<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits]
  fullName.vb: Towel.Measurements.Force(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: Force<T>.Item[MeasurementUnitsSyntaxTypes.ForceBaseUnits]
  nameWithType.vb: Force(Of T).Item(MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.Force`1.Item*
  name: Item
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Item_
  commentId: Overload:Towel.Measurements.Force`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Item
  fullName.vb: Towel.Measurements.Force(Of T).Item
  nameWithType: Force<T>.Item
  nameWithType.vb: Force(Of T).Item
- uid: Towel.Measurements.Force`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LengthUnits2
  commentId: P:Towel.Measurements.Force`1.LengthUnits2
  fullName: Towel.Measurements.Force<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Force(Of T).LengthUnits2
  nameWithType: Force<T>.LengthUnits2
  nameWithType.vb: Force(Of T).LengthUnits2
- uid: Towel.Measurements.Force`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Force`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Force(Of T).LengthUnits2
  nameWithType: Force<T>.LengthUnits2
  nameWithType.vb: Force(Of T).LengthUnits2
- uid: Towel.Measurements.Force`1.LessThan(Towel.Measurements.Force{`0})
  name: LessThan(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThan_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.LessThan(Towel.Measurements.Force{`0})
  name.vb: LessThan(Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThan(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThan(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThan(Force<T>)
  nameWithType.vb: Force(Of T).LessThan(Force(Of T))
- uid: Towel.Measurements.Force`1.LessThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: LessThan(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThan_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.LessThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: LessThan(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThan(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThan(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThan(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).LessThan(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThan_
  commentId: Overload:Towel.Measurements.Force`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.LessThan
  fullName.vb: Towel.Measurements.Force(Of T).LessThan
  nameWithType: Force<T>.LessThan
  nameWithType.vb: Force(Of T).LessThan
- uid: Towel.Measurements.Force`1.LessThanOrEqual(Towel.Measurements.Force{`0})
  name: LessThanOrEqual(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThanOrEqual_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.LessThanOrEqual(Towel.Measurements.Force{`0})
  name.vb: LessThanOrEqual(Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThanOrEqual(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThanOrEqual(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThanOrEqual(Force<T>)
  nameWithType.vb: Force(Of T).LessThanOrEqual(Force(Of T))
- uid: Towel.Measurements.Force`1.LessThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: LessThanOrEqual(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThanOrEqual_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.LessThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: LessThanOrEqual(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThanOrEqual(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThanOrEqual(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThanOrEqual(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).LessThanOrEqual(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Force`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Force(Of T).LessThanOrEqual
  nameWithType: Force<T>.LessThanOrEqual
  nameWithType.vb: Force(Of T).LessThanOrEqual
- uid: Towel.Measurements.Force`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_MassUnits1
  commentId: P:Towel.Measurements.Force`1.MassUnits1
  fullName: Towel.Measurements.Force<T>.MassUnits1
  fullName.vb: Towel.Measurements.Force(Of T).MassUnits1
  nameWithType: Force<T>.MassUnits1
  nameWithType.vb: Force(Of T).MassUnits1
- uid: Towel.Measurements.Force`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Force`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.MassUnits1
  fullName.vb: Towel.Measurements.Force(Of T).MassUnits1
  nameWithType: Force<T>.MassUnits1
  nameWithType.vb: Force(Of T).MassUnits1
- uid: Towel.Measurements.Force`1.Multiply(`0,Towel.Measurements.Force{`0})
  name: Multiply(T, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply__0_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(`0,Towel.Measurements.Force{`0})
  name.vb: Multiply(T, Force(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(T, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(T, Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Multiply(T, Force<T>)
  nameWithType.vb: Force(Of T).Multiply(T, Force(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},`0)
  name: Multiply(Force<T>, T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Force__0___0_
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},`0)
  name.vb: Multiply(Force(Of T), T)
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, T)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), T)
  nameWithType: Force<T>.Multiply(Force<T>, T)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), T)
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Length{`0})
  name: Multiply(Force<T>, Length<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Force(Of T), Length(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Length<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Length(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Force<T>, Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Force(Of T), Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Speed<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Speed(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Time{`0})
  name: Multiply(Force<T>, Time<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Force(Of T), Time(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Time<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Time(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Force<T>, TimeArea<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Force__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Force{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Force(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, TimeArea<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: Force<T>.Multiply(Length<T>)
  nameWithType.vb: Force(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Multiply(Speed<T>)
  nameWithType.vb: Force(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: Force<T>.Multiply(Time<T>)
  nameWithType.vb: Force(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.Force`1.Multiply(Towel.Measurements.TimeArea{`0})
  name: Multiply(TimeArea<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Force`1.Multiply(Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(TimeArea(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.TimeArea(Of T))
  nameWithType: Force<T>.Multiply(TimeArea<T>)
  nameWithType.vb: Force(Of T).Multiply(TimeArea(Of T))
- uid: Towel.Measurements.Force`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Multiply_
  commentId: Overload:Towel.Measurements.Force`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Multiply
  fullName.vb: Towel.Measurements.Force(Of T).Multiply
  nameWithType: Force<T>.Multiply
  nameWithType.vb: Force(Of T).Multiply
- uid: Towel.Measurements.Force`1.NotEqual(Towel.Measurements.Force{`0})
  name: NotEqual(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_NotEqual_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.NotEqual(Towel.Measurements.Force{`0})
  name.vb: NotEqual(Force(Of T))
  fullName: Towel.Measurements.Force<T>.NotEqual(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).NotEqual(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.NotEqual(Force<T>)
  nameWithType.vb: Force(Of T).NotEqual(Force(Of T))
- uid: Towel.Measurements.Force`1.NotEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: NotEqual(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_NotEqual_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.NotEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: NotEqual(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.NotEqual(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).NotEqual(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.NotEqual(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).NotEqual(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_NotEqual_
  commentId: Overload:Towel.Measurements.Force`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.NotEqual
  fullName.vb: Towel.Measurements.Force(Of T).NotEqual
  nameWithType: Force<T>.NotEqual
  nameWithType.vb: Force(Of T).NotEqual
- uid: Towel.Measurements.Force`1.op_Addition(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Addition(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Addition_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Addition(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Addition(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Addition(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Addition(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Addition(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Addition(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Addition_
  commentId: Overload:Towel.Measurements.Force`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Addition
  fullName.vb: Towel.Measurements.Force(Of T).Addition
  nameWithType: Force<T>.Addition
  nameWithType.vb: Force(Of T).Addition
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},`0)
  name: Division(Force<T>, T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0___0_
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},`0)
  name.vb: Division(Force(Of T), T)
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, T)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), T)
  nameWithType: Force<T>.Division(Force<T>, T)
  nameWithType.vb: Force(Of T).Division(Force(Of T), T)
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Force<T>, Acceleration<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Force(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Force<T>.Division(Force<T>, Acceleration<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Area{`0})
  name: Division(Force<T>, Area<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Area{`0})
  name.vb: Division(Force(Of T), Area(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Force<T>.Division(Force<T>, Area<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Area(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Division(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Division(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Division(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Mass{`0})
  name: Division(Force<T>, Mass<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Mass{`0})
  name.vb: Division(Force(Of T), Mass(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Force<T>.Division(Force<T>, Mass<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Mass(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.MassRate{`0})
  name: Division(Force<T>, MassRate<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.MassRate{`0})
  name.vb: Division(Force(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Force<T>.Division(Force<T>, MassRate<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), MassRate(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Pressure{`0})
  name: Division(Force<T>, Pressure<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Pressure{`0})
  name.vb: Division(Force(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Force<T>.Division(Force<T>, Pressure<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Pressure(Of T))
- uid: Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name: Division(Force<T>, Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_Towel_Measurements_Force__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.op_Division(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(Force(Of T), Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Division(Towel.Measurements.Force<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Division(Towel.Measurements.Force(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Division(Force<T>, Speed<T>)
  nameWithType.vb: Force(Of T).Division(Force(Of T), Speed(Of T))
- uid: Towel.Measurements.Force`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Division_
  commentId: Overload:Towel.Measurements.Force`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Division
  fullName.vb: Towel.Measurements.Force(Of T).Division
  nameWithType: Force<T>.Division
  nameWithType.vb: Force(Of T).Division
- uid: Towel.Measurements.Force`1.op_Equality(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Equality(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Equality_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Equality(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Equality(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Equality(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Equality(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Equality(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Equality(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Equality_
  commentId: Overload:Towel.Measurements.Force`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Equality
  fullName.vb: Towel.Measurements.Force(Of T).Equality
  nameWithType: Force<T>.Equality
  nameWithType.vb: Force(Of T).Equality
- uid: Towel.Measurements.Force`1.op_GreaterThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: GreaterThan(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_GreaterThan_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_GreaterThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: GreaterThan(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThan(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThan(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThan(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).GreaterThan(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Force`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.GreaterThan
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThan
  nameWithType: Force<T>.GreaterThan
  nameWithType.vb: Force(Of T).GreaterThan
- uid: Towel.Measurements.Force`1.op_GreaterThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: GreaterThanOrEqual(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_GreaterThanOrEqual_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_GreaterThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: GreaterThanOrEqual(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.GreaterThanOrEqual(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThanOrEqual(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.GreaterThanOrEqual(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).GreaterThanOrEqual(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Force`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Force(Of T).GreaterThanOrEqual
  nameWithType: Force<T>.GreaterThanOrEqual
  nameWithType.vb: Force(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Force`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits})~Towel.Measurements.Force{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.ForceBaseUnits) to Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits___Towel_Measurements_Force__0_
  commentId: M:Towel.Measurements.Force`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits})~Towel.Measurements.Force{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.ForceBaseUnits) to Force(Of T))
  fullName: Towel.Measurements.Force<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits> to Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits) to Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Implicit((T, MeasurementUnitsSyntaxTypes.ForceBaseUnits) to Force<T>)
  nameWithType.vb: Force(Of T).Widening((T, MeasurementUnitsSyntaxTypes.ForceBaseUnits) to Force(Of T))
- uid: Towel.Measurements.Force`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Force`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Force<T>.Implicit
  fullName.vb: Towel.Measurements.Force(Of T).Widening
  nameWithType: Force<T>.Implicit
  nameWithType.vb: Force(Of T).Widening
- uid: Towel.Measurements.Force`1.op_Inequality(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Inequality(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Inequality_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Inequality(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Inequality(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Inequality(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Inequality(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Inequality(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Inequality(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Force`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Inequality
  fullName.vb: Towel.Measurements.Force(Of T).Inequality
  nameWithType: Force<T>.Inequality
  nameWithType.vb: Force(Of T).Inequality
- uid: Towel.Measurements.Force`1.op_LessThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: LessThan(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_LessThan_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_LessThan(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: LessThan(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThan(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThan(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThan(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).LessThan(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Force`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.LessThan
  fullName.vb: Towel.Measurements.Force(Of T).LessThan
  nameWithType: Force<T>.LessThan
  nameWithType.vb: Force(Of T).LessThan
- uid: Towel.Measurements.Force`1.op_LessThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: LessThanOrEqual(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_LessThanOrEqual_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_LessThanOrEqual(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: LessThanOrEqual(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.LessThanOrEqual(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).LessThanOrEqual(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.LessThanOrEqual(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).LessThanOrEqual(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Force`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Force(Of T).LessThanOrEqual
  nameWithType: Force<T>.LessThanOrEqual
  nameWithType.vb: Force(Of T).LessThanOrEqual
- uid: Towel.Measurements.Force`1.op_Multiply(`0,Towel.Measurements.Force{`0})
  name: Multiply(T, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply__0_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Multiply(`0,Towel.Measurements.Force{`0})
  name.vb: Multiply(T, Force(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(T, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(T, Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Multiply(T, Force<T>)
  nameWithType.vb: Force(Of T).Multiply(T, Force(Of T))
- uid: Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},`0)
  name: Multiply(Force<T>, T)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_Towel_Measurements_Force__0___0_
  commentId: M:Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},`0)
  name.vb: Multiply(Force(Of T), T)
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, T)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), T)
  nameWithType: Force<T>.Multiply(Force<T>, T)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), T)
- uid: Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Length{`0})
  name: Multiply(Force<T>, Length<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Force(Of T), Length(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Length<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Length(Of T))
- uid: Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Force<T>, Speed<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Force(Of T), Speed(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Speed<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Speed(Of T))
- uid: Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Time{`0})
  name: Multiply(Force<T>, Time<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_Towel_Measurements_Force__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Force(Of T), Time(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, Time<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), Time(Of T))
- uid: Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Force<T>, TimeArea<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_Towel_Measurements_Force__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Force`1.op_Multiply(Towel.Measurements.Force{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Force(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Force<T>.Multiply(Towel.Measurements.Force<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Multiply(Towel.Measurements.Force(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Force<T>.Multiply(Force<T>, TimeArea<T>)
  nameWithType.vb: Force(Of T).Multiply(Force(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Force`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Force`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Multiply
  fullName.vb: Towel.Measurements.Force(Of T).Multiply
  nameWithType: Force<T>.Multiply
  nameWithType.vb: Force(Of T).Multiply
- uid: Towel.Measurements.Force`1.op_Subtraction(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Subtraction(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Subtraction_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.op_Subtraction(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Subtraction(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Subtraction(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Subtraction(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Subtraction(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Subtraction(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Force`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Subtraction
  fullName.vb: Towel.Measurements.Force(Of T).Subtraction
  nameWithType: Force<T>.Subtraction
  nameWithType.vb: Force(Of T).Subtraction
- uid: Towel.Measurements.Force`1.Subtract(Towel.Measurements.Force{`0})
  name: Subtract(Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Subtract_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Subtract(Towel.Measurements.Force{`0})
  name.vb: Subtract(Force(Of T))
  fullName: Towel.Measurements.Force<T>.Subtract(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Subtract(Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Subtract(Force<T>)
  nameWithType.vb: Force(Of T).Subtract(Force(Of T))
- uid: Towel.Measurements.Force`1.Subtract(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name: Subtract(Force<T>, Force<T>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Subtract_Towel_Measurements_Force__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Force`1.Subtract(Towel.Measurements.Force{`0},Towel.Measurements.Force{`0})
  name.vb: Subtract(Force(Of T), Force(Of T))
  fullName: Towel.Measurements.Force<T>.Subtract(Towel.Measurements.Force<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Force(Of T).Subtract(Towel.Measurements.Force(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Force<T>.Subtract(Force<T>, Force<T>)
  nameWithType.vb: Force(Of T).Subtract(Force(Of T), Force(Of T))
- uid: Towel.Measurements.Force`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_Subtract_
  commentId: Overload:Towel.Measurements.Force`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.Subtract
  fullName.vb: Towel.Measurements.Force(Of T).Subtract
  nameWithType: Force<T>.Subtract
  nameWithType.vb: Force(Of T).Subtract
- uid: Towel.Measurements.Force`1.TimeUnits3
  name: TimeUnits3
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TimeUnits3
  commentId: P:Towel.Measurements.Force`1.TimeUnits3
  fullName: Towel.Measurements.Force<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Force(Of T).TimeUnits3
  nameWithType: Force<T>.TimeUnits3
  nameWithType.vb: Force(Of T).TimeUnits3
- uid: Towel.Measurements.Force`1.TimeUnits3*
  name: TimeUnits3
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TimeUnits3_
  commentId: Overload:Towel.Measurements.Force`1.TimeUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Force(Of T).TimeUnits3
  nameWithType: Force<T>.TimeUnits3
  nameWithType.vb: Force(Of T).TimeUnits3
- uid: Towel.Measurements.Force`1.TimeUnits4
  name: TimeUnits4
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TimeUnits4
  commentId: P:Towel.Measurements.Force`1.TimeUnits4
  fullName: Towel.Measurements.Force<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Force(Of T).TimeUnits4
  nameWithType: Force<T>.TimeUnits4
  nameWithType.vb: Force(Of T).TimeUnits4
- uid: Towel.Measurements.Force`1.TimeUnits4*
  name: TimeUnits4
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TimeUnits4_
  commentId: Overload:Towel.Measurements.Force`1.TimeUnits4
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Force(Of T).TimeUnits4
  nameWithType: Force<T>.TimeUnits4
  nameWithType.vb: Force(Of T).TimeUnits4
- uid: Towel.Measurements.Force`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_ToString
  commentId: M:Towel.Measurements.Force`1.ToString
  fullName: Towel.Measurements.Force<T>.ToString()
  fullName.vb: Towel.Measurements.Force(Of T).ToString()
  nameWithType: Force<T>.ToString()
  nameWithType.vb: Force(Of T).ToString()
- uid: Towel.Measurements.Force`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_ToString_
  commentId: Overload:Towel.Measurements.Force`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.ToString
  fullName.vb: Towel.Measurements.Force(Of T).ToString
  nameWithType: Force<T>.ToString
  nameWithType.vb: Force(Of T).ToString
- uid: Towel.Measurements.Force`1.TryParse(System.String,Towel.Measurements.Force{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Force<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TryParse_System_String_Towel_Measurements_Force__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Force`1.TryParse(System.String,Towel.Measurements.Force{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Force(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Force<T>.TryParse(System.String, out Towel.Measurements.Force<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Force(Of T).TryParse(System.String, ByRef Towel.Measurements.Force(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Force<T>.TryParse(String, out Force<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Force(Of T).TryParse(String, ByRef Force(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Force`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Force-1.html#Towel_Measurements_Force_1_TryParse_
  commentId: Overload:Towel.Measurements.Force`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Force<T>.TryParse
  fullName.vb: Towel.Measurements.Force(Of T).TryParse
  nameWithType: Force<T>.TryParse
  nameWithType.vb: Force(Of T).TryParse
- uid: Towel.Measurements.Length
  name: Length
  href: api/Towel.Measurements.Length.html
  commentId: T:Towel.Measurements.Length
  fullName: Towel.Measurements.Length
  nameWithType: Length
- uid: Towel.Measurements.Length.Units
  name: Length.Units
  href: api/Towel.Measurements.Length.Units.html
  commentId: T:Towel.Measurements.Length.Units
  fullName: Towel.Measurements.Length.Units
  nameWithType: Length.Units
- uid: Towel.Measurements.Length.Units.Attometers
  name: Attometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Attometers
  commentId: F:Towel.Measurements.Length.Units.Attometers
  fullName: Towel.Measurements.Length.Units.Attometers
  nameWithType: Length.Units.Attometers
- uid: Towel.Measurements.Length.Units.Centimeters
  name: Centimeters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Centimeters
  commentId: F:Towel.Measurements.Length.Units.Centimeters
  fullName: Towel.Measurements.Length.Units.Centimeters
  nameWithType: Length.Units.Centimeters
- uid: Towel.Measurements.Length.Units.Decimeters
  name: Decimeters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Decimeters
  commentId: F:Towel.Measurements.Length.Units.Decimeters
  fullName: Towel.Measurements.Length.Units.Decimeters
  nameWithType: Length.Units.Decimeters
- uid: Towel.Measurements.Length.Units.Dekameters
  name: Dekameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Dekameters
  commentId: F:Towel.Measurements.Length.Units.Dekameters
  fullName: Towel.Measurements.Length.Units.Dekameters
  nameWithType: Length.Units.Dekameters
- uid: Towel.Measurements.Length.Units.Exameters
  name: Exameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Exameters
  commentId: F:Towel.Measurements.Length.Units.Exameters
  fullName: Towel.Measurements.Length.Units.Exameters
  nameWithType: Length.Units.Exameters
- uid: Towel.Measurements.Length.Units.Feet
  name: Feet
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Feet
  commentId: F:Towel.Measurements.Length.Units.Feet
  fullName: Towel.Measurements.Length.Units.Feet
  nameWithType: Length.Units.Feet
- uid: Towel.Measurements.Length.Units.Femtometers
  name: Femtometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Femtometers
  commentId: F:Towel.Measurements.Length.Units.Femtometers
  fullName: Towel.Measurements.Length.Units.Femtometers
  nameWithType: Length.Units.Femtometers
- uid: Towel.Measurements.Length.Units.Gigameters
  name: Gigameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Gigameters
  commentId: F:Towel.Measurements.Length.Units.Gigameters
  fullName: Towel.Measurements.Length.Units.Gigameters
  nameWithType: Length.Units.Gigameters
- uid: Towel.Measurements.Length.Units.Hectometers
  name: Hectometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Hectometers
  commentId: F:Towel.Measurements.Length.Units.Hectometers
  fullName: Towel.Measurements.Length.Units.Hectometers
  nameWithType: Length.Units.Hectometers
- uid: Towel.Measurements.Length.Units.Inches
  name: Inches
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Inches
  commentId: F:Towel.Measurements.Length.Units.Inches
  fullName: Towel.Measurements.Length.Units.Inches
  nameWithType: Length.Units.Inches
- uid: Towel.Measurements.Length.Units.Kilometers
  name: Kilometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Kilometers
  commentId: F:Towel.Measurements.Length.Units.Kilometers
  fullName: Towel.Measurements.Length.Units.Kilometers
  nameWithType: Length.Units.Kilometers
- uid: Towel.Measurements.Length.Units.Megameters
  name: Megameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Megameters
  commentId: F:Towel.Measurements.Length.Units.Megameters
  fullName: Towel.Measurements.Length.Units.Megameters
  nameWithType: Length.Units.Megameters
- uid: Towel.Measurements.Length.Units.Meters
  name: Meters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Meters
  commentId: F:Towel.Measurements.Length.Units.Meters
  fullName: Towel.Measurements.Length.Units.Meters
  nameWithType: Length.Units.Meters
- uid: Towel.Measurements.Length.Units.Micrometers
  name: Micrometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Micrometers
  commentId: F:Towel.Measurements.Length.Units.Micrometers
  fullName: Towel.Measurements.Length.Units.Micrometers
  nameWithType: Length.Units.Micrometers
- uid: Towel.Measurements.Length.Units.Miles
  name: Miles
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Miles
  commentId: F:Towel.Measurements.Length.Units.Miles
  fullName: Towel.Measurements.Length.Units.Miles
  nameWithType: Length.Units.Miles
- uid: Towel.Measurements.Length.Units.Millimeters
  name: Millimeters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Millimeters
  commentId: F:Towel.Measurements.Length.Units.Millimeters
  fullName: Towel.Measurements.Length.Units.Millimeters
  nameWithType: Length.Units.Millimeters
- uid: Towel.Measurements.Length.Units.Nanometers
  name: Nanometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Nanometers
  commentId: F:Towel.Measurements.Length.Units.Nanometers
  fullName: Towel.Measurements.Length.Units.Nanometers
  nameWithType: Length.Units.Nanometers
- uid: Towel.Measurements.Length.Units.NauticalMiles
  name: NauticalMiles
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_NauticalMiles
  commentId: F:Towel.Measurements.Length.Units.NauticalMiles
  fullName: Towel.Measurements.Length.Units.NauticalMiles
  nameWithType: Length.Units.NauticalMiles
- uid: Towel.Measurements.Length.Units.Petameters
  name: Petameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Petameters
  commentId: F:Towel.Measurements.Length.Units.Petameters
  fullName: Towel.Measurements.Length.Units.Petameters
  nameWithType: Length.Units.Petameters
- uid: Towel.Measurements.Length.Units.Picometers
  name: Picometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Picometers
  commentId: F:Towel.Measurements.Length.Units.Picometers
  fullName: Towel.Measurements.Length.Units.Picometers
  nameWithType: Length.Units.Picometers
- uid: Towel.Measurements.Length.Units.Terameters
  name: Terameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Terameters
  commentId: F:Towel.Measurements.Length.Units.Terameters
  fullName: Towel.Measurements.Length.Units.Terameters
  nameWithType: Length.Units.Terameters
- uid: Towel.Measurements.Length.Units.Yards
  name: Yards
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Yards
  commentId: F:Towel.Measurements.Length.Units.Yards
  fullName: Towel.Measurements.Length.Units.Yards
  nameWithType: Length.Units.Yards
- uid: Towel.Measurements.Length.Units.Yoctometers
  name: Yoctometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Yoctometers
  commentId: F:Towel.Measurements.Length.Units.Yoctometers
  fullName: Towel.Measurements.Length.Units.Yoctometers
  nameWithType: Length.Units.Yoctometers
- uid: Towel.Measurements.Length.Units.Yottameters
  name: Yottameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Yottameters
  commentId: F:Towel.Measurements.Length.Units.Yottameters
  fullName: Towel.Measurements.Length.Units.Yottameters
  nameWithType: Length.Units.Yottameters
- uid: Towel.Measurements.Length.Units.Zeptometers
  name: Zeptometers
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Zeptometers
  commentId: F:Towel.Measurements.Length.Units.Zeptometers
  fullName: Towel.Measurements.Length.Units.Zeptometers
  nameWithType: Length.Units.Zeptometers
- uid: Towel.Measurements.Length.Units.Zettameters
  name: Zettameters
  href: api/Towel.Measurements.Length.Units.html#Towel_Measurements_Length_Units_Zettameters
  commentId: F:Towel.Measurements.Length.Units.Zettameters
  fullName: Towel.Measurements.Length.Units.Zettameters
  nameWithType: Length.Units.Zettameters
- uid: Towel.Measurements.Length`1
  name: Length<T>
  href: api/Towel.Measurements.Length-1.html
  commentId: T:Towel.Measurements.Length`1
  name.vb: Length(Of T)
  fullName: Towel.Measurements.Length<T>
  fullName.vb: Towel.Measurements.Length(Of T)
  nameWithType: Length<T>
  nameWithType.vb: Length(Of T)
- uid: Towel.Measurements.Length`1.#ctor(`0,Towel.Measurements.Length.Units)
  name: Length(T, Length.Units)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1__ctor__0_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Length`1.#ctor(`0,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Length<T>.Length(T, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Length(Of T).Length(T, Towel.Measurements.Length.Units)
  nameWithType: Length<T>.Length(T, Length.Units)
  nameWithType.vb: Length(Of T).Length(T, Length.Units)
- uid: Towel.Measurements.Length`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Length(T, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.Length`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.Length<T>.Length(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName.vb: Towel.Measurements.Length(Of T).Length(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: Length<T>.Length(T, MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType.vb: Length(Of T).Length(T, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.Length`1.#ctor*
  name: Length
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1__ctor_
  commentId: Overload:Towel.Measurements.Length`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Length
  fullName.vb: Towel.Measurements.Length(Of T).Length
  nameWithType: Length<T>.Length
  nameWithType.vb: Length(Of T).Length
- uid: Towel.Measurements.Length`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Add__0_
  commentId: M:Towel.Measurements.Length`1.Add(`0)
  fullName: Towel.Measurements.Length<T>.Add(T)
  fullName.vb: Towel.Measurements.Length(Of T).Add(T)
  nameWithType: Length<T>.Add(T)
  nameWithType.vb: Length(Of T).Add(T)
- uid: Towel.Measurements.Length`1.Add(Towel.Measurements.Length{`0})
  name: Add(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Add_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Add(Towel.Measurements.Length{`0})
  name.vb: Add(Length(Of T))
  fullName: Towel.Measurements.Length<T>.Add(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Add(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Add(Length<T>)
  nameWithType.vb: Length(Of T).Add(Length(Of T))
- uid: Towel.Measurements.Length`1.Add(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Add(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Add_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Add(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Add(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Add(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Add(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Add(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Add(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.Add*
  name: Add
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Add_
  commentId: Overload:Towel.Measurements.Length`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Add
  fullName.vb: Towel.Measurements.Length(Of T).Add
  nameWithType: Length<T>.Add
  nameWithType.vb: Length(Of T).Add
- uid: Towel.Measurements.Length`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Length.Units, Length.Units)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Length`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Length<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Length(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Length<T>.Convert(T, Length.Units, Length.Units)
  nameWithType.vb: Length(Of T).Convert(T, Length.Units, Length.Units)
- uid: Towel.Measurements.Length`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.Length`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.Length<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName.vb: Towel.Measurements.Length(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: Length<T>.Convert(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType.vb: Length(Of T).Convert(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.Length`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Convert_
  commentId: Overload:Towel.Measurements.Length`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Convert
  fullName.vb: Towel.Measurements.Length(Of T).Convert
  nameWithType: Length<T>.Convert
  nameWithType.vb: Length(Of T).Convert
- uid: Towel.Measurements.Length`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide__0_
  commentId: M:Towel.Measurements.Length`1.Divide(`0)
  fullName: Towel.Measurements.Length<T>.Divide(T)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(T)
  nameWithType: Length<T>.Divide(T)
  nameWithType.vb: Length(Of T).Divide(T)
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Length<T>.Divide(Acceleration<T>)
  nameWithType.vb: Length(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Divide(Length<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},`0)
  name: Divide(Length<T>, T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0___0_
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},`0)
  name.vb: Divide(Length(Of T), T)
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, T)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), T)
  nameWithType: Length<T>.Divide(Length<T>, T)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), T)
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Length<T>, Acceleration<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Length(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Length<T>.Divide(Length<T>, Acceleration<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Divide(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Divide(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Speed{`0})
  name: Divide(Length<T>, Speed<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(Length(Of T), Speed(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Length<T>.Divide(Length<T>, Speed<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), Speed(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Time{`0})
  name: Divide(Length<T>, Time<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Length(Of T), Time(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Length<T>.Divide(Length<T>, Time<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), Time(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.TimeArea{`0})
  name: Divide(Length<T>, TimeArea<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Length__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Length{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Divide(Length(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Length<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Length(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Length<T>.Divide(Length<T>, TimeArea<T>)
  nameWithType.vb: Length(Of T).Divide(Length(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: Length<T>.Divide(Speed<T>)
  nameWithType.vb: Length(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Length<T>.Divide(Time<T>)
  nameWithType.vb: Length(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Length`1.Divide(Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Length`1.Divide(Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T))
  fullName: Towel.Measurements.Length<T>.Divide(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Divide(Towel.Measurements.TimeArea(Of T))
  nameWithType: Length<T>.Divide(TimeArea<T>)
  nameWithType.vb: Length(Of T).Divide(TimeArea(Of T))
- uid: Towel.Measurements.Length`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Divide_
  commentId: Overload:Towel.Measurements.Length`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Divide
  fullName.vb: Towel.Measurements.Length(Of T).Divide
  nameWithType: Length<T>.Divide
  nameWithType.vb: Length(Of T).Divide
- uid: Towel.Measurements.Length`1.Equal(Towel.Measurements.Length{`0})
  name: Equal(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Equal_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Equal(Towel.Measurements.Length{`0})
  name.vb: Equal(Length(Of T))
  fullName: Towel.Measurements.Length<T>.Equal(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Equal(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Equal(Length<T>)
  nameWithType.vb: Length(Of T).Equal(Length(Of T))
- uid: Towel.Measurements.Length`1.Equal(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Equal(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Equal_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Equal(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Equal(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Equal(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Equal(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Equal(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Equal(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Equal_
  commentId: Overload:Towel.Measurements.Length`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Equal
  fullName.vb: Towel.Measurements.Length(Of T).Equal
  nameWithType: Length<T>.Equal
  nameWithType.vb: Length(Of T).Equal
- uid: Towel.Measurements.Length`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Length`1.Equals(System.Object)
  fullName: Towel.Measurements.Length<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Length(Of T).Equals(System.Object)
  nameWithType: Length<T>.Equals(Object)
  nameWithType.vb: Length(Of T).Equals(Object)
- uid: Towel.Measurements.Length`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Equals_
  commentId: Overload:Towel.Measurements.Length`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Equals
  fullName.vb: Towel.Measurements.Length(Of T).Equals
  nameWithType: Length<T>.Equals
  nameWithType.vb: Length(Of T).Equals
- uid: Towel.Measurements.Length`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GetHashCode
  commentId: M:Towel.Measurements.Length`1.GetHashCode
  fullName: Towel.Measurements.Length<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Length(Of T).GetHashCode()
  nameWithType: Length<T>.GetHashCode()
  nameWithType.vb: Length(Of T).GetHashCode()
- uid: Towel.Measurements.Length`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Length`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.GetHashCode
  fullName.vb: Towel.Measurements.Length(Of T).GetHashCode
  nameWithType: Length<T>.GetHashCode
  nameWithType.vb: Length(Of T).GetHashCode
- uid: Towel.Measurements.Length`1.GreaterThan(Towel.Measurements.Length{`0})
  name: GreaterThan(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThan_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.GreaterThan(Towel.Measurements.Length{`0})
  name.vb: GreaterThan(Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThan(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThan(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThan(Length<T>)
  nameWithType.vb: Length(Of T).GreaterThan(Length(Of T))
- uid: Towel.Measurements.Length`1.GreaterThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: GreaterThan(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThan_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.GreaterThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: GreaterThan(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThan(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThan(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThan(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).GreaterThan(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Length`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.GreaterThan
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThan
  nameWithType: Length<T>.GreaterThan
  nameWithType.vb: Length(Of T).GreaterThan
- uid: Towel.Measurements.Length`1.GreaterThanOrEqual(Towel.Measurements.Length{`0})
  name: GreaterThanOrEqual(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThanOrEqual_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.GreaterThanOrEqual(Towel.Measurements.Length{`0})
  name.vb: GreaterThanOrEqual(Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThanOrEqual(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThanOrEqual(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThanOrEqual(Length<T>)
  nameWithType.vb: Length(Of T).GreaterThanOrEqual(Length(Of T))
- uid: Towel.Measurements.Length`1.GreaterThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: GreaterThanOrEqual(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThanOrEqual_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.GreaterThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: GreaterThanOrEqual(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThanOrEqual(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThanOrEqual(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThanOrEqual(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).GreaterThanOrEqual(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Length`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThanOrEqual
  nameWithType: Length<T>.GreaterThanOrEqual
  nameWithType.vb: Length(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Length`1.Item(Towel.Measurements.Length.Units)
  name: Item[Length.Units]
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Item_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.Length`1.Item(Towel.Measurements.Length.Units)
  name.vb: Item(Length.Units)
  fullName: Towel.Measurements.Length<T>.Item[Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.Length(Of T).Item(Towel.Measurements.Length.Units)
  nameWithType: Length<T>.Item[Length.Units]
  nameWithType.vb: Length(Of T).Item(Length.Units)
- uid: Towel.Measurements.Length`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Item[MeasurementUnitsSyntaxTypes.LengthUnits]
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: P:Towel.Measurements.Length`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.Length<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits]
  fullName.vb: Towel.Measurements.Length(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: Length<T>.Item[MeasurementUnitsSyntaxTypes.LengthUnits]
  nameWithType.vb: Length(Of T).Item(MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.Length`1.Item*
  name: Item
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Item_
  commentId: Overload:Towel.Measurements.Length`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Item
  fullName.vb: Towel.Measurements.Length(Of T).Item
  nameWithType: Length<T>.Item
  nameWithType.vb: Length(Of T).Item
- uid: Towel.Measurements.Length`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LengthUnits1
  commentId: P:Towel.Measurements.Length`1.LengthUnits1
  fullName: Towel.Measurements.Length<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Length(Of T).LengthUnits1
  nameWithType: Length<T>.LengthUnits1
  nameWithType.vb: Length(Of T).LengthUnits1
- uid: Towel.Measurements.Length`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.Length`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Length(Of T).LengthUnits1
  nameWithType: Length<T>.LengthUnits1
  nameWithType.vb: Length(Of T).LengthUnits1
- uid: Towel.Measurements.Length`1.LessThan(Towel.Measurements.Length{`0})
  name: LessThan(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThan_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.LessThan(Towel.Measurements.Length{`0})
  name.vb: LessThan(Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThan(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThan(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThan(Length<T>)
  nameWithType.vb: Length(Of T).LessThan(Length(Of T))
- uid: Towel.Measurements.Length`1.LessThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: LessThan(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThan_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.LessThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: LessThan(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThan(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThan(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThan(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).LessThan(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThan_
  commentId: Overload:Towel.Measurements.Length`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.LessThan
  fullName.vb: Towel.Measurements.Length(Of T).LessThan
  nameWithType: Length<T>.LessThan
  nameWithType.vb: Length(Of T).LessThan
- uid: Towel.Measurements.Length`1.LessThanOrEqual(Towel.Measurements.Length{`0})
  name: LessThanOrEqual(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThanOrEqual_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.LessThanOrEqual(Towel.Measurements.Length{`0})
  name.vb: LessThanOrEqual(Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThanOrEqual(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThanOrEqual(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThanOrEqual(Length<T>)
  nameWithType.vb: Length(Of T).LessThanOrEqual(Length(Of T))
- uid: Towel.Measurements.Length`1.LessThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: LessThanOrEqual(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThanOrEqual_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.LessThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: LessThanOrEqual(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThanOrEqual(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThanOrEqual(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThanOrEqual(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).LessThanOrEqual(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Length`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Length(Of T).LessThanOrEqual
  nameWithType: Length<T>.LessThanOrEqual
  nameWithType.vb: Length(Of T).LessThanOrEqual
- uid: Towel.Measurements.Length`1.Multiply(`0,Towel.Measurements.Length{`0})
  name: Multiply(T, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply__0_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(`0,Towel.Measurements.Length{`0})
  name.vb: Multiply(T, Length(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(T, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(T, Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Multiply(T, Length<T>)
  nameWithType.vb: Length(Of T).Multiply(T, Length(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: Length<T>.Multiply(Area<T>)
  nameWithType.vb: Length(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name: Multiply(AreaDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(AreaDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Length<T>.Multiply(AreaDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(AreaDensity(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Density{`0})
  name: Multiply(Density<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Density{`0})
  name.vb: Multiply(Density(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Density(Of T))
  nameWithType: Length<T>.Multiply(Density<T>)
  nameWithType.vb: Length(Of T).Multiply(Density(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Force{`0})
  name: Multiply(Force<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Force{`0})
  name.vb: Multiply(Force(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Force(Of T))
  nameWithType: Length<T>.Multiply(Force<T>)
  nameWithType.vb: Length(Of T).Multiply(Force(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Multiply(Length<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},`0)
  name: Multiply(Length<T>, T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0___0_
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},`0)
  name.vb: Multiply(Length(Of T), T)
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, T)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), T)
  nameWithType: Length<T>.Multiply(Length<T>, T)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), T)
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Area{`0})
  name: Multiply(Length<T>, Area<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Length(Of T), Area(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Area<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Area(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Length<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Length(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, AreaDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Density{`0})
  name: Multiply(Length<T>, Density<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Length(Of T), Density(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Density<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Density(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Force{`0})
  name: Multiply(Length<T>, Force<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Length(Of T), Force(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Force<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Force(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Multiply(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Length<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Length(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, LinearDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Length<T>, Mass<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Length(Of T), Mass(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Mass<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Mass(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Length<T>, MassRate<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Length__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Length{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Length(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, MassRate<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), MassRate(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name: Multiply(LinearDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(LinearDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.LinearDensity(Of T))
  nameWithType: Length<T>.Multiply(LinearDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(LinearDensity(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.Mass{`0})
  name: Multiply(Mass<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.Mass{`0})
  name.vb: Multiply(Mass(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Mass(Of T))
  nameWithType: Length<T>.Multiply(Mass<T>)
  nameWithType.vb: Length(Of T).Multiply(Mass(Of T))
- uid: Towel.Measurements.Length`1.Multiply(Towel.Measurements.MassRate{`0})
  name: Multiply(MassRate<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Length`1.Multiply(Towel.Measurements.MassRate{`0})
  name.vb: Multiply(MassRate(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.MassRate(Of T))
  nameWithType: Length<T>.Multiply(MassRate<T>)
  nameWithType.vb: Length(Of T).Multiply(MassRate(Of T))
- uid: Towel.Measurements.Length`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Multiply_
  commentId: Overload:Towel.Measurements.Length`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Multiply
  fullName.vb: Towel.Measurements.Length(Of T).Multiply
  nameWithType: Length<T>.Multiply
  nameWithType.vb: Length(Of T).Multiply
- uid: Towel.Measurements.Length`1.NotEqual(Towel.Measurements.Length{`0})
  name: NotEqual(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_NotEqual_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.NotEqual(Towel.Measurements.Length{`0})
  name.vb: NotEqual(Length(Of T))
  fullName: Towel.Measurements.Length<T>.NotEqual(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).NotEqual(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.NotEqual(Length<T>)
  nameWithType.vb: Length(Of T).NotEqual(Length(Of T))
- uid: Towel.Measurements.Length`1.NotEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: NotEqual(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_NotEqual_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.NotEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: NotEqual(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.NotEqual(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).NotEqual(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.NotEqual(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).NotEqual(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_NotEqual_
  commentId: Overload:Towel.Measurements.Length`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.NotEqual
  fullName.vb: Towel.Measurements.Length(Of T).NotEqual
  nameWithType: Length<T>.NotEqual
  nameWithType.vb: Length(Of T).NotEqual
- uid: Towel.Measurements.Length`1.op_Addition(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Addition(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Addition_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Addition(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Addition(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Addition(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Addition(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Addition(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Addition(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Addition_
  commentId: Overload:Towel.Measurements.Length`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Addition
  fullName.vb: Towel.Measurements.Length(Of T).Addition
  nameWithType: Length<T>.Addition
  nameWithType.vb: Length(Of T).Addition
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},`0)
  name: Division(Length<T>, T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0___0_
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},`0)
  name.vb: Division(Length(Of T), T)
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, T)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), T)
  nameWithType: Length<T>.Division(Length<T>, T)
  nameWithType.vb: Length(Of T).Division(Length(Of T), T)
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Length<T>, Acceleration<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Length(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Length<T>.Division(Length<T>, Acceleration<T>)
  nameWithType.vb: Length(Of T).Division(Length(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Division(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Division(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Division(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Division(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Speed{`0})
  name: Division(Length<T>, Speed<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(Length(Of T), Speed(Of T))
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Length<T>.Division(Length<T>, Speed<T>)
  nameWithType.vb: Length(Of T).Division(Length(Of T), Speed(Of T))
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Time{`0})
  name: Division(Length<T>, Time<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Length(Of T), Time(Of T))
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Length<T>.Division(Length<T>, Time<T>)
  nameWithType.vb: Length(Of T).Division(Length(Of T), Time(Of T))
- uid: Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.TimeArea{`0})
  name: Division(Length<T>, TimeArea<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_Towel_Measurements_Length__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Length`1.op_Division(Towel.Measurements.Length{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Division(Length(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Length<T>.Division(Towel.Measurements.Length<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Division(Towel.Measurements.Length(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Length<T>.Division(Length<T>, TimeArea<T>)
  nameWithType.vb: Length(Of T).Division(Length(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Length`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Division_
  commentId: Overload:Towel.Measurements.Length`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Division
  fullName.vb: Towel.Measurements.Length(Of T).Division
  nameWithType: Length<T>.Division
  nameWithType.vb: Length(Of T).Division
- uid: Towel.Measurements.Length`1.op_Equality(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Equality(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Equality_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Equality(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Equality(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Equality(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Equality(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Equality(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Equality(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Equality_
  commentId: Overload:Towel.Measurements.Length`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Equality
  fullName.vb: Towel.Measurements.Length(Of T).Equality
  nameWithType: Length<T>.Equality
  nameWithType.vb: Length(Of T).Equality
- uid: Towel.Measurements.Length`1.op_GreaterThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: GreaterThan(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_GreaterThan_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_GreaterThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: GreaterThan(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThan(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThan(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThan(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).GreaterThan(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Length`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.GreaterThan
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThan
  nameWithType: Length<T>.GreaterThan
  nameWithType.vb: Length(Of T).GreaterThan
- uid: Towel.Measurements.Length`1.op_GreaterThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: GreaterThanOrEqual(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_GreaterThanOrEqual_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_GreaterThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: GreaterThanOrEqual(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.GreaterThanOrEqual(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThanOrEqual(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.GreaterThanOrEqual(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).GreaterThanOrEqual(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Length`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Length(Of T).GreaterThanOrEqual
  nameWithType: Length<T>.GreaterThanOrEqual
  nameWithType.vb: Length(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Length`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits})~Towel.Measurements.Length{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.LengthUnits) to Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits___Towel_Measurements_Length__0_
  commentId: M:Towel.Measurements.Length`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits})~Towel.Measurements.Length{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.LengthUnits) to Length(Of T))
  fullName: Towel.Measurements.Length<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits> to Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits) to Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Implicit((T, MeasurementUnitsSyntaxTypes.LengthUnits) to Length<T>)
  nameWithType.vb: Length(Of T).Widening((T, MeasurementUnitsSyntaxTypes.LengthUnits) to Length(Of T))
- uid: Towel.Measurements.Length`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Length`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Length<T>.Implicit
  fullName.vb: Towel.Measurements.Length(Of T).Widening
  nameWithType: Length<T>.Implicit
  nameWithType.vb: Length(Of T).Widening
- uid: Towel.Measurements.Length`1.op_Inequality(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Inequality(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Inequality_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Inequality(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Inequality(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Inequality(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Inequality(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Inequality(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Inequality(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Length`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Inequality
  fullName.vb: Towel.Measurements.Length(Of T).Inequality
  nameWithType: Length<T>.Inequality
  nameWithType.vb: Length(Of T).Inequality
- uid: Towel.Measurements.Length`1.op_LessThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: LessThan(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_LessThan_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_LessThan(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: LessThan(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThan(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThan(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThan(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).LessThan(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Length`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.LessThan
  fullName.vb: Towel.Measurements.Length(Of T).LessThan
  nameWithType: Length<T>.LessThan
  nameWithType.vb: Length(Of T).LessThan
- uid: Towel.Measurements.Length`1.op_LessThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: LessThanOrEqual(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_LessThanOrEqual_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_LessThanOrEqual(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: LessThanOrEqual(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.LessThanOrEqual(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).LessThanOrEqual(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.LessThanOrEqual(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).LessThanOrEqual(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Length`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Length(Of T).LessThanOrEqual
  nameWithType: Length<T>.LessThanOrEqual
  nameWithType.vb: Length(Of T).LessThanOrEqual
- uid: Towel.Measurements.Length`1.op_Multiply(`0,Towel.Measurements.Length{`0})
  name: Multiply(T, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply__0_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(`0,Towel.Measurements.Length{`0})
  name.vb: Multiply(T, Length(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(T, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(T, Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Multiply(T, Length<T>)
  nameWithType.vb: Length(Of T).Multiply(T, Length(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},`0)
  name: Multiply(Length<T>, T)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0___0_
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},`0)
  name.vb: Multiply(Length(Of T), T)
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, T)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), T)
  nameWithType: Length<T>.Multiply(Length<T>, T)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), T)
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Area{`0})
  name: Multiply(Length<T>, Area<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Length(Of T), Area(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Area<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Area(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Length<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Length(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, AreaDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Density{`0})
  name: Multiply(Length<T>, Density<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Length(Of T), Density(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Density<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Density(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Force{`0})
  name: Multiply(Length<T>, Force<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Length(Of T), Force(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Force<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Force(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Multiply(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Length<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Length(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, LinearDensity<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Length<T>, Mass<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Length(Of T), Mass(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, Mass<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), Mass(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Length<T>, MassRate<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_Towel_Measurements_Length__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Length`1.op_Multiply(Towel.Measurements.Length{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Length(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Length<T>.Multiply(Towel.Measurements.Length<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Multiply(Towel.Measurements.Length(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Length<T>.Multiply(Length<T>, MassRate<T>)
  nameWithType.vb: Length(Of T).Multiply(Length(Of T), MassRate(Of T))
- uid: Towel.Measurements.Length`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Length`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Multiply
  fullName.vb: Towel.Measurements.Length(Of T).Multiply
  nameWithType: Length<T>.Multiply
  nameWithType.vb: Length(Of T).Multiply
- uid: Towel.Measurements.Length`1.op_Subtraction(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Subtraction(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Subtraction_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.op_Subtraction(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Subtraction(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Subtraction(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Subtraction(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Subtraction(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Subtraction(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Length`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Subtraction
  fullName.vb: Towel.Measurements.Length(Of T).Subtraction
  nameWithType: Length<T>.Subtraction
  nameWithType.vb: Length(Of T).Subtraction
- uid: Towel.Measurements.Length`1.Subtract(Towel.Measurements.Length{`0})
  name: Subtract(Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Subtract_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Subtract(Towel.Measurements.Length{`0})
  name.vb: Subtract(Length(Of T))
  fullName: Towel.Measurements.Length<T>.Subtract(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Subtract(Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Subtract(Length<T>)
  nameWithType.vb: Length(Of T).Subtract(Length(Of T))
- uid: Towel.Measurements.Length`1.Subtract(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name: Subtract(Length<T>, Length<T>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Subtract_Towel_Measurements_Length__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Length`1.Subtract(Towel.Measurements.Length{`0},Towel.Measurements.Length{`0})
  name.vb: Subtract(Length(Of T), Length(Of T))
  fullName: Towel.Measurements.Length<T>.Subtract(Towel.Measurements.Length<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Length(Of T).Subtract(Towel.Measurements.Length(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Length<T>.Subtract(Length<T>, Length<T>)
  nameWithType.vb: Length(Of T).Subtract(Length(Of T), Length(Of T))
- uid: Towel.Measurements.Length`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_Subtract_
  commentId: Overload:Towel.Measurements.Length`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.Subtract
  fullName.vb: Towel.Measurements.Length(Of T).Subtract
  nameWithType: Length<T>.Subtract
  nameWithType.vb: Length(Of T).Subtract
- uid: Towel.Measurements.Length`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_ToString
  commentId: M:Towel.Measurements.Length`1.ToString
  fullName: Towel.Measurements.Length<T>.ToString()
  fullName.vb: Towel.Measurements.Length(Of T).ToString()
  nameWithType: Length<T>.ToString()
  nameWithType.vb: Length(Of T).ToString()
- uid: Towel.Measurements.Length`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_ToString_
  commentId: Overload:Towel.Measurements.Length`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.ToString
  fullName.vb: Towel.Measurements.Length(Of T).ToString
  nameWithType: Length<T>.ToString
  nameWithType.vb: Length(Of T).ToString
- uid: Towel.Measurements.Length`1.TryParse(System.String,Towel.Measurements.Length{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Length<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_TryParse_System_String_Towel_Measurements_Length__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Length`1.TryParse(System.String,Towel.Measurements.Length{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Length(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Length<T>.TryParse(System.String, out Towel.Measurements.Length<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Length(Of T).TryParse(System.String, ByRef Towel.Measurements.Length(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Length<T>.TryParse(String, out Length<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Length(Of T).TryParse(String, ByRef Length(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Length`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Length-1.html#Towel_Measurements_Length_1_TryParse_
  commentId: Overload:Towel.Measurements.Length`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Length<T>.TryParse
  fullName.vb: Towel.Measurements.Length(Of T).TryParse
  nameWithType: Length<T>.TryParse
  nameWithType.vb: Length(Of T).TryParse
- uid: Towel.Measurements.LinearDensity`1
  name: LinearDensity<T>
  href: api/Towel.Measurements.LinearDensity-1.html
  commentId: T:Towel.Measurements.LinearDensity`1
  name.vb: LinearDensity(Of T)
  fullName: Towel.Measurements.LinearDensity<T>
  fullName.vb: Towel.Measurements.LinearDensity(Of T)
  nameWithType: LinearDensity<T>
  nameWithType.vb: LinearDensity(Of T)
- uid: Towel.Measurements.LinearDensity`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: LinearDensity(T, Mass.Units, Length.Units)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.LinearDensity`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.LinearDensity<T>.LinearDensity(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LinearDensity(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearDensity<T>.LinearDensity(T, Mass.Units, Length.Units)
  nameWithType.vb: LinearDensity(Of T).LinearDensity(T, Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearDensity`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name: LinearDensity(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_
  commentId: M:Towel.Measurements.LinearDensity`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName: Towel.Measurements.LinearDensity<T>.LinearDensity(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LinearDensity(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType: LinearDensity<T>.LinearDensity(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType.vb: LinearDensity(Of T).LinearDensity(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
- uid: Towel.Measurements.LinearDensity`1.#ctor*
  name: LinearDensity
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1__ctor_
  commentId: Overload:Towel.Measurements.LinearDensity`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LinearDensity
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LinearDensity
  nameWithType: LinearDensity<T>.LinearDensity
  nameWithType.vb: LinearDensity(Of T).LinearDensity
- uid: Towel.Measurements.LinearDensity`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Add__0_
  commentId: M:Towel.Measurements.LinearDensity`1.Add(`0)
  fullName: Towel.Measurements.LinearDensity<T>.Add(T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Add(T)
  nameWithType: LinearDensity<T>.Add(T)
  nameWithType.vb: LinearDensity(Of T).Add(T)
- uid: Towel.Measurements.LinearDensity`1.Add(Towel.Measurements.LinearDensity{`0})
  name: Add(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Add_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Add(Towel.Measurements.LinearDensity{`0})
  name.vb: Add(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Add(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Add(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Add(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Add(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Add(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Add(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Add_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Add(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Add(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Add(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Add(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Add(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Add(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Add*
  name: Add
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Add_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Add
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Add
  nameWithType: LinearDensity<T>.Add
  nameWithType.vb: LinearDensity(Of T).Add
- uid: Towel.Measurements.LinearDensity`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.LinearDensity`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.LinearDensity<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearDensity<T>.Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
  nameWithType.vb: LinearDensity(Of T).Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearDensity`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_
  commentId: M:Towel.Measurements.LinearDensity`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName: Towel.Measurements.LinearDensity<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType: LinearDensity<T>.Convert(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType.vb: LinearDensity(Of T).Convert(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
- uid: Towel.Measurements.LinearDensity`1.Convert*
  name: Convert
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Convert_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Convert
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Convert
  nameWithType: LinearDensity<T>.Convert
  nameWithType.vb: LinearDensity(Of T).Convert
- uid: Towel.Measurements.LinearDensity`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide__0_
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(`0)
  fullName: Towel.Measurements.LinearDensity<T>.Divide(T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(T)
  nameWithType: LinearDensity<T>.Divide(T)
  nameWithType.vb: LinearDensity(Of T).Divide(T)
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Divide(Area<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearDensity<T>.Divide(AreaDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Density{`0})
  name: Divide(Density<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.Density(Of T))
  nameWithType: LinearDensity<T>.Divide(Density<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(Density(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Divide(Length<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},`0)
  name: Divide(LinearDensity<T>, T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0___0_
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},`0)
  name.vb: Divide(LinearDensity(Of T), T)
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), T)
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, T)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), T)
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name: Divide(LinearDensity<T>, Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(LinearDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, Area<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(LinearDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(LinearDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, AreaDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Density{`0})
  name: Divide(LinearDensity<T>, Density<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Density{`0})
  name.vb: Divide(LinearDensity(Of T), Density(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Density(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, Density<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), Density(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name: Divide(LinearDensity<T>, Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(LinearDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, Length<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Pressure{`0})
  name: Divide(LinearDensity<T>, Pressure<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Pressure{`0})
  name.vb: Divide(LinearDensity(Of T), Pressure(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, Pressure<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), Pressure(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.TimeArea{`0})
  name: Divide(LinearDensity<T>, TimeArea<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_LinearDensity__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.LinearDensity{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Divide(LinearDensity(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.LinearDensity<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearDensity<T>.Divide(LinearDensity<T>, TimeArea<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(LinearDensity(Of T), TimeArea(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.Pressure(Of T))
  nameWithType: LinearDensity<T>.Divide(Pressure<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(Pressure(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Divide(Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Divide(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide(Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearDensity<T>.Divide(TimeArea<T>)
  nameWithType.vb: LinearDensity(Of T).Divide(TimeArea(Of T))
- uid: Towel.Measurements.LinearDensity`1.Divide*
  name: Divide
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Divide_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Divide
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Divide
  nameWithType: LinearDensity<T>.Divide
  nameWithType.vb: LinearDensity(Of T).Divide
- uid: Towel.Measurements.LinearDensity`1.Equal(Towel.Measurements.LinearDensity{`0})
  name: Equal(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Equal_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Equal(Towel.Measurements.LinearDensity{`0})
  name.vb: Equal(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Equal(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equal(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Equal(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Equal(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Equal(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Equal(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Equal_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Equal(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Equal(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Equal(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equal(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Equal(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Equal(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Equal*
  name: Equal
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Equal_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Equal
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equal
  nameWithType: LinearDensity<T>.Equal
  nameWithType.vb: LinearDensity(Of T).Equal
- uid: Towel.Measurements.LinearDensity`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Equals_System_Object_
  commentId: M:Towel.Measurements.LinearDensity`1.Equals(System.Object)
  fullName: Towel.Measurements.LinearDensity<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equals(System.Object)
  nameWithType: LinearDensity<T>.Equals(Object)
  nameWithType.vb: LinearDensity(Of T).Equals(Object)
- uid: Towel.Measurements.LinearDensity`1.Equals*
  name: Equals
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Equals_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Equals
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equals
  nameWithType: LinearDensity<T>.Equals
  nameWithType.vb: LinearDensity(Of T).Equals
- uid: Towel.Measurements.LinearDensity`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GetHashCode
  commentId: M:Towel.Measurements.LinearDensity`1.GetHashCode
  fullName: Towel.Measurements.LinearDensity<T>.GetHashCode()
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GetHashCode()
  nameWithType: LinearDensity<T>.GetHashCode()
  nameWithType.vb: LinearDensity(Of T).GetHashCode()
- uid: Towel.Measurements.LinearDensity`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GetHashCode_
  commentId: Overload:Towel.Measurements.LinearDensity`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.GetHashCode
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GetHashCode
  nameWithType: LinearDensity<T>.GetHashCode
  nameWithType.vb: LinearDensity(Of T).GetHashCode
- uid: Towel.Measurements.LinearDensity`1.GreaterThan(Towel.Measurements.LinearDensity{`0})
  name: GreaterThan(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThan_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.GreaterThan(Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThan(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThan(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThan(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThan(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThan(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.GreaterThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: GreaterThan(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThan_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.GreaterThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThan(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThan(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThan(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThan(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThan(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearDensity`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThan
  nameWithType: LinearDensity<T>.GreaterThan
  nameWithType.vb: LinearDensity(Of T).GreaterThan
- uid: Towel.Measurements.LinearDensity`1.GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0})
  name: GreaterThanOrEqual(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThanOrEqual_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThanOrEqual(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThanOrEqual(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThanOrEqual(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThanOrEqual(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThanOrEqual(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: GreaterThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThanOrEqual_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThanOrEqual(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThanOrEqual(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearDensity`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThanOrEqual
  nameWithType: LinearDensity<T>.GreaterThanOrEqual
  nameWithType.vb: LinearDensity(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearDensity`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: Item[Mass.Units, Length.Units]
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.LinearDensity`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Mass.Units, Length.Units)
  fullName: Towel.Measurements.LinearDensity<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearDensity<T>.Item[Mass.Units, Length.Units]
  nameWithType.vb: LinearDensity(Of T).Item(Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearDensity`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits]
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_
  commentId: P:Towel.Measurements.LinearDensity`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName: Towel.Measurements.LinearDensity<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits]
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType: LinearDensity<T>.Item[MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits]
  nameWithType.vb: LinearDensity(Of T).Item(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
- uid: Towel.Measurements.LinearDensity`1.Item*
  name: Item
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Item_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Item
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Item
  nameWithType: LinearDensity<T>.Item
  nameWithType.vb: LinearDensity(Of T).Item
- uid: Towel.Measurements.LinearDensity`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LengthUnits2
  commentId: P:Towel.Measurements.LinearDensity`1.LengthUnits2
  fullName: Towel.Measurements.LinearDensity<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LengthUnits2
  nameWithType: LinearDensity<T>.LengthUnits2
  nameWithType.vb: LinearDensity(Of T).LengthUnits2
- uid: Towel.Measurements.LinearDensity`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.LinearDensity`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LengthUnits2
  nameWithType: LinearDensity<T>.LengthUnits2
  nameWithType.vb: LinearDensity(Of T).LengthUnits2
- uid: Towel.Measurements.LinearDensity`1.LessThan(Towel.Measurements.LinearDensity{`0})
  name: LessThan(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThan_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.LessThan(Towel.Measurements.LinearDensity{`0})
  name.vb: LessThan(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThan(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThan(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThan(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThan(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.LessThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: LessThan(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThan_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.LessThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: LessThan(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThan(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThan(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThan(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThan(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThan_
  commentId: Overload:Towel.Measurements.LinearDensity`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LessThan
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThan
  nameWithType: LinearDensity<T>.LessThan
  nameWithType.vb: LinearDensity(Of T).LessThan
- uid: Towel.Measurements.LinearDensity`1.LessThanOrEqual(Towel.Measurements.LinearDensity{`0})
  name: LessThanOrEqual(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThanOrEqual_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.LessThanOrEqual(Towel.Measurements.LinearDensity{`0})
  name.vb: LessThanOrEqual(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThanOrEqual(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThanOrEqual(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThanOrEqual(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThanOrEqual(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.LessThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: LessThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThanOrEqual_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.LessThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: LessThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThanOrEqual(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThanOrEqual(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearDensity`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThanOrEqual
  nameWithType: LinearDensity<T>.LessThanOrEqual
  nameWithType.vb: LinearDensity(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearDensity`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_MassUnits1
  commentId: P:Towel.Measurements.LinearDensity`1.MassUnits1
  fullName: Towel.Measurements.LinearDensity<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearDensity(Of T).MassUnits1
  nameWithType: LinearDensity<T>.MassUnits1
  nameWithType.vb: LinearDensity(Of T).MassUnits1
- uid: Towel.Measurements.LinearDensity`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_MassUnits1_
  commentId: Overload:Towel.Measurements.LinearDensity`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearDensity(Of T).MassUnits1
  nameWithType: LinearDensity<T>.MassUnits1
  nameWithType.vb: LinearDensity(Of T).MassUnits1
- uid: Towel.Measurements.LinearDensity`1.Multiply(`0,Towel.Measurements.LinearDensity{`0})
  name: Multiply(T, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply__0_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(`0,Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(T, LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(T, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(T, Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Multiply(T, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(T, LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Multiply(Area<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Multiply(Length<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},`0)
  name: Multiply(LinearDensity<T>, T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_LinearDensity__0___0_
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},`0)
  name.vb: Multiply(LinearDensity(Of T), T)
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), T)
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, T)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), T)
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name: Multiply(LinearDensity<T>, Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(LinearDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Area<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name: Multiply(LinearDensity<T>, Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(LinearDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Length<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Speed{`0})
  name: Multiply(LinearDensity<T>, Speed<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(LinearDensity(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Speed<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: LinearDensity<T>.Multiply(Speed<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.LinearDensity`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Multiply_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Multiply
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply
  nameWithType: LinearDensity<T>.Multiply
  nameWithType.vb: LinearDensity(Of T).Multiply
- uid: Towel.Measurements.LinearDensity`1.NotEqual(Towel.Measurements.LinearDensity{`0})
  name: NotEqual(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_NotEqual_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.NotEqual(Towel.Measurements.LinearDensity{`0})
  name.vb: NotEqual(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.NotEqual(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).NotEqual(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.NotEqual(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).NotEqual(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.NotEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: NotEqual(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_NotEqual_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.NotEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: NotEqual(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.NotEqual(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).NotEqual(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.NotEqual(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).NotEqual(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_NotEqual_
  commentId: Overload:Towel.Measurements.LinearDensity`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.NotEqual
  fullName.vb: Towel.Measurements.LinearDensity(Of T).NotEqual
  nameWithType: LinearDensity<T>.NotEqual
  nameWithType.vb: LinearDensity(Of T).NotEqual
- uid: Towel.Measurements.LinearDensity`1.op_Addition(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Addition(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Addition_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Addition(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Addition(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Addition(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Addition(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Addition(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Addition(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Addition_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Addition
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Addition
  nameWithType: LinearDensity<T>.Addition
  nameWithType.vb: LinearDensity(Of T).Addition
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},`0)
  name: Division(LinearDensity<T>, T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0___0_
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},`0)
  name.vb: Division(LinearDensity(Of T), T)
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), T)
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, T)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), T)
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name: Division(LinearDensity<T>, Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Division(LinearDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, Area<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(LinearDensity<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(LinearDensity(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, AreaDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Density{`0})
  name: Division(LinearDensity<T>, Density<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Density{`0})
  name.vb: Division(LinearDensity(Of T), Density(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Density(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, Density<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), Density(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name: Division(LinearDensity<T>, Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Division(LinearDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, Length<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Division(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Division(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Pressure{`0})
  name: Division(LinearDensity<T>, Pressure<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Pressure{`0})
  name.vb: Division(LinearDensity(Of T), Pressure(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, Pressure<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), Pressure(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.TimeArea{`0})
  name: Division(LinearDensity<T>, TimeArea<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_Towel_Measurements_LinearDensity__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Division(Towel.Measurements.LinearDensity{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Division(LinearDensity(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Division(Towel.Measurements.LinearDensity<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearDensity<T>.Division(LinearDensity<T>, TimeArea<T>)
  nameWithType.vb: LinearDensity(Of T).Division(LinearDensity(Of T), TimeArea(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Division*
  name: Division
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Division_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Division
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Division
  nameWithType: LinearDensity<T>.Division
  nameWithType.vb: LinearDensity(Of T).Division
- uid: Towel.Measurements.LinearDensity`1.op_Equality(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Equality(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Equality_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Equality(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Equality(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Equality(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equality(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Equality(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Equality(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Equality_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Equality
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Equality
  nameWithType: LinearDensity<T>.Equality
  nameWithType.vb: LinearDensity(Of T).Equality
- uid: Towel.Measurements.LinearDensity`1.op_GreaterThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: GreaterThan(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_GreaterThan_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_GreaterThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThan(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThan(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThan(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThan(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThan(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThan
  nameWithType: LinearDensity<T>.GreaterThan
  nameWithType.vb: LinearDensity(Of T).GreaterThan
- uid: Towel.Measurements.LinearDensity`1.op_GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: GreaterThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_GreaterThanOrEqual_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_GreaterThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: GreaterThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThanOrEqual(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThanOrEqual(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.GreaterThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).GreaterThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearDensity(Of T).GreaterThanOrEqual
  nameWithType: LinearDensity<T>.GreaterThanOrEqual
  nameWithType.vb: LinearDensity(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearDensity`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits})~Towel.Measurements.LinearDensity{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits) to LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits___Towel_Measurements_LinearDensity__0_
  commentId: M:Towel.Measurements.LinearDensity`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits})~Towel.Measurements.LinearDensity{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits) to LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits> to Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits) to Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Implicit((T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits) to LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Widening((T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits) to LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Implicit_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.LinearDensity<T>.Implicit
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Widening
  nameWithType: LinearDensity<T>.Implicit
  nameWithType.vb: LinearDensity(Of T).Widening
- uid: Towel.Measurements.LinearDensity`1.op_Inequality(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Inequality(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Inequality_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Inequality(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Inequality(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Inequality(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Inequality(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Inequality(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Inequality(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Inequality_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Inequality
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Inequality
  nameWithType: LinearDensity<T>.Inequality
  nameWithType.vb: LinearDensity(Of T).Inequality
- uid: Towel.Measurements.LinearDensity`1.op_LessThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: LessThan(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_LessThan_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_LessThan(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: LessThan(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThan(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThan(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThan(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThan(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_LessThan_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LessThan
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThan
  nameWithType: LinearDensity<T>.LessThan
  nameWithType.vb: LinearDensity(Of T).LessThan
- uid: Towel.Measurements.LinearDensity`1.op_LessThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: LessThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_LessThanOrEqual_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_LessThanOrEqual(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: LessThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.LessThanOrEqual(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThanOrEqual(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.LessThanOrEqual(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).LessThanOrEqual(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearDensity(Of T).LessThanOrEqual
  nameWithType: LinearDensity<T>.LessThanOrEqual
  nameWithType.vb: LinearDensity(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearDensity`1.op_Multiply(`0,Towel.Measurements.LinearDensity{`0})
  name: Multiply(T, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply__0_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Multiply(`0,Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(T, LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(T, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(T, Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Multiply(T, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(T, LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},`0)
  name: Multiply(LinearDensity<T>, T)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply_Towel_Measurements_LinearDensity__0___0_
  commentId: M:Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},`0)
  name.vb: Multiply(LinearDensity(Of T), T)
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, T)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), T)
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, T)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), T)
- uid: Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name: Multiply(LinearDensity<T>, Area<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(LinearDensity(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Area<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Area(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name: Multiply(LinearDensity<T>, Length<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(LinearDensity(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Length<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Length(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Speed{`0})
  name: Multiply(LinearDensity<T>, Speed<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply_Towel_Measurements_LinearDensity__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Multiply(Towel.Measurements.LinearDensity{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(LinearDensity(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Multiply(Towel.Measurements.LinearDensity<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearDensity<T>.Multiply(LinearDensity<T>, Speed<T>)
  nameWithType.vb: LinearDensity(Of T).Multiply(LinearDensity(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Multiply_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Multiply
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Multiply
  nameWithType: LinearDensity<T>.Multiply
  nameWithType.vb: LinearDensity(Of T).Multiply
- uid: Towel.Measurements.LinearDensity`1.op_Subtraction(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Subtraction(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Subtraction_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.op_Subtraction(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Subtraction(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Subtraction(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Subtraction(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Subtraction(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Subtraction(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.LinearDensity`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Subtraction
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Subtraction
  nameWithType: LinearDensity<T>.Subtraction
  nameWithType.vb: LinearDensity(Of T).Subtraction
- uid: Towel.Measurements.LinearDensity`1.Subtract(Towel.Measurements.LinearDensity{`0})
  name: Subtract(LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Subtract_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Subtract(Towel.Measurements.LinearDensity{`0})
  name.vb: Subtract(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Subtract(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Subtract(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Subtract(LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Subtract(LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Subtract(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name: Subtract(LinearDensity<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Subtract_Towel_Measurements_LinearDensity__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearDensity`1.Subtract(Towel.Measurements.LinearDensity{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Subtract(LinearDensity(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearDensity<T>.Subtract(Towel.Measurements.LinearDensity<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Subtract(Towel.Measurements.LinearDensity(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearDensity<T>.Subtract(LinearDensity<T>, LinearDensity<T>)
  nameWithType.vb: LinearDensity(Of T).Subtract(LinearDensity(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearDensity`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_Subtract_
  commentId: Overload:Towel.Measurements.LinearDensity`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.Subtract
  fullName.vb: Towel.Measurements.LinearDensity(Of T).Subtract
  nameWithType: LinearDensity<T>.Subtract
  nameWithType.vb: LinearDensity(Of T).Subtract
- uid: Towel.Measurements.LinearDensity`1.ToString
  name: ToString()
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_ToString
  commentId: M:Towel.Measurements.LinearDensity`1.ToString
  fullName: Towel.Measurements.LinearDensity<T>.ToString()
  fullName.vb: Towel.Measurements.LinearDensity(Of T).ToString()
  nameWithType: LinearDensity<T>.ToString()
  nameWithType.vb: LinearDensity(Of T).ToString()
- uid: Towel.Measurements.LinearDensity`1.ToString*
  name: ToString
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_ToString_
  commentId: Overload:Towel.Measurements.LinearDensity`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.ToString
  fullName.vb: Towel.Measurements.LinearDensity(Of T).ToString
  nameWithType: LinearDensity<T>.ToString
  nameWithType.vb: LinearDensity(Of T).ToString
- uid: Towel.Measurements.LinearDensity`1.TryParse(System.String,Towel.Measurements.LinearDensity{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out LinearDensity<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_TryParse_System_String_Towel_Measurements_LinearDensity__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.LinearDensity`1.TryParse(System.String,Towel.Measurements.LinearDensity{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef LinearDensity(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.LinearDensity<T>.TryParse(System.String, out Towel.Measurements.LinearDensity<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.LinearDensity(Of T).TryParse(System.String, ByRef Towel.Measurements.LinearDensity(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: LinearDensity<T>.TryParse(String, out LinearDensity<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: LinearDensity(Of T).TryParse(String, ByRef LinearDensity(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.LinearDensity`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.LinearDensity-1.html#Towel_Measurements_LinearDensity_1_TryParse_
  commentId: Overload:Towel.Measurements.LinearDensity`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.LinearDensity<T>.TryParse
  fullName.vb: Towel.Measurements.LinearDensity(Of T).TryParse
  nameWithType: LinearDensity<T>.TryParse
  nameWithType.vb: LinearDensity(Of T).TryParse
- uid: Towel.Measurements.LinearMass`1
  name: LinearMass<T>
  href: api/Towel.Measurements.LinearMass-1.html
  commentId: T:Towel.Measurements.LinearMass`1
  name.vb: LinearMass(Of T)
  fullName: Towel.Measurements.LinearMass<T>
  fullName.vb: Towel.Measurements.LinearMass(Of T)
  nameWithType: LinearMass<T>
  nameWithType.vb: LinearMass(Of T)
- uid: Towel.Measurements.LinearMass`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: LinearMass(T, Mass.Units, Length.Units)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.LinearMass`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.LinearMass<T>.LinearMass(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LinearMass(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearMass<T>.LinearMass(T, Mass.Units, Length.Units)
  nameWithType.vb: LinearMass(Of T).LinearMass(T, Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearMass`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name: LinearMass(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_
  commentId: M:Towel.Measurements.LinearMass`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName: Towel.Measurements.LinearMass<T>.LinearMass(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LinearMass(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType: LinearMass<T>.LinearMass(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType.vb: LinearMass(Of T).LinearMass(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
- uid: Towel.Measurements.LinearMass`1.#ctor*
  name: LinearMass
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1__ctor_
  commentId: Overload:Towel.Measurements.LinearMass`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LinearMass
  fullName.vb: Towel.Measurements.LinearMass(Of T).LinearMass
  nameWithType: LinearMass<T>.LinearMass
  nameWithType.vb: LinearMass(Of T).LinearMass
- uid: Towel.Measurements.LinearMass`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Add__0_
  commentId: M:Towel.Measurements.LinearMass`1.Add(`0)
  fullName: Towel.Measurements.LinearMass<T>.Add(T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Add(T)
  nameWithType: LinearMass<T>.Add(T)
  nameWithType.vb: LinearMass(Of T).Add(T)
- uid: Towel.Measurements.LinearMass`1.Add(Towel.Measurements.LinearMass{`0})
  name: Add(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Add_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Add(Towel.Measurements.LinearMass{`0})
  name.vb: Add(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Add(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Add(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Add(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Add(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Add(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Add(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Add_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Add(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Add(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Add(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Add(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Add(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Add(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Add*
  name: Add
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Add_
  commentId: Overload:Towel.Measurements.LinearMass`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Add
  fullName.vb: Towel.Measurements.LinearMass(Of T).Add
  nameWithType: LinearMass<T>.Add
  nameWithType.vb: LinearMass(Of T).Add
- uid: Towel.Measurements.LinearMass`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.LinearMass`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.LinearMass<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearMass<T>.Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
  nameWithType.vb: LinearMass(Of T).Convert(T, Mass.Units, Length.Units, Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearMass`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_
  commentId: M:Towel.Measurements.LinearMass`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName: Towel.Measurements.LinearMass<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType: LinearMass<T>.Convert(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType.vb: LinearMass(Of T).Convert(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
- uid: Towel.Measurements.LinearMass`1.Convert*
  name: Convert
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Convert_
  commentId: Overload:Towel.Measurements.LinearMass`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Convert
  fullName.vb: Towel.Measurements.LinearMass(Of T).Convert
  nameWithType: LinearMass<T>.Convert
  nameWithType.vb: LinearMass(Of T).Convert
- uid: Towel.Measurements.LinearMass`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide__0_
  commentId: M:Towel.Measurements.LinearMass`1.Divide(`0)
  fullName: Towel.Measurements.LinearMass<T>.Divide(T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(T)
  nameWithType: LinearMass<T>.Divide(T)
  nameWithType.vb: LinearMass(Of T).Divide(T)
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: LinearMass<T>.Divide(Area<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMass<T>.Divide(AreaDensity<T>)
  nameWithType.vb: LinearMass(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Force{`0})
  name: Divide(Force<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Force(Of T))
  nameWithType: LinearMass<T>.Divide(Force<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Force(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: LinearMass<T>.Divide(Length<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearMass<T>.Divide(LinearDensity<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0})
  name: Divide(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0})
  name.vb: Divide(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},`0)
  name: Divide(LinearMass<T>, T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0___0_
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},`0)
  name.vb: Divide(LinearMass(Of T), T)
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), T)
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, T)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), T)
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Area{`0})
  name: Divide(LinearMass<T>, Area<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(LinearMass(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Area<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Area(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(LinearMass<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(LinearMass(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, AreaDensity<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Force{`0})
  name: Divide(LinearMass<T>, Force<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Force{`0})
  name.vb: Divide(LinearMass(Of T), Force(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Force(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Force<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Force(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Length{`0})
  name: Divide(LinearMass<T>, Length<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(LinearMass(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Length<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Length(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearMass<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearMass(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, LinearDensity<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Divide(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Divide(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMass<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMass(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Mass{`0})
  name: Divide(LinearMass<T>, Mass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Mass{`0})
  name.vb: Divide(LinearMass(Of T), Mass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Mass<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Mass(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Time{`0})
  name: Divide(LinearMass<T>, Time<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(LinearMass(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Time<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.TimeArea{`0})
  name: Divide(LinearMass<T>, TimeArea<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Divide(LinearMass(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, TimeArea<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), TimeArea(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Volume{`0})
  name: Divide(LinearMass<T>, Volume<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMass__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMass{`0},Towel.Measurements.Volume{`0})
  name.vb: Divide(LinearMass(Of T), Volume(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMass<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMass<T>, Volume<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMass(Of T), Volume(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMass<T>.Divide(LinearMassFlow<T>)
  nameWithType.vb: LinearMass(Of T).Divide(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Mass{`0})
  name: Divide(Mass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Mass{`0})
  name.vb: Divide(Mass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Mass(Of T))
  nameWithType: LinearMass<T>.Divide(Mass<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Mass(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: LinearMass<T>.Divide(Time<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearMass<T>.Divide(TimeArea<T>)
  nameWithType.vb: LinearMass(Of T).Divide(TimeArea(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Volume{`0})
  name: Divide(Volume<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.LinearMass`1.Divide(Towel.Measurements.Volume{`0})
  name.vb: Divide(Volume(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Divide(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide(Towel.Measurements.Volume(Of T))
  nameWithType: LinearMass<T>.Divide(Volume<T>)
  nameWithType.vb: LinearMass(Of T).Divide(Volume(Of T))
- uid: Towel.Measurements.LinearMass`1.Divide*
  name: Divide
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Divide_
  commentId: Overload:Towel.Measurements.LinearMass`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Divide
  fullName.vb: Towel.Measurements.LinearMass(Of T).Divide
  nameWithType: LinearMass<T>.Divide
  nameWithType.vb: LinearMass(Of T).Divide
- uid: Towel.Measurements.LinearMass`1.Equal(Towel.Measurements.LinearMass{`0})
  name: Equal(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Equal_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Equal(Towel.Measurements.LinearMass{`0})
  name.vb: Equal(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Equal(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equal(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Equal(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Equal(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Equal(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Equal(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Equal_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Equal(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Equal(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Equal(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equal(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Equal(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Equal(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Equal*
  name: Equal
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Equal_
  commentId: Overload:Towel.Measurements.LinearMass`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Equal
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equal
  nameWithType: LinearMass<T>.Equal
  nameWithType.vb: LinearMass(Of T).Equal
- uid: Towel.Measurements.LinearMass`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Equals_System_Object_
  commentId: M:Towel.Measurements.LinearMass`1.Equals(System.Object)
  fullName: Towel.Measurements.LinearMass<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equals(System.Object)
  nameWithType: LinearMass<T>.Equals(Object)
  nameWithType.vb: LinearMass(Of T).Equals(Object)
- uid: Towel.Measurements.LinearMass`1.Equals*
  name: Equals
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Equals_
  commentId: Overload:Towel.Measurements.LinearMass`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Equals
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equals
  nameWithType: LinearMass<T>.Equals
  nameWithType.vb: LinearMass(Of T).Equals
- uid: Towel.Measurements.LinearMass`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GetHashCode
  commentId: M:Towel.Measurements.LinearMass`1.GetHashCode
  fullName: Towel.Measurements.LinearMass<T>.GetHashCode()
  fullName.vb: Towel.Measurements.LinearMass(Of T).GetHashCode()
  nameWithType: LinearMass<T>.GetHashCode()
  nameWithType.vb: LinearMass(Of T).GetHashCode()
- uid: Towel.Measurements.LinearMass`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GetHashCode_
  commentId: Overload:Towel.Measurements.LinearMass`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.GetHashCode
  fullName.vb: Towel.Measurements.LinearMass(Of T).GetHashCode
  nameWithType: LinearMass<T>.GetHashCode
  nameWithType.vb: LinearMass(Of T).GetHashCode
- uid: Towel.Measurements.LinearMass`1.GreaterThan(Towel.Measurements.LinearMass{`0})
  name: GreaterThan(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThan_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.GreaterThan(Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThan(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThan(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThan(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThan(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThan(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.GreaterThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: GreaterThan(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThan_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.GreaterThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThan(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThan(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThan(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThan(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThan(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearMass`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThan
  nameWithType: LinearMass<T>.GreaterThan
  nameWithType.vb: LinearMass(Of T).GreaterThan
- uid: Towel.Measurements.LinearMass`1.GreaterThanOrEqual(Towel.Measurements.LinearMass{`0})
  name: GreaterThanOrEqual(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThanOrEqual_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.GreaterThanOrEqual(Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThanOrEqual(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThanOrEqual(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThanOrEqual(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThanOrEqual(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.GreaterThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: GreaterThanOrEqual(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThanOrEqual_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.GreaterThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThanOrEqual(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThanOrEqual(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThanOrEqual(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThanOrEqual(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMass`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThanOrEqual
  nameWithType: LinearMass<T>.GreaterThanOrEqual
  nameWithType.vb: LinearMass(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearMass`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: Item[Mass.Units, Length.Units]
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.LinearMass`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Mass.Units, Length.Units)
  fullName: Towel.Measurements.LinearMass<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.LinearMass(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: LinearMass<T>.Item[Mass.Units, Length.Units]
  nameWithType.vb: LinearMass(Of T).Item(Mass.Units, Length.Units)
- uid: Towel.Measurements.LinearMass`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.LinearMassBaseUnits]
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_
  commentId: P:Towel.Measurements.LinearMass`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName: Towel.Measurements.LinearMass<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits]
  fullName.vb: Towel.Measurements.LinearMass(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType: LinearMass<T>.Item[MeasurementUnitsSyntaxTypes.LinearMassBaseUnits]
  nameWithType.vb: LinearMass(Of T).Item(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
- uid: Towel.Measurements.LinearMass`1.Item*
  name: Item
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Item_
  commentId: Overload:Towel.Measurements.LinearMass`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Item
  fullName.vb: Towel.Measurements.LinearMass(Of T).Item
  nameWithType: LinearMass<T>.Item
  nameWithType.vb: LinearMass(Of T).Item
- uid: Towel.Measurements.LinearMass`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LengthUnits2
  commentId: P:Towel.Measurements.LinearMass`1.LengthUnits2
  fullName: Towel.Measurements.LinearMass<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearMass(Of T).LengthUnits2
  nameWithType: LinearMass<T>.LengthUnits2
  nameWithType.vb: LinearMass(Of T).LengthUnits2
- uid: Towel.Measurements.LinearMass`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.LinearMass`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearMass(Of T).LengthUnits2
  nameWithType: LinearMass<T>.LengthUnits2
  nameWithType.vb: LinearMass(Of T).LengthUnits2
- uid: Towel.Measurements.LinearMass`1.LessThan(Towel.Measurements.LinearMass{`0})
  name: LessThan(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThan_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.LessThan(Towel.Measurements.LinearMass{`0})
  name.vb: LessThan(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThan(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThan(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThan(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThan(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.LessThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: LessThan(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThan_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.LessThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: LessThan(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThan(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThan(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThan(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThan(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThan_
  commentId: Overload:Towel.Measurements.LinearMass`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LessThan
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThan
  nameWithType: LinearMass<T>.LessThan
  nameWithType.vb: LinearMass(Of T).LessThan
- uid: Towel.Measurements.LinearMass`1.LessThanOrEqual(Towel.Measurements.LinearMass{`0})
  name: LessThanOrEqual(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThanOrEqual_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.LessThanOrEqual(Towel.Measurements.LinearMass{`0})
  name.vb: LessThanOrEqual(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThanOrEqual(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThanOrEqual(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThanOrEqual(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThanOrEqual(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.LessThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: LessThanOrEqual(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThanOrEqual_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.LessThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: LessThanOrEqual(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThanOrEqual(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThanOrEqual(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThanOrEqual(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThanOrEqual(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMass`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThanOrEqual
  nameWithType: LinearMass<T>.LessThanOrEqual
  nameWithType.vb: LinearMass(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearMass`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_MassUnits1
  commentId: P:Towel.Measurements.LinearMass`1.MassUnits1
  fullName: Towel.Measurements.LinearMass<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearMass(Of T).MassUnits1
  nameWithType: LinearMass<T>.MassUnits1
  nameWithType.vb: LinearMass(Of T).MassUnits1
- uid: Towel.Measurements.LinearMass`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_MassUnits1_
  commentId: Overload:Towel.Measurements.LinearMass`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearMass(Of T).MassUnits1
  nameWithType: LinearMass<T>.MassUnits1
  nameWithType.vb: LinearMass(Of T).MassUnits1
- uid: Towel.Measurements.LinearMass`1.Multiply(`0,Towel.Measurements.LinearMass{`0})
  name: Multiply(T, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Multiply__0_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Multiply(`0,Towel.Measurements.LinearMass{`0})
  name.vb: Multiply(T, LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Multiply(T, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(T, Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Multiply(T, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Multiply(T, LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMass<T>.Multiply(Acceleration<T>)
  nameWithType.vb: LinearMass(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.LinearMass{`0},`0)
  name: Multiply(LinearMass<T>, T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Multiply_Towel_Measurements_LinearMass__0___0_
  commentId: M:Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.LinearMass{`0},`0)
  name.vb: Multiply(LinearMass(Of T), T)
  fullName: Towel.Measurements.LinearMass<T>.Multiply(Towel.Measurements.LinearMass<T>, T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(Towel.Measurements.LinearMass(Of T), T)
  nameWithType: LinearMass<T>.Multiply(LinearMass<T>, T)
  nameWithType.vb: LinearMass(Of T).Multiply(LinearMass(Of T), T)
- uid: Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.LinearMass{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(LinearMass<T>, Acceleration<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Multiply_Towel_Measurements_LinearMass__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMass`1.Multiply(Towel.Measurements.LinearMass{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(LinearMass(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Multiply(Towel.Measurements.LinearMass<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMass<T>.Multiply(LinearMass<T>, Acceleration<T>)
  nameWithType.vb: LinearMass(Of T).Multiply(LinearMass(Of T), Acceleration(Of T))
- uid: Towel.Measurements.LinearMass`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Multiply_
  commentId: Overload:Towel.Measurements.LinearMass`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Multiply
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply
  nameWithType: LinearMass<T>.Multiply
  nameWithType.vb: LinearMass(Of T).Multiply
- uid: Towel.Measurements.LinearMass`1.NotEqual(Towel.Measurements.LinearMass{`0})
  name: NotEqual(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_NotEqual_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.NotEqual(Towel.Measurements.LinearMass{`0})
  name.vb: NotEqual(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.NotEqual(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).NotEqual(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.NotEqual(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).NotEqual(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.NotEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: NotEqual(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_NotEqual_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.NotEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: NotEqual(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.NotEqual(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).NotEqual(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.NotEqual(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).NotEqual(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_NotEqual_
  commentId: Overload:Towel.Measurements.LinearMass`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.NotEqual
  fullName.vb: Towel.Measurements.LinearMass(Of T).NotEqual
  nameWithType: LinearMass<T>.NotEqual
  nameWithType.vb: LinearMass(Of T).NotEqual
- uid: Towel.Measurements.LinearMass`1.op_Addition(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Addition(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Addition_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Addition(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Addition(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Addition(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Addition(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Addition(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Addition(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Addition_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Addition
  fullName.vb: Towel.Measurements.LinearMass(Of T).Addition
  nameWithType: LinearMass<T>.Addition
  nameWithType.vb: LinearMass(Of T).Addition
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},`0)
  name: Division(LinearMass<T>, T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0___0_
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},`0)
  name.vb: Division(LinearMass(Of T), T)
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), T)
  nameWithType: LinearMass<T>.Division(LinearMass<T>, T)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), T)
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Area{`0})
  name: Division(LinearMass<T>, Area<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Area{`0})
  name.vb: Division(LinearMass(Of T), Area(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Area(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Area<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Area(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(LinearMass<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(LinearMass(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, AreaDensity<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Force{`0})
  name: Division(LinearMass<T>, Force<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Force{`0})
  name.vb: Division(LinearMass(Of T), Force(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Force(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Force<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Force(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Length{`0})
  name: Division(LinearMass<T>, Length<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Length{`0})
  name.vb: Division(LinearMass(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Length<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Length(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearDensity{`0})
  name: Division(LinearMass<T>, LinearDensity<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Division(LinearMass(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, LinearDensity<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Division(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Division(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Division(LinearMass<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Division(LinearMass(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Mass{`0})
  name: Division(LinearMass<T>, Mass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Mass{`0})
  name.vb: Division(LinearMass(Of T), Mass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Mass<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Mass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Time{`0})
  name: Division(LinearMass<T>, Time<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Time{`0})
  name.vb: Division(LinearMass(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Time<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.TimeArea{`0})
  name: Division(LinearMass<T>, TimeArea<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Division(LinearMass(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, TimeArea<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), TimeArea(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Volume{`0})
  name: Division(LinearMass<T>, Volume<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_Towel_Measurements_LinearMass__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Division(Towel.Measurements.LinearMass{`0},Towel.Measurements.Volume{`0})
  name.vb: Division(LinearMass(Of T), Volume(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Division(Towel.Measurements.LinearMass<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: LinearMass<T>.Division(LinearMass<T>, Volume<T>)
  nameWithType.vb: LinearMass(Of T).Division(LinearMass(Of T), Volume(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Division*
  name: Division
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Division_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Division
  fullName.vb: Towel.Measurements.LinearMass(Of T).Division
  nameWithType: LinearMass<T>.Division
  nameWithType.vb: LinearMass(Of T).Division
- uid: Towel.Measurements.LinearMass`1.op_Equality(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Equality(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Equality_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Equality(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Equality(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Equality(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equality(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Equality(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Equality(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Equality_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Equality
  fullName.vb: Towel.Measurements.LinearMass(Of T).Equality
  nameWithType: LinearMass<T>.Equality
  nameWithType.vb: LinearMass(Of T).Equality
- uid: Towel.Measurements.LinearMass`1.op_GreaterThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: GreaterThan(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_GreaterThan_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_GreaterThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThan(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThan(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThan(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThan(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThan(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThan
  nameWithType: LinearMass<T>.GreaterThan
  nameWithType.vb: LinearMass(Of T).GreaterThan
- uid: Towel.Measurements.LinearMass`1.op_GreaterThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: GreaterThanOrEqual(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_GreaterThanOrEqual_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_GreaterThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: GreaterThanOrEqual(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.GreaterThanOrEqual(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.GreaterThanOrEqual(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).GreaterThanOrEqual(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearMass(Of T).GreaterThanOrEqual
  nameWithType: LinearMass<T>.GreaterThanOrEqual
  nameWithType.vb: LinearMass(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearMass`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits})~Towel.Measurements.LinearMass{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits) to LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits___Towel_Measurements_LinearMass__0_
  commentId: M:Towel.Measurements.LinearMass`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits})~Towel.Measurements.LinearMass{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits) to LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits> to Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits) to Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Implicit((T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits) to LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Widening((T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits) to LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Implicit_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.LinearMass<T>.Implicit
  fullName.vb: Towel.Measurements.LinearMass(Of T).Widening
  nameWithType: LinearMass<T>.Implicit
  nameWithType.vb: LinearMass(Of T).Widening
- uid: Towel.Measurements.LinearMass`1.op_Inequality(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Inequality(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Inequality_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Inequality(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Inequality(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Inequality(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Inequality(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Inequality(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Inequality(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Inequality_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Inequality
  fullName.vb: Towel.Measurements.LinearMass(Of T).Inequality
  nameWithType: LinearMass<T>.Inequality
  nameWithType.vb: LinearMass(Of T).Inequality
- uid: Towel.Measurements.LinearMass`1.op_LessThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: LessThan(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_LessThan_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_LessThan(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: LessThan(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThan(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThan(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThan(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThan(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_LessThan_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LessThan
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThan
  nameWithType: LinearMass<T>.LessThan
  nameWithType.vb: LinearMass(Of T).LessThan
- uid: Towel.Measurements.LinearMass`1.op_LessThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: LessThanOrEqual(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_LessThanOrEqual_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_LessThanOrEqual(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: LessThanOrEqual(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.LessThanOrEqual(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThanOrEqual(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.LessThanOrEqual(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).LessThanOrEqual(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearMass(Of T).LessThanOrEqual
  nameWithType: LinearMass<T>.LessThanOrEqual
  nameWithType.vb: LinearMass(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearMass`1.op_Multiply(`0,Towel.Measurements.LinearMass{`0})
  name: Multiply(T, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Multiply__0_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Multiply(`0,Towel.Measurements.LinearMass{`0})
  name.vb: Multiply(T, LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Multiply(T, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(T, Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Multiply(T, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Multiply(T, LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Multiply(Towel.Measurements.LinearMass{`0},`0)
  name: Multiply(LinearMass<T>, T)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Multiply_Towel_Measurements_LinearMass__0___0_
  commentId: M:Towel.Measurements.LinearMass`1.op_Multiply(Towel.Measurements.LinearMass{`0},`0)
  name.vb: Multiply(LinearMass(Of T), T)
  fullName: Towel.Measurements.LinearMass<T>.Multiply(Towel.Measurements.LinearMass<T>, T)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(Towel.Measurements.LinearMass(Of T), T)
  nameWithType: LinearMass<T>.Multiply(LinearMass<T>, T)
  nameWithType.vb: LinearMass(Of T).Multiply(LinearMass(Of T), T)
- uid: Towel.Measurements.LinearMass`1.op_Multiply(Towel.Measurements.LinearMass{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(LinearMass<T>, Acceleration<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Multiply_Towel_Measurements_LinearMass__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Multiply(Towel.Measurements.LinearMass{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(LinearMass(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Multiply(Towel.Measurements.LinearMass<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply(Towel.Measurements.LinearMass(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMass<T>.Multiply(LinearMass<T>, Acceleration<T>)
  nameWithType.vb: LinearMass(Of T).Multiply(LinearMass(Of T), Acceleration(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Multiply_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Multiply
  fullName.vb: Towel.Measurements.LinearMass(Of T).Multiply
  nameWithType: LinearMass<T>.Multiply
  nameWithType.vb: LinearMass(Of T).Multiply
- uid: Towel.Measurements.LinearMass`1.op_Subtraction(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Subtraction(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Subtraction_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.op_Subtraction(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Subtraction(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Subtraction(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Subtraction(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Subtraction(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Subtraction(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.LinearMass`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Subtraction
  fullName.vb: Towel.Measurements.LinearMass(Of T).Subtraction
  nameWithType: LinearMass<T>.Subtraction
  nameWithType.vb: LinearMass(Of T).Subtraction
- uid: Towel.Measurements.LinearMass`1.Subtract(Towel.Measurements.LinearMass{`0})
  name: Subtract(LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Subtract_Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Subtract(Towel.Measurements.LinearMass{`0})
  name.vb: Subtract(LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Subtract(Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Subtract(Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Subtract(LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Subtract(LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Subtract(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name: Subtract(LinearMass<T>, LinearMass<T>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Subtract_Towel_Measurements_LinearMass__0__Towel_Measurements_LinearMass__0__
  commentId: M:Towel.Measurements.LinearMass`1.Subtract(Towel.Measurements.LinearMass{`0},Towel.Measurements.LinearMass{`0})
  name.vb: Subtract(LinearMass(Of T), LinearMass(Of T))
  fullName: Towel.Measurements.LinearMass<T>.Subtract(Towel.Measurements.LinearMass<T>, Towel.Measurements.LinearMass<T>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).Subtract(Towel.Measurements.LinearMass(Of T), Towel.Measurements.LinearMass(Of T))
  nameWithType: LinearMass<T>.Subtract(LinearMass<T>, LinearMass<T>)
  nameWithType.vb: LinearMass(Of T).Subtract(LinearMass(Of T), LinearMass(Of T))
- uid: Towel.Measurements.LinearMass`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_Subtract_
  commentId: Overload:Towel.Measurements.LinearMass`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.Subtract
  fullName.vb: Towel.Measurements.LinearMass(Of T).Subtract
  nameWithType: LinearMass<T>.Subtract
  nameWithType.vb: LinearMass(Of T).Subtract
- uid: Towel.Measurements.LinearMass`1.ToString
  name: ToString()
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_ToString
  commentId: M:Towel.Measurements.LinearMass`1.ToString
  fullName: Towel.Measurements.LinearMass<T>.ToString()
  fullName.vb: Towel.Measurements.LinearMass(Of T).ToString()
  nameWithType: LinearMass<T>.ToString()
  nameWithType.vb: LinearMass(Of T).ToString()
- uid: Towel.Measurements.LinearMass`1.ToString*
  name: ToString
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_ToString_
  commentId: Overload:Towel.Measurements.LinearMass`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.ToString
  fullName.vb: Towel.Measurements.LinearMass(Of T).ToString
  nameWithType: LinearMass<T>.ToString
  nameWithType.vb: LinearMass(Of T).ToString
- uid: Towel.Measurements.LinearMass`1.TryParse(System.String,Towel.Measurements.LinearMass{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out LinearMass<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_TryParse_System_String_Towel_Measurements_LinearMass__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.LinearMass`1.TryParse(System.String,Towel.Measurements.LinearMass{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef LinearMass(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.LinearMass<T>.TryParse(System.String, out Towel.Measurements.LinearMass<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.LinearMass(Of T).TryParse(System.String, ByRef Towel.Measurements.LinearMass(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: LinearMass<T>.TryParse(String, out LinearMass<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: LinearMass(Of T).TryParse(String, ByRef LinearMass(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.LinearMass`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.LinearMass-1.html#Towel_Measurements_LinearMass_1_TryParse_
  commentId: Overload:Towel.Measurements.LinearMass`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.LinearMass<T>.TryParse
  fullName.vb: Towel.Measurements.LinearMass(Of T).TryParse
  nameWithType: LinearMass<T>.TryParse
  nameWithType.vb: LinearMass(Of T).TryParse
- uid: Towel.Measurements.LinearMassFlow`1
  name: LinearMassFlow<T>
  href: api/Towel.Measurements.LinearMassFlow-1.html
  commentId: T:Towel.Measurements.LinearMassFlow`1
  name.vb: LinearMassFlow(Of T)
  fullName: Towel.Measurements.LinearMassFlow<T>
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T)
  nameWithType: LinearMassFlow<T>
  nameWithType.vb: LinearMassFlow(Of T)
- uid: Towel.Measurements.LinearMassFlow`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: LinearMassFlow(T, Mass.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.LinearMassFlow`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.LinearMassFlow<T>.LinearMassFlow(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LinearMassFlow(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: LinearMassFlow<T>.LinearMassFlow(T, Mass.Units, Length.Units, Time.Units)
  nameWithType.vb: LinearMassFlow(Of T).LinearMassFlow(T, Mass.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.LinearMassFlow`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: LinearMassFlow(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: M:Towel.Measurements.LinearMassFlow`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.LinearMassFlow<T>.LinearMassFlow(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LinearMassFlow(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: LinearMassFlow<T>.LinearMassFlow(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType.vb: LinearMassFlow(Of T).LinearMassFlow(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.LinearMassFlow`1.#ctor*
  name: LinearMassFlow
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1__ctor_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LinearMassFlow
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LinearMassFlow
  nameWithType: LinearMassFlow<T>.LinearMassFlow
  nameWithType.vb: LinearMassFlow(Of T).LinearMassFlow
- uid: Towel.Measurements.LinearMassFlow`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Add__0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Add(`0)
  fullName: Towel.Measurements.LinearMassFlow<T>.Add(T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Add(T)
  nameWithType: LinearMassFlow<T>.Add(T)
  nameWithType.vb: LinearMassFlow(Of T).Add(T)
- uid: Towel.Measurements.LinearMassFlow`1.Add(Towel.Measurements.LinearMassFlow{`0})
  name: Add(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Add_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Add(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Add(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Add(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Add(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Add(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Add(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Add(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Add(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Add_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Add(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Add(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Add(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Add(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Add(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Add(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Add*
  name: Add
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Add_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Add
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Add
  nameWithType: LinearMassFlow<T>.Add
  nameWithType.vb: LinearMassFlow(Of T).Add
- uid: Towel.Measurements.LinearMassFlow`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Length.Units, Time.Units, Mass.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.LinearMassFlow<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: LinearMassFlow<T>.Convert(T, Mass.Units, Length.Units, Time.Units, Mass.Units, Length.Units, Time.Units)
  nameWithType.vb: LinearMassFlow(Of T).Convert(T, Mass.Units, Length.Units, Time.Units, Mass.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.LinearMassFlow`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.LinearMassFlow<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: LinearMassFlow<T>.Convert(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType.vb: LinearMassFlow(Of T).Convert(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.LinearMassFlow`1.Convert*
  name: Convert
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Convert_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Convert
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Convert
  nameWithType: LinearMassFlow<T>.Convert
  nameWithType.vb: LinearMassFlow(Of T).Convert
- uid: Towel.Measurements.LinearMassFlow`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide__0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(`0)
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(T)
  nameWithType: LinearMassFlow<T>.Divide(T)
  nameWithType.vb: LinearMassFlow(Of T).Divide(T)
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMassFlow<T>.Divide(AreaDensity<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Force{`0})
  name: Divide(Force<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.Force(Of T))
  nameWithType: LinearMassFlow<T>.Divide(Force<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(Force(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: LinearMassFlow<T>.Divide(Length<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},`0)
  name: Divide(LinearMassFlow<T>, T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0___0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},`0)
  name.vb: Divide(LinearMassFlow(Of T), T)
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), T)
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, T)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), T)
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(LinearMassFlow<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(LinearMassFlow(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, AreaDensity<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Force{`0})
  name: Divide(LinearMassFlow<T>, Force<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Force{`0})
  name.vb: Divide(LinearMassFlow(Of T), Force(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Force(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, Force<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), Force(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Length{`0})
  name: Divide(LinearMassFlow<T>, Length<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(LinearMassFlow(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, Length<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), Length(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Mass{`0})
  name: Divide(LinearMassFlow<T>, Mass<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Mass{`0})
  name.vb: Divide(LinearMassFlow(Of T), Mass(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, Mass<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), Mass(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.MassRate{`0})
  name: Divide(LinearMassFlow<T>, MassRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.MassRate{`0})
  name.vb: Divide(LinearMassFlow(Of T), MassRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, MassRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), MassRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name: Divide(LinearMassFlow<T>, Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(LinearMassFlow(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name: Divide(LinearMassFlow<T>, Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(LinearMassFlow(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.VolumeRate{`0})
  name: Divide(LinearMassFlow<T>, VolumeRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(LinearMassFlow(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: LinearMassFlow<T>.Divide(LinearMassFlow<T>, VolumeRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(LinearMassFlow(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Mass{`0})
  name: Divide(Mass<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Mass{`0})
  name.vb: Divide(Mass(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.Mass(Of T))
  nameWithType: LinearMassFlow<T>.Divide(Mass<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(Mass(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.MassRate{`0})
  name: Divide(MassRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.MassRate{`0})
  name.vb: Divide(MassRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.MassRate(Of T))
  nameWithType: LinearMassFlow<T>.Divide(MassRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(MassRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Divide(Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Divide(Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Divide(Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide(Towel.Measurements.VolumeRate(Of T))
  nameWithType: LinearMassFlow<T>.Divide(VolumeRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Divide(VolumeRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Divide*
  name: Divide
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Divide_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Divide
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Divide
  nameWithType: LinearMassFlow<T>.Divide
  nameWithType.vb: LinearMassFlow(Of T).Divide
- uid: Towel.Measurements.LinearMassFlow`1.Equal(Towel.Measurements.LinearMassFlow{`0})
  name: Equal(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Equal_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Equal(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Equal(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Equal(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equal(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Equal(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Equal(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Equal(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Equal(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Equal_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Equal(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Equal(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Equal(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equal(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Equal(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Equal(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Equal*
  name: Equal
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Equal_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Equal
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equal
  nameWithType: LinearMassFlow<T>.Equal
  nameWithType.vb: LinearMassFlow(Of T).Equal
- uid: Towel.Measurements.LinearMassFlow`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Equals_System_Object_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Equals(System.Object)
  fullName: Towel.Measurements.LinearMassFlow<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equals(System.Object)
  nameWithType: LinearMassFlow<T>.Equals(Object)
  nameWithType.vb: LinearMassFlow(Of T).Equals(Object)
- uid: Towel.Measurements.LinearMassFlow`1.Equals*
  name: Equals
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Equals_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Equals
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equals
  nameWithType: LinearMassFlow<T>.Equals
  nameWithType.vb: LinearMassFlow(Of T).Equals
- uid: Towel.Measurements.LinearMassFlow`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GetHashCode
  commentId: M:Towel.Measurements.LinearMassFlow`1.GetHashCode
  fullName: Towel.Measurements.LinearMassFlow<T>.GetHashCode()
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GetHashCode()
  nameWithType: LinearMassFlow<T>.GetHashCode()
  nameWithType.vb: LinearMassFlow(Of T).GetHashCode()
- uid: Towel.Measurements.LinearMassFlow`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GetHashCode_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.GetHashCode
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GetHashCode
  nameWithType: LinearMassFlow<T>.GetHashCode
  nameWithType.vb: LinearMassFlow(Of T).GetHashCode
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThan(Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThan(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThan_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.GreaterThan(Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThan(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThan(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThan(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThan(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThan(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThan(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThan_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.GreaterThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThan(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThan(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThan(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThan
  nameWithType: LinearMassFlow<T>.GreaterThan
  nameWithType.vb: LinearMassFlow(Of T).GreaterThan
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThanOrEqual(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThanOrEqual_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThanOrEqual(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThanOrEqual(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThanOrEqual(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThanOrEqual_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThanOrEqual
  nameWithType: LinearMassFlow<T>.GreaterThanOrEqual
  nameWithType.vb: LinearMassFlow(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearMassFlow`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Length.Units, Time.Units]
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.LinearMassFlow`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Length.Units, Time.Units)
  fullName: Towel.Measurements.LinearMassFlow<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: LinearMassFlow<T>.Item[Mass.Units, Length.Units, Time.Units]
  nameWithType.vb: LinearMassFlow(Of T).Item(Mass.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.LinearMassFlow`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits]
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: P:Towel.Measurements.LinearMassFlow`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.LinearMassFlow<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits]
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: LinearMassFlow<T>.Item[MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits]
  nameWithType.vb: LinearMassFlow(Of T).Item(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.LinearMassFlow`1.Item*
  name: Item
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Item_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Item
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Item
  nameWithType: LinearMassFlow<T>.Item
  nameWithType.vb: LinearMassFlow(Of T).Item
- uid: Towel.Measurements.LinearMassFlow`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LengthUnits2
  commentId: P:Towel.Measurements.LinearMassFlow`1.LengthUnits2
  fullName: Towel.Measurements.LinearMassFlow<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LengthUnits2
  nameWithType: LinearMassFlow<T>.LengthUnits2
  nameWithType.vb: LinearMassFlow(Of T).LengthUnits2
- uid: Towel.Measurements.LinearMassFlow`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LengthUnits2
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LengthUnits2
  nameWithType: LinearMassFlow<T>.LengthUnits2
  nameWithType.vb: LinearMassFlow(Of T).LengthUnits2
- uid: Towel.Measurements.LinearMassFlow`1.LessThan(Towel.Measurements.LinearMassFlow{`0})
  name: LessThan(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThan_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.LessThan(Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThan(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThan(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThan(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThan(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThan(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.LessThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: LessThan(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThan_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.LessThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThan(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThan(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThan(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThan_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThan
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThan
  nameWithType: LinearMassFlow<T>.LessThan
  nameWithType.vb: LinearMassFlow(Of T).LessThan
- uid: Towel.Measurements.LinearMassFlow`1.LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0})
  name: LessThanOrEqual(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThanOrEqual_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThanOrEqual(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThanOrEqual(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThanOrEqual(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThanOrEqual(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThanOrEqual(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: LessThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThanOrEqual_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThanOrEqual(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThanOrEqual(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThanOrEqual
  nameWithType: LinearMassFlow<T>.LessThanOrEqual
  nameWithType.vb: LinearMassFlow(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearMassFlow`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_MassUnits1
  commentId: P:Towel.Measurements.LinearMassFlow`1.MassUnits1
  fullName: Towel.Measurements.LinearMassFlow<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).MassUnits1
  nameWithType: LinearMassFlow<T>.MassUnits1
  nameWithType.vb: LinearMassFlow(Of T).MassUnits1
- uid: Towel.Measurements.LinearMassFlow`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_MassUnits1_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.MassUnits1
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).MassUnits1
  nameWithType: LinearMassFlow<T>.MassUnits1
  nameWithType.vb: LinearMassFlow(Of T).MassUnits1
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(`0,Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(T, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply__0_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(`0,Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(T, LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(T, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(T, Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(T, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(T, LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(Acceleration<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},`0)
  name: Multiply(LinearMassFlow<T>, T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_LinearMassFlow__0___0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},`0)
  name.vb: Multiply(LinearMassFlow(Of T), T)
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), T)
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, T)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), T)
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(LinearMassFlow<T>, Acceleration<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Acceleration<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Acceleration(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name: Multiply(LinearMassFlow<T>, Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name: Multiply(LinearMassFlow<T>, Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Multiply_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply
  nameWithType: LinearMassFlow<T>.Multiply
  nameWithType.vb: LinearMassFlow(Of T).Multiply
- uid: Towel.Measurements.LinearMassFlow`1.NotEqual(Towel.Measurements.LinearMassFlow{`0})
  name: NotEqual(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_NotEqual_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.NotEqual(Towel.Measurements.LinearMassFlow{`0})
  name.vb: NotEqual(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.NotEqual(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).NotEqual(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.NotEqual(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).NotEqual(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.NotEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: NotEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_NotEqual_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.NotEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: NotEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.NotEqual(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).NotEqual(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.NotEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).NotEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_NotEqual_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.NotEqual
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).NotEqual
  nameWithType: LinearMassFlow<T>.NotEqual
  nameWithType.vb: LinearMassFlow(Of T).NotEqual
- uid: Towel.Measurements.LinearMassFlow`1.op_Addition(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Addition(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Addition_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Addition(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Addition(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Addition(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Addition(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Addition(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Addition(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Addition_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Addition
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Addition
  nameWithType: LinearMassFlow<T>.Addition
  nameWithType.vb: LinearMassFlow(Of T).Addition
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},`0)
  name: Division(LinearMassFlow<T>, T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0___0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},`0)
  name.vb: Division(LinearMassFlow(Of T), T)
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), T)
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, T)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), T)
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(LinearMassFlow<T>, AreaDensity<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(LinearMassFlow(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, AreaDensity<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Force{`0})
  name: Division(LinearMassFlow<T>, Force<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Force{`0})
  name.vb: Division(LinearMassFlow(Of T), Force(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Force(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, Force<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), Force(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Length{`0})
  name: Division(LinearMassFlow<T>, Length<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Length{`0})
  name.vb: Division(LinearMassFlow(Of T), Length(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Length(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, Length<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), Length(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Division(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Division(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Mass{`0})
  name: Division(LinearMassFlow<T>, Mass<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Mass{`0})
  name.vb: Division(LinearMassFlow(Of T), Mass(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, Mass<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), Mass(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.MassRate{`0})
  name: Division(LinearMassFlow<T>, MassRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.MassRate{`0})
  name.vb: Division(LinearMassFlow(Of T), MassRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, MassRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), MassRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name: Division(LinearMassFlow<T>, Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(LinearMassFlow(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name: Division(LinearMassFlow<T>, Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name.vb: Division(LinearMassFlow(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.VolumeRate{`0})
  name: Division(LinearMassFlow<T>, VolumeRate<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Division(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Division(LinearMassFlow(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Division(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: LinearMassFlow<T>.Division(LinearMassFlow<T>, VolumeRate<T>)
  nameWithType.vb: LinearMassFlow(Of T).Division(LinearMassFlow(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Division*
  name: Division
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Division_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Division
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Division
  nameWithType: LinearMassFlow<T>.Division
  nameWithType.vb: LinearMassFlow(Of T).Division
- uid: Towel.Measurements.LinearMassFlow`1.op_Equality(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Equality(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Equality_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Equality(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Equality(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Equality(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equality(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Equality(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Equality(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Equality_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Equality
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Equality
  nameWithType: LinearMassFlow<T>.Equality
  nameWithType.vb: LinearMassFlow(Of T).Equality
- uid: Towel.Measurements.LinearMassFlow`1.op_GreaterThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThan(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_GreaterThan_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_GreaterThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThan(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThan(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThan(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThan
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThan
  nameWithType: LinearMassFlow<T>.GreaterThan
  nameWithType.vb: LinearMassFlow(Of T).GreaterThan
- uid: Towel.Measurements.LinearMassFlow`1.op_GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: GreaterThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_GreaterThanOrEqual_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_GreaterThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: GreaterThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThanOrEqual(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThanOrEqual(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.GreaterThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).GreaterThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).GreaterThanOrEqual
  nameWithType: LinearMassFlow<T>.GreaterThanOrEqual
  nameWithType.vb: LinearMassFlow(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.LinearMassFlow`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits})~Towel.Measurements.LinearMassFlow{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits) to LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits___Towel_Measurements_LinearMassFlow__0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits})~Towel.Measurements.LinearMassFlow{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits) to LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits> to Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits) to Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Implicit((T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits) to LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Widening((T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits) to LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Implicit_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.LinearMassFlow<T>.Implicit
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Widening
  nameWithType: LinearMassFlow<T>.Implicit
  nameWithType.vb: LinearMassFlow(Of T).Widening
- uid: Towel.Measurements.LinearMassFlow`1.op_Inequality(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Inequality(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Inequality_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Inequality(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Inequality(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Inequality(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Inequality(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Inequality(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Inequality(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Inequality_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Inequality
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Inequality
  nameWithType: LinearMassFlow<T>.Inequality
  nameWithType.vb: LinearMassFlow(Of T).Inequality
- uid: Towel.Measurements.LinearMassFlow`1.op_LessThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: LessThan(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_LessThan_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_LessThan(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThan(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThan(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThan(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThan(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_LessThan_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThan
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThan
  nameWithType: LinearMassFlow<T>.LessThan
  nameWithType.vb: LinearMassFlow(Of T).LessThan
- uid: Towel.Measurements.LinearMassFlow`1.op_LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: LessThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_LessThanOrEqual_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_LessThanOrEqual(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: LessThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThanOrEqual(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThanOrEqual(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.LessThanOrEqual(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).LessThanOrEqual(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).LessThanOrEqual
  nameWithType: LinearMassFlow<T>.LessThanOrEqual
  nameWithType.vb: LinearMassFlow(Of T).LessThanOrEqual
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply(`0,Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(T, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply__0_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Multiply(`0,Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(T, LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(T, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(T, Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(T, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(T, LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},`0)
  name: Multiply(LinearMassFlow<T>, T)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply_Towel_Measurements_LinearMassFlow__0___0_
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},`0)
  name.vb: Multiply(LinearMassFlow(Of T), T)
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, T)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), T)
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, T)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), T)
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(LinearMassFlow<T>, Acceleration<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Acceleration<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Acceleration(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name: Multiply(LinearMassFlow<T>, Speed<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Speed(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Speed<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Speed(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name: Multiply(LinearMassFlow<T>, Time<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Multiply(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(LinearMassFlow(Of T), Time(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.Time(Of T))
  nameWithType: LinearMassFlow<T>.Multiply(LinearMassFlow<T>, Time<T>)
  nameWithType.vb: LinearMassFlow(Of T).Multiply(LinearMassFlow(Of T), Time(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Multiply_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Multiply
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Multiply
  nameWithType: LinearMassFlow<T>.Multiply
  nameWithType.vb: LinearMassFlow(Of T).Multiply
- uid: Towel.Measurements.LinearMassFlow`1.op_Subtraction(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Subtraction(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Subtraction_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.op_Subtraction(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Subtraction(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Subtraction(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Subtraction(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Subtraction(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Subtraction(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Subtraction
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Subtraction
  nameWithType: LinearMassFlow<T>.Subtraction
  nameWithType.vb: LinearMassFlow(Of T).Subtraction
- uid: Towel.Measurements.LinearMassFlow`1.Subtract(Towel.Measurements.LinearMassFlow{`0})
  name: Subtract(LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Subtract_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Subtract(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Subtract(LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Subtract(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Subtract(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Subtract(LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Subtract(LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Subtract(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Subtract(LinearMassFlow<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Subtract_Towel_Measurements_LinearMassFlow__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.LinearMassFlow`1.Subtract(Towel.Measurements.LinearMassFlow{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Subtract(LinearMassFlow(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.LinearMassFlow<T>.Subtract(Towel.Measurements.LinearMassFlow<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Subtract(Towel.Measurements.LinearMassFlow(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: LinearMassFlow<T>.Subtract(LinearMassFlow<T>, LinearMassFlow<T>)
  nameWithType.vb: LinearMassFlow(Of T).Subtract(LinearMassFlow(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.LinearMassFlow`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_Subtract_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.Subtract
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).Subtract
  nameWithType: LinearMassFlow<T>.Subtract
  nameWithType.vb: LinearMassFlow(Of T).Subtract
- uid: Towel.Measurements.LinearMassFlow`1.TimeUnits3
  name: TimeUnits3
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_TimeUnits3
  commentId: P:Towel.Measurements.LinearMassFlow`1.TimeUnits3
  fullName: Towel.Measurements.LinearMassFlow<T>.TimeUnits3
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).TimeUnits3
  nameWithType: LinearMassFlow<T>.TimeUnits3
  nameWithType.vb: LinearMassFlow(Of T).TimeUnits3
- uid: Towel.Measurements.LinearMassFlow`1.TimeUnits3*
  name: TimeUnits3
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_TimeUnits3_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.TimeUnits3
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.TimeUnits3
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).TimeUnits3
  nameWithType: LinearMassFlow<T>.TimeUnits3
  nameWithType.vb: LinearMassFlow(Of T).TimeUnits3
- uid: Towel.Measurements.LinearMassFlow`1.ToString
  name: ToString()
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_ToString
  commentId: M:Towel.Measurements.LinearMassFlow`1.ToString
  fullName: Towel.Measurements.LinearMassFlow<T>.ToString()
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).ToString()
  nameWithType: LinearMassFlow<T>.ToString()
  nameWithType.vb: LinearMassFlow(Of T).ToString()
- uid: Towel.Measurements.LinearMassFlow`1.ToString*
  name: ToString
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_ToString_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.ToString
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).ToString
  nameWithType: LinearMassFlow<T>.ToString
  nameWithType.vb: LinearMassFlow(Of T).ToString
- uid: Towel.Measurements.LinearMassFlow`1.TryParse(System.String,Towel.Measurements.LinearMassFlow{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out LinearMassFlow<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_TryParse_System_String_Towel_Measurements_LinearMassFlow__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.LinearMassFlow`1.TryParse(System.String,Towel.Measurements.LinearMassFlow{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef LinearMassFlow(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.LinearMassFlow<T>.TryParse(System.String, out Towel.Measurements.LinearMassFlow<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).TryParse(System.String, ByRef Towel.Measurements.LinearMassFlow(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: LinearMassFlow<T>.TryParse(String, out LinearMassFlow<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: LinearMassFlow(Of T).TryParse(String, ByRef LinearMassFlow(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.LinearMassFlow`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.LinearMassFlow-1.html#Towel_Measurements_LinearMassFlow_1_TryParse_
  commentId: Overload:Towel.Measurements.LinearMassFlow`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.LinearMassFlow<T>.TryParse
  fullName.vb: Towel.Measurements.LinearMassFlow(Of T).TryParse
  nameWithType: LinearMassFlow<T>.TryParse
  nameWithType.vb: LinearMassFlow(Of T).TryParse
- uid: Towel.Measurements.Mass
  name: Mass
  href: api/Towel.Measurements.Mass.html
  commentId: T:Towel.Measurements.Mass
  fullName: Towel.Measurements.Mass
  nameWithType: Mass
- uid: Towel.Measurements.Mass.Units
  name: Mass.Units
  href: api/Towel.Measurements.Mass.Units.html
  commentId: T:Towel.Measurements.Mass.Units
  fullName: Towel.Measurements.Mass.Units
  nameWithType: Mass.Units
- uid: Towel.Measurements.Mass.Units.Attograms
  name: Attograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Attograms
  commentId: F:Towel.Measurements.Mass.Units.Attograms
  fullName: Towel.Measurements.Mass.Units.Attograms
  nameWithType: Mass.Units.Attograms
- uid: Towel.Measurements.Mass.Units.Centigrams
  name: Centigrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Centigrams
  commentId: F:Towel.Measurements.Mass.Units.Centigrams
  fullName: Towel.Measurements.Mass.Units.Centigrams
  nameWithType: Mass.Units.Centigrams
- uid: Towel.Measurements.Mass.Units.Decigrams
  name: Decigrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Decigrams
  commentId: F:Towel.Measurements.Mass.Units.Decigrams
  fullName: Towel.Measurements.Mass.Units.Decigrams
  nameWithType: Mass.Units.Decigrams
- uid: Towel.Measurements.Mass.Units.Dekagrams
  name: Dekagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Dekagrams
  commentId: F:Towel.Measurements.Mass.Units.Dekagrams
  fullName: Towel.Measurements.Mass.Units.Dekagrams
  nameWithType: Mass.Units.Dekagrams
- uid: Towel.Measurements.Mass.Units.Exagrams
  name: Exagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Exagrams
  commentId: F:Towel.Measurements.Mass.Units.Exagrams
  fullName: Towel.Measurements.Mass.Units.Exagrams
  nameWithType: Mass.Units.Exagrams
- uid: Towel.Measurements.Mass.Units.Femtograms
  name: Femtograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Femtograms
  commentId: F:Towel.Measurements.Mass.Units.Femtograms
  fullName: Towel.Measurements.Mass.Units.Femtograms
  nameWithType: Mass.Units.Femtograms
- uid: Towel.Measurements.Mass.Units.Gigagrams
  name: Gigagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Gigagrams
  commentId: F:Towel.Measurements.Mass.Units.Gigagrams
  fullName: Towel.Measurements.Mass.Units.Gigagrams
  nameWithType: Mass.Units.Gigagrams
- uid: Towel.Measurements.Mass.Units.Grams
  name: Grams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Grams
  commentId: F:Towel.Measurements.Mass.Units.Grams
  fullName: Towel.Measurements.Mass.Units.Grams
  nameWithType: Mass.Units.Grams
- uid: Towel.Measurements.Mass.Units.Hectograms
  name: Hectograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Hectograms
  commentId: F:Towel.Measurements.Mass.Units.Hectograms
  fullName: Towel.Measurements.Mass.Units.Hectograms
  nameWithType: Mass.Units.Hectograms
- uid: Towel.Measurements.Mass.Units.Kilograms
  name: Kilograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Kilograms
  commentId: F:Towel.Measurements.Mass.Units.Kilograms
  fullName: Towel.Measurements.Mass.Units.Kilograms
  nameWithType: Mass.Units.Kilograms
- uid: Towel.Measurements.Mass.Units.Megagrams
  name: Megagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Megagrams
  commentId: F:Towel.Measurements.Mass.Units.Megagrams
  fullName: Towel.Measurements.Mass.Units.Megagrams
  nameWithType: Mass.Units.Megagrams
- uid: Towel.Measurements.Mass.Units.Micrograms
  name: Micrograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Micrograms
  commentId: F:Towel.Measurements.Mass.Units.Micrograms
  fullName: Towel.Measurements.Mass.Units.Micrograms
  nameWithType: Mass.Units.Micrograms
- uid: Towel.Measurements.Mass.Units.Milligrams
  name: Milligrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Milligrams
  commentId: F:Towel.Measurements.Mass.Units.Milligrams
  fullName: Towel.Measurements.Mass.Units.Milligrams
  nameWithType: Mass.Units.Milligrams
- uid: Towel.Measurements.Mass.Units.Nanograms
  name: Nanograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Nanograms
  commentId: F:Towel.Measurements.Mass.Units.Nanograms
  fullName: Towel.Measurements.Mass.Units.Nanograms
  nameWithType: Mass.Units.Nanograms
- uid: Towel.Measurements.Mass.Units.Petagrams
  name: Petagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Petagrams
  commentId: F:Towel.Measurements.Mass.Units.Petagrams
  fullName: Towel.Measurements.Mass.Units.Petagrams
  nameWithType: Mass.Units.Petagrams
- uid: Towel.Measurements.Mass.Units.Picograms
  name: Picograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Picograms
  commentId: F:Towel.Measurements.Mass.Units.Picograms
  fullName: Towel.Measurements.Mass.Units.Picograms
  nameWithType: Mass.Units.Picograms
- uid: Towel.Measurements.Mass.Units.Teragrams
  name: Teragrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Teragrams
  commentId: F:Towel.Measurements.Mass.Units.Teragrams
  fullName: Towel.Measurements.Mass.Units.Teragrams
  nameWithType: Mass.Units.Teragrams
- uid: Towel.Measurements.Mass.Units.Yoctograms
  name: Yoctograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Yoctograms
  commentId: F:Towel.Measurements.Mass.Units.Yoctograms
  fullName: Towel.Measurements.Mass.Units.Yoctograms
  nameWithType: Mass.Units.Yoctograms
- uid: Towel.Measurements.Mass.Units.Yottagrams
  name: Yottagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Yottagrams
  commentId: F:Towel.Measurements.Mass.Units.Yottagrams
  fullName: Towel.Measurements.Mass.Units.Yottagrams
  nameWithType: Mass.Units.Yottagrams
- uid: Towel.Measurements.Mass.Units.Zeptograms
  name: Zeptograms
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Zeptograms
  commentId: F:Towel.Measurements.Mass.Units.Zeptograms
  fullName: Towel.Measurements.Mass.Units.Zeptograms
  nameWithType: Mass.Units.Zeptograms
- uid: Towel.Measurements.Mass.Units.Zettagrams
  name: Zettagrams
  href: api/Towel.Measurements.Mass.Units.html#Towel_Measurements_Mass_Units_Zettagrams
  commentId: F:Towel.Measurements.Mass.Units.Zettagrams
  fullName: Towel.Measurements.Mass.Units.Zettagrams
  nameWithType: Mass.Units.Zettagrams
- uid: Towel.Measurements.Mass`1
  name: Mass<T>
  href: api/Towel.Measurements.Mass-1.html
  commentId: T:Towel.Measurements.Mass`1
  name.vb: Mass(Of T)
  fullName: Towel.Measurements.Mass<T>
  fullName.vb: Towel.Measurements.Mass(Of T)
  nameWithType: Mass<T>
  nameWithType.vb: Mass(Of T)
- uid: Towel.Measurements.Mass`1.#ctor(`0,Towel.Measurements.Mass.Units)
  name: Mass(T, Mass.Units)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1__ctor__0_Towel_Measurements_Mass_Units_
  commentId: M:Towel.Measurements.Mass`1.#ctor(`0,Towel.Measurements.Mass.Units)
  fullName: Towel.Measurements.Mass<T>.Mass(T, Towel.Measurements.Mass.Units)
  fullName.vb: Towel.Measurements.Mass(Of T).Mass(T, Towel.Measurements.Mass.Units)
  nameWithType: Mass<T>.Mass(T, Mass.Units)
  nameWithType.vb: Mass(Of T).Mass(T, Mass.Units)
- uid: Towel.Measurements.Mass`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Mass(T, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.Mass`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.Mass<T>.Mass(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName.vb: Towel.Measurements.Mass(Of T).Mass(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: Mass<T>.Mass(T, MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType.vb: Mass(Of T).Mass(T, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.Mass`1.#ctor*
  name: Mass
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1__ctor_
  commentId: Overload:Towel.Measurements.Mass`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Mass
  fullName.vb: Towel.Measurements.Mass(Of T).Mass
  nameWithType: Mass<T>.Mass
  nameWithType.vb: Mass(Of T).Mass
- uid: Towel.Measurements.Mass`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Add__0_
  commentId: M:Towel.Measurements.Mass`1.Add(`0)
  fullName: Towel.Measurements.Mass<T>.Add(T)
  fullName.vb: Towel.Measurements.Mass(Of T).Add(T)
  nameWithType: Mass<T>.Add(T)
  nameWithType.vb: Mass(Of T).Add(T)
- uid: Towel.Measurements.Mass`1.Add(Towel.Measurements.Mass{`0})
  name: Add(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Add_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Add(Towel.Measurements.Mass{`0})
  name.vb: Add(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Add(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Add(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Add(Mass<T>)
  nameWithType.vb: Mass(Of T).Add(Mass(Of T))
- uid: Towel.Measurements.Mass`1.Add(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Add(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Add_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Add(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Add(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Add(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Add(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Add(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Add(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.Add*
  name: Add
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Add_
  commentId: Overload:Towel.Measurements.Mass`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Add
  fullName.vb: Towel.Measurements.Mass(Of T).Add
  nameWithType: Mass<T>.Add
  nameWithType.vb: Mass(Of T).Add
- uid: Towel.Measurements.Mass`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Mass.Units)
  name: Convert(T, Mass.Units, Mass.Units)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Mass_Units_
  commentId: M:Towel.Measurements.Mass`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Mass.Units)
  fullName: Towel.Measurements.Mass<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Mass.Units)
  fullName.vb: Towel.Measurements.Mass(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Mass.Units)
  nameWithType: Mass<T>.Convert(T, Mass.Units, Mass.Units)
  nameWithType.vb: Mass(Of T).Convert(T, Mass.Units, Mass.Units)
- uid: Towel.Measurements.Mass`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.Mass`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.Mass<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName.vb: Towel.Measurements.Mass(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: Mass<T>.Convert(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType.vb: Mass(Of T).Convert(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.Mass`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Convert_
  commentId: Overload:Towel.Measurements.Mass`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Convert
  fullName.vb: Towel.Measurements.Mass(Of T).Convert
  nameWithType: Mass<T>.Convert
  nameWithType.vb: Mass(Of T).Convert
- uid: Towel.Measurements.Mass`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide__0_
  commentId: M:Towel.Measurements.Mass`1.Divide(`0)
  fullName: Towel.Measurements.Mass<T>.Divide(T)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(T)
  nameWithType: Mass<T>.Divide(T)
  nameWithType.vb: Mass(Of T).Divide(T)
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: Mass<T>.Divide(Area<T>)
  nameWithType.vb: Mass(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Mass<T>.Divide(AreaDensity<T>)
  nameWithType.vb: Mass(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Density{`0})
  name: Divide(Density<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Density(Of T))
  nameWithType: Mass<T>.Divide(Density<T>)
  nameWithType.vb: Mass(Of T).Divide(Density(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Divide(Length<T>)
  nameWithType.vb: Mass(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.LinearDensity(Of T))
  nameWithType: Mass<T>.Divide(LinearDensity<T>)
  nameWithType.vb: Mass(Of T).Divide(LinearDensity(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0})
  name: Divide(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0})
  name.vb: Divide(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},`0)
  name: Divide(Mass<T>, T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0___0_
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},`0)
  name.vb: Divide(Mass(Of T), T)
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, T)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), T)
  nameWithType: Mass<T>.Divide(Mass<T>, T)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), T)
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Area{`0})
  name: Divide(Mass<T>, Area<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(Mass(Of T), Area(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Area<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Area(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(Mass<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(Mass(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, AreaDensity<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Density{`0})
  name: Divide(Mass<T>, Density<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Density{`0})
  name.vb: Divide(Mass(Of T), Density(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Density<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Density(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name: Divide(Mass<T>, Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(Mass(Of T), Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Length<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Length(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.LinearDensity{`0})
  name: Divide(Mass<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(Mass(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, LinearDensity<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Divide(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Divide(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.MassRate{`0})
  name: Divide(Mass<T>, MassRate<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.MassRate{`0})
  name.vb: Divide(Mass(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, MassRate<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), MassRate(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Time{`0})
  name: Divide(Mass<T>, Time<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Mass(Of T), Time(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Time<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Time(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Volume{`0})
  name: Divide(Mass<T>, Volume<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Mass__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Mass{`0},Towel.Measurements.Volume{`0})
  name.vb: Divide(Mass(Of T), Volume(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Mass<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Mass(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Mass<T>.Divide(Mass<T>, Volume<T>)
  nameWithType.vb: Mass(Of T).Divide(Mass(Of T), Volume(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.MassRate{`0})
  name: Divide(MassRate<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.MassRate{`0})
  name.vb: Divide(MassRate(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.MassRate(Of T))
  nameWithType: Mass<T>.Divide(MassRate<T>)
  nameWithType.vb: Mass(Of T).Divide(MassRate(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Mass<T>.Divide(Time<T>)
  nameWithType.vb: Mass(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Mass`1.Divide(Towel.Measurements.Volume{`0})
  name: Divide(Volume<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Mass`1.Divide(Towel.Measurements.Volume{`0})
  name.vb: Divide(Volume(Of T))
  fullName: Towel.Measurements.Mass<T>.Divide(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Divide(Towel.Measurements.Volume(Of T))
  nameWithType: Mass<T>.Divide(Volume<T>)
  nameWithType.vb: Mass(Of T).Divide(Volume(Of T))
- uid: Towel.Measurements.Mass`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Divide_
  commentId: Overload:Towel.Measurements.Mass`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Divide
  fullName.vb: Towel.Measurements.Mass(Of T).Divide
  nameWithType: Mass<T>.Divide
  nameWithType.vb: Mass(Of T).Divide
- uid: Towel.Measurements.Mass`1.Equal(Towel.Measurements.Mass{`0})
  name: Equal(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Equal_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Equal(Towel.Measurements.Mass{`0})
  name.vb: Equal(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Equal(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Equal(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Equal(Mass<T>)
  nameWithType.vb: Mass(Of T).Equal(Mass(Of T))
- uid: Towel.Measurements.Mass`1.Equal(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Equal(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Equal_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Equal(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Equal(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Equal(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Equal(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Equal(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Equal(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Equal_
  commentId: Overload:Towel.Measurements.Mass`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Equal
  fullName.vb: Towel.Measurements.Mass(Of T).Equal
  nameWithType: Mass<T>.Equal
  nameWithType.vb: Mass(Of T).Equal
- uid: Towel.Measurements.Mass`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Mass`1.Equals(System.Object)
  fullName: Towel.Measurements.Mass<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Mass(Of T).Equals(System.Object)
  nameWithType: Mass<T>.Equals(Object)
  nameWithType.vb: Mass(Of T).Equals(Object)
- uid: Towel.Measurements.Mass`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Equals_
  commentId: Overload:Towel.Measurements.Mass`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Equals
  fullName.vb: Towel.Measurements.Mass(Of T).Equals
  nameWithType: Mass<T>.Equals
  nameWithType.vb: Mass(Of T).Equals
- uid: Towel.Measurements.Mass`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GetHashCode
  commentId: M:Towel.Measurements.Mass`1.GetHashCode
  fullName: Towel.Measurements.Mass<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Mass(Of T).GetHashCode()
  nameWithType: Mass<T>.GetHashCode()
  nameWithType.vb: Mass(Of T).GetHashCode()
- uid: Towel.Measurements.Mass`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Mass`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.GetHashCode
  fullName.vb: Towel.Measurements.Mass(Of T).GetHashCode
  nameWithType: Mass<T>.GetHashCode
  nameWithType.vb: Mass(Of T).GetHashCode
- uid: Towel.Measurements.Mass`1.GreaterThan(Towel.Measurements.Mass{`0})
  name: GreaterThan(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThan_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.GreaterThan(Towel.Measurements.Mass{`0})
  name.vb: GreaterThan(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThan(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThan(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThan(Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThan(Mass(Of T))
- uid: Towel.Measurements.Mass`1.GreaterThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: GreaterThan(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThan_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.GreaterThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: GreaterThan(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThan(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThan(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThan(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThan(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Mass`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.GreaterThan
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThan
  nameWithType: Mass<T>.GreaterThan
  nameWithType.vb: Mass(Of T).GreaterThan
- uid: Towel.Measurements.Mass`1.GreaterThanOrEqual(Towel.Measurements.Mass{`0})
  name: GreaterThanOrEqual(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThanOrEqual_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.GreaterThanOrEqual(Towel.Measurements.Mass{`0})
  name.vb: GreaterThanOrEqual(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThanOrEqual(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThanOrEqual(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThanOrEqual(Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThanOrEqual(Mass(Of T))
- uid: Towel.Measurements.Mass`1.GreaterThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: GreaterThanOrEqual(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThanOrEqual_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.GreaterThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: GreaterThanOrEqual(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThanOrEqual(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThanOrEqual(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThanOrEqual(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThanOrEqual(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Mass`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThanOrEqual
  nameWithType: Mass<T>.GreaterThanOrEqual
  nameWithType.vb: Mass(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Mass`1.Item(Towel.Measurements.Mass.Units)
  name: Item[Mass.Units]
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Item_Towel_Measurements_Mass_Units_
  commentId: P:Towel.Measurements.Mass`1.Item(Towel.Measurements.Mass.Units)
  name.vb: Item(Mass.Units)
  fullName: Towel.Measurements.Mass<T>.Item[Towel.Measurements.Mass.Units]
  fullName.vb: Towel.Measurements.Mass(Of T).Item(Towel.Measurements.Mass.Units)
  nameWithType: Mass<T>.Item[Mass.Units]
  nameWithType.vb: Mass(Of T).Item(Mass.Units)
- uid: Towel.Measurements.Mass`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Item[MeasurementUnitsSyntaxTypes.MassUnits]
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: P:Towel.Measurements.Mass`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.Mass<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits]
  fullName.vb: Towel.Measurements.Mass(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: Mass<T>.Item[MeasurementUnitsSyntaxTypes.MassUnits]
  nameWithType.vb: Mass(Of T).Item(MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.Mass`1.Item*
  name: Item
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Item_
  commentId: Overload:Towel.Measurements.Mass`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Item
  fullName.vb: Towel.Measurements.Mass(Of T).Item
  nameWithType: Mass<T>.Item
  nameWithType.vb: Mass(Of T).Item
- uid: Towel.Measurements.Mass`1.LessThan(Towel.Measurements.Mass{`0})
  name: LessThan(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThan_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.LessThan(Towel.Measurements.Mass{`0})
  name.vb: LessThan(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThan(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThan(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThan(Mass<T>)
  nameWithType.vb: Mass(Of T).LessThan(Mass(Of T))
- uid: Towel.Measurements.Mass`1.LessThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: LessThan(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThan_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.LessThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: LessThan(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThan(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThan(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThan(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).LessThan(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThan_
  commentId: Overload:Towel.Measurements.Mass`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.LessThan
  fullName.vb: Towel.Measurements.Mass(Of T).LessThan
  nameWithType: Mass<T>.LessThan
  nameWithType.vb: Mass(Of T).LessThan
- uid: Towel.Measurements.Mass`1.LessThanOrEqual(Towel.Measurements.Mass{`0})
  name: LessThanOrEqual(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThanOrEqual_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.LessThanOrEqual(Towel.Measurements.Mass{`0})
  name.vb: LessThanOrEqual(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThanOrEqual(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThanOrEqual(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThanOrEqual(Mass<T>)
  nameWithType.vb: Mass(Of T).LessThanOrEqual(Mass(Of T))
- uid: Towel.Measurements.Mass`1.LessThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: LessThanOrEqual(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThanOrEqual_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.LessThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: LessThanOrEqual(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThanOrEqual(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThanOrEqual(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThanOrEqual(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).LessThanOrEqual(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Mass`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Mass(Of T).LessThanOrEqual
  nameWithType: Mass<T>.LessThanOrEqual
  nameWithType.vb: Mass(Of T).LessThanOrEqual
- uid: Towel.Measurements.Mass`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_MassUnits1
  commentId: P:Towel.Measurements.Mass`1.MassUnits1
  fullName: Towel.Measurements.Mass<T>.MassUnits1
  fullName.vb: Towel.Measurements.Mass(Of T).MassUnits1
  nameWithType: Mass<T>.MassUnits1
  nameWithType.vb: Mass(Of T).MassUnits1
- uid: Towel.Measurements.Mass`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Mass`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.MassUnits1
  fullName.vb: Towel.Measurements.Mass(Of T).MassUnits1
  nameWithType: Mass<T>.MassUnits1
  nameWithType.vb: Mass(Of T).MassUnits1
- uid: Towel.Measurements.Mass`1.Multiply(`0,Towel.Measurements.Mass{`0})
  name: Multiply(T, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply__0_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(`0,Towel.Measurements.Mass{`0})
  name.vb: Multiply(T, Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(T, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(T, Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Multiply(T, Mass<T>)
  nameWithType.vb: Mass(Of T).Multiply(T, Mass(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: Mass<T>.Multiply(Acceleration<T>)
  nameWithType.vb: Mass(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Multiply(Length<T>)
  nameWithType.vb: Mass(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},`0)
  name: Multiply(Mass<T>, T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Mass__0___0_
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},`0)
  name.vb: Multiply(Mass(Of T), T)
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, T)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), T)
  nameWithType: Mass<T>.Multiply(Mass<T>, T)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), T)
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(Mass<T>, Acceleration<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Mass(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Acceleration<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name: Multiply(Mass<T>, Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Mass(Of T), Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Length<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Length(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Mass<T>, Speed<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Mass(Of T), Speed(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Speed<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Speed(Of T))
- uid: Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Mass`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: Mass<T>.Multiply(Speed<T>)
  nameWithType.vb: Mass(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.Mass`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Multiply_
  commentId: Overload:Towel.Measurements.Mass`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Multiply
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply
  nameWithType: Mass<T>.Multiply
  nameWithType.vb: Mass(Of T).Multiply
- uid: Towel.Measurements.Mass`1.NotEqual(Towel.Measurements.Mass{`0})
  name: NotEqual(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_NotEqual_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.NotEqual(Towel.Measurements.Mass{`0})
  name.vb: NotEqual(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.NotEqual(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).NotEqual(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.NotEqual(Mass<T>)
  nameWithType.vb: Mass(Of T).NotEqual(Mass(Of T))
- uid: Towel.Measurements.Mass`1.NotEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: NotEqual(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_NotEqual_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.NotEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: NotEqual(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.NotEqual(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).NotEqual(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.NotEqual(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).NotEqual(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_NotEqual_
  commentId: Overload:Towel.Measurements.Mass`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.NotEqual
  fullName.vb: Towel.Measurements.Mass(Of T).NotEqual
  nameWithType: Mass<T>.NotEqual
  nameWithType.vb: Mass(Of T).NotEqual
- uid: Towel.Measurements.Mass`1.op_Addition(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Addition(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Addition_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Addition(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Addition(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Addition(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Addition(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Addition(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Addition(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Addition_
  commentId: Overload:Towel.Measurements.Mass`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Addition
  fullName.vb: Towel.Measurements.Mass(Of T).Addition
  nameWithType: Mass<T>.Addition
  nameWithType.vb: Mass(Of T).Addition
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},`0)
  name: Division(Mass<T>, T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0___0_
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},`0)
  name.vb: Division(Mass(Of T), T)
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, T)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), T)
  nameWithType: Mass<T>.Division(Mass<T>, T)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), T)
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Area{`0})
  name: Division(Mass<T>, Area<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Area{`0})
  name.vb: Division(Mass(Of T), Area(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Area<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Area(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(Mass<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(Mass(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, AreaDensity<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Density{`0})
  name: Division(Mass<T>, Density<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Density{`0})
  name.vb: Division(Mass(Of T), Density(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Density<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Density(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name: Division(Mass<T>, Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name.vb: Division(Mass(Of T), Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Length<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Length(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.LinearDensity{`0})
  name: Division(Mass<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Division(Mass(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, LinearDensity<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Division(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Division(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.MassRate{`0})
  name: Division(Mass<T>, MassRate<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.MassRate{`0})
  name.vb: Division(Mass(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, MassRate<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), MassRate(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Time{`0})
  name: Division(Mass<T>, Time<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Mass(Of T), Time(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Time<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Time(Of T))
- uid: Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Volume{`0})
  name: Division(Mass<T>, Volume<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_Towel_Measurements_Mass__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Mass`1.op_Division(Towel.Measurements.Mass{`0},Towel.Measurements.Volume{`0})
  name.vb: Division(Mass(Of T), Volume(Of T))
  fullName: Towel.Measurements.Mass<T>.Division(Towel.Measurements.Mass<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Division(Towel.Measurements.Mass(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Mass<T>.Division(Mass<T>, Volume<T>)
  nameWithType.vb: Mass(Of T).Division(Mass(Of T), Volume(Of T))
- uid: Towel.Measurements.Mass`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Division_
  commentId: Overload:Towel.Measurements.Mass`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Division
  fullName.vb: Towel.Measurements.Mass(Of T).Division
  nameWithType: Mass<T>.Division
  nameWithType.vb: Mass(Of T).Division
- uid: Towel.Measurements.Mass`1.op_Equality(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Equality(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Equality_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Equality(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Equality(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Equality(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Equality(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Equality(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Equality(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Equality_
  commentId: Overload:Towel.Measurements.Mass`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Equality
  fullName.vb: Towel.Measurements.Mass(Of T).Equality
  nameWithType: Mass<T>.Equality
  nameWithType.vb: Mass(Of T).Equality
- uid: Towel.Measurements.Mass`1.op_GreaterThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: GreaterThan(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_GreaterThan_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_GreaterThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: GreaterThan(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThan(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThan(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThan(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThan(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Mass`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.GreaterThan
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThan
  nameWithType: Mass<T>.GreaterThan
  nameWithType.vb: Mass(Of T).GreaterThan
- uid: Towel.Measurements.Mass`1.op_GreaterThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: GreaterThanOrEqual(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_GreaterThanOrEqual_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_GreaterThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: GreaterThanOrEqual(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.GreaterThanOrEqual(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThanOrEqual(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.GreaterThanOrEqual(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).GreaterThanOrEqual(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Mass`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Mass(Of T).GreaterThanOrEqual
  nameWithType: Mass<T>.GreaterThanOrEqual
  nameWithType.vb: Mass(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Mass`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits})~Towel.Measurements.Mass{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.MassUnits) to Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits___Towel_Measurements_Mass__0_
  commentId: M:Towel.Measurements.Mass`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits})~Towel.Measurements.Mass{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.MassUnits) to Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits> to Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits) to Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Implicit((T, MeasurementUnitsSyntaxTypes.MassUnits) to Mass<T>)
  nameWithType.vb: Mass(Of T).Widening((T, MeasurementUnitsSyntaxTypes.MassUnits) to Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Mass`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Mass<T>.Implicit
  fullName.vb: Towel.Measurements.Mass(Of T).Widening
  nameWithType: Mass<T>.Implicit
  nameWithType.vb: Mass(Of T).Widening
- uid: Towel.Measurements.Mass`1.op_Inequality(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Inequality(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Inequality_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Inequality(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Inequality(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Inequality(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Inequality(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Inequality(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Inequality(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Mass`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Inequality
  fullName.vb: Towel.Measurements.Mass(Of T).Inequality
  nameWithType: Mass<T>.Inequality
  nameWithType.vb: Mass(Of T).Inequality
- uid: Towel.Measurements.Mass`1.op_LessThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: LessThan(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_LessThan_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_LessThan(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: LessThan(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThan(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThan(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThan(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).LessThan(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Mass`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.LessThan
  fullName.vb: Towel.Measurements.Mass(Of T).LessThan
  nameWithType: Mass<T>.LessThan
  nameWithType.vb: Mass(Of T).LessThan
- uid: Towel.Measurements.Mass`1.op_LessThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: LessThanOrEqual(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_LessThanOrEqual_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_LessThanOrEqual(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: LessThanOrEqual(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.LessThanOrEqual(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).LessThanOrEqual(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.LessThanOrEqual(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).LessThanOrEqual(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Mass`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Mass(Of T).LessThanOrEqual
  nameWithType: Mass<T>.LessThanOrEqual
  nameWithType.vb: Mass(Of T).LessThanOrEqual
- uid: Towel.Measurements.Mass`1.op_Multiply(`0,Towel.Measurements.Mass{`0})
  name: Multiply(T, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply__0_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Multiply(`0,Towel.Measurements.Mass{`0})
  name.vb: Multiply(T, Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(T, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(T, Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Multiply(T, Mass<T>)
  nameWithType.vb: Mass(Of T).Multiply(T, Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},`0)
  name: Multiply(Mass<T>, T)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply_Towel_Measurements_Mass__0___0_
  commentId: M:Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},`0)
  name.vb: Multiply(Mass(Of T), T)
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, T)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), T)
  nameWithType: Mass<T>.Multiply(Mass<T>, T)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), T)
- uid: Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(Mass<T>, Acceleration<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Mass(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Acceleration<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name: Multiply(Mass<T>, Length<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(Mass(Of T), Length(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Length<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Length(Of T))
- uid: Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Mass<T>, Speed<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply_Towel_Measurements_Mass__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Mass`1.op_Multiply(Towel.Measurements.Mass{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Mass(Of T), Speed(Of T))
  fullName: Towel.Measurements.Mass<T>.Multiply(Towel.Measurements.Mass<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply(Towel.Measurements.Mass(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Mass<T>.Multiply(Mass<T>, Speed<T>)
  nameWithType.vb: Mass(Of T).Multiply(Mass(Of T), Speed(Of T))
- uid: Towel.Measurements.Mass`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Mass`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Multiply
  fullName.vb: Towel.Measurements.Mass(Of T).Multiply
  nameWithType: Mass<T>.Multiply
  nameWithType.vb: Mass(Of T).Multiply
- uid: Towel.Measurements.Mass`1.op_Subtraction(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Subtraction(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Subtraction_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.op_Subtraction(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Subtraction(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Subtraction(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Subtraction(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Subtraction(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Subtraction(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Mass`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Subtraction
  fullName.vb: Towel.Measurements.Mass(Of T).Subtraction
  nameWithType: Mass<T>.Subtraction
  nameWithType.vb: Mass(Of T).Subtraction
- uid: Towel.Measurements.Mass`1.Subtract(Towel.Measurements.Mass{`0})
  name: Subtract(Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Subtract_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Subtract(Towel.Measurements.Mass{`0})
  name.vb: Subtract(Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Subtract(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Subtract(Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Subtract(Mass<T>)
  nameWithType.vb: Mass(Of T).Subtract(Mass(Of T))
- uid: Towel.Measurements.Mass`1.Subtract(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name: Subtract(Mass<T>, Mass<T>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Subtract_Towel_Measurements_Mass__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Mass`1.Subtract(Towel.Measurements.Mass{`0},Towel.Measurements.Mass{`0})
  name.vb: Subtract(Mass(Of T), Mass(Of T))
  fullName: Towel.Measurements.Mass<T>.Subtract(Towel.Measurements.Mass<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Mass(Of T).Subtract(Towel.Measurements.Mass(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Mass<T>.Subtract(Mass<T>, Mass<T>)
  nameWithType.vb: Mass(Of T).Subtract(Mass(Of T), Mass(Of T))
- uid: Towel.Measurements.Mass`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_Subtract_
  commentId: Overload:Towel.Measurements.Mass`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.Subtract
  fullName.vb: Towel.Measurements.Mass(Of T).Subtract
  nameWithType: Mass<T>.Subtract
  nameWithType.vb: Mass(Of T).Subtract
- uid: Towel.Measurements.Mass`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_ToString
  commentId: M:Towel.Measurements.Mass`1.ToString
  fullName: Towel.Measurements.Mass<T>.ToString()
  fullName.vb: Towel.Measurements.Mass(Of T).ToString()
  nameWithType: Mass<T>.ToString()
  nameWithType.vb: Mass(Of T).ToString()
- uid: Towel.Measurements.Mass`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_ToString_
  commentId: Overload:Towel.Measurements.Mass`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.ToString
  fullName.vb: Towel.Measurements.Mass(Of T).ToString
  nameWithType: Mass<T>.ToString
  nameWithType.vb: Mass(Of T).ToString
- uid: Towel.Measurements.Mass`1.TryParse(System.String,Towel.Measurements.Mass{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Mass<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_TryParse_System_String_Towel_Measurements_Mass__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Mass`1.TryParse(System.String,Towel.Measurements.Mass{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Mass(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Mass<T>.TryParse(System.String, out Towel.Measurements.Mass<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Mass(Of T).TryParse(System.String, ByRef Towel.Measurements.Mass(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Mass<T>.TryParse(String, out Mass<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Mass(Of T).TryParse(String, ByRef Mass(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Mass`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Mass-1.html#Towel_Measurements_Mass_1_TryParse_
  commentId: Overload:Towel.Measurements.Mass`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Mass<T>.TryParse
  fullName.vb: Towel.Measurements.Mass(Of T).TryParse
  nameWithType: Mass<T>.TryParse
  nameWithType.vb: Mass(Of T).TryParse
- uid: Towel.Measurements.MassRate`1
  name: MassRate<T>
  href: api/Towel.Measurements.MassRate-1.html
  commentId: T:Towel.Measurements.MassRate`1
  name.vb: MassRate(Of T)
  fullName: Towel.Measurements.MassRate<T>
  fullName.vb: Towel.Measurements.MassRate(Of T)
  nameWithType: MassRate<T>
  nameWithType.vb: MassRate(Of T)
- uid: Towel.Measurements.MassRate`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  name: MassRate(T, Mass.Units, Time.Units)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MassRate`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MassRate<T>.MassRate(T, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.MassRate(Of T).MassRate(T, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  nameWithType: MassRate<T>.MassRate(T, Mass.Units, Time.Units)
  nameWithType.vb: MassRate(Of T).MassRate(T, Mass.Units, Time.Units)
- uid: Towel.Measurements.MassRate`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: MassRate(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: M:Towel.Measurements.MassRate`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MassRate<T>.MassRate(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName.vb: Towel.Measurements.MassRate(Of T).MassRate(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MassRate<T>.MassRate(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType.vb: MassRate(Of T).MassRate(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MassRate`1.#ctor*
  name: MassRate
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1__ctor_
  commentId: Overload:Towel.Measurements.MassRate`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.MassRate
  fullName.vb: Towel.Measurements.MassRate(Of T).MassRate
  nameWithType: MassRate<T>.MassRate
  nameWithType.vb: MassRate(Of T).MassRate
- uid: Towel.Measurements.MassRate`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Add__0_
  commentId: M:Towel.Measurements.MassRate`1.Add(`0)
  fullName: Towel.Measurements.MassRate<T>.Add(T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Add(T)
  nameWithType: MassRate<T>.Add(T)
  nameWithType.vb: MassRate(Of T).Add(T)
- uid: Towel.Measurements.MassRate`1.Add(Towel.Measurements.MassRate{`0})
  name: Add(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Add_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Add(Towel.Measurements.MassRate{`0})
  name.vb: Add(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Add(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Add(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Add(MassRate<T>)
  nameWithType.vb: MassRate(Of T).Add(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Add(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Add(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Add_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Add(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Add(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Add(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Add(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Add(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Add(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Add*
  name: Add
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Add_
  commentId: Overload:Towel.Measurements.MassRate`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Add
  fullName.vb: Towel.Measurements.MassRate(Of T).Add
  nameWithType: MassRate<T>.Add
  nameWithType.vb: MassRate(Of T).Add
- uid: Towel.Measurements.MassRate`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Time.Units, Mass.Units, Time.Units)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MassRate`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MassRate<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.MassRate(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  nameWithType: MassRate<T>.Convert(T, Mass.Units, Time.Units, Mass.Units, Time.Units)
  nameWithType.vb: MassRate(Of T).Convert(T, Mass.Units, Time.Units, Mass.Units, Time.Units)
- uid: Towel.Measurements.MassRate`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: M:Towel.Measurements.MassRate`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MassRate<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName.vb: Towel.Measurements.MassRate(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MassRate<T>.Convert(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType.vb: MassRate(Of T).Convert(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MassRate`1.Convert*
  name: Convert
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Convert_
  commentId: Overload:Towel.Measurements.MassRate`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Convert
  fullName.vb: Towel.Measurements.MassRate(Of T).Convert
  nameWithType: MassRate<T>.Convert
  nameWithType.vb: MassRate(Of T).Convert
- uid: Towel.Measurements.MassRate`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide__0_
  commentId: M:Towel.Measurements.MassRate`1.Divide(`0)
  fullName: Towel.Measurements.MassRate<T>.Divide(T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(T)
  nameWithType: MassRate<T>.Divide(T)
  nameWithType.vb: MassRate(Of T).Divide(T)
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.Density{`0})
  name: Divide(Density<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.Density{`0})
  name.vb: Divide(Density(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.Density(Of T))
  nameWithType: MassRate<T>.Divide(Density<T>)
  nameWithType.vb: MassRate(Of T).Divide(Density(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.LinearDensity{`0})
  name: Divide(LinearDensity<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(LinearDensity(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.LinearDensity(Of T))
  nameWithType: MassRate<T>.Divide(LinearDensity<T>)
  nameWithType.vb: MassRate(Of T).Divide(LinearDensity(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0})
  name: Divide(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0})
  name.vb: Divide(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},`0)
  name: Divide(MassRate<T>, T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0___0_
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},`0)
  name.vb: Divide(MassRate(Of T), T)
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), T)
  nameWithType: MassRate<T>.Divide(MassRate<T>, T)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), T)
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.Density{`0})
  name: Divide(MassRate<T>, Density<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.Density{`0})
  name.vb: Divide(MassRate(Of T), Density(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), Towel.Measurements.Density(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>, Density<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), Density(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.LinearDensity{`0})
  name: Divide(MassRate<T>, LinearDensity<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Divide(MassRate(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>, LinearDensity<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Divide(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Divide(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name: Divide(MassRate<T>, Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(MassRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>, Speed<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), Speed(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Divide(MassRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_MassRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.MassRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(MassRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.MassRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.MassRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: MassRate<T>.Divide(MassRate<T>, VolumeRate<T>)
  nameWithType.vb: MassRate(Of T).Divide(MassRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Divide(Speed<T>)
  nameWithType.vb: MassRate(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.MassRate`1.Divide(Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Divide(Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Divide(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T))
  nameWithType: MassRate<T>.Divide(VolumeRate<T>)
  nameWithType.vb: MassRate(Of T).Divide(VolumeRate(Of T))
- uid: Towel.Measurements.MassRate`1.Divide*
  name: Divide
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Divide_
  commentId: Overload:Towel.Measurements.MassRate`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Divide
  fullName.vb: Towel.Measurements.MassRate(Of T).Divide
  nameWithType: MassRate<T>.Divide
  nameWithType.vb: MassRate(Of T).Divide
- uid: Towel.Measurements.MassRate`1.Equal(Towel.Measurements.MassRate{`0})
  name: Equal(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Equal_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Equal(Towel.Measurements.MassRate{`0})
  name.vb: Equal(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Equal(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Equal(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Equal(MassRate<T>)
  nameWithType.vb: MassRate(Of T).Equal(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Equal(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Equal(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Equal_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Equal(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Equal(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Equal(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Equal(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Equal(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Equal(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Equal*
  name: Equal
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Equal_
  commentId: Overload:Towel.Measurements.MassRate`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Equal
  fullName.vb: Towel.Measurements.MassRate(Of T).Equal
  nameWithType: MassRate<T>.Equal
  nameWithType.vb: MassRate(Of T).Equal
- uid: Towel.Measurements.MassRate`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Equals_System_Object_
  commentId: M:Towel.Measurements.MassRate`1.Equals(System.Object)
  fullName: Towel.Measurements.MassRate<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.MassRate(Of T).Equals(System.Object)
  nameWithType: MassRate<T>.Equals(Object)
  nameWithType.vb: MassRate(Of T).Equals(Object)
- uid: Towel.Measurements.MassRate`1.Equals*
  name: Equals
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Equals_
  commentId: Overload:Towel.Measurements.MassRate`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Equals
  fullName.vb: Towel.Measurements.MassRate(Of T).Equals
  nameWithType: MassRate<T>.Equals
  nameWithType.vb: MassRate(Of T).Equals
- uid: Towel.Measurements.MassRate`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GetHashCode
  commentId: M:Towel.Measurements.MassRate`1.GetHashCode
  fullName: Towel.Measurements.MassRate<T>.GetHashCode()
  fullName.vb: Towel.Measurements.MassRate(Of T).GetHashCode()
  nameWithType: MassRate<T>.GetHashCode()
  nameWithType.vb: MassRate(Of T).GetHashCode()
- uid: Towel.Measurements.MassRate`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GetHashCode_
  commentId: Overload:Towel.Measurements.MassRate`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.GetHashCode
  fullName.vb: Towel.Measurements.MassRate(Of T).GetHashCode
  nameWithType: MassRate<T>.GetHashCode
  nameWithType.vb: MassRate(Of T).GetHashCode
- uid: Towel.Measurements.MassRate`1.GreaterThan(Towel.Measurements.MassRate{`0})
  name: GreaterThan(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThan_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.GreaterThan(Towel.Measurements.MassRate{`0})
  name.vb: GreaterThan(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThan(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThan(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThan(MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThan(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.GreaterThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: GreaterThan(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThan_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.GreaterThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: GreaterThan(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThan(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThan(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThan(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThan(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThan_
  commentId: Overload:Towel.Measurements.MassRate`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.GreaterThan
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThan
  nameWithType: MassRate<T>.GreaterThan
  nameWithType.vb: MassRate(Of T).GreaterThan
- uid: Towel.Measurements.MassRate`1.GreaterThanOrEqual(Towel.Measurements.MassRate{`0})
  name: GreaterThanOrEqual(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThanOrEqual_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.GreaterThanOrEqual(Towel.Measurements.MassRate{`0})
  name.vb: GreaterThanOrEqual(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThanOrEqual(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThanOrEqual(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThanOrEqual(MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThanOrEqual(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.GreaterThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: GreaterThanOrEqual(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThanOrEqual_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.GreaterThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: GreaterThanOrEqual(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThanOrEqual(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThanOrEqual(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThanOrEqual(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThanOrEqual(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.MassRate`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThanOrEqual
  nameWithType: MassRate<T>.GreaterThanOrEqual
  nameWithType.vb: MassRate(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.MassRate`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Time.Units]
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.MassRate`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Time.Units)
  fullName: Towel.Measurements.MassRate<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.MassRate(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  nameWithType: MassRate<T>.Item[Mass.Units, Time.Units]
  nameWithType.vb: MassRate(Of T).Item(Mass.Units, Time.Units)
- uid: Towel.Measurements.MassRate`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.MassRateBaseUnits]
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: P:Towel.Measurements.MassRate`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MassRate<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits]
  fullName.vb: Towel.Measurements.MassRate(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MassRate<T>.Item[MeasurementUnitsSyntaxTypes.MassRateBaseUnits]
  nameWithType.vb: MassRate(Of T).Item(MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MassRate`1.Item*
  name: Item
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Item_
  commentId: Overload:Towel.Measurements.MassRate`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Item
  fullName.vb: Towel.Measurements.MassRate(Of T).Item
  nameWithType: MassRate<T>.Item
  nameWithType.vb: MassRate(Of T).Item
- uid: Towel.Measurements.MassRate`1.LessThan(Towel.Measurements.MassRate{`0})
  name: LessThan(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThan_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.LessThan(Towel.Measurements.MassRate{`0})
  name.vb: LessThan(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThan(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThan(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThan(MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThan(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.LessThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: LessThan(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThan_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.LessThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: LessThan(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThan(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThan(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThan(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThan(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThan_
  commentId: Overload:Towel.Measurements.MassRate`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.LessThan
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThan
  nameWithType: MassRate<T>.LessThan
  nameWithType.vb: MassRate(Of T).LessThan
- uid: Towel.Measurements.MassRate`1.LessThanOrEqual(Towel.Measurements.MassRate{`0})
  name: LessThanOrEqual(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThanOrEqual_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.LessThanOrEqual(Towel.Measurements.MassRate{`0})
  name.vb: LessThanOrEqual(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThanOrEqual(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThanOrEqual(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThanOrEqual(MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThanOrEqual(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.LessThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: LessThanOrEqual(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThanOrEqual_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.LessThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: LessThanOrEqual(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThanOrEqual(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThanOrEqual(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThanOrEqual(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThanOrEqual(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.MassRate`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThanOrEqual
  nameWithType: MassRate<T>.LessThanOrEqual
  nameWithType.vb: MassRate(Of T).LessThanOrEqual
- uid: Towel.Measurements.MassRate`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_MassUnits1
  commentId: P:Towel.Measurements.MassRate`1.MassUnits1
  fullName: Towel.Measurements.MassRate<T>.MassUnits1
  fullName.vb: Towel.Measurements.MassRate(Of T).MassUnits1
  nameWithType: MassRate<T>.MassUnits1
  nameWithType.vb: MassRate(Of T).MassUnits1
- uid: Towel.Measurements.MassRate`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_MassUnits1_
  commentId: Overload:Towel.Measurements.MassRate`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.MassUnits1
  fullName.vb: Towel.Measurements.MassRate(Of T).MassUnits1
  nameWithType: MassRate<T>.MassUnits1
  nameWithType.vb: MassRate(Of T).MassUnits1
- uid: Towel.Measurements.MassRate`1.Multiply(`0,Towel.Measurements.MassRate{`0})
  name: Multiply(T, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply__0_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(`0,Towel.Measurements.MassRate{`0})
  name.vb: Multiply(T, MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(T, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(T, Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Multiply(T, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Multiply(T, MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Length{`0})
  name: Multiply(Length<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Length{`0})
  name.vb: Multiply(Length(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.Length(Of T))
  nameWithType: MassRate<T>.Multiply(Length<T>)
  nameWithType.vb: MassRate(Of T).Multiply(Length(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},`0)
  name: Multiply(MassRate<T>, T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_MassRate__0___0_
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},`0)
  name.vb: Multiply(MassRate(Of T), T)
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), T)
  nameWithType: MassRate<T>.Multiply(MassRate<T>, T)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), T)
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Length{`0})
  name: Multiply(MassRate<T>, Length<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(MassRate(Of T), Length(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Length(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Length<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Length(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name: Multiply(MassRate<T>, Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(MassRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Speed<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Speed(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Time{`0})
  name: Multiply(MassRate<T>, Time<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(MassRate(Of T), Time(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Time(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Time<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Time(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Multiply(Speed<T>)
  nameWithType.vb: MassRate(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.MassRate`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: MassRate<T>.Multiply(Time<T>)
  nameWithType.vb: MassRate(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.MassRate`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Multiply_
  commentId: Overload:Towel.Measurements.MassRate`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Multiply
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply
  nameWithType: MassRate<T>.Multiply
  nameWithType.vb: MassRate(Of T).Multiply
- uid: Towel.Measurements.MassRate`1.NotEqual(Towel.Measurements.MassRate{`0})
  name: NotEqual(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_NotEqual_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.NotEqual(Towel.Measurements.MassRate{`0})
  name.vb: NotEqual(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.NotEqual(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).NotEqual(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.NotEqual(MassRate<T>)
  nameWithType.vb: MassRate(Of T).NotEqual(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.NotEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: NotEqual(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_NotEqual_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.NotEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: NotEqual(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.NotEqual(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).NotEqual(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.NotEqual(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).NotEqual(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_NotEqual_
  commentId: Overload:Towel.Measurements.MassRate`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.NotEqual
  fullName.vb: Towel.Measurements.MassRate(Of T).NotEqual
  nameWithType: MassRate<T>.NotEqual
  nameWithType.vb: MassRate(Of T).NotEqual
- uid: Towel.Measurements.MassRate`1.op_Addition(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Addition(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Addition_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Addition(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Addition(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Addition(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Addition(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Addition(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Addition(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Addition_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Addition
  fullName.vb: Towel.Measurements.MassRate(Of T).Addition
  nameWithType: MassRate<T>.Addition
  nameWithType.vb: MassRate(Of T).Addition
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},`0)
  name: Division(MassRate<T>, T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0___0_
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},`0)
  name.vb: Division(MassRate(Of T), T)
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), T)
  nameWithType: MassRate<T>.Division(MassRate<T>, T)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), T)
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.Density{`0})
  name: Division(MassRate<T>, Density<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.Density{`0})
  name.vb: Division(MassRate(Of T), Density(Of T))
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), Towel.Measurements.Density(Of T))
  nameWithType: MassRate<T>.Division(MassRate<T>, Density<T>)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), Density(Of T))
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.LinearDensity{`0})
  name: Division(MassRate<T>, LinearDensity<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Division(MassRate(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: MassRate<T>.Division(MassRate<T>, LinearDensity<T>)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Division(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Division(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Division(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name: Division(MassRate<T>, Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(MassRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Division(MassRate<T>, Speed<T>)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), Speed(Of T))
- uid: Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Division(MassRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_Towel_Measurements_MassRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Division(Towel.Measurements.MassRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Division(MassRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Division(Towel.Measurements.MassRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Division(Towel.Measurements.MassRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: MassRate<T>.Division(MassRate<T>, VolumeRate<T>)
  nameWithType.vb: MassRate(Of T).Division(MassRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Division*
  name: Division
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Division_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Division
  fullName.vb: Towel.Measurements.MassRate(Of T).Division
  nameWithType: MassRate<T>.Division
  nameWithType.vb: MassRate(Of T).Division
- uid: Towel.Measurements.MassRate`1.op_Equality(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Equality(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Equality_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Equality(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Equality(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Equality(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Equality(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Equality(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Equality(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Equality_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Equality
  fullName.vb: Towel.Measurements.MassRate(Of T).Equality
  nameWithType: MassRate<T>.Equality
  nameWithType.vb: MassRate(Of T).Equality
- uid: Towel.Measurements.MassRate`1.op_GreaterThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: GreaterThan(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_GreaterThan_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_GreaterThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: GreaterThan(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThan(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThan(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThan(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThan(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.MassRate`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.GreaterThan
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThan
  nameWithType: MassRate<T>.GreaterThan
  nameWithType.vb: MassRate(Of T).GreaterThan
- uid: Towel.Measurements.MassRate`1.op_GreaterThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: GreaterThanOrEqual(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_GreaterThanOrEqual_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_GreaterThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: GreaterThanOrEqual(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.GreaterThanOrEqual(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThanOrEqual(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.GreaterThanOrEqual(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).GreaterThanOrEqual(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.MassRate`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.MassRate(Of T).GreaterThanOrEqual
  nameWithType: MassRate<T>.GreaterThanOrEqual
  nameWithType.vb: MassRate(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.MassRate`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits})~Towel.Measurements.MassRate{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits) to MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits___Towel_Measurements_MassRate__0_
  commentId: M:Towel.Measurements.MassRate`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits})~Towel.Measurements.MassRate{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits) to MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits> to Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits) to Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Implicit((T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits) to MassRate<T>)
  nameWithType.vb: MassRate(Of T).Widening((T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits) to MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Implicit_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.MassRate<T>.Implicit
  fullName.vb: Towel.Measurements.MassRate(Of T).Widening
  nameWithType: MassRate<T>.Implicit
  nameWithType.vb: MassRate(Of T).Widening
- uid: Towel.Measurements.MassRate`1.op_Inequality(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Inequality(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Inequality_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Inequality(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Inequality(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Inequality(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Inequality(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Inequality(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Inequality(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Inequality_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Inequality
  fullName.vb: Towel.Measurements.MassRate(Of T).Inequality
  nameWithType: MassRate<T>.Inequality
  nameWithType.vb: MassRate(Of T).Inequality
- uid: Towel.Measurements.MassRate`1.op_LessThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: LessThan(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_LessThan_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_LessThan(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: LessThan(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThan(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThan(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThan(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThan(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_LessThan_
  commentId: Overload:Towel.Measurements.MassRate`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.LessThan
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThan
  nameWithType: MassRate<T>.LessThan
  nameWithType.vb: MassRate(Of T).LessThan
- uid: Towel.Measurements.MassRate`1.op_LessThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: LessThanOrEqual(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_LessThanOrEqual_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_LessThanOrEqual(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: LessThanOrEqual(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.LessThanOrEqual(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThanOrEqual(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.LessThanOrEqual(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).LessThanOrEqual(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.MassRate`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.MassRate(Of T).LessThanOrEqual
  nameWithType: MassRate<T>.LessThanOrEqual
  nameWithType.vb: MassRate(Of T).LessThanOrEqual
- uid: Towel.Measurements.MassRate`1.op_Multiply(`0,Towel.Measurements.MassRate{`0})
  name: Multiply(T, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply__0_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Multiply(`0,Towel.Measurements.MassRate{`0})
  name.vb: Multiply(T, MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(T, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(T, Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Multiply(T, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Multiply(T, MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},`0)
  name: Multiply(MassRate<T>, T)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply_Towel_Measurements_MassRate__0___0_
  commentId: M:Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},`0)
  name.vb: Multiply(MassRate(Of T), T)
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, T)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), T)
  nameWithType: MassRate<T>.Multiply(MassRate<T>, T)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), T)
- uid: Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Length{`0})
  name: Multiply(MassRate<T>, Length<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Length{`0})
  name.vb: Multiply(MassRate(Of T), Length(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Length(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Length<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Length(Of T))
- uid: Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name: Multiply(MassRate<T>, Speed<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(MassRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Speed<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Speed(Of T))
- uid: Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Time{`0})
  name: Multiply(MassRate<T>, Time<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply_Towel_Measurements_MassRate__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Multiply(Towel.Measurements.MassRate{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(MassRate(Of T), Time(Of T))
  fullName: Towel.Measurements.MassRate<T>.Multiply(Towel.Measurements.MassRate<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply(Towel.Measurements.MassRate(Of T), Towel.Measurements.Time(Of T))
  nameWithType: MassRate<T>.Multiply(MassRate<T>, Time<T>)
  nameWithType.vb: MassRate(Of T).Multiply(MassRate(Of T), Time(Of T))
- uid: Towel.Measurements.MassRate`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Multiply_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Multiply
  fullName.vb: Towel.Measurements.MassRate(Of T).Multiply
  nameWithType: MassRate<T>.Multiply
  nameWithType.vb: MassRate(Of T).Multiply
- uid: Towel.Measurements.MassRate`1.op_Subtraction(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Subtraction(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Subtraction_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.op_Subtraction(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Subtraction(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Subtraction(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Subtraction(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Subtraction(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Subtraction(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.MassRate`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Subtraction
  fullName.vb: Towel.Measurements.MassRate(Of T).Subtraction
  nameWithType: MassRate<T>.Subtraction
  nameWithType.vb: MassRate(Of T).Subtraction
- uid: Towel.Measurements.MassRate`1.Subtract(Towel.Measurements.MassRate{`0})
  name: Subtract(MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Subtract_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Subtract(Towel.Measurements.MassRate{`0})
  name.vb: Subtract(MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Subtract(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Subtract(Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Subtract(MassRate<T>)
  nameWithType.vb: MassRate(Of T).Subtract(MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Subtract(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name: Subtract(MassRate<T>, MassRate<T>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Subtract_Towel_Measurements_MassRate__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.MassRate`1.Subtract(Towel.Measurements.MassRate{`0},Towel.Measurements.MassRate{`0})
  name.vb: Subtract(MassRate(Of T), MassRate(Of T))
  fullName: Towel.Measurements.MassRate<T>.Subtract(Towel.Measurements.MassRate<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.MassRate(Of T).Subtract(Towel.Measurements.MassRate(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: MassRate<T>.Subtract(MassRate<T>, MassRate<T>)
  nameWithType.vb: MassRate(Of T).Subtract(MassRate(Of T), MassRate(Of T))
- uid: Towel.Measurements.MassRate`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_Subtract_
  commentId: Overload:Towel.Measurements.MassRate`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.Subtract
  fullName.vb: Towel.Measurements.MassRate(Of T).Subtract
  nameWithType: MassRate<T>.Subtract
  nameWithType.vb: MassRate(Of T).Subtract
- uid: Towel.Measurements.MassRate`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_TimeUnits2
  commentId: P:Towel.Measurements.MassRate`1.TimeUnits2
  fullName: Towel.Measurements.MassRate<T>.TimeUnits2
  fullName.vb: Towel.Measurements.MassRate(Of T).TimeUnits2
  nameWithType: MassRate<T>.TimeUnits2
  nameWithType.vb: MassRate(Of T).TimeUnits2
- uid: Towel.Measurements.MassRate`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.MassRate`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.TimeUnits2
  fullName.vb: Towel.Measurements.MassRate(Of T).TimeUnits2
  nameWithType: MassRate<T>.TimeUnits2
  nameWithType.vb: MassRate(Of T).TimeUnits2
- uid: Towel.Measurements.MassRate`1.ToString
  name: ToString()
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_ToString
  commentId: M:Towel.Measurements.MassRate`1.ToString
  fullName: Towel.Measurements.MassRate<T>.ToString()
  fullName.vb: Towel.Measurements.MassRate(Of T).ToString()
  nameWithType: MassRate<T>.ToString()
  nameWithType.vb: MassRate(Of T).ToString()
- uid: Towel.Measurements.MassRate`1.ToString*
  name: ToString
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_ToString_
  commentId: Overload:Towel.Measurements.MassRate`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.ToString
  fullName.vb: Towel.Measurements.MassRate(Of T).ToString
  nameWithType: MassRate<T>.ToString
  nameWithType.vb: MassRate(Of T).ToString
- uid: Towel.Measurements.MassRate`1.TryParse(System.String,Towel.Measurements.MassRate{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out MassRate<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_TryParse_System_String_Towel_Measurements_MassRate__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.MassRate`1.TryParse(System.String,Towel.Measurements.MassRate{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef MassRate(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.MassRate<T>.TryParse(System.String, out Towel.Measurements.MassRate<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.MassRate(Of T).TryParse(System.String, ByRef Towel.Measurements.MassRate(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: MassRate<T>.TryParse(String, out MassRate<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: MassRate(Of T).TryParse(String, ByRef MassRate(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.MassRate`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.MassRate-1.html#Towel_Measurements_MassRate_1_TryParse_
  commentId: Overload:Towel.Measurements.MassRate`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.MassRate<T>.TryParse
  fullName.vb: Towel.Measurements.MassRate(Of T).TryParse
  nameWithType: MassRate<T>.TryParse
  nameWithType.vb: MassRate(Of T).TryParse
- uid: Towel.Measurements.Measurement
  name: Measurement
  href: api/Towel.Measurements.Measurement.html
  commentId: T:Towel.Measurements.Measurement
  fullName: Towel.Measurements.Measurement
  nameWithType: Measurement
- uid: Towel.Measurements.Measurement.Convert*
  name: Convert
  href: api/Towel.Measurements.Measurement.html#Towel_Measurements_Measurement_Convert_
  commentId: Overload:Towel.Measurements.Measurement.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Measurement.Convert
  nameWithType: Measurement.Convert
- uid: Towel.Measurements.Measurement.Convert``2(``0,``1,``1)
  name: Convert<T, UNITSTYPE>(T, UNITSTYPE, UNITSTYPE)
  href: api/Towel.Measurements.Measurement.html#Towel_Measurements_Measurement_Convert__2___0___1___1_
  commentId: M:Towel.Measurements.Measurement.Convert``2(``0,``1,``1)
  name.vb: Convert(Of T, UNITSTYPE)(T, UNITSTYPE, UNITSTYPE)
  fullName: Towel.Measurements.Measurement.Convert<T, UNITSTYPE>(T, UNITSTYPE, UNITSTYPE)
  fullName.vb: Towel.Measurements.Measurement.Convert(Of T, UNITSTYPE)(T, UNITSTYPE, UNITSTYPE)
  nameWithType: Measurement.Convert<T, UNITSTYPE>(T, UNITSTYPE, UNITSTYPE)
  nameWithType.vb: Measurement.Convert(Of T, UNITSTYPE)(T, UNITSTYPE, UNITSTYPE)
- uid: Towel.Measurements.Measurement.IUnits`1
  name: Measurement.IUnits<UNITSTYPE>
  href: api/Towel.Measurements.Measurement.IUnits-1.html
  commentId: T:Towel.Measurements.Measurement.IUnits`1
  name.vb: Measurement.IUnits(Of UNITSTYPE)
  fullName: Towel.Measurements.Measurement.IUnits<UNITSTYPE>
  fullName.vb: Towel.Measurements.Measurement.IUnits(Of UNITSTYPE)
  nameWithType: Measurement.IUnits<UNITSTYPE>
  nameWithType.vb: Measurement.IUnits(Of UNITSTYPE)
- uid: Towel.Measurements.Measurement.IUnits`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Measurement.IUnits-1.html#Towel_Measurements_Measurement_IUnits_1_Convert_
  commentId: Overload:Towel.Measurements.Measurement.IUnits`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Measurement.IUnits<UNITSTYPE>.Convert
  fullName.vb: Towel.Measurements.Measurement.IUnits(Of UNITSTYPE).Convert
  nameWithType: Measurement.IUnits<UNITSTYPE>.Convert
  nameWithType.vb: Measurement.IUnits(Of UNITSTYPE).Convert
- uid: Towel.Measurements.Measurement.IUnits`1.Convert``1(``0,`0,`0)
  name: Convert<T>(T, UNITSTYPE, UNITSTYPE)
  href: api/Towel.Measurements.Measurement.IUnits-1.html#Towel_Measurements_Measurement_IUnits_1_Convert__1___0__0__0_
  commentId: M:Towel.Measurements.Measurement.IUnits`1.Convert``1(``0,`0,`0)
  name.vb: Convert(Of T)(T, UNITSTYPE, UNITSTYPE)
  fullName: Towel.Measurements.Measurement.IUnits<UNITSTYPE>.Convert<T>(T, UNITSTYPE, UNITSTYPE)
  fullName.vb: Towel.Measurements.Measurement.IUnits(Of UNITSTYPE).Convert(Of T)(T, UNITSTYPE, UNITSTYPE)
  nameWithType: Measurement.IUnits<UNITSTYPE>.Convert<T>(T, UNITSTYPE, UNITSTYPE)
  nameWithType.vb: Measurement.IUnits(Of UNITSTYPE).Convert(Of T)(T, UNITSTYPE, UNITSTYPE)
- uid: Towel.Measurements.Measurement.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Measurement.html#Towel_Measurements_Measurement_TryParse_
  commentId: Overload:Towel.Measurements.Measurement.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Measurement.TryParse
  nameWithType: Measurement.TryParse
- uid: Towel.Measurements.Measurement.TryParse``1(System.String,System.Object@,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name: TryParse<T>(String, out Object, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Measurement.html#Towel_Measurements_Measurement_TryParse__1_System_String_System_Object__Func_System_String_System_ValueTuple_System_Boolean___0___
  commentId: M:Towel.Measurements.Measurement.TryParse``1(System.String,System.Object@,Func{System.String,System.ValueTuple{System.Boolean,``0}})
  name.vb: TryParse(Of T)(String, ByRef Object, Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Measurement.TryParse<T>(System.String, out System.Object, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Measurement.TryParse(Of T)(System.String, ByRef System.Object, Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Measurement.TryParse<T>(String, out Object, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Measurement.TryParse(Of T)(String, ByRef Object, Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.MeasurementsSyntax
  name: MeasurementsSyntax
  href: api/Towel.Measurements.MeasurementsSyntax.html
  commentId: T:Towel.Measurements.MeasurementsSyntax
  fullName: Towel.Measurements.MeasurementsSyntax
  nameWithType: MeasurementsSyntax
- uid: Towel.Measurements.MeasurementsSyntax.Amperes
  name: Amperes
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Amperes
  commentId: F:Towel.Measurements.MeasurementsSyntax.Amperes
  fullName: Towel.Measurements.MeasurementsSyntax.Amperes
  nameWithType: MeasurementsSyntax.Amperes
- uid: Towel.Measurements.MeasurementsSyntax.Attoampheres
  name: Attoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Attoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Attoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Attoampheres
  nameWithType: MeasurementsSyntax.Attoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Attograms
  name: Attograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Attograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Attograms
  fullName: Towel.Measurements.MeasurementsSyntax.Attograms
  nameWithType: MeasurementsSyntax.Attograms
- uid: Towel.Measurements.MeasurementsSyntax.Attometers
  name: Attometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Attometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Attometers
  fullName: Towel.Measurements.MeasurementsSyntax.Attometers
  nameWithType: MeasurementsSyntax.Attometers
- uid: Towel.Measurements.MeasurementsSyntax.Centiampheres
  name: Centiampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Centiampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Centiampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Centiampheres
  nameWithType: MeasurementsSyntax.Centiampheres
- uid: Towel.Measurements.MeasurementsSyntax.Centigrams
  name: Centigrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Centigrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Centigrams
  fullName: Towel.Measurements.MeasurementsSyntax.Centigrams
  nameWithType: MeasurementsSyntax.Centigrams
- uid: Towel.Measurements.MeasurementsSyntax.Centimeters
  name: Centimeters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Centimeters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Centimeters
  fullName: Towel.Measurements.MeasurementsSyntax.Centimeters
  nameWithType: MeasurementsSyntax.Centimeters
- uid: Towel.Measurements.MeasurementsSyntax.Coulombs
  name: Coulombs
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Coulombs
  commentId: F:Towel.Measurements.MeasurementsSyntax.Coulombs
  fullName: Towel.Measurements.MeasurementsSyntax.Coulombs
  nameWithType: MeasurementsSyntax.Coulombs
- uid: Towel.Measurements.MeasurementsSyntax.Days
  name: Days
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Days
  commentId: F:Towel.Measurements.MeasurementsSyntax.Days
  fullName: Towel.Measurements.MeasurementsSyntax.Days
  nameWithType: MeasurementsSyntax.Days
- uid: Towel.Measurements.MeasurementsSyntax.Deciampheres
  name: Deciampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Deciampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Deciampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Deciampheres
  nameWithType: MeasurementsSyntax.Deciampheres
- uid: Towel.Measurements.MeasurementsSyntax.Decigrams
  name: Decigrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Decigrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Decigrams
  fullName: Towel.Measurements.MeasurementsSyntax.Decigrams
  nameWithType: MeasurementsSyntax.Decigrams
- uid: Towel.Measurements.MeasurementsSyntax.Decimeters
  name: Decimeters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Decimeters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Decimeters
  fullName: Towel.Measurements.MeasurementsSyntax.Decimeters
  nameWithType: MeasurementsSyntax.Decimeters
- uid: Towel.Measurements.MeasurementsSyntax.Degrees
  name: Degrees
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Degrees
  commentId: F:Towel.Measurements.MeasurementsSyntax.Degrees
  fullName: Towel.Measurements.MeasurementsSyntax.Degrees
  nameWithType: MeasurementsSyntax.Degrees
- uid: Towel.Measurements.MeasurementsSyntax.Dekaampheres
  name: Dekaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Dekaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Dekaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Dekaampheres
  nameWithType: MeasurementsSyntax.Dekaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Dekagrams
  name: Dekagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Dekagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Dekagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Dekagrams
  nameWithType: MeasurementsSyntax.Dekagrams
- uid: Towel.Measurements.MeasurementsSyntax.Dekameters
  name: Dekameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Dekameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Dekameters
  fullName: Towel.Measurements.MeasurementsSyntax.Dekameters
  nameWithType: MeasurementsSyntax.Dekameters
- uid: Towel.Measurements.MeasurementsSyntax.Exaampheres
  name: Exaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Exaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Exaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Exaampheres
  nameWithType: MeasurementsSyntax.Exaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Exagrams
  name: Exagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Exagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Exagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Exagrams
  nameWithType: MeasurementsSyntax.Exagrams
- uid: Towel.Measurements.MeasurementsSyntax.Exameters
  name: Exameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Exameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Exameters
  fullName: Towel.Measurements.MeasurementsSyntax.Exameters
  nameWithType: MeasurementsSyntax.Exameters
- uid: Towel.Measurements.MeasurementsSyntax.Feet
  name: Feet
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Feet
  commentId: F:Towel.Measurements.MeasurementsSyntax.Feet
  fullName: Towel.Measurements.MeasurementsSyntax.Feet
  nameWithType: MeasurementsSyntax.Feet
- uid: Towel.Measurements.MeasurementsSyntax.Femtoampheres
  name: Femtoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Femtoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Femtoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Femtoampheres
  nameWithType: MeasurementsSyntax.Femtoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Femtograms
  name: Femtograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Femtograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Femtograms
  fullName: Towel.Measurements.MeasurementsSyntax.Femtograms
  nameWithType: MeasurementsSyntax.Femtograms
- uid: Towel.Measurements.MeasurementsSyntax.Femtometers
  name: Femtometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Femtometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Femtometers
  fullName: Towel.Measurements.MeasurementsSyntax.Femtometers
  nameWithType: MeasurementsSyntax.Femtometers
- uid: Towel.Measurements.MeasurementsSyntax.Gigaampheres
  name: Gigaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Gigaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Gigaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Gigaampheres
  nameWithType: MeasurementsSyntax.Gigaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Gigagrams
  name: Gigagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Gigagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Gigagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Gigagrams
  nameWithType: MeasurementsSyntax.Gigagrams
- uid: Towel.Measurements.MeasurementsSyntax.Gigameters
  name: Gigameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Gigameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Gigameters
  fullName: Towel.Measurements.MeasurementsSyntax.Gigameters
  nameWithType: MeasurementsSyntax.Gigameters
- uid: Towel.Measurements.MeasurementsSyntax.Gradians
  name: Gradians
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Gradians
  commentId: F:Towel.Measurements.MeasurementsSyntax.Gradians
  fullName: Towel.Measurements.MeasurementsSyntax.Gradians
  nameWithType: MeasurementsSyntax.Gradians
- uid: Towel.Measurements.MeasurementsSyntax.Grams
  name: Grams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Grams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Grams
  fullName: Towel.Measurements.MeasurementsSyntax.Grams
  nameWithType: MeasurementsSyntax.Grams
- uid: Towel.Measurements.MeasurementsSyntax.Hectoampheres
  name: Hectoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Hectoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Hectoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Hectoampheres
  nameWithType: MeasurementsSyntax.Hectoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Hectograms
  name: Hectograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Hectograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Hectograms
  fullName: Towel.Measurements.MeasurementsSyntax.Hectograms
  nameWithType: MeasurementsSyntax.Hectograms
- uid: Towel.Measurements.MeasurementsSyntax.Hectometers
  name: Hectometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Hectometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Hectometers
  fullName: Towel.Measurements.MeasurementsSyntax.Hectometers
  nameWithType: MeasurementsSyntax.Hectometers
- uid: Towel.Measurements.MeasurementsSyntax.Hours
  name: Hours
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Hours
  commentId: F:Towel.Measurements.MeasurementsSyntax.Hours
  fullName: Towel.Measurements.MeasurementsSyntax.Hours
  nameWithType: MeasurementsSyntax.Hours
- uid: Towel.Measurements.MeasurementsSyntax.Inches
  name: Inches
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Inches
  commentId: F:Towel.Measurements.MeasurementsSyntax.Inches
  fullName: Towel.Measurements.MeasurementsSyntax.Inches
  nameWithType: MeasurementsSyntax.Inches
- uid: Towel.Measurements.MeasurementsSyntax.Joules
  name: Joules
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Joules
  commentId: F:Towel.Measurements.MeasurementsSyntax.Joules
  fullName: Towel.Measurements.MeasurementsSyntax.Joules
  nameWithType: MeasurementsSyntax.Joules
- uid: Towel.Measurements.MeasurementsSyntax.Kiloampheres
  name: Kiloampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Kiloampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Kiloampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Kiloampheres
  nameWithType: MeasurementsSyntax.Kiloampheres
- uid: Towel.Measurements.MeasurementsSyntax.Kilograms
  name: Kilograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Kilograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Kilograms
  fullName: Towel.Measurements.MeasurementsSyntax.Kilograms
  nameWithType: MeasurementsSyntax.Kilograms
- uid: Towel.Measurements.MeasurementsSyntax.Kilometers
  name: Kilometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Kilometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Kilometers
  fullName: Towel.Measurements.MeasurementsSyntax.Kilometers
  nameWithType: MeasurementsSyntax.Kilometers
- uid: Towel.Measurements.MeasurementsSyntax.Knots
  name: Knots
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Knots
  commentId: F:Towel.Measurements.MeasurementsSyntax.Knots
  fullName: Towel.Measurements.MeasurementsSyntax.Knots
  nameWithType: MeasurementsSyntax.Knots
- uid: Towel.Measurements.MeasurementsSyntax.Megaampheres
  name: Megaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Megaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Megaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Megaampheres
  nameWithType: MeasurementsSyntax.Megaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Megagrams
  name: Megagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Megagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Megagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Megagrams
  nameWithType: MeasurementsSyntax.Megagrams
- uid: Towel.Measurements.MeasurementsSyntax.Megameters
  name: Megameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Megameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Megameters
  fullName: Towel.Measurements.MeasurementsSyntax.Megameters
  nameWithType: MeasurementsSyntax.Megameters
- uid: Towel.Measurements.MeasurementsSyntax.Meters
  name: Meters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Meters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Meters
  fullName: Towel.Measurements.MeasurementsSyntax.Meters
  nameWithType: MeasurementsSyntax.Meters
- uid: Towel.Measurements.MeasurementsSyntax.Microampheres
  name: Microampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Microampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Microampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Microampheres
  nameWithType: MeasurementsSyntax.Microampheres
- uid: Towel.Measurements.MeasurementsSyntax.Micrograms
  name: Micrograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Micrograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Micrograms
  fullName: Towel.Measurements.MeasurementsSyntax.Micrograms
  nameWithType: MeasurementsSyntax.Micrograms
- uid: Towel.Measurements.MeasurementsSyntax.Micrometers
  name: Micrometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Micrometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Micrometers
  fullName: Towel.Measurements.MeasurementsSyntax.Micrometers
  nameWithType: MeasurementsSyntax.Micrometers
- uid: Towel.Measurements.MeasurementsSyntax.Miles
  name: Miles
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Miles
  commentId: F:Towel.Measurements.MeasurementsSyntax.Miles
  fullName: Towel.Measurements.MeasurementsSyntax.Miles
  nameWithType: MeasurementsSyntax.Miles
- uid: Towel.Measurements.MeasurementsSyntax.Milliampheres
  name: Milliampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Milliampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Milliampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Milliampheres
  nameWithType: MeasurementsSyntax.Milliampheres
- uid: Towel.Measurements.MeasurementsSyntax.Milligrams
  name: Milligrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Milligrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Milligrams
  fullName: Towel.Measurements.MeasurementsSyntax.Milligrams
  nameWithType: MeasurementsSyntax.Milligrams
- uid: Towel.Measurements.MeasurementsSyntax.Millimeters
  name: Millimeters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Millimeters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Millimeters
  fullName: Towel.Measurements.MeasurementsSyntax.Millimeters
  nameWithType: MeasurementsSyntax.Millimeters
- uid: Towel.Measurements.MeasurementsSyntax.Milliseconds
  name: Milliseconds
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Milliseconds
  commentId: F:Towel.Measurements.MeasurementsSyntax.Milliseconds
  fullName: Towel.Measurements.MeasurementsSyntax.Milliseconds
  nameWithType: MeasurementsSyntax.Milliseconds
- uid: Towel.Measurements.MeasurementsSyntax.Minutes
  name: Minutes
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Minutes
  commentId: F:Towel.Measurements.MeasurementsSyntax.Minutes
  fullName: Towel.Measurements.MeasurementsSyntax.Minutes
  nameWithType: MeasurementsSyntax.Minutes
- uid: Towel.Measurements.MeasurementsSyntax.Nanoampheres
  name: Nanoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Nanoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Nanoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Nanoampheres
  nameWithType: MeasurementsSyntax.Nanoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Nanograms
  name: Nanograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Nanograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Nanograms
  fullName: Towel.Measurements.MeasurementsSyntax.Nanograms
  nameWithType: MeasurementsSyntax.Nanograms
- uid: Towel.Measurements.MeasurementsSyntax.Nanometers
  name: Nanometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Nanometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Nanometers
  fullName: Towel.Measurements.MeasurementsSyntax.Nanometers
  nameWithType: MeasurementsSyntax.Nanometers
- uid: Towel.Measurements.MeasurementsSyntax.NauticalMiles
  name: NauticalMiles
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_NauticalMiles
  commentId: F:Towel.Measurements.MeasurementsSyntax.NauticalMiles
  fullName: Towel.Measurements.MeasurementsSyntax.NauticalMiles
  nameWithType: MeasurementsSyntax.NauticalMiles
- uid: Towel.Measurements.MeasurementsSyntax.Newtons
  name: Newtons
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Newtons
  commentId: F:Towel.Measurements.MeasurementsSyntax.Newtons
  fullName: Towel.Measurements.MeasurementsSyntax.Newtons
  nameWithType: MeasurementsSyntax.Newtons
- uid: Towel.Measurements.MeasurementsSyntax.Pascals
  name: Pascals
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Pascals
  commentId: F:Towel.Measurements.MeasurementsSyntax.Pascals
  fullName: Towel.Measurements.MeasurementsSyntax.Pascals
  nameWithType: MeasurementsSyntax.Pascals
- uid: Towel.Measurements.MeasurementsSyntax.Petaampheres
  name: Petaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Petaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Petaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Petaampheres
  nameWithType: MeasurementsSyntax.Petaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Petagrams
  name: Petagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Petagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Petagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Petagrams
  nameWithType: MeasurementsSyntax.Petagrams
- uid: Towel.Measurements.MeasurementsSyntax.Petameters
  name: Petameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Petameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Petameters
  fullName: Towel.Measurements.MeasurementsSyntax.Petameters
  nameWithType: MeasurementsSyntax.Petameters
- uid: Towel.Measurements.MeasurementsSyntax.Picoampheres
  name: Picoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Picoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Picoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Picoampheres
  nameWithType: MeasurementsSyntax.Picoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Picograms
  name: Picograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Picograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Picograms
  fullName: Towel.Measurements.MeasurementsSyntax.Picograms
  nameWithType: MeasurementsSyntax.Picograms
- uid: Towel.Measurements.MeasurementsSyntax.Picometers
  name: Picometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Picometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Picometers
  fullName: Towel.Measurements.MeasurementsSyntax.Picometers
  nameWithType: MeasurementsSyntax.Picometers
- uid: Towel.Measurements.MeasurementsSyntax.Radians
  name: Radians
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Radians
  commentId: F:Towel.Measurements.MeasurementsSyntax.Radians
  fullName: Towel.Measurements.MeasurementsSyntax.Radians
  nameWithType: MeasurementsSyntax.Radians
- uid: Towel.Measurements.MeasurementsSyntax.Revolutions
  name: Revolutions
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Revolutions
  commentId: F:Towel.Measurements.MeasurementsSyntax.Revolutions
  fullName: Towel.Measurements.MeasurementsSyntax.Revolutions
  nameWithType: MeasurementsSyntax.Revolutions
- uid: Towel.Measurements.MeasurementsSyntax.Seconds
  name: Seconds
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Seconds
  commentId: F:Towel.Measurements.MeasurementsSyntax.Seconds
  fullName: Towel.Measurements.MeasurementsSyntax.Seconds
  nameWithType: MeasurementsSyntax.Seconds
- uid: Towel.Measurements.MeasurementsSyntax.Teraampheres
  name: Teraampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Teraampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Teraampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Teraampheres
  nameWithType: MeasurementsSyntax.Teraampheres
- uid: Towel.Measurements.MeasurementsSyntax.Teragrams
  name: Teragrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Teragrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Teragrams
  fullName: Towel.Measurements.MeasurementsSyntax.Teragrams
  nameWithType: MeasurementsSyntax.Teragrams
- uid: Towel.Measurements.MeasurementsSyntax.Terameters
  name: Terameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Terameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Terameters
  fullName: Towel.Measurements.MeasurementsSyntax.Terameters
  nameWithType: MeasurementsSyntax.Terameters
- uid: Towel.Measurements.MeasurementsSyntax.Watts
  name: Watts
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Watts
  commentId: F:Towel.Measurements.MeasurementsSyntax.Watts
  fullName: Towel.Measurements.MeasurementsSyntax.Watts
  nameWithType: MeasurementsSyntax.Watts
- uid: Towel.Measurements.MeasurementsSyntax.Yards
  name: Yards
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yards
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yards
  fullName: Towel.Measurements.MeasurementsSyntax.Yards
  nameWithType: MeasurementsSyntax.Yards
- uid: Towel.Measurements.MeasurementsSyntax.Yoctoampheres
  name: Yoctoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yoctoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yoctoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Yoctoampheres
  nameWithType: MeasurementsSyntax.Yoctoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Yoctograms
  name: Yoctograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yoctograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yoctograms
  fullName: Towel.Measurements.MeasurementsSyntax.Yoctograms
  nameWithType: MeasurementsSyntax.Yoctograms
- uid: Towel.Measurements.MeasurementsSyntax.Yoctometers
  name: Yoctometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yoctometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yoctometers
  fullName: Towel.Measurements.MeasurementsSyntax.Yoctometers
  nameWithType: MeasurementsSyntax.Yoctometers
- uid: Towel.Measurements.MeasurementsSyntax.Yottaampheres
  name: Yottaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yottaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yottaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Yottaampheres
  nameWithType: MeasurementsSyntax.Yottaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Yottagrams
  name: Yottagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yottagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yottagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Yottagrams
  nameWithType: MeasurementsSyntax.Yottagrams
- uid: Towel.Measurements.MeasurementsSyntax.Yottameters
  name: Yottameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Yottameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Yottameters
  fullName: Towel.Measurements.MeasurementsSyntax.Yottameters
  nameWithType: MeasurementsSyntax.Yottameters
- uid: Towel.Measurements.MeasurementsSyntax.Zeptoampheres
  name: Zeptoampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zeptoampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zeptoampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Zeptoampheres
  nameWithType: MeasurementsSyntax.Zeptoampheres
- uid: Towel.Measurements.MeasurementsSyntax.Zeptograms
  name: Zeptograms
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zeptograms
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zeptograms
  fullName: Towel.Measurements.MeasurementsSyntax.Zeptograms
  nameWithType: MeasurementsSyntax.Zeptograms
- uid: Towel.Measurements.MeasurementsSyntax.Zeptometers
  name: Zeptometers
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zeptometers
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zeptometers
  fullName: Towel.Measurements.MeasurementsSyntax.Zeptometers
  nameWithType: MeasurementsSyntax.Zeptometers
- uid: Towel.Measurements.MeasurementsSyntax.Zettaampheres
  name: Zettaampheres
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zettaampheres
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zettaampheres
  fullName: Towel.Measurements.MeasurementsSyntax.Zettaampheres
  nameWithType: MeasurementsSyntax.Zettaampheres
- uid: Towel.Measurements.MeasurementsSyntax.Zettagrams
  name: Zettagrams
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zettagrams
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zettagrams
  fullName: Towel.Measurements.MeasurementsSyntax.Zettagrams
  nameWithType: MeasurementsSyntax.Zettagrams
- uid: Towel.Measurements.MeasurementsSyntax.Zettameters
  name: Zettameters
  href: api/Towel.Measurements.MeasurementsSyntax.html#Towel_Measurements_MeasurementsSyntax_Zettameters
  commentId: F:Towel.Measurements.MeasurementsSyntax.Zettameters
  fullName: Towel.Measurements.MeasurementsSyntax.Zettameters
  nameWithType: MeasurementsSyntax.Zettameters
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes
  name: MeasurementUnitsSyntaxTypes
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes
  nameWithType: MeasurementUnitsSyntaxTypes
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits
  name: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: AccelerationBaseUnits(Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits__ctor_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.AccelerationBaseUnits(Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.AccelerationBaseUnits(Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.#ctor*
  name: AccelerationBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.AccelerationBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.AccelerationBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits3
  name: _TimeUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits__TimeUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits._TimeUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.AccelerationBaseUnits, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.AccelerationBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits
  name: MeasurementUnitsSyntaxTypes.AngleUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.#ctor(Towel.Measurements.Angle.Units)
  name: AngleUnits(Angle.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits__ctor_Towel_Measurements_Angle_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.#ctor(Towel.Measurements.Angle.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.AngleUnits(Towel.Measurements.Angle.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.AngleUnits(Angle.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.#ctor*
  name: AngleUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.AngleUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.AngleUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits._AngleUnits1
  name: _AngleUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits__AngleUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits._AngleUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits._AngleUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits._AngleUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AngleUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.AngleUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.Division(MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.Division(MeasurementUnitsSyntaxTypes.AngleUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngleUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngleUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.AngleUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits
  name: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.#ctor(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: AngularAccelerationBaseUnits(Angle.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits__ctor_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.#ctor(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.AngularAccelerationBaseUnits(Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.AngularAccelerationBaseUnits(Angle.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.#ctor*
  name: AngularAccelerationBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.AngularAccelerationBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.AngularAccelerationBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._AngleUnits1
  name: _AngleUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits__AngleUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._AngleUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._AngleUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._AngleUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits3
  name: _TimeUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits__TimeUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits._TimeUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularAccelerationBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits, MeasurementUnitsSyntaxTypes.AngularAccelerationBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits
  name: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.#ctor(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  name: AngularSpeedBaseUnits(Angle.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits__ctor_Towel_Measurements_Angle_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.#ctor(Towel.Measurements.Angle.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.AngularSpeedBaseUnits(Towel.Measurements.Angle.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.AngularSpeedBaseUnits(Angle.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.#ctor*
  name: AngularSpeedBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.AngularSpeedBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.AngularSpeedBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._AngleUnits1
  name: _AngleUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits__AngleUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._AngleUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._AngleUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._AngleUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Division(MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AngularSpeedBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.AngularSpeedBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits
  name: MeasurementUnitsSyntaxTypes.AreaBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: AreaBaseUnits(Length.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits__ctor_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.AreaBaseUnits(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.AreaBaseUnits(Length.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.#ctor*
  name: AreaBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.AreaBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.AreaBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.AreaBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.AreaBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits
  name: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: AreaDensityBaseUnits(Mass.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.AreaDensityBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.AreaDensityBaseUnits(Mass.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.#ctor*
  name: AreaDensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.AreaDensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.AreaDensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Division(MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Division(MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaDensityBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.AreaDensityBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits
  name: MeasurementUnitsSyntaxTypes.DensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: DensityBaseUnits(Mass.Units, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.DensityBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits.DensityBaseUnits(Mass.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.#ctor*
  name: DensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.DensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits.DensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits4
  name: _LengthUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__LengthUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits._LengthUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_DensityBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.DensityBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.DensityBaseUnits, MeasurementUnitsSyntaxTypes.DensityBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits
  name: MeasurementUnitsSyntaxTypes.ElectricChargeUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.#ctor(Towel.Measurements.ElectricCharge.Units)
  name: ElectricChargeUnits(ElectricCharge.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits__ctor_Towel_Measurements_ElectricCharge_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.#ctor(Towel.Measurements.ElectricCharge.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.ElectricChargeUnits(Towel.Measurements.ElectricCharge.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.ElectricChargeUnits(ElectricCharge.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.#ctor*
  name: ElectricChargeUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.ElectricChargeUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.ElectricChargeUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits._ElectricChargeUnits1
  name: _ElectricChargeUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits__ElectricChargeUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits._ElectricChargeUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits._ElectricChargeUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits._ElectricChargeUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.ElectricChargeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Division(MeasurementUnitsSyntaxTypes.ElectricChargeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricChargeUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricChargeUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits
  name: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.#ctor(Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  name: ElectricCurrentBaseUnits(ElectricCharge.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits__ctor_Towel_Measurements_ElectricCharge_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.#ctor(Towel.Measurements.ElectricCharge.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.ElectricCurrentBaseUnits(Towel.Measurements.ElectricCharge.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.ElectricCurrentBaseUnits(ElectricCharge.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.#ctor*
  name: ElectricCurrentBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.ElectricCurrentBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.ElectricCurrentBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._ElectricChargeUnits1
  name: _ElectricChargeUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits__ElectricChargeUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._ElectricChargeUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._ElectricChargeUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._ElectricChargeUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ElectricCurrentBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits, MeasurementUnitsSyntaxTypes.ElectricCurrentBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits
  name: MeasurementUnitsSyntaxTypes.EnergyBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: EnergyBaseUnits(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.EnergyBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.EnergyBaseUnits(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.#ctor*
  name: EnergyBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.EnergyBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.EnergyBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits4
  name: _TimeUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__TimeUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits5
  name: _TimeUnits5
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits__TimeUnits5
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits5
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits5
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits._TimeUnits5
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.EnergyBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Division(MeasurementUnitsSyntaxTypes.EnergyBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_EnergyBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.EnergyBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits
  name: MeasurementUnitsSyntaxTypes.ForceBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: ForceBaseUnits(Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.ForceBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.ForceBaseUnits(Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.#ctor*
  name: ForceBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.ForceBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.ForceBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits3
  name: _TimeUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__TimeUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits4
  name: _TimeUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits__TimeUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits._TimeUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.ForceBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.ForceBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits
  name: MeasurementUnitsSyntaxTypes.LengthUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.#ctor(Towel.Measurements.Length.Units)
  name: LengthUnits(Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits__ctor_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.#ctor(Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.LengthUnits(Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.LengthUnits(Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.#ctor*
  name: LengthUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.LengthUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.LengthUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.LengthUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Division(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Division(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply(MeasurementUnitsSyntaxTypes.LengthUnits, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.LengthUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits
  name: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: LinearDensityBaseUnits(Mass.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.LinearDensityBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.LinearDensityBaseUnits(Mass.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.#ctor*
  name: LinearDensityBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.LinearDensityBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.LinearDensityBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearDensityBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.LinearDensityBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits
  name: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  name: LinearMassBaseUnits(Mass.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.LinearMassBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.LinearMassBaseUnits(Mass.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.#ctor*
  name: LinearMassBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.LinearMassBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.LinearMassBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.LinearMassBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits
  name: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: LinearMassFlowBaseUnits(Mass.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.LinearMassFlowBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.LinearMassFlowBaseUnits(Mass.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.#ctor*
  name: LinearMassFlowBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.LinearMassFlowBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.LinearMassFlowBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._TimeUnits3
  name: _TimeUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits__TimeUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._TimeUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._TimeUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits._TimeUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Division(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits
  name: MeasurementUnitsSyntaxTypes.MassRateBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  name: MassRateBaseUnits(Mass.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.MassRateBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.MassRateBaseUnits(Mass.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.#ctor*
  name: MassRateBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.MassRateBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.MassRateBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.MassRateBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.MassRateBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits
  name: MeasurementUnitsSyntaxTypes.MassUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.#ctor(Towel.Measurements.Mass.Units)
  name: MassUnits(Mass.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits__ctor_Towel_Measurements_Mass_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.#ctor(Towel.Measurements.Mass.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.MassUnits(Towel.Measurements.Mass.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.MassUnits(Mass.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.#ctor*
  name: MassUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.MassUnits
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.MassUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.MassUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name: Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Division(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AccelerationBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.AccelerationBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LengthUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LengthUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.LengthUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Multiply(MeasurementUnitsSyntaxTypes.MassUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.MassUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits
  name: MeasurementUnitsSyntaxTypes.PowerBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: PowerBaseUnits(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.PowerBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits.PowerBaseUnits(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.#ctor*
  name: PowerBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.PowerBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits.PowerBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits4
  name: _TimeUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__TimeUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits5
  name: _TimeUnits5
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__TimeUnits5
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits5
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits5
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits5
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits6
  name: _TimeUnits6
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits__TimeUnits6
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits6
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits6
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits._TimeUnits6
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.PowerBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits
  name: MeasurementUnitsSyntaxTypes.PressureBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: PressureBaseUnits(Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__ctor_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.#ctor(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.PressureBaseUnits(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits.PressureBaseUnits(Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.#ctor*
  name: PressureBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.PressureBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits.PressureBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._MassUnits1
  name: _MassUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__MassUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._MassUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._MassUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits._MassUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits3
  name: _TimeUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__TimeUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits4
  name: _TimeUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits__TimeUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits._TimeUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.PressureBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits
  name: MeasurementUnitsSyntaxTypes.SpeedBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: SpeedBaseUnits(Length.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits__ctor_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.SpeedBaseUnits(Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.SpeedBaseUnits(Length.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.#ctor*
  name: SpeedBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.SpeedBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.SpeedBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Division(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_AreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.AreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.AreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_ForceBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.ForceBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.ForceBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_LinearMassFlowBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.LinearMassFlowBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassRateBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.MassRateBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.MassUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_MassUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.MassUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply(MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.MassUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.SpeedBaseUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits
  name: MeasurementUnitsSyntaxTypes.TempuratureUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.#ctor(Towel.Measurements.Tempurature.Units)
  name: TempuratureUnits(Tempurature.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits__ctor_Towel_Measurements_Tempurature_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.#ctor(Towel.Measurements.Tempurature.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.TempuratureUnits(Towel.Measurements.Tempurature.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits.TempuratureUnits(Tempurature.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.#ctor*
  name: TempuratureUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.TempuratureUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits.TempuratureUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits._TempuratureUnits1
  name: _TempuratureUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits__TempuratureUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits._TempuratureUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits._TempuratureUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits._TempuratureUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.TempuratureUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits
  name: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.#ctor(Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: TimeAreaBaseUnits(Time.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits__ctor_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.#ctor(Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.TimeAreaBaseUnits(Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.TimeAreaBaseUnits(Time.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.#ctor*
  name: TimeAreaBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.TimeAreaBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.TimeAreaBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits1
  name: _TimeUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits__TimeUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits2
  name: _TimeUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits__TimeUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits._TimeUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits
  name: MeasurementUnitsSyntaxTypes.TimeUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.#ctor(Towel.Measurements.Time.Units)
  name: TimeUnits(Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits__ctor_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.#ctor(Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.TimeUnits(Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.TimeUnits(Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.#ctor*
  name: TimeUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.TimeUnits
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.TimeUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits._TimeUnits1
  name: _TimeUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits__TimeUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits._TimeUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits._TimeUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits._TimeUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.TimeUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Multiply(MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_op_Multiply_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.op_Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Multiply(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.Multiply(MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_op_Multiply_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits.Multiply
  nameWithType: MeasurementUnitsSyntaxTypes.TimeUnits.Multiply
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits
  name: MeasurementUnitsSyntaxTypes.VolumeBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: VolumeBaseUnits(Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits__ctor_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.VolumeBaseUnits(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.VolumeBaseUnits(Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.#ctor*
  name: VolumeBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.VolumeBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.VolumeBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Division(MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_op_Division_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.op_Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Division(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Division(MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.op_Division*
  name: Division
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_op_Division_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Division
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeBaseUnits.Division
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits
  name: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html
  commentId: T:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: VolumeRateBaseUnits(Length.Units, Length.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__ctor_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.#ctor(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.VolumeRateBaseUnits(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.VolumeRateBaseUnits(Length.Units, Length.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.#ctor*
  name: VolumeRateBaseUnits
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__ctor_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.VolumeRateBaseUnits
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.VolumeRateBaseUnits
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits1
  name: _LengthUnits1
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__LengthUnits1
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits1
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits1
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits1
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits2
  name: _LengthUnits2
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__LengthUnits2
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits2
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits2
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits2
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits3
  name: _LengthUnits3
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__LengthUnits3
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits3
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits3
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._LengthUnits3
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._TimeUnits4
  name: _TimeUnits4
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits__TimeUnits4
  commentId: F:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._TimeUnits4
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._TimeUnits4
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits._TimeUnits4
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert*
  name: Convert
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_Convert_
  commentId: Overload:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert
  isSpec: "True"
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert
- uid: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name: Convert<T>(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  href: api/Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.html#Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_Convert__1___0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_
  commentId: M:Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert``1(``0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name.vb: Convert(Of T)(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert<T>(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName.vb: Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert(Of T)(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert<T>(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType.vb: MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits.Convert(Of T)(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
- uid: Towel.Measurements.Power`1
  name: Power<T>
  href: api/Towel.Measurements.Power-1.html
  commentId: T:Towel.Measurements.Power`1
  name.vb: Power(Of T)
  fullName: Towel.Measurements.Power<T>
  fullName.vb: Towel.Measurements.Power(Of T)
  nameWithType: Power<T>
  nameWithType.vb: Power(Of T)
- uid: Towel.Measurements.Power`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Power(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Power`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Power<T>.Power(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Power(Of T).Power(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Power<T>.Power(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  nameWithType.vb: Power(Of T).Power(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Power`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name: Power(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_
  commentId: M:Towel.Measurements.Power`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName: Towel.Measurements.Power<T>.Power(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName.vb: Towel.Measurements.Power(Of T).Power(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType: Power<T>.Power(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType.vb: Power(Of T).Power(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
- uid: Towel.Measurements.Power`1.#ctor*
  name: Power
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1__ctor_
  commentId: Overload:Towel.Measurements.Power`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Power
  fullName.vb: Towel.Measurements.Power(Of T).Power
  nameWithType: Power<T>.Power
  nameWithType.vb: Power(Of T).Power
- uid: Towel.Measurements.Power`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Add__0_
  commentId: M:Towel.Measurements.Power`1.Add(`0)
  fullName: Towel.Measurements.Power<T>.Add(T)
  fullName.vb: Towel.Measurements.Power(Of T).Add(T)
  nameWithType: Power<T>.Add(T)
  nameWithType.vb: Power(Of T).Add(T)
- uid: Towel.Measurements.Power`1.Add(Towel.Measurements.Power{`0})
  name: Add(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Add_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Add(Towel.Measurements.Power{`0})
  name.vb: Add(Power(Of T))
  fullName: Towel.Measurements.Power<T>.Add(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Add(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Add(Power<T>)
  nameWithType.vb: Power(Of T).Add(Power(Of T))
- uid: Towel.Measurements.Power`1.Add(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Add(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Add_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Add(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Add(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Add(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Add(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Add(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Add(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.Add*
  name: Add
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Add_
  commentId: Overload:Towel.Measurements.Power`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Add
  fullName.vb: Towel.Measurements.Power(Of T).Add
  nameWithType: Power<T>.Add
  nameWithType.vb: Power(Of T).Add
- uid: Towel.Measurements.Power`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Power`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Power<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Power(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Power<T>.Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  nameWithType.vb: Power(Of T).Convert(T, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Power`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_
  commentId: M:Towel.Measurements.Power`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName: Towel.Measurements.Power<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName.vb: Towel.Measurements.Power(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType: Power<T>.Convert(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType.vb: Power(Of T).Convert(T, MeasurementUnitsSyntaxTypes.PowerBaseUnits, MeasurementUnitsSyntaxTypes.PowerBaseUnits)
- uid: Towel.Measurements.Power`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Convert_
  commentId: Overload:Towel.Measurements.Power`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Convert
  fullName.vb: Towel.Measurements.Power(Of T).Convert
  nameWithType: Power<T>.Convert
  nameWithType.vb: Power(Of T).Convert
- uid: Towel.Measurements.Power`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide__0_
  commentId: M:Towel.Measurements.Power`1.Divide(`0)
  fullName: Towel.Measurements.Power<T>.Divide(T)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(T)
  nameWithType: Power<T>.Divide(T)
  nameWithType.vb: Power(Of T).Divide(T)
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Power<T>.Divide(Acceleration<T>)
  nameWithType.vb: Power(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Force{`0})
  name: Divide(Force<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Force{`0})
  name.vb: Divide(Force(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Force(Of T))
  nameWithType: Power<T>.Divide(Force<T>)
  nameWithType.vb: Power(Of T).Divide(Force(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name: Divide(LinearMassFlow<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(LinearMassFlow(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Power<T>.Divide(LinearMassFlow<T>)
  nameWithType.vb: Power(Of T).Divide(LinearMassFlow(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0})
  name: Divide(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0})
  name.vb: Divide(Power(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Divide(Power<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},`0)
  name: Divide(Power<T>, T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0___0_
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},`0)
  name.vb: Divide(Power(Of T), T)
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, T)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), T)
  nameWithType: Power<T>.Divide(Power<T>, T)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), T)
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Power<T>, Acceleration<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Power(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Power<T>.Divide(Power<T>, Acceleration<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Force{`0})
  name: Divide(Power<T>, Force<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Force{`0})
  name.vb: Divide(Power(Of T), Force(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Power<T>.Divide(Power<T>, Force<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), Force(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Divide(Power<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Divide(Power(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Power<T>.Divide(Power<T>, LinearMassFlow<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Divide(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Divide(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Divide(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Pressure{`0})
  name: Divide(Power<T>, Pressure<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Pressure{`0})
  name.vb: Divide(Power(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Power<T>.Divide(Power<T>, Pressure<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), Pressure(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Speed{`0})
  name: Divide(Power<T>, Speed<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(Power(Of T), Speed(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Power<T>.Divide(Power<T>, Speed<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), Speed(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.VolumeRate{`0})
  name: Divide(Power<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Power__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Power{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(Power(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Power<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Power(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Power<T>.Divide(Power<T>, VolumeRate<T>)
  nameWithType.vb: Power(Of T).Divide(Power(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Pressure(Of T))
  nameWithType: Power<T>.Divide(Pressure<T>)
  nameWithType.vb: Power(Of T).Divide(Pressure(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: Power<T>.Divide(Speed<T>)
  nameWithType.vb: Power(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.Power`1.Divide(Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Power`1.Divide(Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T))
  fullName: Towel.Measurements.Power<T>.Divide(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Divide(Towel.Measurements.VolumeRate(Of T))
  nameWithType: Power<T>.Divide(VolumeRate<T>)
  nameWithType.vb: Power(Of T).Divide(VolumeRate(Of T))
- uid: Towel.Measurements.Power`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Divide_
  commentId: Overload:Towel.Measurements.Power`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Divide
  fullName.vb: Towel.Measurements.Power(Of T).Divide
  nameWithType: Power<T>.Divide
  nameWithType.vb: Power(Of T).Divide
- uid: Towel.Measurements.Power`1.Equal(Towel.Measurements.Power{`0})
  name: Equal(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Equal_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Equal(Towel.Measurements.Power{`0})
  name.vb: Equal(Power(Of T))
  fullName: Towel.Measurements.Power<T>.Equal(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Equal(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Equal(Power<T>)
  nameWithType.vb: Power(Of T).Equal(Power(Of T))
- uid: Towel.Measurements.Power`1.Equal(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Equal(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Equal_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Equal(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Equal(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Equal(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Equal(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Equal(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Equal(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Equal_
  commentId: Overload:Towel.Measurements.Power`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Equal
  fullName.vb: Towel.Measurements.Power(Of T).Equal
  nameWithType: Power<T>.Equal
  nameWithType.vb: Power(Of T).Equal
- uid: Towel.Measurements.Power`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Power`1.Equals(System.Object)
  fullName: Towel.Measurements.Power<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Power(Of T).Equals(System.Object)
  nameWithType: Power<T>.Equals(Object)
  nameWithType.vb: Power(Of T).Equals(Object)
- uid: Towel.Measurements.Power`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Equals_
  commentId: Overload:Towel.Measurements.Power`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Equals
  fullName.vb: Towel.Measurements.Power(Of T).Equals
  nameWithType: Power<T>.Equals
  nameWithType.vb: Power(Of T).Equals
- uid: Towel.Measurements.Power`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GetHashCode
  commentId: M:Towel.Measurements.Power`1.GetHashCode
  fullName: Towel.Measurements.Power<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Power(Of T).GetHashCode()
  nameWithType: Power<T>.GetHashCode()
  nameWithType.vb: Power(Of T).GetHashCode()
- uid: Towel.Measurements.Power`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Power`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.GetHashCode
  fullName.vb: Towel.Measurements.Power(Of T).GetHashCode
  nameWithType: Power<T>.GetHashCode
  nameWithType.vb: Power(Of T).GetHashCode
- uid: Towel.Measurements.Power`1.GreaterThan(Towel.Measurements.Power{`0})
  name: GreaterThan(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThan_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.GreaterThan(Towel.Measurements.Power{`0})
  name.vb: GreaterThan(Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThan(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThan(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThan(Power<T>)
  nameWithType.vb: Power(Of T).GreaterThan(Power(Of T))
- uid: Towel.Measurements.Power`1.GreaterThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: GreaterThan(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThan_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.GreaterThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: GreaterThan(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThan(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThan(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThan(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).GreaterThan(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Power`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.GreaterThan
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThan
  nameWithType: Power<T>.GreaterThan
  nameWithType.vb: Power(Of T).GreaterThan
- uid: Towel.Measurements.Power`1.GreaterThanOrEqual(Towel.Measurements.Power{`0})
  name: GreaterThanOrEqual(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThanOrEqual_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.GreaterThanOrEqual(Towel.Measurements.Power{`0})
  name.vb: GreaterThanOrEqual(Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThanOrEqual(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThanOrEqual(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThanOrEqual(Power<T>)
  nameWithType.vb: Power(Of T).GreaterThanOrEqual(Power(Of T))
- uid: Towel.Measurements.Power`1.GreaterThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: GreaterThanOrEqual(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThanOrEqual_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.GreaterThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: GreaterThanOrEqual(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThanOrEqual(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThanOrEqual(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThanOrEqual(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).GreaterThanOrEqual(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Power`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThanOrEqual
  nameWithType: Power<T>.GreaterThanOrEqual
  nameWithType.vb: Power(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Power`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Power`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.Power<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Power(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Power<T>.Item[Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units]
  nameWithType.vb: Power(Of T).Item(Mass.Units, Length.Units, Length.Units, Time.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Power`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.PowerBaseUnits]
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits_
  commentId: P:Towel.Measurements.Power`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  fullName: Towel.Measurements.Power<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits]
  fullName.vb: Towel.Measurements.Power(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits)
  nameWithType: Power<T>.Item[MeasurementUnitsSyntaxTypes.PowerBaseUnits]
  nameWithType.vb: Power(Of T).Item(MeasurementUnitsSyntaxTypes.PowerBaseUnits)
- uid: Towel.Measurements.Power`1.Item*
  name: Item
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Item_
  commentId: Overload:Towel.Measurements.Power`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Item
  fullName.vb: Towel.Measurements.Power(Of T).Item
  nameWithType: Power<T>.Item
  nameWithType.vb: Power(Of T).Item
- uid: Towel.Measurements.Power`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LengthUnits2
  commentId: P:Towel.Measurements.Power`1.LengthUnits2
  fullName: Towel.Measurements.Power<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Power(Of T).LengthUnits2
  nameWithType: Power<T>.LengthUnits2
  nameWithType.vb: Power(Of T).LengthUnits2
- uid: Towel.Measurements.Power`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Power`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Power(Of T).LengthUnits2
  nameWithType: Power<T>.LengthUnits2
  nameWithType.vb: Power(Of T).LengthUnits2
- uid: Towel.Measurements.Power`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LengthUnits3
  commentId: P:Towel.Measurements.Power`1.LengthUnits3
  fullName: Towel.Measurements.Power<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Power(Of T).LengthUnits3
  nameWithType: Power<T>.LengthUnits3
  nameWithType.vb: Power(Of T).LengthUnits3
- uid: Towel.Measurements.Power`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.Power`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Power(Of T).LengthUnits3
  nameWithType: Power<T>.LengthUnits3
  nameWithType.vb: Power(Of T).LengthUnits3
- uid: Towel.Measurements.Power`1.LessThan(Towel.Measurements.Power{`0})
  name: LessThan(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThan_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.LessThan(Towel.Measurements.Power{`0})
  name.vb: LessThan(Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThan(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThan(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThan(Power<T>)
  nameWithType.vb: Power(Of T).LessThan(Power(Of T))
- uid: Towel.Measurements.Power`1.LessThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: LessThan(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThan_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.LessThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: LessThan(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThan(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThan(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThan(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).LessThan(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThan_
  commentId: Overload:Towel.Measurements.Power`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LessThan
  fullName.vb: Towel.Measurements.Power(Of T).LessThan
  nameWithType: Power<T>.LessThan
  nameWithType.vb: Power(Of T).LessThan
- uid: Towel.Measurements.Power`1.LessThanOrEqual(Towel.Measurements.Power{`0})
  name: LessThanOrEqual(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThanOrEqual_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.LessThanOrEqual(Towel.Measurements.Power{`0})
  name.vb: LessThanOrEqual(Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThanOrEqual(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThanOrEqual(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThanOrEqual(Power<T>)
  nameWithType.vb: Power(Of T).LessThanOrEqual(Power(Of T))
- uid: Towel.Measurements.Power`1.LessThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: LessThanOrEqual(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThanOrEqual_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.LessThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: LessThanOrEqual(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThanOrEqual(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThanOrEqual(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThanOrEqual(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).LessThanOrEqual(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Power`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Power(Of T).LessThanOrEqual
  nameWithType: Power<T>.LessThanOrEqual
  nameWithType.vb: Power(Of T).LessThanOrEqual
- uid: Towel.Measurements.Power`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_MassUnits1
  commentId: P:Towel.Measurements.Power`1.MassUnits1
  fullName: Towel.Measurements.Power<T>.MassUnits1
  fullName.vb: Towel.Measurements.Power(Of T).MassUnits1
  nameWithType: Power<T>.MassUnits1
  nameWithType.vb: Power(Of T).MassUnits1
- uid: Towel.Measurements.Power`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Power`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.MassUnits1
  fullName.vb: Towel.Measurements.Power(Of T).MassUnits1
  nameWithType: Power<T>.MassUnits1
  nameWithType.vb: Power(Of T).MassUnits1
- uid: Towel.Measurements.Power`1.Multiply(`0,Towel.Measurements.Power{`0})
  name: Multiply(T, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Multiply__0_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Multiply(`0,Towel.Measurements.Power{`0})
  name.vb: Multiply(T, Power(Of T))
  fullName: Towel.Measurements.Power<T>.Multiply(T, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(T, Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Multiply(T, Power<T>)
  nameWithType.vb: Power(Of T).Multiply(T, Power(Of T))
- uid: Towel.Measurements.Power`1.Multiply(Towel.Measurements.Power{`0},`0)
  name: Multiply(Power<T>, T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Multiply_Towel_Measurements_Power__0___0_
  commentId: M:Towel.Measurements.Power`1.Multiply(Towel.Measurements.Power{`0},`0)
  name.vb: Multiply(Power(Of T), T)
  fullName: Towel.Measurements.Power<T>.Multiply(Towel.Measurements.Power<T>, T)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(Towel.Measurements.Power(Of T), T)
  nameWithType: Power<T>.Multiply(Power<T>, T)
  nameWithType.vb: Power(Of T).Multiply(Power(Of T), T)
- uid: Towel.Measurements.Power`1.Multiply(Towel.Measurements.Power{`0},Towel.Measurements.Time{`0})
  name: Multiply(Power<T>, Time<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Multiply_Towel_Measurements_Power__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Power`1.Multiply(Towel.Measurements.Power{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Power(Of T), Time(Of T))
  fullName: Towel.Measurements.Power<T>.Multiply(Towel.Measurements.Power<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(Towel.Measurements.Power(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Power<T>.Multiply(Power<T>, Time<T>)
  nameWithType.vb: Power(Of T).Multiply(Power(Of T), Time(Of T))
- uid: Towel.Measurements.Power`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Power`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.Power<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: Power<T>.Multiply(Time<T>)
  nameWithType.vb: Power(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.Power`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Multiply_
  commentId: Overload:Towel.Measurements.Power`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Multiply
  fullName.vb: Towel.Measurements.Power(Of T).Multiply
  nameWithType: Power<T>.Multiply
  nameWithType.vb: Power(Of T).Multiply
- uid: Towel.Measurements.Power`1.NotEqual(Towel.Measurements.Power{`0})
  name: NotEqual(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_NotEqual_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.NotEqual(Towel.Measurements.Power{`0})
  name.vb: NotEqual(Power(Of T))
  fullName: Towel.Measurements.Power<T>.NotEqual(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).NotEqual(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.NotEqual(Power<T>)
  nameWithType.vb: Power(Of T).NotEqual(Power(Of T))
- uid: Towel.Measurements.Power`1.NotEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: NotEqual(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_NotEqual_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.NotEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: NotEqual(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.NotEqual(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).NotEqual(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.NotEqual(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).NotEqual(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_NotEqual_
  commentId: Overload:Towel.Measurements.Power`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.NotEqual
  fullName.vb: Towel.Measurements.Power(Of T).NotEqual
  nameWithType: Power<T>.NotEqual
  nameWithType.vb: Power(Of T).NotEqual
- uid: Towel.Measurements.Power`1.op_Addition(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Addition(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Addition_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Addition(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Addition(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Addition(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Addition(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Addition(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Addition(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Addition_
  commentId: Overload:Towel.Measurements.Power`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Addition
  fullName.vb: Towel.Measurements.Power(Of T).Addition
  nameWithType: Power<T>.Addition
  nameWithType.vb: Power(Of T).Addition
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},`0)
  name: Division(Power<T>, T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0___0_
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},`0)
  name.vb: Division(Power(Of T), T)
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, T)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), T)
  nameWithType: Power<T>.Division(Power<T>, T)
  nameWithType.vb: Power(Of T).Division(Power(Of T), T)
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Power<T>, Acceleration<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Power(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Power<T>.Division(Power<T>, Acceleration<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Force{`0})
  name: Division(Power<T>, Force<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Force{`0})
  name.vb: Division(Power(Of T), Force(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Power<T>.Division(Power<T>, Force<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), Force(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Division(Power<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Division(Power(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Power<T>.Division(Power<T>, LinearMassFlow<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Division(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Division(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Division(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Pressure{`0})
  name: Division(Power<T>, Pressure<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Pressure{`0})
  name.vb: Division(Power(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Power<T>.Division(Power<T>, Pressure<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), Pressure(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Speed{`0})
  name: Division(Power<T>, Speed<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(Power(Of T), Speed(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Power<T>.Division(Power<T>, Speed<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), Speed(Of T))
- uid: Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.VolumeRate{`0})
  name: Division(Power<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_Towel_Measurements_Power__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Power`1.op_Division(Towel.Measurements.Power{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Division(Power(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Power<T>.Division(Towel.Measurements.Power<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Division(Towel.Measurements.Power(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Power<T>.Division(Power<T>, VolumeRate<T>)
  nameWithType.vb: Power(Of T).Division(Power(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Power`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Division_
  commentId: Overload:Towel.Measurements.Power`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Division
  fullName.vb: Towel.Measurements.Power(Of T).Division
  nameWithType: Power<T>.Division
  nameWithType.vb: Power(Of T).Division
- uid: Towel.Measurements.Power`1.op_Equality(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Equality(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Equality_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Equality(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Equality(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Equality(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Equality(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Equality(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Equality(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Equality_
  commentId: Overload:Towel.Measurements.Power`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Equality
  fullName.vb: Towel.Measurements.Power(Of T).Equality
  nameWithType: Power<T>.Equality
  nameWithType.vb: Power(Of T).Equality
- uid: Towel.Measurements.Power`1.op_GreaterThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: GreaterThan(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_GreaterThan_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_GreaterThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: GreaterThan(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThan(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThan(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThan(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).GreaterThan(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Power`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.GreaterThan
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThan
  nameWithType: Power<T>.GreaterThan
  nameWithType.vb: Power(Of T).GreaterThan
- uid: Towel.Measurements.Power`1.op_GreaterThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: GreaterThanOrEqual(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_GreaterThanOrEqual_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_GreaterThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: GreaterThanOrEqual(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.GreaterThanOrEqual(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThanOrEqual(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.GreaterThanOrEqual(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).GreaterThanOrEqual(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Power`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Power(Of T).GreaterThanOrEqual
  nameWithType: Power<T>.GreaterThanOrEqual
  nameWithType.vb: Power(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Power`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits})~Towel.Measurements.Power{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.PowerBaseUnits) to Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PowerBaseUnits___Towel_Measurements_Power__0_
  commentId: M:Towel.Measurements.Power`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits})~Towel.Measurements.Power{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.PowerBaseUnits) to Power(Of T))
  fullName: Towel.Measurements.Power<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits> to Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PowerBaseUnits) to Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Implicit((T, MeasurementUnitsSyntaxTypes.PowerBaseUnits) to Power<T>)
  nameWithType.vb: Power(Of T).Widening((T, MeasurementUnitsSyntaxTypes.PowerBaseUnits) to Power(Of T))
- uid: Towel.Measurements.Power`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Power`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Power<T>.Implicit
  fullName.vb: Towel.Measurements.Power(Of T).Widening
  nameWithType: Power<T>.Implicit
  nameWithType.vb: Power(Of T).Widening
- uid: Towel.Measurements.Power`1.op_Inequality(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Inequality(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Inequality_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Inequality(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Inequality(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Inequality(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Inequality(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Inequality(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Inequality(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Power`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Inequality
  fullName.vb: Towel.Measurements.Power(Of T).Inequality
  nameWithType: Power<T>.Inequality
  nameWithType.vb: Power(Of T).Inequality
- uid: Towel.Measurements.Power`1.op_LessThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: LessThan(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_LessThan_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_LessThan(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: LessThan(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThan(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThan(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThan(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).LessThan(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Power`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LessThan
  fullName.vb: Towel.Measurements.Power(Of T).LessThan
  nameWithType: Power<T>.LessThan
  nameWithType.vb: Power(Of T).LessThan
- uid: Towel.Measurements.Power`1.op_LessThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: LessThanOrEqual(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_LessThanOrEqual_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_LessThanOrEqual(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: LessThanOrEqual(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.LessThanOrEqual(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).LessThanOrEqual(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.LessThanOrEqual(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).LessThanOrEqual(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Power`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Power(Of T).LessThanOrEqual
  nameWithType: Power<T>.LessThanOrEqual
  nameWithType.vb: Power(Of T).LessThanOrEqual
- uid: Towel.Measurements.Power`1.op_Multiply(`0,Towel.Measurements.Power{`0})
  name: Multiply(T, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Multiply__0_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Multiply(`0,Towel.Measurements.Power{`0})
  name.vb: Multiply(T, Power(Of T))
  fullName: Towel.Measurements.Power<T>.Multiply(T, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(T, Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Multiply(T, Power<T>)
  nameWithType.vb: Power(Of T).Multiply(T, Power(Of T))
- uid: Towel.Measurements.Power`1.op_Multiply(Towel.Measurements.Power{`0},`0)
  name: Multiply(Power<T>, T)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Multiply_Towel_Measurements_Power__0___0_
  commentId: M:Towel.Measurements.Power`1.op_Multiply(Towel.Measurements.Power{`0},`0)
  name.vb: Multiply(Power(Of T), T)
  fullName: Towel.Measurements.Power<T>.Multiply(Towel.Measurements.Power<T>, T)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(Towel.Measurements.Power(Of T), T)
  nameWithType: Power<T>.Multiply(Power<T>, T)
  nameWithType.vb: Power(Of T).Multiply(Power(Of T), T)
- uid: Towel.Measurements.Power`1.op_Multiply(Towel.Measurements.Power{`0},Towel.Measurements.Time{`0})
  name: Multiply(Power<T>, Time<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Multiply_Towel_Measurements_Power__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Power`1.op_Multiply(Towel.Measurements.Power{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Power(Of T), Time(Of T))
  fullName: Towel.Measurements.Power<T>.Multiply(Towel.Measurements.Power<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Multiply(Towel.Measurements.Power(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Power<T>.Multiply(Power<T>, Time<T>)
  nameWithType.vb: Power(Of T).Multiply(Power(Of T), Time(Of T))
- uid: Towel.Measurements.Power`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Power`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Multiply
  fullName.vb: Towel.Measurements.Power(Of T).Multiply
  nameWithType: Power<T>.Multiply
  nameWithType.vb: Power(Of T).Multiply
- uid: Towel.Measurements.Power`1.op_Subtraction(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Subtraction(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Subtraction_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.op_Subtraction(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Subtraction(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Subtraction(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Subtraction(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Subtraction(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Subtraction(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Power`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Subtraction
  fullName.vb: Towel.Measurements.Power(Of T).Subtraction
  nameWithType: Power<T>.Subtraction
  nameWithType.vb: Power(Of T).Subtraction
- uid: Towel.Measurements.Power`1.Subtract(Towel.Measurements.Power{`0})
  name: Subtract(Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Subtract_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Subtract(Towel.Measurements.Power{`0})
  name.vb: Subtract(Power(Of T))
  fullName: Towel.Measurements.Power<T>.Subtract(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Subtract(Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Subtract(Power<T>)
  nameWithType.vb: Power(Of T).Subtract(Power(Of T))
- uid: Towel.Measurements.Power`1.Subtract(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name: Subtract(Power<T>, Power<T>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Subtract_Towel_Measurements_Power__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Power`1.Subtract(Towel.Measurements.Power{`0},Towel.Measurements.Power{`0})
  name.vb: Subtract(Power(Of T), Power(Of T))
  fullName: Towel.Measurements.Power<T>.Subtract(Towel.Measurements.Power<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Power(Of T).Subtract(Towel.Measurements.Power(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Power<T>.Subtract(Power<T>, Power<T>)
  nameWithType.vb: Power(Of T).Subtract(Power(Of T), Power(Of T))
- uid: Towel.Measurements.Power`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_Subtract_
  commentId: Overload:Towel.Measurements.Power`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.Subtract
  fullName.vb: Towel.Measurements.Power(Of T).Subtract
  nameWithType: Power<T>.Subtract
  nameWithType.vb: Power(Of T).Subtract
- uid: Towel.Measurements.Power`1.TimeUnits4
  name: TimeUnits4
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits4
  commentId: P:Towel.Measurements.Power`1.TimeUnits4
  fullName: Towel.Measurements.Power<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits4
  nameWithType: Power<T>.TimeUnits4
  nameWithType.vb: Power(Of T).TimeUnits4
- uid: Towel.Measurements.Power`1.TimeUnits4*
  name: TimeUnits4
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits4_
  commentId: Overload:Towel.Measurements.Power`1.TimeUnits4
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits4
  nameWithType: Power<T>.TimeUnits4
  nameWithType.vb: Power(Of T).TimeUnits4
- uid: Towel.Measurements.Power`1.TimeUnits5
  name: TimeUnits5
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits5
  commentId: P:Towel.Measurements.Power`1.TimeUnits5
  fullName: Towel.Measurements.Power<T>.TimeUnits5
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits5
  nameWithType: Power<T>.TimeUnits5
  nameWithType.vb: Power(Of T).TimeUnits5
- uid: Towel.Measurements.Power`1.TimeUnits5*
  name: TimeUnits5
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits5_
  commentId: Overload:Towel.Measurements.Power`1.TimeUnits5
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.TimeUnits5
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits5
  nameWithType: Power<T>.TimeUnits5
  nameWithType.vb: Power(Of T).TimeUnits5
- uid: Towel.Measurements.Power`1.TimeUnits6
  name: TimeUnits6
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits6
  commentId: P:Towel.Measurements.Power`1.TimeUnits6
  fullName: Towel.Measurements.Power<T>.TimeUnits6
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits6
  nameWithType: Power<T>.TimeUnits6
  nameWithType.vb: Power(Of T).TimeUnits6
- uid: Towel.Measurements.Power`1.TimeUnits6*
  name: TimeUnits6
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TimeUnits6_
  commentId: Overload:Towel.Measurements.Power`1.TimeUnits6
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.TimeUnits6
  fullName.vb: Towel.Measurements.Power(Of T).TimeUnits6
  nameWithType: Power<T>.TimeUnits6
  nameWithType.vb: Power(Of T).TimeUnits6
- uid: Towel.Measurements.Power`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_ToString
  commentId: M:Towel.Measurements.Power`1.ToString
  fullName: Towel.Measurements.Power<T>.ToString()
  fullName.vb: Towel.Measurements.Power(Of T).ToString()
  nameWithType: Power<T>.ToString()
  nameWithType.vb: Power(Of T).ToString()
- uid: Towel.Measurements.Power`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_ToString_
  commentId: Overload:Towel.Measurements.Power`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.ToString
  fullName.vb: Towel.Measurements.Power(Of T).ToString
  nameWithType: Power<T>.ToString
  nameWithType.vb: Power(Of T).ToString
- uid: Towel.Measurements.Power`1.TryParse(System.String,Towel.Measurements.Power{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Power<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TryParse_System_String_Towel_Measurements_Power__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Power`1.TryParse(System.String,Towel.Measurements.Power{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Power(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Power<T>.TryParse(System.String, out Towel.Measurements.Power<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Power(Of T).TryParse(System.String, ByRef Towel.Measurements.Power(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Power<T>.TryParse(String, out Power<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Power(Of T).TryParse(String, ByRef Power(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Power`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Power-1.html#Towel_Measurements_Power_1_TryParse_
  commentId: Overload:Towel.Measurements.Power`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Power<T>.TryParse
  fullName.vb: Towel.Measurements.Power(Of T).TryParse
  nameWithType: Power<T>.TryParse
  nameWithType.vb: Power(Of T).TryParse
- uid: Towel.Measurements.Pressure`1
  name: Pressure<T>
  href: api/Towel.Measurements.Pressure-1.html
  commentId: T:Towel.Measurements.Pressure`1
  name.vb: Pressure(Of T)
  fullName: Towel.Measurements.Pressure<T>
  fullName.vb: Towel.Measurements.Pressure(Of T)
  nameWithType: Pressure<T>
  nameWithType.vb: Pressure(Of T)
- uid: Towel.Measurements.Pressure`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Pressure(T, Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1__ctor__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Pressure`1.#ctor(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Pressure<T>.Pressure(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Pressure(Of T).Pressure(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Pressure<T>.Pressure(T, Mass.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Pressure(Of T).Pressure(T, Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Pressure`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name: Pressure(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_
  commentId: M:Towel.Measurements.Pressure`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName: Towel.Measurements.Pressure<T>.Pressure(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName.vb: Towel.Measurements.Pressure(Of T).Pressure(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType: Pressure<T>.Pressure(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType.vb: Pressure(Of T).Pressure(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
- uid: Towel.Measurements.Pressure`1.#ctor*
  name: Pressure
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1__ctor_
  commentId: Overload:Towel.Measurements.Pressure`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Pressure
  fullName.vb: Towel.Measurements.Pressure(Of T).Pressure
  nameWithType: Pressure<T>.Pressure
  nameWithType.vb: Pressure(Of T).Pressure
- uid: Towel.Measurements.Pressure`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Add__0_
  commentId: M:Towel.Measurements.Pressure`1.Add(`0)
  fullName: Towel.Measurements.Pressure<T>.Add(T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Add(T)
  nameWithType: Pressure<T>.Add(T)
  nameWithType.vb: Pressure(Of T).Add(T)
- uid: Towel.Measurements.Pressure`1.Add(Towel.Measurements.Pressure{`0})
  name: Add(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Add_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Add(Towel.Measurements.Pressure{`0})
  name.vb: Add(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Add(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Add(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Add(Pressure<T>)
  nameWithType.vb: Pressure(Of T).Add(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Add(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Add(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Add_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Add(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Add(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Add(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Add(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Add(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Add(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Add*
  name: Add
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Add_
  commentId: Overload:Towel.Measurements.Pressure`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Add
  fullName.vb: Towel.Measurements.Pressure(Of T).Add
  nameWithType: Pressure<T>.Add
  nameWithType.vb: Pressure(Of T).Add
- uid: Towel.Measurements.Pressure`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Convert__0_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Pressure`1.Convert(`0,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Pressure<T>.Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Pressure(Of T).Convert(T, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Pressure<T>.Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
  nameWithType.vb: Pressure(Of T).Convert(T, Mass.Units, Length.Units, Time.Units, Time.Units, Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Pressure`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_
  commentId: M:Towel.Measurements.Pressure`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName: Towel.Measurements.Pressure<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName.vb: Towel.Measurements.Pressure(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType: Pressure<T>.Convert(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType.vb: Pressure(Of T).Convert(T, MeasurementUnitsSyntaxTypes.PressureBaseUnits, MeasurementUnitsSyntaxTypes.PressureBaseUnits)
- uid: Towel.Measurements.Pressure`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Convert_
  commentId: Overload:Towel.Measurements.Pressure`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Convert
  fullName.vb: Towel.Measurements.Pressure(Of T).Convert
  nameWithType: Pressure<T>.Convert
  nameWithType.vb: Pressure(Of T).Convert
- uid: Towel.Measurements.Pressure`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide__0_
  commentId: M:Towel.Measurements.Pressure`1.Divide(`0)
  fullName: Towel.Measurements.Pressure<T>.Divide(T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(T)
  nameWithType: Pressure<T>.Divide(T)
  nameWithType.vb: Pressure(Of T).Divide(T)
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Pressure<T>.Divide(Acceleration<T>)
  nameWithType.vb: Pressure(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.AreaDensity{`0})
  name: Divide(AreaDensity<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(AreaDensity(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Pressure<T>.Divide(AreaDensity<T>)
  nameWithType.vb: Pressure(Of T).Divide(AreaDensity(Of T))
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Divide(Pressure<T>)
  nameWithType.vb: Pressure(Of T).Divide(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},`0)
  name: Divide(Pressure<T>, T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Pressure__0___0_
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},`0)
  name.vb: Divide(Pressure(Of T), T)
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Pressure<T>, T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Pressure(Of T), T)
  nameWithType: Pressure<T>.Divide(Pressure<T>, T)
  nameWithType.vb: Pressure(Of T).Divide(Pressure(Of T), T)
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Pressure<T>, Acceleration<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Pressure__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Pressure(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Pressure<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Pressure(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Pressure<T>.Divide(Pressure<T>, Acceleration<T>)
  nameWithType.vb: Pressure(Of T).Divide(Pressure(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.AreaDensity{`0})
  name: Divide(Pressure<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Pressure__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Divide(Pressure(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Pressure<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Pressure(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Pressure<T>.Divide(Pressure<T>, AreaDensity<T>)
  nameWithType.vb: Pressure(Of T).Divide(Pressure(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Divide(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Divide(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Divide(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Divide(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Divide(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Divide(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Divide_
  commentId: Overload:Towel.Measurements.Pressure`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Divide
  fullName.vb: Towel.Measurements.Pressure(Of T).Divide
  nameWithType: Pressure<T>.Divide
  nameWithType.vb: Pressure(Of T).Divide
- uid: Towel.Measurements.Pressure`1.Equal(Towel.Measurements.Pressure{`0})
  name: Equal(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Equal_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Equal(Towel.Measurements.Pressure{`0})
  name.vb: Equal(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Equal(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Equal(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Equal(Pressure<T>)
  nameWithType.vb: Pressure(Of T).Equal(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Equal(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Equal(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Equal_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Equal(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Equal(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Equal(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Equal(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Equal(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Equal(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Equal_
  commentId: Overload:Towel.Measurements.Pressure`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Equal
  fullName.vb: Towel.Measurements.Pressure(Of T).Equal
  nameWithType: Pressure<T>.Equal
  nameWithType.vb: Pressure(Of T).Equal
- uid: Towel.Measurements.Pressure`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Pressure`1.Equals(System.Object)
  fullName: Towel.Measurements.Pressure<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Pressure(Of T).Equals(System.Object)
  nameWithType: Pressure<T>.Equals(Object)
  nameWithType.vb: Pressure(Of T).Equals(Object)
- uid: Towel.Measurements.Pressure`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Equals_
  commentId: Overload:Towel.Measurements.Pressure`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Equals
  fullName.vb: Towel.Measurements.Pressure(Of T).Equals
  nameWithType: Pressure<T>.Equals
  nameWithType.vb: Pressure(Of T).Equals
- uid: Towel.Measurements.Pressure`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GetHashCode
  commentId: M:Towel.Measurements.Pressure`1.GetHashCode
  fullName: Towel.Measurements.Pressure<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Pressure(Of T).GetHashCode()
  nameWithType: Pressure<T>.GetHashCode()
  nameWithType.vb: Pressure(Of T).GetHashCode()
- uid: Towel.Measurements.Pressure`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Pressure`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.GetHashCode
  fullName.vb: Towel.Measurements.Pressure(Of T).GetHashCode
  nameWithType: Pressure<T>.GetHashCode
  nameWithType.vb: Pressure(Of T).GetHashCode
- uid: Towel.Measurements.Pressure`1.GreaterThan(Towel.Measurements.Pressure{`0})
  name: GreaterThan(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThan_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.GreaterThan(Towel.Measurements.Pressure{`0})
  name.vb: GreaterThan(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThan(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThan(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThan(Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThan(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.GreaterThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: GreaterThan(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThan_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.GreaterThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: GreaterThan(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThan(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThan(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThan(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThan(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Pressure`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.GreaterThan
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThan
  nameWithType: Pressure<T>.GreaterThan
  nameWithType.vb: Pressure(Of T).GreaterThan
- uid: Towel.Measurements.Pressure`1.GreaterThanOrEqual(Towel.Measurements.Pressure{`0})
  name: GreaterThanOrEqual(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThanOrEqual_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.GreaterThanOrEqual(Towel.Measurements.Pressure{`0})
  name.vb: GreaterThanOrEqual(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThanOrEqual(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThanOrEqual(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThanOrEqual(Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThanOrEqual(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.GreaterThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: GreaterThanOrEqual(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThanOrEqual_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.GreaterThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: GreaterThanOrEqual(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThanOrEqual(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThanOrEqual(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThanOrEqual(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThanOrEqual(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Pressure`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThanOrEqual
  nameWithType: Pressure<T>.GreaterThanOrEqual
  nameWithType.vb: Pressure(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Pressure`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Mass.Units, Length.Units, Time.Units, Time.Units]
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Item_Towel_Measurements_Mass_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Pressure`1.Item(Towel.Measurements.Mass.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Mass.Units, Length.Units, Time.Units, Time.Units)
  fullName: Towel.Measurements.Pressure<T>.Item[Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Pressure(Of T).Item(Towel.Measurements.Mass.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Pressure<T>.Item[Mass.Units, Length.Units, Time.Units, Time.Units]
  nameWithType.vb: Pressure(Of T).Item(Mass.Units, Length.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.Pressure`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.PressureBaseUnits]
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits_
  commentId: P:Towel.Measurements.Pressure`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  fullName: Towel.Measurements.Pressure<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits]
  fullName.vb: Towel.Measurements.Pressure(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits)
  nameWithType: Pressure<T>.Item[MeasurementUnitsSyntaxTypes.PressureBaseUnits]
  nameWithType.vb: Pressure(Of T).Item(MeasurementUnitsSyntaxTypes.PressureBaseUnits)
- uid: Towel.Measurements.Pressure`1.Item*
  name: Item
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Item_
  commentId: Overload:Towel.Measurements.Pressure`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Item
  fullName.vb: Towel.Measurements.Pressure(Of T).Item
  nameWithType: Pressure<T>.Item
  nameWithType.vb: Pressure(Of T).Item
- uid: Towel.Measurements.Pressure`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LengthUnits2
  commentId: P:Towel.Measurements.Pressure`1.LengthUnits2
  fullName: Towel.Measurements.Pressure<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Pressure(Of T).LengthUnits2
  nameWithType: Pressure<T>.LengthUnits2
  nameWithType.vb: Pressure(Of T).LengthUnits2
- uid: Towel.Measurements.Pressure`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Pressure`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Pressure(Of T).LengthUnits2
  nameWithType: Pressure<T>.LengthUnits2
  nameWithType.vb: Pressure(Of T).LengthUnits2
- uid: Towel.Measurements.Pressure`1.LessThan(Towel.Measurements.Pressure{`0})
  name: LessThan(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThan_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.LessThan(Towel.Measurements.Pressure{`0})
  name.vb: LessThan(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThan(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThan(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThan(Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThan(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.LessThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: LessThan(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThan_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.LessThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: LessThan(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThan(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThan(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThan(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThan(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThan_
  commentId: Overload:Towel.Measurements.Pressure`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.LessThan
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThan
  nameWithType: Pressure<T>.LessThan
  nameWithType.vb: Pressure(Of T).LessThan
- uid: Towel.Measurements.Pressure`1.LessThanOrEqual(Towel.Measurements.Pressure{`0})
  name: LessThanOrEqual(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThanOrEqual_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.LessThanOrEqual(Towel.Measurements.Pressure{`0})
  name.vb: LessThanOrEqual(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThanOrEqual(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThanOrEqual(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThanOrEqual(Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThanOrEqual(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.LessThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: LessThanOrEqual(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThanOrEqual_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.LessThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: LessThanOrEqual(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThanOrEqual(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThanOrEqual(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThanOrEqual(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThanOrEqual(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Pressure`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThanOrEqual
  nameWithType: Pressure<T>.LessThanOrEqual
  nameWithType.vb: Pressure(Of T).LessThanOrEqual
- uid: Towel.Measurements.Pressure`1.MassUnits1
  name: MassUnits1
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_MassUnits1
  commentId: P:Towel.Measurements.Pressure`1.MassUnits1
  fullName: Towel.Measurements.Pressure<T>.MassUnits1
  fullName.vb: Towel.Measurements.Pressure(Of T).MassUnits1
  nameWithType: Pressure<T>.MassUnits1
  nameWithType.vb: Pressure(Of T).MassUnits1
- uid: Towel.Measurements.Pressure`1.MassUnits1*
  name: MassUnits1
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_MassUnits1_
  commentId: Overload:Towel.Measurements.Pressure`1.MassUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.MassUnits1
  fullName.vb: Towel.Measurements.Pressure(Of T).MassUnits1
  nameWithType: Pressure<T>.MassUnits1
  nameWithType.vb: Pressure(Of T).MassUnits1
- uid: Towel.Measurements.Pressure`1.Multiply(`0,Towel.Measurements.Pressure{`0})
  name: Multiply(T, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply__0_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(`0,Towel.Measurements.Pressure{`0})
  name.vb: Multiply(T, Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(T, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(T, Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Multiply(T, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Multiply(T, Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: Pressure<T>.Multiply(Area<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},`0)
  name: Multiply(Pressure<T>, T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Pressure__0___0_
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},`0)
  name.vb: Multiply(Pressure(Of T), T)
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), T)
  nameWithType: Pressure<T>.Multiply(Pressure<T>, T)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), T)
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Area{`0})
  name: Multiply(Pressure<T>, Area<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Pressure(Of T), Area(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, Area<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), Area(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Pressure<T>, TimeArea<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Pressure(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, TimeArea<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Volume{`0})
  name: Multiply(Pressure<T>, Volume<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(Pressure(Of T), Volume(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, Volume<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), Volume(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Pressure<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Pressure(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, VolumeRate<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.TimeArea{`0})
  name: Multiply(TimeArea<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(TimeArea(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.TimeArea(Of T))
  nameWithType: Pressure<T>.Multiply(TimeArea<T>)
  nameWithType.vb: Pressure(Of T).Multiply(TimeArea(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Volume{`0})
  name: Multiply(Volume<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.Volume{`0})
  name.vb: Multiply(Volume(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Volume(Of T))
  nameWithType: Pressure<T>.Multiply(Volume<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Volume(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name: Multiply(VolumeRate<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Pressure`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(VolumeRate(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.VolumeRate(Of T))
  nameWithType: Pressure<T>.Multiply(VolumeRate<T>)
  nameWithType.vb: Pressure(Of T).Multiply(VolumeRate(Of T))
- uid: Towel.Measurements.Pressure`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Multiply_
  commentId: Overload:Towel.Measurements.Pressure`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Multiply
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply
  nameWithType: Pressure<T>.Multiply
  nameWithType.vb: Pressure(Of T).Multiply
- uid: Towel.Measurements.Pressure`1.NotEqual(Towel.Measurements.Pressure{`0})
  name: NotEqual(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_NotEqual_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.NotEqual(Towel.Measurements.Pressure{`0})
  name.vb: NotEqual(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.NotEqual(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).NotEqual(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.NotEqual(Pressure<T>)
  nameWithType.vb: Pressure(Of T).NotEqual(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.NotEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: NotEqual(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_NotEqual_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.NotEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: NotEqual(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.NotEqual(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).NotEqual(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.NotEqual(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).NotEqual(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_NotEqual_
  commentId: Overload:Towel.Measurements.Pressure`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.NotEqual
  fullName.vb: Towel.Measurements.Pressure(Of T).NotEqual
  nameWithType: Pressure<T>.NotEqual
  nameWithType.vb: Pressure(Of T).NotEqual
- uid: Towel.Measurements.Pressure`1.op_Addition(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Addition(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Addition_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Addition(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Addition(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Addition(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Addition(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Addition(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Addition(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Addition_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Addition
  fullName.vb: Towel.Measurements.Pressure(Of T).Addition
  nameWithType: Pressure<T>.Addition
  nameWithType.vb: Pressure(Of T).Addition
- uid: Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},`0)
  name: Division(Pressure<T>, T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Division_Towel_Measurements_Pressure__0___0_
  commentId: M:Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},`0)
  name.vb: Division(Pressure(Of T), T)
  fullName: Towel.Measurements.Pressure<T>.Division(Towel.Measurements.Pressure<T>, T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Division(Towel.Measurements.Pressure(Of T), T)
  nameWithType: Pressure<T>.Division(Pressure<T>, T)
  nameWithType.vb: Pressure(Of T).Division(Pressure(Of T), T)
- uid: Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Pressure<T>, Acceleration<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Division_Towel_Measurements_Pressure__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Pressure(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Pressure<T>.Division(Towel.Measurements.Pressure<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Division(Towel.Measurements.Pressure(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Pressure<T>.Division(Pressure<T>, Acceleration<T>)
  nameWithType.vb: Pressure(Of T).Division(Pressure(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.AreaDensity{`0})
  name: Division(Pressure<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Division_Towel_Measurements_Pressure__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Division(Pressure(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Pressure<T>.Division(Towel.Measurements.Pressure<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Division(Towel.Measurements.Pressure(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Pressure<T>.Division(Pressure<T>, AreaDensity<T>)
  nameWithType.vb: Pressure(Of T).Division(Pressure(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Division(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Division_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Division(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Division(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Division(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Division(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Division(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Division(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Division_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Division
  fullName.vb: Towel.Measurements.Pressure(Of T).Division
  nameWithType: Pressure<T>.Division
  nameWithType.vb: Pressure(Of T).Division
- uid: Towel.Measurements.Pressure`1.op_Equality(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Equality(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Equality_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Equality(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Equality(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Equality(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Equality(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Equality(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Equality(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Equality_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Equality
  fullName.vb: Towel.Measurements.Pressure(Of T).Equality
  nameWithType: Pressure<T>.Equality
  nameWithType.vb: Pressure(Of T).Equality
- uid: Towel.Measurements.Pressure`1.op_GreaterThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: GreaterThan(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_GreaterThan_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_GreaterThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: GreaterThan(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThan(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThan(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThan(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThan(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Pressure`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.GreaterThan
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThan
  nameWithType: Pressure<T>.GreaterThan
  nameWithType.vb: Pressure(Of T).GreaterThan
- uid: Towel.Measurements.Pressure`1.op_GreaterThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: GreaterThanOrEqual(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_GreaterThanOrEqual_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_GreaterThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: GreaterThanOrEqual(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.GreaterThanOrEqual(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThanOrEqual(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.GreaterThanOrEqual(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).GreaterThanOrEqual(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Pressure`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Pressure(Of T).GreaterThanOrEqual
  nameWithType: Pressure<T>.GreaterThanOrEqual
  nameWithType.vb: Pressure(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Pressure`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits})~Towel.Measurements.Pressure{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.PressureBaseUnits) to Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_PressureBaseUnits___Towel_Measurements_Pressure__0_
  commentId: M:Towel.Measurements.Pressure`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits})~Towel.Measurements.Pressure{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.PressureBaseUnits) to Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits> to Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.PressureBaseUnits) to Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Implicit((T, MeasurementUnitsSyntaxTypes.PressureBaseUnits) to Pressure<T>)
  nameWithType.vb: Pressure(Of T).Widening((T, MeasurementUnitsSyntaxTypes.PressureBaseUnits) to Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Pressure<T>.Implicit
  fullName.vb: Towel.Measurements.Pressure(Of T).Widening
  nameWithType: Pressure<T>.Implicit
  nameWithType.vb: Pressure(Of T).Widening
- uid: Towel.Measurements.Pressure`1.op_Inequality(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Inequality(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Inequality_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Inequality(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Inequality(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Inequality(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Inequality(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Inequality(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Inequality(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Inequality
  fullName.vb: Towel.Measurements.Pressure(Of T).Inequality
  nameWithType: Pressure<T>.Inequality
  nameWithType.vb: Pressure(Of T).Inequality
- uid: Towel.Measurements.Pressure`1.op_LessThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: LessThan(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_LessThan_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_LessThan(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: LessThan(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThan(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThan(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThan(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThan(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Pressure`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.LessThan
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThan
  nameWithType: Pressure<T>.LessThan
  nameWithType.vb: Pressure(Of T).LessThan
- uid: Towel.Measurements.Pressure`1.op_LessThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: LessThanOrEqual(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_LessThanOrEqual_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_LessThanOrEqual(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: LessThanOrEqual(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.LessThanOrEqual(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThanOrEqual(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.LessThanOrEqual(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).LessThanOrEqual(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Pressure`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Pressure(Of T).LessThanOrEqual
  nameWithType: Pressure<T>.LessThanOrEqual
  nameWithType.vb: Pressure(Of T).LessThanOrEqual
- uid: Towel.Measurements.Pressure`1.op_Multiply(`0,Towel.Measurements.Pressure{`0})
  name: Multiply(T, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply__0_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(`0,Towel.Measurements.Pressure{`0})
  name.vb: Multiply(T, Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(T, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(T, Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Multiply(T, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Multiply(T, Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},`0)
  name: Multiply(Pressure<T>, T)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_Towel_Measurements_Pressure__0___0_
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},`0)
  name.vb: Multiply(Pressure(Of T), T)
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, T)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), T)
  nameWithType: Pressure<T>.Multiply(Pressure<T>, T)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), T)
- uid: Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Area{`0})
  name: Multiply(Pressure<T>, Area<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Pressure(Of T), Area(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, Area<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), Area(Of T))
- uid: Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.TimeArea{`0})
  name: Multiply(Pressure<T>, TimeArea<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(Pressure(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, TimeArea<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), TimeArea(Of T))
- uid: Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Volume{`0})
  name: Multiply(Pressure<T>, Volume<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.Volume{`0})
  name.vb: Multiply(Pressure(Of T), Volume(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, Volume<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), Volume(Of T))
- uid: Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Pressure<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_Towel_Measurements_Pressure__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Multiply(Towel.Measurements.Pressure{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Pressure(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Pressure<T>.Multiply(Towel.Measurements.Pressure<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply(Towel.Measurements.Pressure(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Pressure<T>.Multiply(Pressure<T>, VolumeRate<T>)
  nameWithType.vb: Pressure(Of T).Multiply(Pressure(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Pressure`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Multiply
  fullName.vb: Towel.Measurements.Pressure(Of T).Multiply
  nameWithType: Pressure<T>.Multiply
  nameWithType.vb: Pressure(Of T).Multiply
- uid: Towel.Measurements.Pressure`1.op_Subtraction(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Subtraction(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Subtraction_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.op_Subtraction(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Subtraction(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Subtraction(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Subtraction(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Subtraction(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Subtraction(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Pressure`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Subtraction
  fullName.vb: Towel.Measurements.Pressure(Of T).Subtraction
  nameWithType: Pressure<T>.Subtraction
  nameWithType.vb: Pressure(Of T).Subtraction
- uid: Towel.Measurements.Pressure`1.Subtract(Towel.Measurements.Pressure{`0})
  name: Subtract(Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Subtract_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Subtract(Towel.Measurements.Pressure{`0})
  name.vb: Subtract(Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Subtract(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Subtract(Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Subtract(Pressure<T>)
  nameWithType.vb: Pressure(Of T).Subtract(Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Subtract(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name: Subtract(Pressure<T>, Pressure<T>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Subtract_Towel_Measurements_Pressure__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Pressure`1.Subtract(Towel.Measurements.Pressure{`0},Towel.Measurements.Pressure{`0})
  name.vb: Subtract(Pressure(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Pressure<T>.Subtract(Towel.Measurements.Pressure<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Pressure(Of T).Subtract(Towel.Measurements.Pressure(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Pressure<T>.Subtract(Pressure<T>, Pressure<T>)
  nameWithType.vb: Pressure(Of T).Subtract(Pressure(Of T), Pressure(Of T))
- uid: Towel.Measurements.Pressure`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_Subtract_
  commentId: Overload:Towel.Measurements.Pressure`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.Subtract
  fullName.vb: Towel.Measurements.Pressure(Of T).Subtract
  nameWithType: Pressure<T>.Subtract
  nameWithType.vb: Pressure(Of T).Subtract
- uid: Towel.Measurements.Pressure`1.TimeUnits3
  name: TimeUnits3
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TimeUnits3
  commentId: P:Towel.Measurements.Pressure`1.TimeUnits3
  fullName: Towel.Measurements.Pressure<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Pressure(Of T).TimeUnits3
  nameWithType: Pressure<T>.TimeUnits3
  nameWithType.vb: Pressure(Of T).TimeUnits3
- uid: Towel.Measurements.Pressure`1.TimeUnits3*
  name: TimeUnits3
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TimeUnits3_
  commentId: Overload:Towel.Measurements.Pressure`1.TimeUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.TimeUnits3
  fullName.vb: Towel.Measurements.Pressure(Of T).TimeUnits3
  nameWithType: Pressure<T>.TimeUnits3
  nameWithType.vb: Pressure(Of T).TimeUnits3
- uid: Towel.Measurements.Pressure`1.TimeUnits4
  name: TimeUnits4
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TimeUnits4
  commentId: P:Towel.Measurements.Pressure`1.TimeUnits4
  fullName: Towel.Measurements.Pressure<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Pressure(Of T).TimeUnits4
  nameWithType: Pressure<T>.TimeUnits4
  nameWithType.vb: Pressure(Of T).TimeUnits4
- uid: Towel.Measurements.Pressure`1.TimeUnits4*
  name: TimeUnits4
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TimeUnits4_
  commentId: Overload:Towel.Measurements.Pressure`1.TimeUnits4
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.TimeUnits4
  fullName.vb: Towel.Measurements.Pressure(Of T).TimeUnits4
  nameWithType: Pressure<T>.TimeUnits4
  nameWithType.vb: Pressure(Of T).TimeUnits4
- uid: Towel.Measurements.Pressure`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_ToString
  commentId: M:Towel.Measurements.Pressure`1.ToString
  fullName: Towel.Measurements.Pressure<T>.ToString()
  fullName.vb: Towel.Measurements.Pressure(Of T).ToString()
  nameWithType: Pressure<T>.ToString()
  nameWithType.vb: Pressure(Of T).ToString()
- uid: Towel.Measurements.Pressure`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_ToString_
  commentId: Overload:Towel.Measurements.Pressure`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.ToString
  fullName.vb: Towel.Measurements.Pressure(Of T).ToString
  nameWithType: Pressure<T>.ToString
  nameWithType.vb: Pressure(Of T).ToString
- uid: Towel.Measurements.Pressure`1.TryParse(System.String,Towel.Measurements.Pressure{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Pressure<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TryParse_System_String_Towel_Measurements_Pressure__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Pressure`1.TryParse(System.String,Towel.Measurements.Pressure{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Pressure(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Pressure<T>.TryParse(System.String, out Towel.Measurements.Pressure<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Pressure(Of T).TryParse(System.String, ByRef Towel.Measurements.Pressure(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Pressure<T>.TryParse(String, out Pressure<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Pressure(Of T).TryParse(String, ByRef Pressure(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Pressure`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Pressure-1.html#Towel_Measurements_Pressure_1_TryParse_
  commentId: Overload:Towel.Measurements.Pressure`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Pressure<T>.TryParse
  fullName.vb: Towel.Measurements.Pressure(Of T).TryParse
  nameWithType: Pressure<T>.TryParse
  nameWithType.vb: Pressure(Of T).TryParse
- uid: Towel.Measurements.Speed`1
  name: Speed<T>
  href: api/Towel.Measurements.Speed-1.html
  commentId: T:Towel.Measurements.Speed`1
  name.vb: Speed(Of T)
  fullName: Towel.Measurements.Speed<T>
  fullName.vb: Towel.Measurements.Speed(Of T)
  nameWithType: Speed<T>
  nameWithType.vb: Speed(Of T)
- uid: Towel.Measurements.Speed`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Speed(T, Length.Units, Time.Units)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1__ctor__0_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Speed`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Speed<T>.Speed(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Speed(Of T).Speed(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: Speed<T>.Speed(T, Length.Units, Time.Units)
  nameWithType.vb: Speed(Of T).Speed(T, Length.Units, Time.Units)
- uid: Towel.Measurements.Speed`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Speed(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.Speed`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.Speed<T>.Speed(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName.vb: Towel.Measurements.Speed(Of T).Speed(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: Speed<T>.Speed(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType.vb: Speed(Of T).Speed(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.Speed`1.#ctor*
  name: Speed
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1__ctor_
  commentId: Overload:Towel.Measurements.Speed`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Speed
  fullName.vb: Towel.Measurements.Speed(Of T).Speed
  nameWithType: Speed<T>.Speed
  nameWithType.vb: Speed(Of T).Speed
- uid: Towel.Measurements.Speed`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Add__0_
  commentId: M:Towel.Measurements.Speed`1.Add(`0)
  fullName: Towel.Measurements.Speed<T>.Add(T)
  fullName.vb: Towel.Measurements.Speed(Of T).Add(T)
  nameWithType: Speed<T>.Add(T)
  nameWithType.vb: Speed(Of T).Add(T)
- uid: Towel.Measurements.Speed`1.Add(Towel.Measurements.Speed{`0})
  name: Add(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Add_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Add(Towel.Measurements.Speed{`0})
  name.vb: Add(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Add(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Add(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Add(Speed<T>)
  nameWithType.vb: Speed(Of T).Add(Speed(Of T))
- uid: Towel.Measurements.Speed`1.Add(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Add(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Add_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Add(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Add(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Add(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Add(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Add(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Add(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.Add*
  name: Add
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Add_
  commentId: Overload:Towel.Measurements.Speed`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Add
  fullName.vb: Towel.Measurements.Speed(Of T).Add
  nameWithType: Speed<T>.Add
  nameWithType.vb: Speed(Of T).Add
- uid: Towel.Measurements.Speed`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Length.Units, Time.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Speed`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Speed<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Speed(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: Speed<T>.Convert(T, Length.Units, Time.Units, Length.Units, Time.Units)
  nameWithType.vb: Speed(Of T).Convert(T, Length.Units, Time.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.Speed`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: M:Towel.Measurements.Speed`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.Speed<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName.vb: Towel.Measurements.Speed(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: Speed<T>.Convert(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType.vb: Speed(Of T).Convert(T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits, MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.Speed`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Convert_
  commentId: Overload:Towel.Measurements.Speed`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Convert
  fullName.vb: Towel.Measurements.Speed(Of T).Convert
  nameWithType: Speed<T>.Convert
  nameWithType.vb: Speed(Of T).Convert
- uid: Towel.Measurements.Speed`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide__0_
  commentId: M:Towel.Measurements.Speed`1.Divide(`0)
  fullName: Towel.Measurements.Speed<T>.Divide(T)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(T)
  nameWithType: Speed<T>.Divide(T)
  nameWithType.vb: Speed(Of T).Divide(T)
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Acceleration{`0})
  name: Divide(Acceleration<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Acceleration(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Acceleration(Of T))
  nameWithType: Speed<T>.Divide(Acceleration<T>)
  nameWithType.vb: Speed(Of T).Divide(Acceleration(Of T))
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Divide(Speed<T>)
  nameWithType.vb: Speed(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},`0)
  name: Divide(Speed<T>, T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Speed__0___0_
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},`0)
  name.vb: Divide(Speed(Of T), T)
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Speed<T>, T)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Speed(Of T), T)
  nameWithType: Speed<T>.Divide(Speed<T>, T)
  nameWithType.vb: Speed(Of T).Divide(Speed(Of T), T)
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Acceleration{`0})
  name: Divide(Speed<T>, Acceleration<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Speed__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Divide(Speed(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Speed<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Speed(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Speed<T>.Divide(Speed<T>, Acceleration<T>)
  nameWithType.vb: Speed(Of T).Divide(Speed(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Divide(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Divide(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name: Divide(Speed<T>, Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Speed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Speed(Of T), Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Speed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Speed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Divide(Speed<T>, Time<T>)
  nameWithType.vb: Speed(Of T).Divide(Speed(Of T), Time(Of T))
- uid: Towel.Measurements.Speed`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Divide(Time<T>)
  nameWithType.vb: Speed(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Speed`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Divide_
  commentId: Overload:Towel.Measurements.Speed`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Divide
  fullName.vb: Towel.Measurements.Speed(Of T).Divide
  nameWithType: Speed<T>.Divide
  nameWithType.vb: Speed(Of T).Divide
- uid: Towel.Measurements.Speed`1.Equal(Towel.Measurements.Speed{`0})
  name: Equal(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Equal_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Equal(Towel.Measurements.Speed{`0})
  name.vb: Equal(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Equal(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Equal(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Equal(Speed<T>)
  nameWithType.vb: Speed(Of T).Equal(Speed(Of T))
- uid: Towel.Measurements.Speed`1.Equal(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Equal(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Equal_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Equal(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Equal(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Equal(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Equal(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Equal(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Equal(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Equal_
  commentId: Overload:Towel.Measurements.Speed`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Equal
  fullName.vb: Towel.Measurements.Speed(Of T).Equal
  nameWithType: Speed<T>.Equal
  nameWithType.vb: Speed(Of T).Equal
- uid: Towel.Measurements.Speed`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Speed`1.Equals(System.Object)
  fullName: Towel.Measurements.Speed<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Speed(Of T).Equals(System.Object)
  nameWithType: Speed<T>.Equals(Object)
  nameWithType.vb: Speed(Of T).Equals(Object)
- uid: Towel.Measurements.Speed`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Equals_
  commentId: Overload:Towel.Measurements.Speed`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Equals
  fullName.vb: Towel.Measurements.Speed(Of T).Equals
  nameWithType: Speed<T>.Equals
  nameWithType.vb: Speed(Of T).Equals
- uid: Towel.Measurements.Speed`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GetHashCode
  commentId: M:Towel.Measurements.Speed`1.GetHashCode
  fullName: Towel.Measurements.Speed<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Speed(Of T).GetHashCode()
  nameWithType: Speed<T>.GetHashCode()
  nameWithType.vb: Speed(Of T).GetHashCode()
- uid: Towel.Measurements.Speed`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Speed`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.GetHashCode
  fullName.vb: Towel.Measurements.Speed(Of T).GetHashCode
  nameWithType: Speed<T>.GetHashCode
  nameWithType.vb: Speed(Of T).GetHashCode
- uid: Towel.Measurements.Speed`1.GreaterThan(Towel.Measurements.Speed{`0})
  name: GreaterThan(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThan_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.GreaterThan(Towel.Measurements.Speed{`0})
  name.vb: GreaterThan(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThan(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThan(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThan(Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThan(Speed(Of T))
- uid: Towel.Measurements.Speed`1.GreaterThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: GreaterThan(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThan_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.GreaterThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: GreaterThan(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThan(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThan(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThan(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThan(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Speed`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.GreaterThan
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThan
  nameWithType: Speed<T>.GreaterThan
  nameWithType.vb: Speed(Of T).GreaterThan
- uid: Towel.Measurements.Speed`1.GreaterThanOrEqual(Towel.Measurements.Speed{`0})
  name: GreaterThanOrEqual(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThanOrEqual_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.GreaterThanOrEqual(Towel.Measurements.Speed{`0})
  name.vb: GreaterThanOrEqual(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThanOrEqual(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThanOrEqual(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThanOrEqual(Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThanOrEqual(Speed(Of T))
- uid: Towel.Measurements.Speed`1.GreaterThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: GreaterThanOrEqual(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThanOrEqual_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.GreaterThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: GreaterThanOrEqual(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThanOrEqual(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThanOrEqual(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThanOrEqual(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThanOrEqual(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Speed`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThanOrEqual
  nameWithType: Speed<T>.GreaterThanOrEqual
  nameWithType.vb: Speed(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Speed`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Item[Length.Units, Time.Units]
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Item_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Speed`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Length.Units, Time.Units)
  fullName: Towel.Measurements.Speed<T>.Item[Towel.Measurements.Length.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Speed(Of T).Item(Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: Speed<T>.Item[Length.Units, Time.Units]
  nameWithType.vb: Speed(Of T).Item(Length.Units, Time.Units)
- uid: Towel.Measurements.Speed`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.SpeedBaseUnits]
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits_
  commentId: P:Towel.Measurements.Speed`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  fullName: Towel.Measurements.Speed<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits]
  fullName.vb: Towel.Measurements.Speed(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
  nameWithType: Speed<T>.Item[MeasurementUnitsSyntaxTypes.SpeedBaseUnits]
  nameWithType.vb: Speed(Of T).Item(MeasurementUnitsSyntaxTypes.SpeedBaseUnits)
- uid: Towel.Measurements.Speed`1.Item*
  name: Item
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Item_
  commentId: Overload:Towel.Measurements.Speed`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Item
  fullName.vb: Towel.Measurements.Speed(Of T).Item
  nameWithType: Speed<T>.Item
  nameWithType.vb: Speed(Of T).Item
- uid: Towel.Measurements.Speed`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LengthUnits1
  commentId: P:Towel.Measurements.Speed`1.LengthUnits1
  fullName: Towel.Measurements.Speed<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Speed(Of T).LengthUnits1
  nameWithType: Speed<T>.LengthUnits1
  nameWithType.vb: Speed(Of T).LengthUnits1
- uid: Towel.Measurements.Speed`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.Speed`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Speed(Of T).LengthUnits1
  nameWithType: Speed<T>.LengthUnits1
  nameWithType.vb: Speed(Of T).LengthUnits1
- uid: Towel.Measurements.Speed`1.LessThan(Towel.Measurements.Speed{`0})
  name: LessThan(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThan_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.LessThan(Towel.Measurements.Speed{`0})
  name.vb: LessThan(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThan(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThan(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThan(Speed<T>)
  nameWithType.vb: Speed(Of T).LessThan(Speed(Of T))
- uid: Towel.Measurements.Speed`1.LessThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: LessThan(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThan_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.LessThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: LessThan(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThan(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThan(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThan(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).LessThan(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThan_
  commentId: Overload:Towel.Measurements.Speed`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.LessThan
  fullName.vb: Towel.Measurements.Speed(Of T).LessThan
  nameWithType: Speed<T>.LessThan
  nameWithType.vb: Speed(Of T).LessThan
- uid: Towel.Measurements.Speed`1.LessThanOrEqual(Towel.Measurements.Speed{`0})
  name: LessThanOrEqual(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThanOrEqual_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.LessThanOrEqual(Towel.Measurements.Speed{`0})
  name.vb: LessThanOrEqual(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThanOrEqual(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThanOrEqual(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThanOrEqual(Speed<T>)
  nameWithType.vb: Speed(Of T).LessThanOrEqual(Speed(Of T))
- uid: Towel.Measurements.Speed`1.LessThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: LessThanOrEqual(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThanOrEqual_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.LessThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: LessThanOrEqual(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThanOrEqual(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThanOrEqual(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThanOrEqual(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).LessThanOrEqual(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Speed`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Speed(Of T).LessThanOrEqual
  nameWithType: Speed<T>.LessThanOrEqual
  nameWithType.vb: Speed(Of T).LessThanOrEqual
- uid: Towel.Measurements.Speed`1.Multiply(`0,Towel.Measurements.Speed{`0})
  name: Multiply(T, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply__0_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(`0,Towel.Measurements.Speed{`0})
  name.vb: Multiply(T, Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(T, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(T, Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Multiply(T, Speed<T>)
  nameWithType.vb: Speed(Of T).Multiply(T, Speed(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Area{`0})
  name: Multiply(Area<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Area{`0})
  name.vb: Multiply(Area(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Area(Of T))
  nameWithType: Speed<T>.Multiply(Area<T>)
  nameWithType.vb: Speed(Of T).Multiply(Area(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Force{`0})
  name: Multiply(Force<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Force{`0})
  name.vb: Multiply(Force(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Force(Of T))
  nameWithType: Speed<T>.Multiply(Force<T>)
  nameWithType.vb: Speed(Of T).Multiply(Force(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name: Multiply(LinearDensity<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(LinearDensity(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.LinearDensity(Of T))
  nameWithType: Speed<T>.Multiply(LinearDensity<T>)
  nameWithType.vb: Speed(Of T).Multiply(LinearDensity(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(LinearMassFlow<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(LinearMassFlow(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Speed<T>.Multiply(LinearMassFlow<T>)
  nameWithType.vb: Speed(Of T).Multiply(LinearMassFlow(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Mass{`0})
  name: Multiply(Mass<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Mass{`0})
  name.vb: Multiply(Mass(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Mass(Of T))
  nameWithType: Speed<T>.Multiply(Mass<T>)
  nameWithType.vb: Speed(Of T).Multiply(Mass(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.MassRate{`0})
  name: Multiply(MassRate<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.MassRate{`0})
  name.vb: Multiply(MassRate(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.MassRate(Of T))
  nameWithType: Speed<T>.Multiply(MassRate<T>)
  nameWithType.vb: Speed(Of T).Multiply(MassRate(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},`0)
  name: Multiply(Speed<T>, T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0___0_
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},`0)
  name.vb: Multiply(Speed(Of T), T)
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, T)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), T)
  nameWithType: Speed<T>.Multiply(Speed<T>, T)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), T)
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Area{`0})
  name: Multiply(Speed<T>, Area<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Speed(Of T), Area(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Area<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Area(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Force{`0})
  name: Multiply(Speed<T>, Force<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Speed(Of T), Force(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Force<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Force(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Speed<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Speed(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, LinearDensity<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Speed<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Speed(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, LinearMassFlow<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Speed<T>, Mass<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Speed(Of T), Mass(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Mass<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Mass(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Speed<T>, MassRate<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Speed(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, MassRate<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), MassRate(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name: Multiply(Speed<T>, Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Speed(Of T), Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Time<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Time(Of T))
- uid: Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Multiply(Time<T>)
  nameWithType.vb: Speed(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.Speed`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Multiply_
  commentId: Overload:Towel.Measurements.Speed`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Multiply
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply
  nameWithType: Speed<T>.Multiply
  nameWithType.vb: Speed(Of T).Multiply
- uid: Towel.Measurements.Speed`1.NotEqual(Towel.Measurements.Speed{`0})
  name: NotEqual(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_NotEqual_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.NotEqual(Towel.Measurements.Speed{`0})
  name.vb: NotEqual(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.NotEqual(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).NotEqual(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.NotEqual(Speed<T>)
  nameWithType.vb: Speed(Of T).NotEqual(Speed(Of T))
- uid: Towel.Measurements.Speed`1.NotEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: NotEqual(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_NotEqual_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.NotEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: NotEqual(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.NotEqual(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).NotEqual(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.NotEqual(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).NotEqual(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_NotEqual_
  commentId: Overload:Towel.Measurements.Speed`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.NotEqual
  fullName.vb: Towel.Measurements.Speed(Of T).NotEqual
  nameWithType: Speed<T>.NotEqual
  nameWithType.vb: Speed(Of T).NotEqual
- uid: Towel.Measurements.Speed`1.op_Addition(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Addition(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Addition_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Addition(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Addition(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Addition(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Addition(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Addition(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Addition(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Addition_
  commentId: Overload:Towel.Measurements.Speed`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Addition
  fullName.vb: Towel.Measurements.Speed(Of T).Addition
  nameWithType: Speed<T>.Addition
  nameWithType.vb: Speed(Of T).Addition
- uid: Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},`0)
  name: Division(Speed<T>, T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Division_Towel_Measurements_Speed__0___0_
  commentId: M:Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},`0)
  name.vb: Division(Speed(Of T), T)
  fullName: Towel.Measurements.Speed<T>.Division(Towel.Measurements.Speed<T>, T)
  fullName.vb: Towel.Measurements.Speed(Of T).Division(Towel.Measurements.Speed(Of T), T)
  nameWithType: Speed<T>.Division(Speed<T>, T)
  nameWithType.vb: Speed(Of T).Division(Speed(Of T), T)
- uid: Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Acceleration{`0})
  name: Division(Speed<T>, Acceleration<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Division_Towel_Measurements_Speed__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Division(Speed(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Speed<T>.Division(Towel.Measurements.Speed<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Division(Towel.Measurements.Speed(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Speed<T>.Division(Speed<T>, Acceleration<T>)
  nameWithType.vb: Speed(Of T).Division(Speed(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Division(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Division_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Division(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Division(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Division(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Division(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name: Division(Speed<T>, Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Division_Towel_Measurements_Speed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.op_Division(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Speed(Of T), Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Division(Towel.Measurements.Speed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Division(Towel.Measurements.Speed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Division(Speed<T>, Time<T>)
  nameWithType.vb: Speed(Of T).Division(Speed(Of T), Time(Of T))
- uid: Towel.Measurements.Speed`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Division_
  commentId: Overload:Towel.Measurements.Speed`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Division
  fullName.vb: Towel.Measurements.Speed(Of T).Division
  nameWithType: Speed<T>.Division
  nameWithType.vb: Speed(Of T).Division
- uid: Towel.Measurements.Speed`1.op_Equality(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Equality(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Equality_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Equality(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Equality(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Equality(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Equality(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Equality(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Equality(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Equality_
  commentId: Overload:Towel.Measurements.Speed`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Equality
  fullName.vb: Towel.Measurements.Speed(Of T).Equality
  nameWithType: Speed<T>.Equality
  nameWithType.vb: Speed(Of T).Equality
- uid: Towel.Measurements.Speed`1.op_GreaterThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: GreaterThan(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_GreaterThan_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_GreaterThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: GreaterThan(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThan(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThan(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThan(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThan(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Speed`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.GreaterThan
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThan
  nameWithType: Speed<T>.GreaterThan
  nameWithType.vb: Speed(Of T).GreaterThan
- uid: Towel.Measurements.Speed`1.op_GreaterThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: GreaterThanOrEqual(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_GreaterThanOrEqual_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_GreaterThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: GreaterThanOrEqual(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.GreaterThanOrEqual(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThanOrEqual(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.GreaterThanOrEqual(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).GreaterThanOrEqual(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Speed`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Speed(Of T).GreaterThanOrEqual
  nameWithType: Speed<T>.GreaterThanOrEqual
  nameWithType.vb: Speed(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Speed`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits})~Towel.Measurements.Speed{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits) to Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_SpeedBaseUnits___Towel_Measurements_Speed__0_
  commentId: M:Towel.Measurements.Speed`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits})~Towel.Measurements.Speed{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits) to Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits> to Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.SpeedBaseUnits) to Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Implicit((T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits) to Speed<T>)
  nameWithType.vb: Speed(Of T).Widening((T, MeasurementUnitsSyntaxTypes.SpeedBaseUnits) to Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Speed`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Speed<T>.Implicit
  fullName.vb: Towel.Measurements.Speed(Of T).Widening
  nameWithType: Speed<T>.Implicit
  nameWithType.vb: Speed(Of T).Widening
- uid: Towel.Measurements.Speed`1.op_Inequality(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Inequality(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Inequality_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Inequality(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Inequality(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Inequality(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Inequality(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Inequality(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Inequality(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Speed`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Inequality
  fullName.vb: Towel.Measurements.Speed(Of T).Inequality
  nameWithType: Speed<T>.Inequality
  nameWithType.vb: Speed(Of T).Inequality
- uid: Towel.Measurements.Speed`1.op_LessThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: LessThan(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_LessThan_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_LessThan(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: LessThan(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThan(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThan(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThan(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).LessThan(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Speed`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.LessThan
  fullName.vb: Towel.Measurements.Speed(Of T).LessThan
  nameWithType: Speed<T>.LessThan
  nameWithType.vb: Speed(Of T).LessThan
- uid: Towel.Measurements.Speed`1.op_LessThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: LessThanOrEqual(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_LessThanOrEqual_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_LessThanOrEqual(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: LessThanOrEqual(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.LessThanOrEqual(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).LessThanOrEqual(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.LessThanOrEqual(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).LessThanOrEqual(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Speed`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Speed(Of T).LessThanOrEqual
  nameWithType: Speed<T>.LessThanOrEqual
  nameWithType.vb: Speed(Of T).LessThanOrEqual
- uid: Towel.Measurements.Speed`1.op_Multiply(`0,Towel.Measurements.Speed{`0})
  name: Multiply(T, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply__0_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(`0,Towel.Measurements.Speed{`0})
  name.vb: Multiply(T, Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(T, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(T, Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Multiply(T, Speed<T>)
  nameWithType.vb: Speed(Of T).Multiply(T, Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},`0)
  name: Multiply(Speed<T>, T)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0___0_
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},`0)
  name.vb: Multiply(Speed(Of T), T)
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, T)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), T)
  nameWithType: Speed<T>.Multiply(Speed<T>, T)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), T)
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Area{`0})
  name: Multiply(Speed<T>, Area<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Area{`0})
  name.vb: Multiply(Speed(Of T), Area(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Area<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Area(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Force{`0})
  name: Multiply(Speed<T>, Force<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Speed(Of T), Force(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Force<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Force(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearDensity{`0})
  name: Multiply(Speed<T>, LinearDensity<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_LinearDensity__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearDensity{`0})
  name.vb: Multiply(Speed(Of T), LinearDensity(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.LinearDensity<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.LinearDensity(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, LinearDensity<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), LinearDensity(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Speed<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Speed(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, LinearMassFlow<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Mass{`0})
  name: Multiply(Speed<T>, Mass<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Mass__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Mass{`0})
  name.vb: Multiply(Speed(Of T), Mass(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Mass<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Mass(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Mass<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Mass(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Speed<T>, MassRate<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Speed(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, MassRate<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), MassRate(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name: Multiply(Speed<T>, Time<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_Towel_Measurements_Speed__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Speed`1.op_Multiply(Towel.Measurements.Speed{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Speed(Of T), Time(Of T))
  fullName: Towel.Measurements.Speed<T>.Multiply(Towel.Measurements.Speed<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply(Towel.Measurements.Speed(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Speed<T>.Multiply(Speed<T>, Time<T>)
  nameWithType.vb: Speed(Of T).Multiply(Speed(Of T), Time(Of T))
- uid: Towel.Measurements.Speed`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Speed`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Multiply
  fullName.vb: Towel.Measurements.Speed(Of T).Multiply
  nameWithType: Speed<T>.Multiply
  nameWithType.vb: Speed(Of T).Multiply
- uid: Towel.Measurements.Speed`1.op_Subtraction(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Subtraction(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Subtraction_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.op_Subtraction(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Subtraction(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Subtraction(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Subtraction(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Subtraction(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Subtraction(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Speed`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Subtraction
  fullName.vb: Towel.Measurements.Speed(Of T).Subtraction
  nameWithType: Speed<T>.Subtraction
  nameWithType.vb: Speed(Of T).Subtraction
- uid: Towel.Measurements.Speed`1.Subtract(Towel.Measurements.Speed{`0})
  name: Subtract(Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Subtract_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Subtract(Towel.Measurements.Speed{`0})
  name.vb: Subtract(Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Subtract(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Subtract(Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Subtract(Speed<T>)
  nameWithType.vb: Speed(Of T).Subtract(Speed(Of T))
- uid: Towel.Measurements.Speed`1.Subtract(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name: Subtract(Speed<T>, Speed<T>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Subtract_Towel_Measurements_Speed__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Speed`1.Subtract(Towel.Measurements.Speed{`0},Towel.Measurements.Speed{`0})
  name.vb: Subtract(Speed(Of T), Speed(Of T))
  fullName: Towel.Measurements.Speed<T>.Subtract(Towel.Measurements.Speed<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Speed(Of T).Subtract(Towel.Measurements.Speed(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Speed<T>.Subtract(Speed<T>, Speed<T>)
  nameWithType.vb: Speed(Of T).Subtract(Speed(Of T), Speed(Of T))
- uid: Towel.Measurements.Speed`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_Subtract_
  commentId: Overload:Towel.Measurements.Speed`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.Subtract
  fullName.vb: Towel.Measurements.Speed(Of T).Subtract
  nameWithType: Speed<T>.Subtract
  nameWithType.vb: Speed(Of T).Subtract
- uid: Towel.Measurements.Speed`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_TimeUnits2
  commentId: P:Towel.Measurements.Speed`1.TimeUnits2
  fullName: Towel.Measurements.Speed<T>.TimeUnits2
  fullName.vb: Towel.Measurements.Speed(Of T).TimeUnits2
  nameWithType: Speed<T>.TimeUnits2
  nameWithType.vb: Speed(Of T).TimeUnits2
- uid: Towel.Measurements.Speed`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.Speed`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.TimeUnits2
  fullName.vb: Towel.Measurements.Speed(Of T).TimeUnits2
  nameWithType: Speed<T>.TimeUnits2
  nameWithType.vb: Speed(Of T).TimeUnits2
- uid: Towel.Measurements.Speed`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_ToString
  commentId: M:Towel.Measurements.Speed`1.ToString
  fullName: Towel.Measurements.Speed<T>.ToString()
  fullName.vb: Towel.Measurements.Speed(Of T).ToString()
  nameWithType: Speed<T>.ToString()
  nameWithType.vb: Speed(Of T).ToString()
- uid: Towel.Measurements.Speed`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_ToString_
  commentId: Overload:Towel.Measurements.Speed`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.ToString
  fullName.vb: Towel.Measurements.Speed(Of T).ToString
  nameWithType: Speed<T>.ToString
  nameWithType.vb: Speed(Of T).ToString
- uid: Towel.Measurements.Speed`1.TryParse(System.String,Towel.Measurements.Speed{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Speed<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_TryParse_System_String_Towel_Measurements_Speed__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Speed`1.TryParse(System.String,Towel.Measurements.Speed{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Speed(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Speed<T>.TryParse(System.String, out Towel.Measurements.Speed<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Speed(Of T).TryParse(System.String, ByRef Towel.Measurements.Speed(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Speed<T>.TryParse(String, out Speed<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Speed(Of T).TryParse(String, ByRef Speed(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Speed`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Speed-1.html#Towel_Measurements_Speed_1_TryParse_
  commentId: Overload:Towel.Measurements.Speed`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Speed<T>.TryParse
  fullName.vb: Towel.Measurements.Speed(Of T).TryParse
  nameWithType: Speed<T>.TryParse
  nameWithType.vb: Speed(Of T).TryParse
- uid: Towel.Measurements.Tempurature
  name: Tempurature
  href: api/Towel.Measurements.Tempurature.html
  commentId: T:Towel.Measurements.Tempurature
  fullName: Towel.Measurements.Tempurature
  nameWithType: Tempurature
- uid: Towel.Measurements.Tempurature.Units
  name: Tempurature.Units
  href: api/Towel.Measurements.Tempurature.Units.html
  commentId: T:Towel.Measurements.Tempurature.Units
  fullName: Towel.Measurements.Tempurature.Units
  nameWithType: Tempurature.Units
- uid: Towel.Measurements.Tempurature.Units.Celsius
  name: Celsius
  href: api/Towel.Measurements.Tempurature.Units.html#Towel_Measurements_Tempurature_Units_Celsius
  commentId: F:Towel.Measurements.Tempurature.Units.Celsius
  fullName: Towel.Measurements.Tempurature.Units.Celsius
  nameWithType: Tempurature.Units.Celsius
- uid: Towel.Measurements.Tempurature.Units.Fahrenheit
  name: Fahrenheit
  href: api/Towel.Measurements.Tempurature.Units.html#Towel_Measurements_Tempurature_Units_Fahrenheit
  commentId: F:Towel.Measurements.Tempurature.Units.Fahrenheit
  fullName: Towel.Measurements.Tempurature.Units.Fahrenheit
  nameWithType: Tempurature.Units.Fahrenheit
- uid: Towel.Measurements.Tempurature.Units.Kelvin
  name: Kelvin
  href: api/Towel.Measurements.Tempurature.Units.html#Towel_Measurements_Tempurature_Units_Kelvin
  commentId: F:Towel.Measurements.Tempurature.Units.Kelvin
  fullName: Towel.Measurements.Tempurature.Units.Kelvin
  nameWithType: Tempurature.Units.Kelvin
- uid: Towel.Measurements.Tempurature`1
  name: Tempurature<T>
  href: api/Towel.Measurements.Tempurature-1.html
  commentId: T:Towel.Measurements.Tempurature`1
  name.vb: Tempurature(Of T)
  fullName: Towel.Measurements.Tempurature<T>
  fullName.vb: Towel.Measurements.Tempurature(Of T)
  nameWithType: Tempurature<T>
  nameWithType.vb: Tempurature(Of T)
- uid: Towel.Measurements.Tempurature`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name: Tempurature(T, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_
  commentId: M:Towel.Measurements.Tempurature`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName: Towel.Measurements.Tempurature<T>.Tempurature(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Tempurature(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType: Tempurature<T>.Tempurature(T, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType.vb: Tempurature(Of T).Tempurature(T, MeasurementUnitsSyntaxTypes.TempuratureUnits)
- uid: Towel.Measurements.Tempurature`1.#ctor(`0,Towel.Measurements.Tempurature.Units)
  name: Tempurature(T, Tempurature.Units)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1__ctor__0_Towel_Measurements_Tempurature_Units_
  commentId: M:Towel.Measurements.Tempurature`1.#ctor(`0,Towel.Measurements.Tempurature.Units)
  fullName: Towel.Measurements.Tempurature<T>.Tempurature(T, Towel.Measurements.Tempurature.Units)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Tempurature(T, Towel.Measurements.Tempurature.Units)
  nameWithType: Tempurature<T>.Tempurature(T, Tempurature.Units)
  nameWithType.vb: Tempurature(Of T).Tempurature(T, Tempurature.Units)
- uid: Towel.Measurements.Tempurature`1.#ctor*
  name: Tempurature
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1__ctor_
  commentId: Overload:Towel.Measurements.Tempurature`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Tempurature
  fullName.vb: Towel.Measurements.Tempurature(Of T).Tempurature
  nameWithType: Tempurature<T>.Tempurature
  nameWithType.vb: Tempurature(Of T).Tempurature
- uid: Towel.Measurements.Tempurature`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Add__0_
  commentId: M:Towel.Measurements.Tempurature`1.Add(`0)
  fullName: Towel.Measurements.Tempurature<T>.Add(T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Add(T)
  nameWithType: Tempurature<T>.Add(T)
  nameWithType.vb: Tempurature(Of T).Add(T)
- uid: Towel.Measurements.Tempurature`1.Add(Towel.Measurements.Tempurature{`0})
  name: Add(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Add_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Add(Towel.Measurements.Tempurature{`0})
  name.vb: Add(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Add(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Add(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Add(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Add(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Add(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Add(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Add_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Add(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Add(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Add(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Add(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Add(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Add(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Add*
  name: Add
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Add_
  commentId: Overload:Towel.Measurements.Tempurature`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Add
  fullName.vb: Towel.Measurements.Tempurature(Of T).Add
  nameWithType: Tempurature<T>.Add
  nameWithType.vb: Tempurature(Of T).Add
- uid: Towel.Measurements.Tempurature`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_
  commentId: M:Towel.Measurements.Tempurature`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName: Towel.Measurements.Tempurature<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType: Tempurature<T>.Convert(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType.vb: Tempurature(Of T).Convert(T, MeasurementUnitsSyntaxTypes.TempuratureUnits, MeasurementUnitsSyntaxTypes.TempuratureUnits)
- uid: Towel.Measurements.Tempurature`1.Convert(`0,Towel.Measurements.Tempurature.Units,Towel.Measurements.Tempurature.Units)
  name: Convert(T, Tempurature.Units, Tempurature.Units)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Convert__0_Towel_Measurements_Tempurature_Units_Towel_Measurements_Tempurature_Units_
  commentId: M:Towel.Measurements.Tempurature`1.Convert(`0,Towel.Measurements.Tempurature.Units,Towel.Measurements.Tempurature.Units)
  fullName: Towel.Measurements.Tempurature<T>.Convert(T, Towel.Measurements.Tempurature.Units, Towel.Measurements.Tempurature.Units)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Convert(T, Towel.Measurements.Tempurature.Units, Towel.Measurements.Tempurature.Units)
  nameWithType: Tempurature<T>.Convert(T, Tempurature.Units, Tempurature.Units)
  nameWithType.vb: Tempurature(Of T).Convert(T, Tempurature.Units, Tempurature.Units)
- uid: Towel.Measurements.Tempurature`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Convert_
  commentId: Overload:Towel.Measurements.Tempurature`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Convert
  fullName.vb: Towel.Measurements.Tempurature(Of T).Convert
  nameWithType: Tempurature<T>.Convert
  nameWithType.vb: Tempurature(Of T).Convert
- uid: Towel.Measurements.Tempurature`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Divide__0_
  commentId: M:Towel.Measurements.Tempurature`1.Divide(`0)
  fullName: Towel.Measurements.Tempurature<T>.Divide(T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Divide(T)
  nameWithType: Tempurature<T>.Divide(T)
  nameWithType.vb: Tempurature(Of T).Divide(T)
- uid: Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0})
  name: Divide(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Divide_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0})
  name.vb: Divide(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Divide(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Divide(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Divide(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Divide(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0},`0)
  name: Divide(Tempurature<T>, T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Divide_Towel_Measurements_Tempurature__0___0_
  commentId: M:Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0},`0)
  name.vb: Divide(Tempurature(Of T), T)
  fullName: Towel.Measurements.Tempurature<T>.Divide(Towel.Measurements.Tempurature<T>, T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Divide(Towel.Measurements.Tempurature(Of T), T)
  nameWithType: Tempurature<T>.Divide(Tempurature<T>, T)
  nameWithType.vb: Tempurature(Of T).Divide(Tempurature(Of T), T)
- uid: Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Divide(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Divide_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Divide(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Divide(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Divide(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Divide(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Divide(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Divide(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Divide_
  commentId: Overload:Towel.Measurements.Tempurature`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Divide
  fullName.vb: Towel.Measurements.Tempurature(Of T).Divide
  nameWithType: Tempurature<T>.Divide
  nameWithType.vb: Tempurature(Of T).Divide
- uid: Towel.Measurements.Tempurature`1.Equal(Towel.Measurements.Tempurature{`0})
  name: Equal(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Equal_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Equal(Towel.Measurements.Tempurature{`0})
  name.vb: Equal(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Equal(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equal(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Equal(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Equal(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Equal(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Equal(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Equal_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Equal(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Equal(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Equal(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equal(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Equal(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Equal(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Equal_
  commentId: Overload:Towel.Measurements.Tempurature`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Equal
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equal
  nameWithType: Tempurature<T>.Equal
  nameWithType.vb: Tempurature(Of T).Equal
- uid: Towel.Measurements.Tempurature`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Tempurature`1.Equals(System.Object)
  fullName: Towel.Measurements.Tempurature<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equals(System.Object)
  nameWithType: Tempurature<T>.Equals(Object)
  nameWithType.vb: Tempurature(Of T).Equals(Object)
- uid: Towel.Measurements.Tempurature`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Equals_
  commentId: Overload:Towel.Measurements.Tempurature`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Equals
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equals
  nameWithType: Tempurature<T>.Equals
  nameWithType.vb: Tempurature(Of T).Equals
- uid: Towel.Measurements.Tempurature`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GetHashCode
  commentId: M:Towel.Measurements.Tempurature`1.GetHashCode
  fullName: Towel.Measurements.Tempurature<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Tempurature(Of T).GetHashCode()
  nameWithType: Tempurature<T>.GetHashCode()
  nameWithType.vb: Tempurature(Of T).GetHashCode()
- uid: Towel.Measurements.Tempurature`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Tempurature`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.GetHashCode
  fullName.vb: Towel.Measurements.Tempurature(Of T).GetHashCode
  nameWithType: Tempurature<T>.GetHashCode
  nameWithType.vb: Tempurature(Of T).GetHashCode
- uid: Towel.Measurements.Tempurature`1.GreaterThan(Towel.Measurements.Tempurature{`0})
  name: GreaterThan(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThan_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.GreaterThan(Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThan(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThan(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThan(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThan(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThan(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.GreaterThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: GreaterThan(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThan_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.GreaterThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThan(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThan(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThan(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThan(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThan(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Tempurature`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.GreaterThan
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThan
  nameWithType: Tempurature<T>.GreaterThan
  nameWithType.vb: Tempurature(Of T).GreaterThan
- uid: Towel.Measurements.Tempurature`1.GreaterThanOrEqual(Towel.Measurements.Tempurature{`0})
  name: GreaterThanOrEqual(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThanOrEqual_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.GreaterThanOrEqual(Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThanOrEqual(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThanOrEqual(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThanOrEqual(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThanOrEqual(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThanOrEqual(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.GreaterThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: GreaterThanOrEqual(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThanOrEqual_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.GreaterThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThanOrEqual(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThanOrEqual(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThanOrEqual(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThanOrEqual(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThanOrEqual(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Tempurature`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThanOrEqual
  nameWithType: Tempurature<T>.GreaterThanOrEqual
  nameWithType.vb: Tempurature(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Tempurature`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name: Item[MeasurementUnitsSyntaxTypes.TempuratureUnits]
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits_
  commentId: P:Towel.Measurements.Tempurature`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.TempuratureUnits)
  fullName: Towel.Measurements.Tempurature<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits]
  fullName.vb: Towel.Measurements.Tempurature(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits)
  nameWithType: Tempurature<T>.Item[MeasurementUnitsSyntaxTypes.TempuratureUnits]
  nameWithType.vb: Tempurature(Of T).Item(MeasurementUnitsSyntaxTypes.TempuratureUnits)
- uid: Towel.Measurements.Tempurature`1.Item(Towel.Measurements.Tempurature.Units)
  name: Item[Tempurature.Units]
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Item_Towel_Measurements_Tempurature_Units_
  commentId: P:Towel.Measurements.Tempurature`1.Item(Towel.Measurements.Tempurature.Units)
  name.vb: Item(Tempurature.Units)
  fullName: Towel.Measurements.Tempurature<T>.Item[Towel.Measurements.Tempurature.Units]
  fullName.vb: Towel.Measurements.Tempurature(Of T).Item(Towel.Measurements.Tempurature.Units)
  nameWithType: Tempurature<T>.Item[Tempurature.Units]
  nameWithType.vb: Tempurature(Of T).Item(Tempurature.Units)
- uid: Towel.Measurements.Tempurature`1.Item*
  name: Item
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Item_
  commentId: Overload:Towel.Measurements.Tempurature`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Item
  fullName.vb: Towel.Measurements.Tempurature(Of T).Item
  nameWithType: Tempurature<T>.Item
  nameWithType.vb: Tempurature(Of T).Item
- uid: Towel.Measurements.Tempurature`1.LessThan(Towel.Measurements.Tempurature{`0})
  name: LessThan(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThan_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.LessThan(Towel.Measurements.Tempurature{`0})
  name.vb: LessThan(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThan(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThan(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThan(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThan(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.LessThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: LessThan(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThan_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.LessThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: LessThan(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThan(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThan(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThan(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThan(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThan_
  commentId: Overload:Towel.Measurements.Tempurature`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.LessThan
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThan
  nameWithType: Tempurature<T>.LessThan
  nameWithType.vb: Tempurature(Of T).LessThan
- uid: Towel.Measurements.Tempurature`1.LessThanOrEqual(Towel.Measurements.Tempurature{`0})
  name: LessThanOrEqual(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThanOrEqual_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.LessThanOrEqual(Towel.Measurements.Tempurature{`0})
  name.vb: LessThanOrEqual(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThanOrEqual(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThanOrEqual(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThanOrEqual(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThanOrEqual(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.LessThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: LessThanOrEqual(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThanOrEqual_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.LessThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: LessThanOrEqual(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThanOrEqual(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThanOrEqual(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThanOrEqual(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThanOrEqual(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Tempurature`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThanOrEqual
  nameWithType: Tempurature<T>.LessThanOrEqual
  nameWithType.vb: Tempurature(Of T).LessThanOrEqual
- uid: Towel.Measurements.Tempurature`1.Multiply(`0,Towel.Measurements.Tempurature{`0})
  name: Multiply(T, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Multiply__0_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Multiply(`0,Towel.Measurements.Tempurature{`0})
  name.vb: Multiply(T, Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Multiply(T, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply(T, Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Multiply(T, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Multiply(T, Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Multiply(Towel.Measurements.Tempurature{`0},`0)
  name: Multiply(Tempurature<T>, T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Multiply_Towel_Measurements_Tempurature__0___0_
  commentId: M:Towel.Measurements.Tempurature`1.Multiply(Towel.Measurements.Tempurature{`0},`0)
  name.vb: Multiply(Tempurature(Of T), T)
  fullName: Towel.Measurements.Tempurature<T>.Multiply(Towel.Measurements.Tempurature<T>, T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply(Towel.Measurements.Tempurature(Of T), T)
  nameWithType: Tempurature<T>.Multiply(Tempurature<T>, T)
  nameWithType.vb: Tempurature(Of T).Multiply(Tempurature(Of T), T)
- uid: Towel.Measurements.Tempurature`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Multiply_
  commentId: Overload:Towel.Measurements.Tempurature`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Multiply
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply
  nameWithType: Tempurature<T>.Multiply
  nameWithType.vb: Tempurature(Of T).Multiply
- uid: Towel.Measurements.Tempurature`1.NotEqual(Towel.Measurements.Tempurature{`0})
  name: NotEqual(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_NotEqual_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.NotEqual(Towel.Measurements.Tempurature{`0})
  name.vb: NotEqual(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.NotEqual(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).NotEqual(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.NotEqual(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).NotEqual(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.NotEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: NotEqual(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_NotEqual_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.NotEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: NotEqual(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.NotEqual(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).NotEqual(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.NotEqual(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).NotEqual(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_NotEqual_
  commentId: Overload:Towel.Measurements.Tempurature`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.NotEqual
  fullName.vb: Towel.Measurements.Tempurature(Of T).NotEqual
  nameWithType: Tempurature<T>.NotEqual
  nameWithType.vb: Tempurature(Of T).NotEqual
- uid: Towel.Measurements.Tempurature`1.op_Addition(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Addition(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Addition_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Addition(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Addition(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Addition(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Addition(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Addition(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Addition(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Addition_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Addition
  fullName.vb: Towel.Measurements.Tempurature(Of T).Addition
  nameWithType: Tempurature<T>.Addition
  nameWithType.vb: Tempurature(Of T).Addition
- uid: Towel.Measurements.Tempurature`1.op_Division(Towel.Measurements.Tempurature{`0},`0)
  name: Division(Tempurature<T>, T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Division_Towel_Measurements_Tempurature__0___0_
  commentId: M:Towel.Measurements.Tempurature`1.op_Division(Towel.Measurements.Tempurature{`0},`0)
  name.vb: Division(Tempurature(Of T), T)
  fullName: Towel.Measurements.Tempurature<T>.Division(Towel.Measurements.Tempurature<T>, T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Division(Towel.Measurements.Tempurature(Of T), T)
  nameWithType: Tempurature<T>.Division(Tempurature<T>, T)
  nameWithType.vb: Tempurature(Of T).Division(Tempurature(Of T), T)
- uid: Towel.Measurements.Tempurature`1.op_Division(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Division(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Division_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Division(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Division(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Division(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Division(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Division(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Division(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Division_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Division
  fullName.vb: Towel.Measurements.Tempurature(Of T).Division
  nameWithType: Tempurature<T>.Division
  nameWithType.vb: Tempurature(Of T).Division
- uid: Towel.Measurements.Tempurature`1.op_Equality(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Equality(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Equality_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Equality(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Equality(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Equality(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equality(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Equality(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Equality(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Equality_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Equality
  fullName.vb: Towel.Measurements.Tempurature(Of T).Equality
  nameWithType: Tempurature<T>.Equality
  nameWithType.vb: Tempurature(Of T).Equality
- uid: Towel.Measurements.Tempurature`1.op_GreaterThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: GreaterThan(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_GreaterThan_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_GreaterThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThan(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThan(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThan(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThan(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThan(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.GreaterThan
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThan
  nameWithType: Tempurature<T>.GreaterThan
  nameWithType.vb: Tempurature(Of T).GreaterThan
- uid: Towel.Measurements.Tempurature`1.op_GreaterThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: GreaterThanOrEqual(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_GreaterThanOrEqual_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_GreaterThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: GreaterThanOrEqual(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.GreaterThanOrEqual(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThanOrEqual(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.GreaterThanOrEqual(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).GreaterThanOrEqual(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Tempurature(Of T).GreaterThanOrEqual
  nameWithType: Tempurature<T>.GreaterThanOrEqual
  nameWithType.vb: Tempurature(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Tempurature`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits})~Towel.Measurements.Tempurature{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.TempuratureUnits) to Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TempuratureUnits___Towel_Measurements_Tempurature__0_
  commentId: M:Towel.Measurements.Tempurature`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits})~Towel.Measurements.Tempurature{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.TempuratureUnits) to Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits> to Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TempuratureUnits) to Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Implicit((T, MeasurementUnitsSyntaxTypes.TempuratureUnits) to Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Widening((T, MeasurementUnitsSyntaxTypes.TempuratureUnits) to Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Tempurature<T>.Implicit
  fullName.vb: Towel.Measurements.Tempurature(Of T).Widening
  nameWithType: Tempurature<T>.Implicit
  nameWithType.vb: Tempurature(Of T).Widening
- uid: Towel.Measurements.Tempurature`1.op_Inequality(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Inequality(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Inequality_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Inequality(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Inequality(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Inequality(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Inequality(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Inequality(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Inequality(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Inequality
  fullName.vb: Towel.Measurements.Tempurature(Of T).Inequality
  nameWithType: Tempurature<T>.Inequality
  nameWithType.vb: Tempurature(Of T).Inequality
- uid: Towel.Measurements.Tempurature`1.op_LessThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: LessThan(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_LessThan_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_LessThan(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: LessThan(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThan(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThan(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThan(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThan(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.LessThan
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThan
  nameWithType: Tempurature<T>.LessThan
  nameWithType.vb: Tempurature(Of T).LessThan
- uid: Towel.Measurements.Tempurature`1.op_LessThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: LessThanOrEqual(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_LessThanOrEqual_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_LessThanOrEqual(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: LessThanOrEqual(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.LessThanOrEqual(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThanOrEqual(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.LessThanOrEqual(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).LessThanOrEqual(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Tempurature(Of T).LessThanOrEqual
  nameWithType: Tempurature<T>.LessThanOrEqual
  nameWithType.vb: Tempurature(Of T).LessThanOrEqual
- uid: Towel.Measurements.Tempurature`1.op_Multiply(`0,Towel.Measurements.Tempurature{`0})
  name: Multiply(T, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Multiply__0_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Multiply(`0,Towel.Measurements.Tempurature{`0})
  name.vb: Multiply(T, Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Multiply(T, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply(T, Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Multiply(T, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Multiply(T, Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Multiply(Towel.Measurements.Tempurature{`0},`0)
  name: Multiply(Tempurature<T>, T)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Multiply_Towel_Measurements_Tempurature__0___0_
  commentId: M:Towel.Measurements.Tempurature`1.op_Multiply(Towel.Measurements.Tempurature{`0},`0)
  name.vb: Multiply(Tempurature(Of T), T)
  fullName: Towel.Measurements.Tempurature<T>.Multiply(Towel.Measurements.Tempurature<T>, T)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply(Towel.Measurements.Tempurature(Of T), T)
  nameWithType: Tempurature<T>.Multiply(Tempurature<T>, T)
  nameWithType.vb: Tempurature(Of T).Multiply(Tempurature(Of T), T)
- uid: Towel.Measurements.Tempurature`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Multiply
  fullName.vb: Towel.Measurements.Tempurature(Of T).Multiply
  nameWithType: Tempurature<T>.Multiply
  nameWithType.vb: Tempurature(Of T).Multiply
- uid: Towel.Measurements.Tempurature`1.op_Subtraction(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Subtraction(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Subtraction_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.op_Subtraction(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Subtraction(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Subtraction(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Subtraction(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Subtraction(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Subtraction(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Tempurature`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Subtraction
  fullName.vb: Towel.Measurements.Tempurature(Of T).Subtraction
  nameWithType: Tempurature<T>.Subtraction
  nameWithType.vb: Tempurature(Of T).Subtraction
- uid: Towel.Measurements.Tempurature`1.Subtract(Towel.Measurements.Tempurature{`0})
  name: Subtract(Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Subtract_Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Subtract(Towel.Measurements.Tempurature{`0})
  name.vb: Subtract(Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Subtract(Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Subtract(Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Subtract(Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Subtract(Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Subtract(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name: Subtract(Tempurature<T>, Tempurature<T>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Subtract_Towel_Measurements_Tempurature__0__Towel_Measurements_Tempurature__0__
  commentId: M:Towel.Measurements.Tempurature`1.Subtract(Towel.Measurements.Tempurature{`0},Towel.Measurements.Tempurature{`0})
  name.vb: Subtract(Tempurature(Of T), Tempurature(Of T))
  fullName: Towel.Measurements.Tempurature<T>.Subtract(Towel.Measurements.Tempurature<T>, Towel.Measurements.Tempurature<T>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).Subtract(Towel.Measurements.Tempurature(Of T), Towel.Measurements.Tempurature(Of T))
  nameWithType: Tempurature<T>.Subtract(Tempurature<T>, Tempurature<T>)
  nameWithType.vb: Tempurature(Of T).Subtract(Tempurature(Of T), Tempurature(Of T))
- uid: Towel.Measurements.Tempurature`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_Subtract_
  commentId: Overload:Towel.Measurements.Tempurature`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.Subtract
  fullName.vb: Towel.Measurements.Tempurature(Of T).Subtract
  nameWithType: Tempurature<T>.Subtract
  nameWithType.vb: Tempurature(Of T).Subtract
- uid: Towel.Measurements.Tempurature`1.TempuratureUnits1
  name: TempuratureUnits1
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_TempuratureUnits1
  commentId: P:Towel.Measurements.Tempurature`1.TempuratureUnits1
  fullName: Towel.Measurements.Tempurature<T>.TempuratureUnits1
  fullName.vb: Towel.Measurements.Tempurature(Of T).TempuratureUnits1
  nameWithType: Tempurature<T>.TempuratureUnits1
  nameWithType.vb: Tempurature(Of T).TempuratureUnits1
- uid: Towel.Measurements.Tempurature`1.TempuratureUnits1*
  name: TempuratureUnits1
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_TempuratureUnits1_
  commentId: Overload:Towel.Measurements.Tempurature`1.TempuratureUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.TempuratureUnits1
  fullName.vb: Towel.Measurements.Tempurature(Of T).TempuratureUnits1
  nameWithType: Tempurature<T>.TempuratureUnits1
  nameWithType.vb: Tempurature(Of T).TempuratureUnits1
- uid: Towel.Measurements.Tempurature`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_ToString
  commentId: M:Towel.Measurements.Tempurature`1.ToString
  fullName: Towel.Measurements.Tempurature<T>.ToString()
  fullName.vb: Towel.Measurements.Tempurature(Of T).ToString()
  nameWithType: Tempurature<T>.ToString()
  nameWithType.vb: Tempurature(Of T).ToString()
- uid: Towel.Measurements.Tempurature`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_ToString_
  commentId: Overload:Towel.Measurements.Tempurature`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.ToString
  fullName.vb: Towel.Measurements.Tempurature(Of T).ToString
  nameWithType: Tempurature<T>.ToString
  nameWithType.vb: Tempurature(Of T).ToString
- uid: Towel.Measurements.Tempurature`1.TryParse(System.String,Towel.Measurements.Tempurature{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Tempurature<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_TryParse_System_String_Towel_Measurements_Tempurature__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Tempurature`1.TryParse(System.String,Towel.Measurements.Tempurature{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Tempurature(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Tempurature<T>.TryParse(System.String, out Towel.Measurements.Tempurature<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Tempurature(Of T).TryParse(System.String, ByRef Towel.Measurements.Tempurature(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Tempurature<T>.TryParse(String, out Tempurature<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Tempurature(Of T).TryParse(String, ByRef Tempurature(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Tempurature`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Tempurature-1.html#Towel_Measurements_Tempurature_1_TryParse_
  commentId: Overload:Towel.Measurements.Tempurature`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Tempurature<T>.TryParse
  fullName.vb: Towel.Measurements.Tempurature(Of T).TryParse
  nameWithType: Tempurature<T>.TryParse
  nameWithType.vb: Tempurature(Of T).TryParse
- uid: Towel.Measurements.Time
  name: Time
  href: api/Towel.Measurements.Time.html
  commentId: T:Towel.Measurements.Time
  fullName: Towel.Measurements.Time
  nameWithType: Time
- uid: Towel.Measurements.Time.Units
  name: Time.Units
  href: api/Towel.Measurements.Time.Units.html
  commentId: T:Towel.Measurements.Time.Units
  fullName: Towel.Measurements.Time.Units
  nameWithType: Time.Units
- uid: Towel.Measurements.Time.Units.Days
  name: Days
  href: api/Towel.Measurements.Time.Units.html#Towel_Measurements_Time_Units_Days
  commentId: F:Towel.Measurements.Time.Units.Days
  fullName: Towel.Measurements.Time.Units.Days
  nameWithType: Time.Units.Days
- uid: Towel.Measurements.Time.Units.Hours
  name: Hours
  href: api/Towel.Measurements.Time.Units.html#Towel_Measurements_Time_Units_Hours
  commentId: F:Towel.Measurements.Time.Units.Hours
  fullName: Towel.Measurements.Time.Units.Hours
  nameWithType: Time.Units.Hours
- uid: Towel.Measurements.Time.Units.Milliseconds
  name: Milliseconds
  href: api/Towel.Measurements.Time.Units.html#Towel_Measurements_Time_Units_Milliseconds
  commentId: F:Towel.Measurements.Time.Units.Milliseconds
  fullName: Towel.Measurements.Time.Units.Milliseconds
  nameWithType: Time.Units.Milliseconds
- uid: Towel.Measurements.Time.Units.Minutes
  name: Minutes
  href: api/Towel.Measurements.Time.Units.html#Towel_Measurements_Time_Units_Minutes
  commentId: F:Towel.Measurements.Time.Units.Minutes
  fullName: Towel.Measurements.Time.Units.Minutes
  nameWithType: Time.Units.Minutes
- uid: Towel.Measurements.Time.Units.Seconds
  name: Seconds
  href: api/Towel.Measurements.Time.Units.html#Towel_Measurements_Time_Units_Seconds
  commentId: F:Towel.Measurements.Time.Units.Seconds
  fullName: Towel.Measurements.Time.Units.Seconds
  nameWithType: Time.Units.Seconds
- uid: Towel.Measurements.Time`1
  name: Time<T>
  href: api/Towel.Measurements.Time-1.html
  commentId: T:Towel.Measurements.Time`1
  name.vb: Time(Of T)
  fullName: Towel.Measurements.Time<T>
  fullName.vb: Towel.Measurements.Time(Of T)
  nameWithType: Time<T>
  nameWithType.vb: Time(Of T)
- uid: Towel.Measurements.Time`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Time(T, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.Time`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.Time<T>.Time(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName.vb: Towel.Measurements.Time(Of T).Time(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: Time<T>.Time(T, MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType.vb: Time(Of T).Time(T, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.Time`1.#ctor(`0,Towel.Measurements.Time.Units)
  name: Time(T, Time.Units)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1__ctor__0_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Time`1.#ctor(`0,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Time<T>.Time(T, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Time(Of T).Time(T, Towel.Measurements.Time.Units)
  nameWithType: Time<T>.Time(T, Time.Units)
  nameWithType.vb: Time(Of T).Time(T, Time.Units)
- uid: Towel.Measurements.Time`1.#ctor*
  name: Time
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1__ctor_
  commentId: Overload:Towel.Measurements.Time`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Time
  fullName.vb: Towel.Measurements.Time(Of T).Time
  nameWithType: Time<T>.Time
  nameWithType.vb: Time(Of T).Time
- uid: Towel.Measurements.Time`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Add__0_
  commentId: M:Towel.Measurements.Time`1.Add(`0)
  fullName: Towel.Measurements.Time<T>.Add(T)
  fullName.vb: Towel.Measurements.Time(Of T).Add(T)
  nameWithType: Time<T>.Add(T)
  nameWithType.vb: Time(Of T).Add(T)
- uid: Towel.Measurements.Time`1.Add(Towel.Measurements.Time{`0})
  name: Add(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Add_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Add(Towel.Measurements.Time{`0})
  name.vb: Add(Time(Of T))
  fullName: Towel.Measurements.Time<T>.Add(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Add(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Add(Time<T>)
  nameWithType.vb: Time(Of T).Add(Time(Of T))
- uid: Towel.Measurements.Time`1.Add(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Add(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Add_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Add(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Add(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Add(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Add(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Add(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Add(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.Add*
  name: Add
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Add_
  commentId: Overload:Towel.Measurements.Time`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Add
  fullName.vb: Towel.Measurements.Time(Of T).Add
  nameWithType: Time<T>.Add
  nameWithType.vb: Time(Of T).Add
- uid: Towel.Measurements.Time`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: M:Towel.Measurements.Time`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.Time<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName.vb: Towel.Measurements.Time(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: Time<T>.Convert(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType.vb: Time(Of T).Convert(T, MeasurementUnitsSyntaxTypes.TimeUnits, MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.Time`1.Convert(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Time.Units, Time.Units)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Convert__0_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.Time`1.Convert(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.Time<T>.Convert(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.Time(Of T).Convert(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: Time<T>.Convert(T, Time.Units, Time.Units)
  nameWithType.vb: Time(Of T).Convert(T, Time.Units, Time.Units)
- uid: Towel.Measurements.Time`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Convert_
  commentId: Overload:Towel.Measurements.Time`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Convert
  fullName.vb: Towel.Measurements.Time(Of T).Convert
  nameWithType: Time<T>.Convert
  nameWithType.vb: Time(Of T).Convert
- uid: Towel.Measurements.Time`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Divide__0_
  commentId: M:Towel.Measurements.Time`1.Divide(`0)
  fullName: Towel.Measurements.Time<T>.Divide(T)
  fullName.vb: Towel.Measurements.Time(Of T).Divide(T)
  nameWithType: Time<T>.Divide(T)
  nameWithType.vb: Time(Of T).Divide(T)
- uid: Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Time<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Divide(Time<T>)
  nameWithType.vb: Time(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0},`0)
  name: Divide(Time<T>, T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Divide_Towel_Measurements_Time__0___0_
  commentId: M:Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0},`0)
  name.vb: Divide(Time(Of T), T)
  fullName: Towel.Measurements.Time<T>.Divide(Towel.Measurements.Time<T>, T)
  fullName.vb: Towel.Measurements.Time(Of T).Divide(Towel.Measurements.Time(Of T), T)
  nameWithType: Time<T>.Divide(Time<T>, T)
  nameWithType.vb: Time(Of T).Divide(Time(Of T), T)
- uid: Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Divide(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Divide_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Divide(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Divide(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Divide(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Divide(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Divide(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Divide_
  commentId: Overload:Towel.Measurements.Time`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Divide
  fullName.vb: Towel.Measurements.Time(Of T).Divide
  nameWithType: Time<T>.Divide
  nameWithType.vb: Time(Of T).Divide
- uid: Towel.Measurements.Time`1.Equal(Towel.Measurements.Time{`0})
  name: Equal(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Equal_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Equal(Towel.Measurements.Time{`0})
  name.vb: Equal(Time(Of T))
  fullName: Towel.Measurements.Time<T>.Equal(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Equal(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Equal(Time<T>)
  nameWithType.vb: Time(Of T).Equal(Time(Of T))
- uid: Towel.Measurements.Time`1.Equal(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Equal(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Equal_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Equal(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Equal(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Equal(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Equal(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Equal(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Equal(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Equal_
  commentId: Overload:Towel.Measurements.Time`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Equal
  fullName.vb: Towel.Measurements.Time(Of T).Equal
  nameWithType: Time<T>.Equal
  nameWithType.vb: Time(Of T).Equal
- uid: Towel.Measurements.Time`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Time`1.Equals(System.Object)
  fullName: Towel.Measurements.Time<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Time(Of T).Equals(System.Object)
  nameWithType: Time<T>.Equals(Object)
  nameWithType.vb: Time(Of T).Equals(Object)
- uid: Towel.Measurements.Time`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Equals_
  commentId: Overload:Towel.Measurements.Time`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Equals
  fullName.vb: Towel.Measurements.Time(Of T).Equals
  nameWithType: Time<T>.Equals
  nameWithType.vb: Time(Of T).Equals
- uid: Towel.Measurements.Time`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GetHashCode
  commentId: M:Towel.Measurements.Time`1.GetHashCode
  fullName: Towel.Measurements.Time<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Time(Of T).GetHashCode()
  nameWithType: Time<T>.GetHashCode()
  nameWithType.vb: Time(Of T).GetHashCode()
- uid: Towel.Measurements.Time`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Time`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.GetHashCode
  fullName.vb: Towel.Measurements.Time(Of T).GetHashCode
  nameWithType: Time<T>.GetHashCode
  nameWithType.vb: Time(Of T).GetHashCode
- uid: Towel.Measurements.Time`1.GreaterThan(Towel.Measurements.Time{`0})
  name: GreaterThan(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThan_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.GreaterThan(Towel.Measurements.Time{`0})
  name.vb: GreaterThan(Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThan(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThan(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThan(Time<T>)
  nameWithType.vb: Time(Of T).GreaterThan(Time(Of T))
- uid: Towel.Measurements.Time`1.GreaterThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: GreaterThan(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThan_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.GreaterThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: GreaterThan(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThan(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThan(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThan(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).GreaterThan(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Time`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.GreaterThan
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThan
  nameWithType: Time<T>.GreaterThan
  nameWithType.vb: Time(Of T).GreaterThan
- uid: Towel.Measurements.Time`1.GreaterThanOrEqual(Towel.Measurements.Time{`0})
  name: GreaterThanOrEqual(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThanOrEqual_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.GreaterThanOrEqual(Towel.Measurements.Time{`0})
  name.vb: GreaterThanOrEqual(Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThanOrEqual(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThanOrEqual(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThanOrEqual(Time<T>)
  nameWithType.vb: Time(Of T).GreaterThanOrEqual(Time(Of T))
- uid: Towel.Measurements.Time`1.GreaterThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: GreaterThanOrEqual(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThanOrEqual_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.GreaterThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: GreaterThanOrEqual(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThanOrEqual(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThanOrEqual(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThanOrEqual(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).GreaterThanOrEqual(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Time`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThanOrEqual
  nameWithType: Time<T>.GreaterThanOrEqual
  nameWithType.vb: Time(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Time`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name: Item[MeasurementUnitsSyntaxTypes.TimeUnits]
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits_
  commentId: P:Towel.Measurements.Time`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.TimeUnits)
  fullName: Towel.Measurements.Time<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits]
  fullName.vb: Towel.Measurements.Time(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits)
  nameWithType: Time<T>.Item[MeasurementUnitsSyntaxTypes.TimeUnits]
  nameWithType.vb: Time(Of T).Item(MeasurementUnitsSyntaxTypes.TimeUnits)
- uid: Towel.Measurements.Time`1.Item(Towel.Measurements.Time.Units)
  name: Item[Time.Units]
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Item_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.Time`1.Item(Towel.Measurements.Time.Units)
  name.vb: Item(Time.Units)
  fullName: Towel.Measurements.Time<T>.Item[Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.Time(Of T).Item(Towel.Measurements.Time.Units)
  nameWithType: Time<T>.Item[Time.Units]
  nameWithType.vb: Time(Of T).Item(Time.Units)
- uid: Towel.Measurements.Time`1.Item*
  name: Item
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Item_
  commentId: Overload:Towel.Measurements.Time`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Item
  fullName.vb: Towel.Measurements.Time(Of T).Item
  nameWithType: Time<T>.Item
  nameWithType.vb: Time(Of T).Item
- uid: Towel.Measurements.Time`1.LessThan(Towel.Measurements.Time{`0})
  name: LessThan(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThan_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.LessThan(Towel.Measurements.Time{`0})
  name.vb: LessThan(Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThan(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThan(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThan(Time<T>)
  nameWithType.vb: Time(Of T).LessThan(Time(Of T))
- uid: Towel.Measurements.Time`1.LessThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: LessThan(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThan_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.LessThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: LessThan(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThan(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThan(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThan(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).LessThan(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThan_
  commentId: Overload:Towel.Measurements.Time`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.LessThan
  fullName.vb: Towel.Measurements.Time(Of T).LessThan
  nameWithType: Time<T>.LessThan
  nameWithType.vb: Time(Of T).LessThan
- uid: Towel.Measurements.Time`1.LessThanOrEqual(Towel.Measurements.Time{`0})
  name: LessThanOrEqual(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThanOrEqual_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.LessThanOrEqual(Towel.Measurements.Time{`0})
  name.vb: LessThanOrEqual(Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThanOrEqual(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThanOrEqual(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThanOrEqual(Time<T>)
  nameWithType.vb: Time(Of T).LessThanOrEqual(Time(Of T))
- uid: Towel.Measurements.Time`1.LessThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: LessThanOrEqual(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThanOrEqual_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.LessThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: LessThanOrEqual(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThanOrEqual(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThanOrEqual(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThanOrEqual(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).LessThanOrEqual(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Time`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Time(Of T).LessThanOrEqual
  nameWithType: Time<T>.LessThanOrEqual
  nameWithType.vb: Time(Of T).LessThanOrEqual
- uid: Towel.Measurements.Time`1.Multiply(`0,Towel.Measurements.Time{`0})
  name: Multiply(T, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply__0_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(`0,Towel.Measurements.Time{`0})
  name.vb: Multiply(T, Time(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(T, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(T, Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Multiply(T, Time<T>)
  nameWithType.vb: Time(Of T).Multiply(T, Time(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: Time<T>.Multiply(Acceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(AngularAcceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(AngularAcceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Time<T>.Multiply(AngularAcceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(AngularAcceleration(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.AngularSpeed{`0})
  name: Multiply(AngularSpeed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.AngularSpeed{`0})
  name.vb: Multiply(AngularSpeed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Time<T>.Multiply(AngularSpeed<T>)
  nameWithType.vb: Time(Of T).Multiply(AngularSpeed(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.ElectricCurrent{`0})
  name: Multiply(ElectricCurrent<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.ElectricCurrent{`0})
  name.vb: Multiply(ElectricCurrent(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: Time<T>.Multiply(ElectricCurrent<T>)
  nameWithType.vb: Time(Of T).Multiply(ElectricCurrent(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Force{`0})
  name: Multiply(Force<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Force{`0})
  name.vb: Multiply(Force(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Force(Of T))
  nameWithType: Time<T>.Multiply(Force<T>)
  nameWithType.vb: Time(Of T).Multiply(Force(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(LinearMassFlow<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(LinearMassFlow(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Time<T>.Multiply(LinearMassFlow<T>)
  nameWithType.vb: Time(Of T).Multiply(LinearMassFlow(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.MassRate{`0})
  name: Multiply(MassRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.MassRate{`0})
  name.vb: Multiply(MassRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.MassRate(Of T))
  nameWithType: Time<T>.Multiply(MassRate<T>)
  nameWithType.vb: Time(Of T).Multiply(MassRate(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Power{`0})
  name: Multiply(Power<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Power{`0})
  name.vb: Multiply(Power(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Power(Of T))
  nameWithType: Time<T>.Multiply(Power<T>)
  nameWithType.vb: Time(Of T).Multiply(Power(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Speed{`0})
  name: Multiply(Speed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Speed{`0})
  name.vb: Multiply(Speed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Speed(Of T))
  nameWithType: Time<T>.Multiply(Speed<T>)
  nameWithType.vb: Time(Of T).Multiply(Speed(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Multiply(Time<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},`0)
  name: Multiply(Time<T>, T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0___0_
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},`0)
  name.vb: Multiply(Time(Of T), T)
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, T)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), T)
  nameWithType: Time<T>.Multiply(Time<T>, T)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), T)
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(Time<T>, Acceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Time(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Acceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(Time<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(Time(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, AngularAcceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularSpeed{`0})
  name: Multiply(Time<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Multiply(Time(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, AngularSpeed<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Multiply(Time<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Multiply(Time(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, ElectricCurrent<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Force{`0})
  name: Multiply(Time<T>, Force<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Time(Of T), Force(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Force<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Force(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Time<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Time(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, LinearMassFlow<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Time<T>, MassRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Time(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, MassRate<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), MassRate(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Power{`0})
  name: Multiply(Time<T>, Power<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Power{`0})
  name.vb: Multiply(Time(Of T), Power(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Power<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Power(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Time<T>, Speed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Time(Of T), Speed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Speed<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Speed(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Multiply(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Time<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_Time__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.Time{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Time(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, VolumeRate<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Time`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name: Multiply(VolumeRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Time`1.Multiply(Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(VolumeRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.VolumeRate(Of T))
  nameWithType: Time<T>.Multiply(VolumeRate<T>)
  nameWithType.vb: Time(Of T).Multiply(VolumeRate(Of T))
- uid: Towel.Measurements.Time`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Multiply_
  commentId: Overload:Towel.Measurements.Time`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Multiply
  fullName.vb: Towel.Measurements.Time(Of T).Multiply
  nameWithType: Time<T>.Multiply
  nameWithType.vb: Time(Of T).Multiply
- uid: Towel.Measurements.Time`1.NotEqual(Towel.Measurements.Time{`0})
  name: NotEqual(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_NotEqual_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.NotEqual(Towel.Measurements.Time{`0})
  name.vb: NotEqual(Time(Of T))
  fullName: Towel.Measurements.Time<T>.NotEqual(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).NotEqual(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.NotEqual(Time<T>)
  nameWithType.vb: Time(Of T).NotEqual(Time(Of T))
- uid: Towel.Measurements.Time`1.NotEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: NotEqual(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_NotEqual_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.NotEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: NotEqual(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.NotEqual(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).NotEqual(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.NotEqual(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).NotEqual(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_NotEqual_
  commentId: Overload:Towel.Measurements.Time`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.NotEqual
  fullName.vb: Towel.Measurements.Time(Of T).NotEqual
  nameWithType: Time<T>.NotEqual
  nameWithType.vb: Time(Of T).NotEqual
- uid: Towel.Measurements.Time`1.op_Addition(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Addition(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Addition_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Addition(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Addition(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Addition(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Addition(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Addition(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Addition(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Addition_
  commentId: Overload:Towel.Measurements.Time`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Addition
  fullName.vb: Towel.Measurements.Time(Of T).Addition
  nameWithType: Time<T>.Addition
  nameWithType.vb: Time(Of T).Addition
- uid: Towel.Measurements.Time`1.op_Division(Towel.Measurements.Time{`0},`0)
  name: Division(Time<T>, T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Division_Towel_Measurements_Time__0___0_
  commentId: M:Towel.Measurements.Time`1.op_Division(Towel.Measurements.Time{`0},`0)
  name.vb: Division(Time(Of T), T)
  fullName: Towel.Measurements.Time<T>.Division(Towel.Measurements.Time<T>, T)
  fullName.vb: Towel.Measurements.Time(Of T).Division(Towel.Measurements.Time(Of T), T)
  nameWithType: Time<T>.Division(Time<T>, T)
  nameWithType.vb: Time(Of T).Division(Time(Of T), T)
- uid: Towel.Measurements.Time`1.op_Division(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Division(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Division_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Division(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Division(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Division(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Division(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Division(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Division_
  commentId: Overload:Towel.Measurements.Time`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Division
  fullName.vb: Towel.Measurements.Time(Of T).Division
  nameWithType: Time<T>.Division
  nameWithType.vb: Time(Of T).Division
- uid: Towel.Measurements.Time`1.op_Equality(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Equality(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Equality_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Equality(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Equality(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Equality(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Equality(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Equality(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Equality(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Equality_
  commentId: Overload:Towel.Measurements.Time`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Equality
  fullName.vb: Towel.Measurements.Time(Of T).Equality
  nameWithType: Time<T>.Equality
  nameWithType.vb: Time(Of T).Equality
- uid: Towel.Measurements.Time`1.op_GreaterThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: GreaterThan(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_GreaterThan_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_GreaterThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: GreaterThan(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThan(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThan(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThan(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).GreaterThan(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Time`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.GreaterThan
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThan
  nameWithType: Time<T>.GreaterThan
  nameWithType.vb: Time(Of T).GreaterThan
- uid: Towel.Measurements.Time`1.op_GreaterThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: GreaterThanOrEqual(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_GreaterThanOrEqual_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_GreaterThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: GreaterThanOrEqual(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.GreaterThanOrEqual(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThanOrEqual(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.GreaterThanOrEqual(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).GreaterThanOrEqual(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Time`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Time(Of T).GreaterThanOrEqual
  nameWithType: Time<T>.GreaterThanOrEqual
  nameWithType.vb: Time(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Time`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits})~Towel.Measurements.Time{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.TimeUnits) to Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeUnits___Towel_Measurements_Time__0_
  commentId: M:Towel.Measurements.Time`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits})~Towel.Measurements.Time{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.TimeUnits) to Time(Of T))
  fullName: Towel.Measurements.Time<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits> to Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeUnits) to Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Implicit((T, MeasurementUnitsSyntaxTypes.TimeUnits) to Time<T>)
  nameWithType.vb: Time(Of T).Widening((T, MeasurementUnitsSyntaxTypes.TimeUnits) to Time(Of T))
- uid: Towel.Measurements.Time`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Time`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Time<T>.Implicit
  fullName.vb: Towel.Measurements.Time(Of T).Widening
  nameWithType: Time<T>.Implicit
  nameWithType.vb: Time(Of T).Widening
- uid: Towel.Measurements.Time`1.op_Inequality(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Inequality(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Inequality_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Inequality(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Inequality(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Inequality(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Inequality(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Inequality(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Inequality(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Time`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Inequality
  fullName.vb: Towel.Measurements.Time(Of T).Inequality
  nameWithType: Time<T>.Inequality
  nameWithType.vb: Time(Of T).Inequality
- uid: Towel.Measurements.Time`1.op_LessThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: LessThan(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_LessThan_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_LessThan(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: LessThan(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThan(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThan(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThan(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).LessThan(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Time`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.LessThan
  fullName.vb: Towel.Measurements.Time(Of T).LessThan
  nameWithType: Time<T>.LessThan
  nameWithType.vb: Time(Of T).LessThan
- uid: Towel.Measurements.Time`1.op_LessThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: LessThanOrEqual(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_LessThanOrEqual_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_LessThanOrEqual(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: LessThanOrEqual(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.LessThanOrEqual(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).LessThanOrEqual(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.LessThanOrEqual(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).LessThanOrEqual(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Time`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Time(Of T).LessThanOrEqual
  nameWithType: Time<T>.LessThanOrEqual
  nameWithType.vb: Time(Of T).LessThanOrEqual
- uid: Towel.Measurements.Time`1.op_Multiply(`0,Towel.Measurements.Time{`0})
  name: Multiply(T, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply__0_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(`0,Towel.Measurements.Time{`0})
  name.vb: Multiply(T, Time(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(T, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(T, Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Multiply(T, Time<T>)
  nameWithType.vb: Time(Of T).Multiply(T, Time(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},`0)
  name: Multiply(Time<T>, T)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0___0_
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},`0)
  name.vb: Multiply(Time(Of T), T)
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, T)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), T)
  nameWithType: Time<T>.Multiply(Time<T>, T)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), T)
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(Time<T>, Acceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Time(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Acceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Acceleration(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(Time<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(Time(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, AngularAcceleration<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularSpeed{`0})
  name: Multiply(Time<T>, AngularSpeed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_AngularSpeed__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.AngularSpeed{`0})
  name.vb: Multiply(Time(Of T), AngularSpeed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.AngularSpeed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.AngularSpeed(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, AngularSpeed<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), AngularSpeed(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.ElectricCurrent{`0})
  name: Multiply(Time<T>, ElectricCurrent<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_ElectricCurrent__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.ElectricCurrent{`0})
  name.vb: Multiply(Time(Of T), ElectricCurrent(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.ElectricCurrent<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.ElectricCurrent(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, ElectricCurrent<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), ElectricCurrent(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Force{`0})
  name: Multiply(Time<T>, Force<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(Time(Of T), Force(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Force(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Force<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Force(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.LinearMassFlow{`0})
  name: Multiply(Time<T>, LinearMassFlow<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_LinearMassFlow__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.LinearMassFlow{`0})
  name.vb: Multiply(Time(Of T), LinearMassFlow(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.LinearMassFlow<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.LinearMassFlow(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, LinearMassFlow<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), LinearMassFlow(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.MassRate{`0})
  name: Multiply(Time<T>, MassRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_MassRate__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.MassRate{`0})
  name.vb: Multiply(Time(Of T), MassRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.MassRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.MassRate(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, MassRate<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), MassRate(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Power{`0})
  name: Multiply(Time<T>, Power<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Power__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Power{`0})
  name.vb: Multiply(Time(Of T), Power(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Power<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Power(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Power<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Power(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Speed{`0})
  name: Multiply(Time<T>, Speed<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Speed{`0})
  name.vb: Multiply(Time(Of T), Speed(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Speed<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Speed(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Multiply(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.VolumeRate{`0})
  name: Multiply(Time<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_Towel_Measurements_Time__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Time`1.op_Multiply(Towel.Measurements.Time{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(Time(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Time<T>.Multiply(Towel.Measurements.Time<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Multiply(Towel.Measurements.Time(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Time<T>.Multiply(Time<T>, VolumeRate<T>)
  nameWithType.vb: Time(Of T).Multiply(Time(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Time`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Time`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Multiply
  fullName.vb: Towel.Measurements.Time(Of T).Multiply
  nameWithType: Time<T>.Multiply
  nameWithType.vb: Time(Of T).Multiply
- uid: Towel.Measurements.Time`1.op_Subtraction(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Subtraction(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Subtraction_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.op_Subtraction(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Subtraction(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Subtraction(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Subtraction(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Subtraction(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Subtraction(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Time`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Subtraction
  fullName.vb: Towel.Measurements.Time(Of T).Subtraction
  nameWithType: Time<T>.Subtraction
  nameWithType.vb: Time(Of T).Subtraction
- uid: Towel.Measurements.Time`1.Subtract(Towel.Measurements.Time{`0})
  name: Subtract(Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Subtract_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Subtract(Towel.Measurements.Time{`0})
  name.vb: Subtract(Time(Of T))
  fullName: Towel.Measurements.Time<T>.Subtract(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Subtract(Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Subtract(Time<T>)
  nameWithType.vb: Time(Of T).Subtract(Time(Of T))
- uid: Towel.Measurements.Time`1.Subtract(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name: Subtract(Time<T>, Time<T>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Subtract_Towel_Measurements_Time__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Time`1.Subtract(Towel.Measurements.Time{`0},Towel.Measurements.Time{`0})
  name.vb: Subtract(Time(Of T), Time(Of T))
  fullName: Towel.Measurements.Time<T>.Subtract(Towel.Measurements.Time<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Time(Of T).Subtract(Towel.Measurements.Time(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Time<T>.Subtract(Time<T>, Time<T>)
  nameWithType.vb: Time(Of T).Subtract(Time(Of T), Time(Of T))
- uid: Towel.Measurements.Time`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_Subtract_
  commentId: Overload:Towel.Measurements.Time`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.Subtract
  fullName.vb: Towel.Measurements.Time(Of T).Subtract
  nameWithType: Time<T>.Subtract
  nameWithType.vb: Time(Of T).Subtract
- uid: Towel.Measurements.Time`1.TimeUnits1
  name: TimeUnits1
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_TimeUnits1
  commentId: P:Towel.Measurements.Time`1.TimeUnits1
  fullName: Towel.Measurements.Time<T>.TimeUnits1
  fullName.vb: Towel.Measurements.Time(Of T).TimeUnits1
  nameWithType: Time<T>.TimeUnits1
  nameWithType.vb: Time(Of T).TimeUnits1
- uid: Towel.Measurements.Time`1.TimeUnits1*
  name: TimeUnits1
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_TimeUnits1_
  commentId: Overload:Towel.Measurements.Time`1.TimeUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.TimeUnits1
  fullName.vb: Towel.Measurements.Time(Of T).TimeUnits1
  nameWithType: Time<T>.TimeUnits1
  nameWithType.vb: Time(Of T).TimeUnits1
- uid: Towel.Measurements.Time`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_ToString
  commentId: M:Towel.Measurements.Time`1.ToString
  fullName: Towel.Measurements.Time<T>.ToString()
  fullName.vb: Towel.Measurements.Time(Of T).ToString()
  nameWithType: Time<T>.ToString()
  nameWithType.vb: Time(Of T).ToString()
- uid: Towel.Measurements.Time`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_ToString_
  commentId: Overload:Towel.Measurements.Time`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.ToString
  fullName.vb: Towel.Measurements.Time(Of T).ToString
  nameWithType: Time<T>.ToString
  nameWithType.vb: Time(Of T).ToString
- uid: Towel.Measurements.Time`1.TryParse(System.String,Towel.Measurements.Time{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Time<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_TryParse_System_String_Towel_Measurements_Time__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Time`1.TryParse(System.String,Towel.Measurements.Time{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Time(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Time<T>.TryParse(System.String, out Towel.Measurements.Time<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Time(Of T).TryParse(System.String, ByRef Towel.Measurements.Time(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Time<T>.TryParse(String, out Time<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Time(Of T).TryParse(String, ByRef Time(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Time`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Time-1.html#Towel_Measurements_Time_1_TryParse_
  commentId: Overload:Towel.Measurements.Time`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Time<T>.TryParse
  fullName.vb: Towel.Measurements.Time(Of T).TryParse
  nameWithType: Time<T>.TryParse
  nameWithType.vb: Time(Of T).TryParse
- uid: Towel.Measurements.TimeArea`1
  name: TimeArea<T>
  href: api/Towel.Measurements.TimeArea-1.html
  commentId: T:Towel.Measurements.TimeArea`1
  name.vb: TimeArea(Of T)
  fullName: Towel.Measurements.TimeArea<T>
  fullName.vb: Towel.Measurements.TimeArea(Of T)
  nameWithType: TimeArea<T>
  nameWithType.vb: TimeArea(Of T)
- uid: Towel.Measurements.TimeArea`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: TimeArea(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.TimeArea`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.TimeArea<T>.TimeArea(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeArea(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: TimeArea<T>.TimeArea(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType.vb: TimeArea(Of T).TimeArea(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.TimeArea`1.#ctor(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: TimeArea(T, Time.Units, Time.Units)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1__ctor__0_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.TimeArea`1.#ctor(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.TimeArea<T>.TimeArea(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeArea(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: TimeArea<T>.TimeArea(T, Time.Units, Time.Units)
  nameWithType.vb: TimeArea(Of T).TimeArea(T, Time.Units, Time.Units)
- uid: Towel.Measurements.TimeArea`1.#ctor*
  name: TimeArea
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1__ctor_
  commentId: Overload:Towel.Measurements.TimeArea`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.TimeArea
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeArea
  nameWithType: TimeArea<T>.TimeArea
  nameWithType.vb: TimeArea(Of T).TimeArea
- uid: Towel.Measurements.TimeArea`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Add__0_
  commentId: M:Towel.Measurements.TimeArea`1.Add(`0)
  fullName: Towel.Measurements.TimeArea<T>.Add(T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Add(T)
  nameWithType: TimeArea<T>.Add(T)
  nameWithType.vb: TimeArea(Of T).Add(T)
- uid: Towel.Measurements.TimeArea`1.Add(Towel.Measurements.TimeArea{`0})
  name: Add(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Add_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Add(Towel.Measurements.TimeArea{`0})
  name.vb: Add(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Add(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Add(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Add(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Add(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Add(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Add(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Add_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Add(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Add(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Add(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Add(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Add(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Add(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Add*
  name: Add
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Add_
  commentId: Overload:Towel.Measurements.TimeArea`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Add
  fullName.vb: Towel.Measurements.TimeArea(Of T).Add
  nameWithType: TimeArea<T>.Add
  nameWithType.vb: TimeArea(Of T).Add
- uid: Towel.Measurements.TimeArea`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: M:Towel.Measurements.TimeArea`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.TimeArea<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: TimeArea<T>.Convert(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType.vb: TimeArea(Of T).Convert(T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.TimeArea`1.Convert(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Time.Units, Time.Units, Time.Units, Time.Units)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Convert__0_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.TimeArea`1.Convert(`0,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.TimeArea<T>.Convert(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Convert(T, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: TimeArea<T>.Convert(T, Time.Units, Time.Units, Time.Units, Time.Units)
  nameWithType.vb: TimeArea(Of T).Convert(T, Time.Units, Time.Units, Time.Units, Time.Units)
- uid: Towel.Measurements.TimeArea`1.Convert*
  name: Convert
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Convert_
  commentId: Overload:Towel.Measurements.TimeArea`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Convert
  fullName.vb: Towel.Measurements.TimeArea(Of T).Convert
  nameWithType: TimeArea<T>.Convert
  nameWithType.vb: TimeArea(Of T).Convert
- uid: Towel.Measurements.TimeArea`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide__0_
  commentId: M:Towel.Measurements.TimeArea`1.Divide(`0)
  fullName: Towel.Measurements.TimeArea<T>.Divide(T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(T)
  nameWithType: TimeArea<T>.Divide(T)
  nameWithType.vb: TimeArea(Of T).Divide(T)
- uid: Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: TimeArea<T>.Divide(Time<T>)
  nameWithType.vb: TimeArea(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Divide(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Divide(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Divide(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},`0)
  name: Divide(TimeArea<T>, T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_Towel_Measurements_TimeArea__0___0_
  commentId: M:Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},`0)
  name.vb: Divide(TimeArea(Of T), T)
  fullName: Towel.Measurements.TimeArea<T>.Divide(Towel.Measurements.TimeArea<T>, T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(Towel.Measurements.TimeArea(Of T), T)
  nameWithType: TimeArea<T>.Divide(TimeArea<T>, T)
  nameWithType.vb: TimeArea(Of T).Divide(TimeArea(Of T), T)
- uid: Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},Towel.Measurements.Time{`0})
  name: Divide(TimeArea<T>, Time<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_Towel_Measurements_TimeArea__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(TimeArea(Of T), Time(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Divide(Towel.Measurements.TimeArea<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Time(Of T))
  nameWithType: TimeArea<T>.Divide(TimeArea<T>, Time<T>)
  nameWithType.vb: TimeArea(Of T).Divide(TimeArea(Of T), Time(Of T))
- uid: Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Divide(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Divide(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Divide(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Divide(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Divide(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Divide(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Divide*
  name: Divide
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Divide_
  commentId: Overload:Towel.Measurements.TimeArea`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Divide
  fullName.vb: Towel.Measurements.TimeArea(Of T).Divide
  nameWithType: TimeArea<T>.Divide
  nameWithType.vb: TimeArea(Of T).Divide
- uid: Towel.Measurements.TimeArea`1.Equal(Towel.Measurements.TimeArea{`0})
  name: Equal(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Equal_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Equal(Towel.Measurements.TimeArea{`0})
  name.vb: Equal(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Equal(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equal(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Equal(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Equal(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Equal(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Equal(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Equal_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Equal(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Equal(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Equal(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equal(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Equal(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Equal(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Equal*
  name: Equal
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Equal_
  commentId: Overload:Towel.Measurements.TimeArea`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Equal
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equal
  nameWithType: TimeArea<T>.Equal
  nameWithType.vb: TimeArea(Of T).Equal
- uid: Towel.Measurements.TimeArea`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Equals_System_Object_
  commentId: M:Towel.Measurements.TimeArea`1.Equals(System.Object)
  fullName: Towel.Measurements.TimeArea<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equals(System.Object)
  nameWithType: TimeArea<T>.Equals(Object)
  nameWithType.vb: TimeArea(Of T).Equals(Object)
- uid: Towel.Measurements.TimeArea`1.Equals*
  name: Equals
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Equals_
  commentId: Overload:Towel.Measurements.TimeArea`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Equals
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equals
  nameWithType: TimeArea<T>.Equals
  nameWithType.vb: TimeArea(Of T).Equals
- uid: Towel.Measurements.TimeArea`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GetHashCode
  commentId: M:Towel.Measurements.TimeArea`1.GetHashCode
  fullName: Towel.Measurements.TimeArea<T>.GetHashCode()
  fullName.vb: Towel.Measurements.TimeArea(Of T).GetHashCode()
  nameWithType: TimeArea<T>.GetHashCode()
  nameWithType.vb: TimeArea(Of T).GetHashCode()
- uid: Towel.Measurements.TimeArea`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GetHashCode_
  commentId: Overload:Towel.Measurements.TimeArea`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.GetHashCode
  fullName.vb: Towel.Measurements.TimeArea(Of T).GetHashCode
  nameWithType: TimeArea<T>.GetHashCode
  nameWithType.vb: TimeArea(Of T).GetHashCode
- uid: Towel.Measurements.TimeArea`1.GreaterThan(Towel.Measurements.TimeArea{`0})
  name: GreaterThan(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThan_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.GreaterThan(Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThan(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThan(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThan(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThan(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThan(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.GreaterThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: GreaterThan(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThan_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.GreaterThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThan(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThan(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThan(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThan(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThan(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThan_
  commentId: Overload:Towel.Measurements.TimeArea`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.GreaterThan
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThan
  nameWithType: TimeArea<T>.GreaterThan
  nameWithType.vb: TimeArea(Of T).GreaterThan
- uid: Towel.Measurements.TimeArea`1.GreaterThanOrEqual(Towel.Measurements.TimeArea{`0})
  name: GreaterThanOrEqual(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThanOrEqual_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.GreaterThanOrEqual(Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThanOrEqual(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThanOrEqual(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThanOrEqual(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThanOrEqual(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThanOrEqual(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.GreaterThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: GreaterThanOrEqual(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThanOrEqual_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.GreaterThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThanOrEqual(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThanOrEqual(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThanOrEqual(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThanOrEqual(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThanOrEqual(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.TimeArea`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThanOrEqual
  nameWithType: TimeArea<T>.GreaterThanOrEqual
  nameWithType.vb: TimeArea(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.TimeArea`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits]
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits_
  commentId: P:Towel.Measurements.TimeArea`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  fullName: Towel.Measurements.TimeArea<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits]
  fullName.vb: Towel.Measurements.TimeArea(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
  nameWithType: TimeArea<T>.Item[MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits]
  nameWithType.vb: TimeArea(Of T).Item(MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits)
- uid: Towel.Measurements.TimeArea`1.Item(Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name: Item[Time.Units, Time.Units]
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Item_Towel_Measurements_Time_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.TimeArea`1.Item(Towel.Measurements.Time.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Time.Units, Time.Units)
  fullName: Towel.Measurements.TimeArea<T>.Item[Towel.Measurements.Time.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.TimeArea(Of T).Item(Towel.Measurements.Time.Units, Towel.Measurements.Time.Units)
  nameWithType: TimeArea<T>.Item[Time.Units, Time.Units]
  nameWithType.vb: TimeArea(Of T).Item(Time.Units, Time.Units)
- uid: Towel.Measurements.TimeArea`1.Item*
  name: Item
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Item_
  commentId: Overload:Towel.Measurements.TimeArea`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Item
  fullName.vb: Towel.Measurements.TimeArea(Of T).Item
  nameWithType: TimeArea<T>.Item
  nameWithType.vb: TimeArea(Of T).Item
- uid: Towel.Measurements.TimeArea`1.LessThan(Towel.Measurements.TimeArea{`0})
  name: LessThan(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThan_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.LessThan(Towel.Measurements.TimeArea{`0})
  name.vb: LessThan(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThan(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThan(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThan(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThan(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.LessThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: LessThan(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThan_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.LessThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: LessThan(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThan(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThan(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThan(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThan(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThan_
  commentId: Overload:Towel.Measurements.TimeArea`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.LessThan
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThan
  nameWithType: TimeArea<T>.LessThan
  nameWithType.vb: TimeArea(Of T).LessThan
- uid: Towel.Measurements.TimeArea`1.LessThanOrEqual(Towel.Measurements.TimeArea{`0})
  name: LessThanOrEqual(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThanOrEqual_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.LessThanOrEqual(Towel.Measurements.TimeArea{`0})
  name.vb: LessThanOrEqual(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThanOrEqual(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThanOrEqual(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThanOrEqual(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThanOrEqual(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.LessThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: LessThanOrEqual(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThanOrEqual_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.LessThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: LessThanOrEqual(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThanOrEqual(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThanOrEqual(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThanOrEqual(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThanOrEqual(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.TimeArea`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThanOrEqual
  nameWithType: TimeArea<T>.LessThanOrEqual
  nameWithType.vb: TimeArea(Of T).LessThanOrEqual
- uid: Towel.Measurements.TimeArea`1.Multiply(`0,Towel.Measurements.TimeArea{`0})
  name: Multiply(T, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply__0_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(`0,Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(T, TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(T, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(T, Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Multiply(T, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(T, TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Acceleration{`0})
  name: Multiply(Acceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(Acceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.Acceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(Acceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(Acceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(AngularAcceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(AngularAcceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(AngularAcceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(AngularAcceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Force{`0})
  name: Multiply(Force<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Force{`0})
  name.vb: Multiply(Force(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.Force(Of T))
  nameWithType: TimeArea<T>.Multiply(Force<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(Force(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Pressure{`0})
  name: Multiply(Pressure<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Pressure(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.Pressure(Of T))
  nameWithType: TimeArea<T>.Multiply(Pressure<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(Pressure(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},`0)
  name: Multiply(TimeArea<T>, T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_TimeArea__0___0_
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},`0)
  name.vb: Multiply(TimeArea(Of T), T)
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), T)
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, T)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), T)
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(TimeArea<T>, Acceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(TimeArea(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Acceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Acceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(TimeArea<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(TimeArea(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, AngularAcceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Force{`0})
  name: Multiply(TimeArea<T>, Force<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(TimeArea(Of T), Force(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Force(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Force<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Force(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(TimeArea<T>, Pressure<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.TimeArea`1.Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(TimeArea(Of T), Pressure(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Pressure<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Pressure(Of T))
- uid: Towel.Measurements.TimeArea`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Multiply_
  commentId: Overload:Towel.Measurements.TimeArea`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Multiply
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply
  nameWithType: TimeArea<T>.Multiply
  nameWithType.vb: TimeArea(Of T).Multiply
- uid: Towel.Measurements.TimeArea`1.NotEqual(Towel.Measurements.TimeArea{`0})
  name: NotEqual(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_NotEqual_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.NotEqual(Towel.Measurements.TimeArea{`0})
  name.vb: NotEqual(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.NotEqual(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).NotEqual(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.NotEqual(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).NotEqual(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.NotEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: NotEqual(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_NotEqual_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.NotEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: NotEqual(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.NotEqual(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).NotEqual(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.NotEqual(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).NotEqual(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_NotEqual_
  commentId: Overload:Towel.Measurements.TimeArea`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.NotEqual
  fullName.vb: Towel.Measurements.TimeArea(Of T).NotEqual
  nameWithType: TimeArea<T>.NotEqual
  nameWithType.vb: TimeArea(Of T).NotEqual
- uid: Towel.Measurements.TimeArea`1.op_Addition(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Addition(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Addition_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Addition(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Addition(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Addition(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Addition(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Addition(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Addition(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Addition_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Addition
  fullName.vb: Towel.Measurements.TimeArea(Of T).Addition
  nameWithType: TimeArea<T>.Addition
  nameWithType.vb: TimeArea(Of T).Addition
- uid: Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},`0)
  name: Division(TimeArea<T>, T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Division_Towel_Measurements_TimeArea__0___0_
  commentId: M:Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},`0)
  name.vb: Division(TimeArea(Of T), T)
  fullName: Towel.Measurements.TimeArea<T>.Division(Towel.Measurements.TimeArea<T>, T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Division(Towel.Measurements.TimeArea(Of T), T)
  nameWithType: TimeArea<T>.Division(TimeArea<T>, T)
  nameWithType.vb: TimeArea(Of T).Division(TimeArea(Of T), T)
- uid: Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},Towel.Measurements.Time{`0})
  name: Division(TimeArea<T>, Time<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Division_Towel_Measurements_TimeArea__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},Towel.Measurements.Time{`0})
  name.vb: Division(TimeArea(Of T), Time(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Division(Towel.Measurements.TimeArea<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Division(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Time(Of T))
  nameWithType: TimeArea<T>.Division(TimeArea<T>, Time<T>)
  nameWithType.vb: TimeArea(Of T).Division(TimeArea(Of T), Time(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Division(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Division_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Division(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Division(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Division(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Division(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Division(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Division(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Division*
  name: Division
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Division_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Division
  fullName.vb: Towel.Measurements.TimeArea(Of T).Division
  nameWithType: TimeArea<T>.Division
  nameWithType.vb: TimeArea(Of T).Division
- uid: Towel.Measurements.TimeArea`1.op_Equality(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Equality(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Equality_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Equality(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Equality(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Equality(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equality(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Equality(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Equality(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Equality_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Equality
  fullName.vb: Towel.Measurements.TimeArea(Of T).Equality
  nameWithType: TimeArea<T>.Equality
  nameWithType.vb: TimeArea(Of T).Equality
- uid: Towel.Measurements.TimeArea`1.op_GreaterThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: GreaterThan(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_GreaterThan_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_GreaterThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThan(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThan(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThan(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThan(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThan(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.GreaterThan
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThan
  nameWithType: TimeArea<T>.GreaterThan
  nameWithType.vb: TimeArea(Of T).GreaterThan
- uid: Towel.Measurements.TimeArea`1.op_GreaterThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: GreaterThanOrEqual(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_GreaterThanOrEqual_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_GreaterThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: GreaterThanOrEqual(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.GreaterThanOrEqual(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThanOrEqual(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.GreaterThanOrEqual(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).GreaterThanOrEqual(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.TimeArea(Of T).GreaterThanOrEqual
  nameWithType: TimeArea<T>.GreaterThanOrEqual
  nameWithType.vb: TimeArea(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.TimeArea`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits})~Towel.Measurements.TimeArea{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits) to TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_TimeAreaBaseUnits___Towel_Measurements_TimeArea__0_
  commentId: M:Towel.Measurements.TimeArea`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits})~Towel.Measurements.TimeArea{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits) to TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits> to Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits) to Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Implicit((T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits) to TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Widening((T, MeasurementUnitsSyntaxTypes.TimeAreaBaseUnits) to TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Implicit_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.TimeArea<T>.Implicit
  fullName.vb: Towel.Measurements.TimeArea(Of T).Widening
  nameWithType: TimeArea<T>.Implicit
  nameWithType.vb: TimeArea(Of T).Widening
- uid: Towel.Measurements.TimeArea`1.op_Inequality(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Inequality(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Inequality_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Inequality(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Inequality(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Inequality(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Inequality(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Inequality(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Inequality(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Inequality_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Inequality
  fullName.vb: Towel.Measurements.TimeArea(Of T).Inequality
  nameWithType: TimeArea<T>.Inequality
  nameWithType.vb: TimeArea(Of T).Inequality
- uid: Towel.Measurements.TimeArea`1.op_LessThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: LessThan(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_LessThan_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_LessThan(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: LessThan(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThan(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThan(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThan(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThan(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_LessThan_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.LessThan
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThan
  nameWithType: TimeArea<T>.LessThan
  nameWithType.vb: TimeArea(Of T).LessThan
- uid: Towel.Measurements.TimeArea`1.op_LessThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: LessThanOrEqual(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_LessThanOrEqual_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_LessThanOrEqual(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: LessThanOrEqual(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.LessThanOrEqual(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThanOrEqual(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.LessThanOrEqual(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).LessThanOrEqual(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.TimeArea(Of T).LessThanOrEqual
  nameWithType: TimeArea<T>.LessThanOrEqual
  nameWithType.vb: TimeArea(Of T).LessThanOrEqual
- uid: Towel.Measurements.TimeArea`1.op_Multiply(`0,Towel.Measurements.TimeArea{`0})
  name: Multiply(T, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply__0_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(`0,Towel.Measurements.TimeArea{`0})
  name.vb: Multiply(T, TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(T, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(T, Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Multiply(T, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(T, TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},`0)
  name: Multiply(TimeArea<T>, T)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_Towel_Measurements_TimeArea__0___0_
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},`0)
  name.vb: Multiply(TimeArea(Of T), T)
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, T)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), T)
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, T)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), T)
- uid: Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Acceleration{`0})
  name: Multiply(TimeArea<T>, Acceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Acceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Acceleration{`0})
  name.vb: Multiply(TimeArea(Of T), Acceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Acceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Acceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Acceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Acceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.AngularAcceleration{`0})
  name: Multiply(TimeArea<T>, AngularAcceleration<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_AngularAcceleration__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.AngularAcceleration{`0})
  name.vb: Multiply(TimeArea(Of T), AngularAcceleration(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.AngularAcceleration<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.AngularAcceleration(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, AngularAcceleration<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), AngularAcceleration(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Force{`0})
  name: Multiply(TimeArea<T>, Force<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Force__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Force{`0})
  name.vb: Multiply(TimeArea(Of T), Force(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Force<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Force(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Force<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Force(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(TimeArea<T>, Pressure<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_Towel_Measurements_TimeArea__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Multiply(Towel.Measurements.TimeArea{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(TimeArea(Of T), Pressure(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Multiply(Towel.Measurements.TimeArea<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply(Towel.Measurements.TimeArea(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: TimeArea<T>.Multiply(TimeArea<T>, Pressure<T>)
  nameWithType.vb: TimeArea(Of T).Multiply(TimeArea(Of T), Pressure(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Multiply_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Multiply
  fullName.vb: Towel.Measurements.TimeArea(Of T).Multiply
  nameWithType: TimeArea<T>.Multiply
  nameWithType.vb: TimeArea(Of T).Multiply
- uid: Towel.Measurements.TimeArea`1.op_Subtraction(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Subtraction(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Subtraction_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.op_Subtraction(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Subtraction(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Subtraction(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Subtraction(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Subtraction(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Subtraction(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.TimeArea`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Subtraction
  fullName.vb: Towel.Measurements.TimeArea(Of T).Subtraction
  nameWithType: TimeArea<T>.Subtraction
  nameWithType.vb: TimeArea(Of T).Subtraction
- uid: Towel.Measurements.TimeArea`1.Subtract(Towel.Measurements.TimeArea{`0})
  name: Subtract(TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Subtract_Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Subtract(Towel.Measurements.TimeArea{`0})
  name.vb: Subtract(TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Subtract(Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Subtract(Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Subtract(TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Subtract(TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Subtract(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name: Subtract(TimeArea<T>, TimeArea<T>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Subtract_Towel_Measurements_TimeArea__0__Towel_Measurements_TimeArea__0__
  commentId: M:Towel.Measurements.TimeArea`1.Subtract(Towel.Measurements.TimeArea{`0},Towel.Measurements.TimeArea{`0})
  name.vb: Subtract(TimeArea(Of T), TimeArea(Of T))
  fullName: Towel.Measurements.TimeArea<T>.Subtract(Towel.Measurements.TimeArea<T>, Towel.Measurements.TimeArea<T>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).Subtract(Towel.Measurements.TimeArea(Of T), Towel.Measurements.TimeArea(Of T))
  nameWithType: TimeArea<T>.Subtract(TimeArea<T>, TimeArea<T>)
  nameWithType.vb: TimeArea(Of T).Subtract(TimeArea(Of T), TimeArea(Of T))
- uid: Towel.Measurements.TimeArea`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_Subtract_
  commentId: Overload:Towel.Measurements.TimeArea`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.Subtract
  fullName.vb: Towel.Measurements.TimeArea(Of T).Subtract
  nameWithType: TimeArea<T>.Subtract
  nameWithType.vb: TimeArea(Of T).Subtract
- uid: Towel.Measurements.TimeArea`1.TimeUnits1
  name: TimeUnits1
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TimeUnits1
  commentId: P:Towel.Measurements.TimeArea`1.TimeUnits1
  fullName: Towel.Measurements.TimeArea<T>.TimeUnits1
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeUnits1
  nameWithType: TimeArea<T>.TimeUnits1
  nameWithType.vb: TimeArea(Of T).TimeUnits1
- uid: Towel.Measurements.TimeArea`1.TimeUnits1*
  name: TimeUnits1
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TimeUnits1_
  commentId: Overload:Towel.Measurements.TimeArea`1.TimeUnits1
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.TimeUnits1
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeUnits1
  nameWithType: TimeArea<T>.TimeUnits1
  nameWithType.vb: TimeArea(Of T).TimeUnits1
- uid: Towel.Measurements.TimeArea`1.TimeUnits2
  name: TimeUnits2
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TimeUnits2
  commentId: P:Towel.Measurements.TimeArea`1.TimeUnits2
  fullName: Towel.Measurements.TimeArea<T>.TimeUnits2
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeUnits2
  nameWithType: TimeArea<T>.TimeUnits2
  nameWithType.vb: TimeArea(Of T).TimeUnits2
- uid: Towel.Measurements.TimeArea`1.TimeUnits2*
  name: TimeUnits2
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TimeUnits2_
  commentId: Overload:Towel.Measurements.TimeArea`1.TimeUnits2
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.TimeUnits2
  fullName.vb: Towel.Measurements.TimeArea(Of T).TimeUnits2
  nameWithType: TimeArea<T>.TimeUnits2
  nameWithType.vb: TimeArea(Of T).TimeUnits2
- uid: Towel.Measurements.TimeArea`1.ToString
  name: ToString()
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_ToString
  commentId: M:Towel.Measurements.TimeArea`1.ToString
  fullName: Towel.Measurements.TimeArea<T>.ToString()
  fullName.vb: Towel.Measurements.TimeArea(Of T).ToString()
  nameWithType: TimeArea<T>.ToString()
  nameWithType.vb: TimeArea(Of T).ToString()
- uid: Towel.Measurements.TimeArea`1.ToString*
  name: ToString
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_ToString_
  commentId: Overload:Towel.Measurements.TimeArea`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.ToString
  fullName.vb: Towel.Measurements.TimeArea(Of T).ToString
  nameWithType: TimeArea<T>.ToString
  nameWithType.vb: TimeArea(Of T).ToString
- uid: Towel.Measurements.TimeArea`1.TryParse(System.String,Towel.Measurements.TimeArea{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out TimeArea<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TryParse_System_String_Towel_Measurements_TimeArea__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.TimeArea`1.TryParse(System.String,Towel.Measurements.TimeArea{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef TimeArea(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.TimeArea<T>.TryParse(System.String, out Towel.Measurements.TimeArea<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.TimeArea(Of T).TryParse(System.String, ByRef Towel.Measurements.TimeArea(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: TimeArea<T>.TryParse(String, out TimeArea<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: TimeArea(Of T).TryParse(String, ByRef TimeArea(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.TimeArea`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.TimeArea-1.html#Towel_Measurements_TimeArea_1_TryParse_
  commentId: Overload:Towel.Measurements.TimeArea`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.TimeArea<T>.TryParse
  fullName.vb: Towel.Measurements.TimeArea(Of T).TryParse
  nameWithType: TimeArea<T>.TryParse
  nameWithType.vb: TimeArea(Of T).TryParse
- uid: Towel.Measurements.Volume`1
  name: Volume<T>
  href: api/Towel.Measurements.Volume-1.html
  commentId: T:Towel.Measurements.Volume`1
  name.vb: Volume(Of T)
  fullName: Towel.Measurements.Volume<T>
  fullName.vb: Towel.Measurements.Volume(Of T)
  nameWithType: Volume<T>
  nameWithType.vb: Volume(Of T)
- uid: Towel.Measurements.Volume`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Volume(T, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1__ctor__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Volume`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Volume<T>.Volume(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Volume(Of T).Volume(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Volume<T>.Volume(T, Length.Units, Length.Units, Length.Units)
  nameWithType.vb: Volume(Of T).Volume(T, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Volume`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name: Volume(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_
  commentId: M:Towel.Measurements.Volume`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName: Towel.Measurements.Volume<T>.Volume(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName.vb: Towel.Measurements.Volume(Of T).Volume(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType: Volume<T>.Volume(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType.vb: Volume(Of T).Volume(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
- uid: Towel.Measurements.Volume`1.#ctor*
  name: Volume
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1__ctor_
  commentId: Overload:Towel.Measurements.Volume`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Volume
  fullName.vb: Towel.Measurements.Volume(Of T).Volume
  nameWithType: Volume<T>.Volume
  nameWithType.vb: Volume(Of T).Volume
- uid: Towel.Measurements.Volume`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Add__0_
  commentId: M:Towel.Measurements.Volume`1.Add(`0)
  fullName: Towel.Measurements.Volume<T>.Add(T)
  fullName.vb: Towel.Measurements.Volume(Of T).Add(T)
  nameWithType: Volume<T>.Add(T)
  nameWithType.vb: Volume(Of T).Add(T)
- uid: Towel.Measurements.Volume`1.Add(Towel.Measurements.Volume{`0})
  name: Add(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Add_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Add(Towel.Measurements.Volume{`0})
  name.vb: Add(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Add(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Add(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Add(Volume<T>)
  nameWithType.vb: Volume(Of T).Add(Volume(Of T))
- uid: Towel.Measurements.Volume`1.Add(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Add(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Add_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Add(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Add(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Add(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Add(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Add(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Add(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.Add*
  name: Add
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Add_
  commentId: Overload:Towel.Measurements.Volume`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Add
  fullName.vb: Towel.Measurements.Volume(Of T).Add
  nameWithType: Volume<T>.Add
  nameWithType.vb: Volume(Of T).Add
- uid: Towel.Measurements.Volume`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Convert(T, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: M:Towel.Measurements.Volume`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  fullName: Towel.Measurements.Volume<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  fullName.vb: Towel.Measurements.Volume(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Volume<T>.Convert(T, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units)
  nameWithType.vb: Volume(Of T).Convert(T, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Volume`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_
  commentId: M:Towel.Measurements.Volume`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName: Towel.Measurements.Volume<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName.vb: Towel.Measurements.Volume(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType: Volume<T>.Convert(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType.vb: Volume(Of T).Convert(T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits, MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
- uid: Towel.Measurements.Volume`1.Convert*
  name: Convert
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Convert_
  commentId: Overload:Towel.Measurements.Volume`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Convert
  fullName.vb: Towel.Measurements.Volume(Of T).Convert
  nameWithType: Volume<T>.Convert
  nameWithType.vb: Volume(Of T).Convert
- uid: Towel.Measurements.Volume`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide__0_
  commentId: M:Towel.Measurements.Volume`1.Divide(`0)
  fullName: Towel.Measurements.Volume<T>.Divide(T)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(T)
  nameWithType: Volume<T>.Divide(T)
  nameWithType.vb: Volume(Of T).Divide(T)
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: Volume<T>.Divide(Area<T>)
  nameWithType.vb: Volume(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Length{`0})
  name: Divide(Length<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Length{`0})
  name.vb: Divide(Length(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Length(Of T))
  nameWithType: Volume<T>.Divide(Length<T>)
  nameWithType.vb: Volume(Of T).Divide(Length(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Time{`0})
  name: Divide(Time<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Time{`0})
  name.vb: Divide(Time(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Time(Of T))
  nameWithType: Volume<T>.Divide(Time<T>)
  nameWithType.vb: Volume(Of T).Divide(Time(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0})
  name: Divide(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0})
  name.vb: Divide(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},`0)
  name: Divide(Volume<T>, T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0___0_
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},`0)
  name.vb: Divide(Volume(Of T), T)
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, T)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), T)
  nameWithType: Volume<T>.Divide(Volume<T>, T)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), T)
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Area{`0})
  name: Divide(Volume<T>, Area<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(Volume(Of T), Area(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>, Area<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), Area(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Length{`0})
  name: Divide(Volume<T>, Length<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Length{`0})
  name.vb: Divide(Volume(Of T), Length(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>, Length<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), Length(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Time{`0})
  name: Divide(Volume<T>, Time<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Time{`0})
  name.vb: Divide(Volume(Of T), Time(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>, Time<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), Time(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Divide(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Divide(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.VolumeRate{`0})
  name: Divide(Volume<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_Volume__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.Volume{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(Volume(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.Volume<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.Volume(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Volume<T>.Divide(Volume<T>, VolumeRate<T>)
  nameWithType.vb: Volume(Of T).Divide(Volume(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Volume`1.Divide(Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Volume`1.Divide(Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T))
  fullName: Towel.Measurements.Volume<T>.Divide(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Divide(Towel.Measurements.VolumeRate(Of T))
  nameWithType: Volume<T>.Divide(VolumeRate<T>)
  nameWithType.vb: Volume(Of T).Divide(VolumeRate(Of T))
- uid: Towel.Measurements.Volume`1.Divide*
  name: Divide
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Divide_
  commentId: Overload:Towel.Measurements.Volume`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Divide
  fullName.vb: Towel.Measurements.Volume(Of T).Divide
  nameWithType: Volume<T>.Divide
  nameWithType.vb: Volume(Of T).Divide
- uid: Towel.Measurements.Volume`1.Equal(Towel.Measurements.Volume{`0})
  name: Equal(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Equal_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Equal(Towel.Measurements.Volume{`0})
  name.vb: Equal(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Equal(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Equal(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Equal(Volume<T>)
  nameWithType.vb: Volume(Of T).Equal(Volume(Of T))
- uid: Towel.Measurements.Volume`1.Equal(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Equal(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Equal_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Equal(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Equal(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Equal(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Equal(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Equal(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Equal(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.Equal*
  name: Equal
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Equal_
  commentId: Overload:Towel.Measurements.Volume`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Equal
  fullName.vb: Towel.Measurements.Volume(Of T).Equal
  nameWithType: Volume<T>.Equal
  nameWithType.vb: Volume(Of T).Equal
- uid: Towel.Measurements.Volume`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Equals_System_Object_
  commentId: M:Towel.Measurements.Volume`1.Equals(System.Object)
  fullName: Towel.Measurements.Volume<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.Volume(Of T).Equals(System.Object)
  nameWithType: Volume<T>.Equals(Object)
  nameWithType.vb: Volume(Of T).Equals(Object)
- uid: Towel.Measurements.Volume`1.Equals*
  name: Equals
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Equals_
  commentId: Overload:Towel.Measurements.Volume`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Equals
  fullName.vb: Towel.Measurements.Volume(Of T).Equals
  nameWithType: Volume<T>.Equals
  nameWithType.vb: Volume(Of T).Equals
- uid: Towel.Measurements.Volume`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GetHashCode
  commentId: M:Towel.Measurements.Volume`1.GetHashCode
  fullName: Towel.Measurements.Volume<T>.GetHashCode()
  fullName.vb: Towel.Measurements.Volume(Of T).GetHashCode()
  nameWithType: Volume<T>.GetHashCode()
  nameWithType.vb: Volume(Of T).GetHashCode()
- uid: Towel.Measurements.Volume`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GetHashCode_
  commentId: Overload:Towel.Measurements.Volume`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.GetHashCode
  fullName.vb: Towel.Measurements.Volume(Of T).GetHashCode
  nameWithType: Volume<T>.GetHashCode
  nameWithType.vb: Volume(Of T).GetHashCode
- uid: Towel.Measurements.Volume`1.GreaterThan(Towel.Measurements.Volume{`0})
  name: GreaterThan(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThan_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.GreaterThan(Towel.Measurements.Volume{`0})
  name.vb: GreaterThan(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThan(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThan(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThan(Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThan(Volume(Of T))
- uid: Towel.Measurements.Volume`1.GreaterThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: GreaterThan(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThan_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.GreaterThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: GreaterThan(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThan(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThan(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThan(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThan(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThan_
  commentId: Overload:Towel.Measurements.Volume`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.GreaterThan
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThan
  nameWithType: Volume<T>.GreaterThan
  nameWithType.vb: Volume(Of T).GreaterThan
- uid: Towel.Measurements.Volume`1.GreaterThanOrEqual(Towel.Measurements.Volume{`0})
  name: GreaterThanOrEqual(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThanOrEqual_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.GreaterThanOrEqual(Towel.Measurements.Volume{`0})
  name.vb: GreaterThanOrEqual(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThanOrEqual(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThanOrEqual(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThanOrEqual(Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThanOrEqual(Volume(Of T))
- uid: Towel.Measurements.Volume`1.GreaterThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: GreaterThanOrEqual(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThanOrEqual_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.GreaterThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: GreaterThanOrEqual(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThanOrEqual(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThanOrEqual(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThanOrEqual(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThanOrEqual(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Volume`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThanOrEqual
  nameWithType: Volume<T>.GreaterThanOrEqual
  nameWithType.vb: Volume(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Volume`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name: Item[Length.Units, Length.Units, Length.Units]
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Item_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_
  commentId: P:Towel.Measurements.Volume`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units)
  name.vb: Item(Length.Units, Length.Units, Length.Units)
  fullName: Towel.Measurements.Volume<T>.Item[Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units]
  fullName.vb: Towel.Measurements.Volume(Of T).Item(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units)
  nameWithType: Volume<T>.Item[Length.Units, Length.Units, Length.Units]
  nameWithType.vb: Volume(Of T).Item(Length.Units, Length.Units, Length.Units)
- uid: Towel.Measurements.Volume`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.VolumeBaseUnits]
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits_
  commentId: P:Towel.Measurements.Volume`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  fullName: Towel.Measurements.Volume<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits]
  fullName.vb: Towel.Measurements.Volume(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
  nameWithType: Volume<T>.Item[MeasurementUnitsSyntaxTypes.VolumeBaseUnits]
  nameWithType.vb: Volume(Of T).Item(MeasurementUnitsSyntaxTypes.VolumeBaseUnits)
- uid: Towel.Measurements.Volume`1.Item*
  name: Item
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Item_
  commentId: Overload:Towel.Measurements.Volume`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Item
  fullName.vb: Towel.Measurements.Volume(Of T).Item
  nameWithType: Volume<T>.Item
  nameWithType.vb: Volume(Of T).Item
- uid: Towel.Measurements.Volume`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits1
  commentId: P:Towel.Measurements.Volume`1.LengthUnits1
  fullName: Towel.Measurements.Volume<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits1
  nameWithType: Volume<T>.LengthUnits1
  nameWithType.vb: Volume(Of T).LengthUnits1
- uid: Towel.Measurements.Volume`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.Volume`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LengthUnits1
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits1
  nameWithType: Volume<T>.LengthUnits1
  nameWithType.vb: Volume(Of T).LengthUnits1
- uid: Towel.Measurements.Volume`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits2
  commentId: P:Towel.Measurements.Volume`1.LengthUnits2
  fullName: Towel.Measurements.Volume<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits2
  nameWithType: Volume<T>.LengthUnits2
  nameWithType.vb: Volume(Of T).LengthUnits2
- uid: Towel.Measurements.Volume`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.Volume`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LengthUnits2
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits2
  nameWithType: Volume<T>.LengthUnits2
  nameWithType.vb: Volume(Of T).LengthUnits2
- uid: Towel.Measurements.Volume`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits3
  commentId: P:Towel.Measurements.Volume`1.LengthUnits3
  fullName: Towel.Measurements.Volume<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits3
  nameWithType: Volume<T>.LengthUnits3
  nameWithType.vb: Volume(Of T).LengthUnits3
- uid: Towel.Measurements.Volume`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.Volume`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LengthUnits3
  fullName.vb: Towel.Measurements.Volume(Of T).LengthUnits3
  nameWithType: Volume<T>.LengthUnits3
  nameWithType.vb: Volume(Of T).LengthUnits3
- uid: Towel.Measurements.Volume`1.LessThan(Towel.Measurements.Volume{`0})
  name: LessThan(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThan_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.LessThan(Towel.Measurements.Volume{`0})
  name.vb: LessThan(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThan(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThan(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThan(Volume<T>)
  nameWithType.vb: Volume(Of T).LessThan(Volume(Of T))
- uid: Towel.Measurements.Volume`1.LessThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: LessThan(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThan_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.LessThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: LessThan(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThan(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThan(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThan(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).LessThan(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThan_
  commentId: Overload:Towel.Measurements.Volume`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LessThan
  fullName.vb: Towel.Measurements.Volume(Of T).LessThan
  nameWithType: Volume<T>.LessThan
  nameWithType.vb: Volume(Of T).LessThan
- uid: Towel.Measurements.Volume`1.LessThanOrEqual(Towel.Measurements.Volume{`0})
  name: LessThanOrEqual(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThanOrEqual_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.LessThanOrEqual(Towel.Measurements.Volume{`0})
  name.vb: LessThanOrEqual(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThanOrEqual(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThanOrEqual(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThanOrEqual(Volume<T>)
  nameWithType.vb: Volume(Of T).LessThanOrEqual(Volume(Of T))
- uid: Towel.Measurements.Volume`1.LessThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: LessThanOrEqual(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThanOrEqual_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.LessThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: LessThanOrEqual(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThanOrEqual(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThanOrEqual(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThanOrEqual(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).LessThanOrEqual(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Volume`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Volume(Of T).LessThanOrEqual
  nameWithType: Volume<T>.LessThanOrEqual
  nameWithType.vb: Volume(Of T).LessThanOrEqual
- uid: Towel.Measurements.Volume`1.Multiply(`0,Towel.Measurements.Volume{`0})
  name: Multiply(T, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply__0_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(`0,Towel.Measurements.Volume{`0})
  name.vb: Multiply(T, Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(T, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(T, Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Multiply(T, Volume<T>)
  nameWithType.vb: Volume(Of T).Multiply(T, Volume(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name: Multiply(AreaDensity<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(AreaDensity(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.AreaDensity(Of T))
  nameWithType: Volume<T>.Multiply(AreaDensity<T>)
  nameWithType.vb: Volume(Of T).Multiply(AreaDensity(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Density{`0})
  name: Multiply(Density<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Density{`0})
  name.vb: Multiply(Density(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Density(Of T))
  nameWithType: Volume<T>.Multiply(Density<T>)
  nameWithType.vb: Volume(Of T).Multiply(Density(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Pressure{`0})
  name: Multiply(Pressure<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Pressure(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Pressure(Of T))
  nameWithType: Volume<T>.Multiply(Pressure<T>)
  nameWithType.vb: Volume(Of T).Multiply(Pressure(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},`0)
  name: Multiply(Volume<T>, T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Volume__0___0_
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},`0)
  name.vb: Multiply(Volume(Of T), T)
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, T)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), T)
  nameWithType: Volume<T>.Multiply(Volume<T>, T)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), T)
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Volume<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Volume(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, AreaDensity<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Density{`0})
  name: Multiply(Volume<T>, Density<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Volume(Of T), Density(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, Density<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), Density(Of T))
- uid: Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(Volume<T>, Pressure<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Volume`1.Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Volume(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, Pressure<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), Pressure(Of T))
- uid: Towel.Measurements.Volume`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Multiply_
  commentId: Overload:Towel.Measurements.Volume`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Multiply
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply
  nameWithType: Volume<T>.Multiply
  nameWithType.vb: Volume(Of T).Multiply
- uid: Towel.Measurements.Volume`1.NotEqual(Towel.Measurements.Volume{`0})
  name: NotEqual(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_NotEqual_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.NotEqual(Towel.Measurements.Volume{`0})
  name.vb: NotEqual(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.NotEqual(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).NotEqual(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.NotEqual(Volume<T>)
  nameWithType.vb: Volume(Of T).NotEqual(Volume(Of T))
- uid: Towel.Measurements.Volume`1.NotEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: NotEqual(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_NotEqual_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.NotEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: NotEqual(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.NotEqual(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).NotEqual(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.NotEqual(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).NotEqual(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_NotEqual_
  commentId: Overload:Towel.Measurements.Volume`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.NotEqual
  fullName.vb: Towel.Measurements.Volume(Of T).NotEqual
  nameWithType: Volume<T>.NotEqual
  nameWithType.vb: Volume(Of T).NotEqual
- uid: Towel.Measurements.Volume`1.op_Addition(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Addition(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Addition_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Addition(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Addition(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Addition(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Addition(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Addition(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Addition(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Addition_
  commentId: Overload:Towel.Measurements.Volume`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Addition
  fullName.vb: Towel.Measurements.Volume(Of T).Addition
  nameWithType: Volume<T>.Addition
  nameWithType.vb: Volume(Of T).Addition
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},`0)
  name: Division(Volume<T>, T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0___0_
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},`0)
  name.vb: Division(Volume(Of T), T)
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, T)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), T)
  nameWithType: Volume<T>.Division(Volume<T>, T)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), T)
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Area{`0})
  name: Division(Volume<T>, Area<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Area{`0})
  name.vb: Division(Volume(Of T), Area(Of T))
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), Towel.Measurements.Area(Of T))
  nameWithType: Volume<T>.Division(Volume<T>, Area<T>)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), Area(Of T))
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Length{`0})
  name: Division(Volume<T>, Length<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0__Towel_Measurements_Length__0__
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Length{`0})
  name.vb: Division(Volume(Of T), Length(Of T))
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, Towel.Measurements.Length<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), Towel.Measurements.Length(Of T))
  nameWithType: Volume<T>.Division(Volume<T>, Length<T>)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), Length(Of T))
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Time{`0})
  name: Division(Volume<T>, Time<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Time{`0})
  name.vb: Division(Volume(Of T), Time(Of T))
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), Towel.Measurements.Time(Of T))
  nameWithType: Volume<T>.Division(Volume<T>, Time<T>)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), Time(Of T))
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Division(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Division(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Division(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.VolumeRate{`0})
  name: Division(Volume<T>, VolumeRate<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_Towel_Measurements_Volume__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.Volume`1.op_Division(Towel.Measurements.Volume{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Division(Volume(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.Volume<T>.Division(Towel.Measurements.Volume<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Division(Towel.Measurements.Volume(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: Volume<T>.Division(Volume<T>, VolumeRate<T>)
  nameWithType.vb: Volume(Of T).Division(Volume(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.Volume`1.op_Division*
  name: Division
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Division_
  commentId: Overload:Towel.Measurements.Volume`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Division
  fullName.vb: Towel.Measurements.Volume(Of T).Division
  nameWithType: Volume<T>.Division
  nameWithType.vb: Volume(Of T).Division
- uid: Towel.Measurements.Volume`1.op_Equality(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Equality(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Equality_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Equality(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Equality(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Equality(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Equality(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Equality(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Equality(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Equality_
  commentId: Overload:Towel.Measurements.Volume`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Equality
  fullName.vb: Towel.Measurements.Volume(Of T).Equality
  nameWithType: Volume<T>.Equality
  nameWithType.vb: Volume(Of T).Equality
- uid: Towel.Measurements.Volume`1.op_GreaterThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: GreaterThan(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_GreaterThan_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_GreaterThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: GreaterThan(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThan(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThan(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThan(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThan(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.Volume`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.GreaterThan
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThan
  nameWithType: Volume<T>.GreaterThan
  nameWithType.vb: Volume(Of T).GreaterThan
- uid: Towel.Measurements.Volume`1.op_GreaterThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: GreaterThanOrEqual(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_GreaterThanOrEqual_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_GreaterThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: GreaterThanOrEqual(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.GreaterThanOrEqual(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThanOrEqual(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.GreaterThanOrEqual(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).GreaterThanOrEqual(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.Volume`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.Volume(Of T).GreaterThanOrEqual
  nameWithType: Volume<T>.GreaterThanOrEqual
  nameWithType.vb: Volume(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.Volume`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits})~Towel.Measurements.Volume{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits) to Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeBaseUnits___Towel_Measurements_Volume__0_
  commentId: M:Towel.Measurements.Volume`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits})~Towel.Measurements.Volume{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits) to Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits> to Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeBaseUnits) to Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Implicit((T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits) to Volume<T>)
  nameWithType.vb: Volume(Of T).Widening((T, MeasurementUnitsSyntaxTypes.VolumeBaseUnits) to Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Implicit_
  commentId: Overload:Towel.Measurements.Volume`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.Volume<T>.Implicit
  fullName.vb: Towel.Measurements.Volume(Of T).Widening
  nameWithType: Volume<T>.Implicit
  nameWithType.vb: Volume(Of T).Widening
- uid: Towel.Measurements.Volume`1.op_Inequality(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Inequality(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Inequality_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Inequality(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Inequality(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Inequality(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Inequality(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Inequality(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Inequality(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Inequality_
  commentId: Overload:Towel.Measurements.Volume`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Inequality
  fullName.vb: Towel.Measurements.Volume(Of T).Inequality
  nameWithType: Volume<T>.Inequality
  nameWithType.vb: Volume(Of T).Inequality
- uid: Towel.Measurements.Volume`1.op_LessThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: LessThan(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_LessThan_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_LessThan(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: LessThan(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThan(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThan(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThan(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).LessThan(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_LessThan_
  commentId: Overload:Towel.Measurements.Volume`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LessThan
  fullName.vb: Towel.Measurements.Volume(Of T).LessThan
  nameWithType: Volume<T>.LessThan
  nameWithType.vb: Volume(Of T).LessThan
- uid: Towel.Measurements.Volume`1.op_LessThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: LessThanOrEqual(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_LessThanOrEqual_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_LessThanOrEqual(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: LessThanOrEqual(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.LessThanOrEqual(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).LessThanOrEqual(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.LessThanOrEqual(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).LessThanOrEqual(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.Volume`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.Volume(Of T).LessThanOrEqual
  nameWithType: Volume<T>.LessThanOrEqual
  nameWithType.vb: Volume(Of T).LessThanOrEqual
- uid: Towel.Measurements.Volume`1.op_Multiply(`0,Towel.Measurements.Volume{`0})
  name: Multiply(T, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply__0_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Multiply(`0,Towel.Measurements.Volume{`0})
  name.vb: Multiply(T, Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(T, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(T, Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Multiply(T, Volume<T>)
  nameWithType.vb: Volume(Of T).Multiply(T, Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},`0)
  name: Multiply(Volume<T>, T)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply_Towel_Measurements_Volume__0___0_
  commentId: M:Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},`0)
  name.vb: Multiply(Volume(Of T), T)
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, T)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), T)
  nameWithType: Volume<T>.Multiply(Volume<T>, T)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), T)
- uid: Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(Volume<T>, AreaDensity<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(Volume(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, AreaDensity<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Density{`0})
  name: Multiply(Volume<T>, Density<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(Volume(Of T), Density(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.Density(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, Density<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), Density(Of T))
- uid: Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(Volume<T>, Pressure<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply_Towel_Measurements_Volume__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.Volume`1.op_Multiply(Towel.Measurements.Volume{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Volume(Of T), Pressure(Of T))
  fullName: Towel.Measurements.Volume<T>.Multiply(Towel.Measurements.Volume<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply(Towel.Measurements.Volume(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: Volume<T>.Multiply(Volume<T>, Pressure<T>)
  nameWithType.vb: Volume(Of T).Multiply(Volume(Of T), Pressure(Of T))
- uid: Towel.Measurements.Volume`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Multiply_
  commentId: Overload:Towel.Measurements.Volume`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Multiply
  fullName.vb: Towel.Measurements.Volume(Of T).Multiply
  nameWithType: Volume<T>.Multiply
  nameWithType.vb: Volume(Of T).Multiply
- uid: Towel.Measurements.Volume`1.op_Subtraction(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Subtraction(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Subtraction_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.op_Subtraction(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Subtraction(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Subtraction(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Subtraction(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Subtraction(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Subtraction(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.Volume`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Subtraction
  fullName.vb: Towel.Measurements.Volume(Of T).Subtraction
  nameWithType: Volume<T>.Subtraction
  nameWithType.vb: Volume(Of T).Subtraction
- uid: Towel.Measurements.Volume`1.Subtract(Towel.Measurements.Volume{`0})
  name: Subtract(Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Subtract_Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Subtract(Towel.Measurements.Volume{`0})
  name.vb: Subtract(Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Subtract(Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Subtract(Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Subtract(Volume<T>)
  nameWithType.vb: Volume(Of T).Subtract(Volume(Of T))
- uid: Towel.Measurements.Volume`1.Subtract(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name: Subtract(Volume<T>, Volume<T>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Subtract_Towel_Measurements_Volume__0__Towel_Measurements_Volume__0__
  commentId: M:Towel.Measurements.Volume`1.Subtract(Towel.Measurements.Volume{`0},Towel.Measurements.Volume{`0})
  name.vb: Subtract(Volume(Of T), Volume(Of T))
  fullName: Towel.Measurements.Volume<T>.Subtract(Towel.Measurements.Volume<T>, Towel.Measurements.Volume<T>)
  fullName.vb: Towel.Measurements.Volume(Of T).Subtract(Towel.Measurements.Volume(Of T), Towel.Measurements.Volume(Of T))
  nameWithType: Volume<T>.Subtract(Volume<T>, Volume<T>)
  nameWithType.vb: Volume(Of T).Subtract(Volume(Of T), Volume(Of T))
- uid: Towel.Measurements.Volume`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_Subtract_
  commentId: Overload:Towel.Measurements.Volume`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.Subtract
  fullName.vb: Towel.Measurements.Volume(Of T).Subtract
  nameWithType: Volume<T>.Subtract
  nameWithType.vb: Volume(Of T).Subtract
- uid: Towel.Measurements.Volume`1.ToString
  name: ToString()
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_ToString
  commentId: M:Towel.Measurements.Volume`1.ToString
  fullName: Towel.Measurements.Volume<T>.ToString()
  fullName.vb: Towel.Measurements.Volume(Of T).ToString()
  nameWithType: Volume<T>.ToString()
  nameWithType.vb: Volume(Of T).ToString()
- uid: Towel.Measurements.Volume`1.ToString*
  name: ToString
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_ToString_
  commentId: Overload:Towel.Measurements.Volume`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.ToString
  fullName.vb: Towel.Measurements.Volume(Of T).ToString
  nameWithType: Volume<T>.ToString
  nameWithType.vb: Volume(Of T).ToString
- uid: Towel.Measurements.Volume`1.TryParse(System.String,Towel.Measurements.Volume{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out Volume<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_TryParse_System_String_Towel_Measurements_Volume__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.Volume`1.TryParse(System.String,Towel.Measurements.Volume{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef Volume(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.Volume<T>.TryParse(System.String, out Towel.Measurements.Volume<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.Volume(Of T).TryParse(System.String, ByRef Towel.Measurements.Volume(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: Volume<T>.TryParse(String, out Volume<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: Volume(Of T).TryParse(String, ByRef Volume(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.Volume`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.Volume-1.html#Towel_Measurements_Volume_1_TryParse_
  commentId: Overload:Towel.Measurements.Volume`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.Volume<T>.TryParse
  fullName.vb: Towel.Measurements.Volume(Of T).TryParse
  nameWithType: Volume<T>.TryParse
  nameWithType.vb: Volume(Of T).TryParse
- uid: Towel.Measurements.VolumeRate`1
  name: VolumeRate<T>
  href: api/Towel.Measurements.VolumeRate-1.html
  commentId: T:Towel.Measurements.VolumeRate`1
  name.vb: VolumeRate(Of T)
  fullName: Towel.Measurements.VolumeRate<T>
  fullName.vb: Towel.Measurements.VolumeRate(Of T)
  nameWithType: VolumeRate<T>
  nameWithType.vb: VolumeRate(Of T)
- uid: Towel.Measurements.VolumeRate`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: VolumeRate(T, Length.Units, Length.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1__ctor__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.VolumeRate`1.#ctor(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.VolumeRate<T>.VolumeRate(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).VolumeRate(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: VolumeRate<T>.VolumeRate(T, Length.Units, Length.Units, Length.Units, Time.Units)
  nameWithType.vb: VolumeRate(Of T).VolumeRate(T, Length.Units, Length.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.VolumeRate`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name: VolumeRate(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1__ctor__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_
  commentId: M:Towel.Measurements.VolumeRate`1.#ctor(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName: Towel.Measurements.VolumeRate<T>.VolumeRate(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).VolumeRate(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType: VolumeRate<T>.VolumeRate(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType.vb: VolumeRate(Of T).VolumeRate(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
- uid: Towel.Measurements.VolumeRate`1.#ctor*
  name: VolumeRate
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1__ctor_
  commentId: Overload:Towel.Measurements.VolumeRate`1.#ctor
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.VolumeRate
  fullName.vb: Towel.Measurements.VolumeRate(Of T).VolumeRate
  nameWithType: VolumeRate<T>.VolumeRate
  nameWithType.vb: VolumeRate(Of T).VolumeRate
- uid: Towel.Measurements.VolumeRate`1.Add(`0)
  name: Add(T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Add__0_
  commentId: M:Towel.Measurements.VolumeRate`1.Add(`0)
  fullName: Towel.Measurements.VolumeRate<T>.Add(T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Add(T)
  nameWithType: VolumeRate<T>.Add(T)
  nameWithType.vb: VolumeRate(Of T).Add(T)
- uid: Towel.Measurements.VolumeRate`1.Add(Towel.Measurements.VolumeRate{`0})
  name: Add(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Add_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Add(Towel.Measurements.VolumeRate{`0})
  name.vb: Add(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Add(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Add(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Add(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Add(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Add(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Add(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Add_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Add(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Add(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Add(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Add(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Add(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Add(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Add*
  name: Add
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Add_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Add
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Add
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Add
  nameWithType: VolumeRate<T>.Add
  nameWithType.vb: VolumeRate(Of T).Add
- uid: Towel.Measurements.VolumeRate`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Convert(T, Length.Units, Length.Units, Length.Units, Time.Units, Length.Units, Length.Units, Length.Units, Time.Units)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Convert__0_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: M:Towel.Measurements.VolumeRate`1.Convert(`0,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  fullName: Towel.Measurements.VolumeRate<T>.Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Convert(T, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: VolumeRate<T>.Convert(T, Length.Units, Length.Units, Length.Units, Time.Units, Length.Units, Length.Units, Length.Units, Time.Units)
  nameWithType.vb: VolumeRate(Of T).Convert(T, Length.Units, Length.Units, Length.Units, Time.Units, Length.Units, Length.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.VolumeRate`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name: Convert(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Convert__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_
  commentId: M:Towel.Measurements.VolumeRate`1.Convert(`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName: Towel.Measurements.VolumeRate<T>.Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Convert(T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType: VolumeRate<T>.Convert(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType.vb: VolumeRate(Of T).Convert(T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
- uid: Towel.Measurements.VolumeRate`1.Convert*
  name: Convert
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Convert_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Convert
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Convert
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Convert
  nameWithType: VolumeRate<T>.Convert
  nameWithType.vb: VolumeRate(Of T).Convert
- uid: Towel.Measurements.VolumeRate`1.Divide(`0)
  name: Divide(T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide__0_
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(`0)
  fullName: Towel.Measurements.VolumeRate<T>.Divide(T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(T)
  nameWithType: VolumeRate<T>.Divide(T)
  nameWithType.vb: VolumeRate(Of T).Divide(T)
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.Area{`0})
  name: Divide(Area<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.Area{`0})
  name.vb: Divide(Area(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.Area(Of T))
  nameWithType: VolumeRate<T>.Divide(Area<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(Area(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.Speed{`0})
  name: Divide(Speed<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.Speed{`0})
  name.vb: Divide(Speed(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.Speed(Of T))
  nameWithType: VolumeRate<T>.Divide(Speed<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(Speed(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Divide(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},`0)
  name: Divide(VolumeRate<T>, T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_VolumeRate__0___0_
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},`0)
  name.vb: Divide(VolumeRate(Of T), T)
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.VolumeRate<T>, T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T), T)
  nameWithType: VolumeRate<T>.Divide(VolumeRate<T>, T)
  nameWithType.vb: VolumeRate(Of T).Divide(VolumeRate(Of T), T)
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Area{`0})
  name: Divide(VolumeRate<T>, Area<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_VolumeRate__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Area{`0})
  name.vb: Divide(VolumeRate(Of T), Area(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Area(Of T))
  nameWithType: VolumeRate<T>.Divide(VolumeRate<T>, Area<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(VolumeRate(Of T), Area(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Speed{`0})
  name: Divide(VolumeRate<T>, Speed<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_VolumeRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Divide(VolumeRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: VolumeRate<T>.Divide(VolumeRate<T>, Speed<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(VolumeRate(Of T), Speed(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Divide(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Divide(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Divide(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Divide(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Divide(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Divide(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Divide*
  name: Divide
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Divide_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Divide
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Divide
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Divide
  nameWithType: VolumeRate<T>.Divide
  nameWithType.vb: VolumeRate(Of T).Divide
- uid: Towel.Measurements.VolumeRate`1.Equal(Towel.Measurements.VolumeRate{`0})
  name: Equal(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Equal_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Equal(Towel.Measurements.VolumeRate{`0})
  name.vb: Equal(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Equal(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equal(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Equal(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Equal(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Equal(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Equal(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Equal_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Equal(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Equal(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Equal(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equal(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Equal(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Equal(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Equal*
  name: Equal
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Equal_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Equal
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Equal
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equal
  nameWithType: VolumeRate<T>.Equal
  nameWithType.vb: VolumeRate(Of T).Equal
- uid: Towel.Measurements.VolumeRate`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Equals_System_Object_
  commentId: M:Towel.Measurements.VolumeRate`1.Equals(System.Object)
  fullName: Towel.Measurements.VolumeRate<T>.Equals(System.Object)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equals(System.Object)
  nameWithType: VolumeRate<T>.Equals(Object)
  nameWithType.vb: VolumeRate(Of T).Equals(Object)
- uid: Towel.Measurements.VolumeRate`1.Equals*
  name: Equals
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Equals_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Equals
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Equals
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equals
  nameWithType: VolumeRate<T>.Equals
  nameWithType.vb: VolumeRate(Of T).Equals
- uid: Towel.Measurements.VolumeRate`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GetHashCode
  commentId: M:Towel.Measurements.VolumeRate`1.GetHashCode
  fullName: Towel.Measurements.VolumeRate<T>.GetHashCode()
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GetHashCode()
  nameWithType: VolumeRate<T>.GetHashCode()
  nameWithType.vb: VolumeRate(Of T).GetHashCode()
- uid: Towel.Measurements.VolumeRate`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GetHashCode_
  commentId: Overload:Towel.Measurements.VolumeRate`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.GetHashCode
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GetHashCode
  nameWithType: VolumeRate<T>.GetHashCode
  nameWithType.vb: VolumeRate(Of T).GetHashCode
- uid: Towel.Measurements.VolumeRate`1.GreaterThan(Towel.Measurements.VolumeRate{`0})
  name: GreaterThan(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThan_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.GreaterThan(Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThan(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThan(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThan(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThan(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThan(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.GreaterThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: GreaterThan(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThan_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.GreaterThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThan(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThan(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThan(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThan(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThan(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThan_
  commentId: Overload:Towel.Measurements.VolumeRate`1.GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThan
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThan
  nameWithType: VolumeRate<T>.GreaterThan
  nameWithType.vb: VolumeRate(Of T).GreaterThan
- uid: Towel.Measurements.VolumeRate`1.GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0})
  name: GreaterThanOrEqual(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThanOrEqual_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThanOrEqual(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThanOrEqual(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThanOrEqual(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThanOrEqual(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThanOrEqual(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: GreaterThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThanOrEqual_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThanOrEqual(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThanOrEqual(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.VolumeRate`1.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThanOrEqual
  nameWithType: VolumeRate<T>.GreaterThanOrEqual
  nameWithType.vb: VolumeRate(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.VolumeRate`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name: Item[Length.Units, Length.Units, Length.Units, Time.Units]
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Item_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Length_Units_Towel_Measurements_Time_Units_
  commentId: P:Towel.Measurements.VolumeRate`1.Item(Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Length.Units,Towel.Measurements.Time.Units)
  name.vb: Item(Length.Units, Length.Units, Length.Units, Time.Units)
  fullName: Towel.Measurements.VolumeRate<T>.Item[Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units]
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Item(Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Length.Units, Towel.Measurements.Time.Units)
  nameWithType: VolumeRate<T>.Item[Length.Units, Length.Units, Length.Units, Time.Units]
  nameWithType.vb: VolumeRate(Of T).Item(Length.Units, Length.Units, Length.Units, Time.Units)
- uid: Towel.Measurements.VolumeRate`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name: Item[MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits]
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Item_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits_
  commentId: P:Towel.Measurements.VolumeRate`1.Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  name.vb: Item(MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  fullName: Towel.Measurements.VolumeRate<T>.Item[Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits]
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Item(Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
  nameWithType: VolumeRate<T>.Item[MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits]
  nameWithType.vb: VolumeRate(Of T).Item(MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits)
- uid: Towel.Measurements.VolumeRate`1.Item*
  name: Item
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Item_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Item
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Item
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Item
  nameWithType: VolumeRate<T>.Item
  nameWithType.vb: VolumeRate(Of T).Item
- uid: Towel.Measurements.VolumeRate`1.LengthUnits1
  name: LengthUnits1
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits1
  commentId: P:Towel.Measurements.VolumeRate`1.LengthUnits1
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits1
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits1
  nameWithType: VolumeRate<T>.LengthUnits1
  nameWithType.vb: VolumeRate(Of T).LengthUnits1
- uid: Towel.Measurements.VolumeRate`1.LengthUnits1*
  name: LengthUnits1
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits1_
  commentId: Overload:Towel.Measurements.VolumeRate`1.LengthUnits1
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits1
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits1
  nameWithType: VolumeRate<T>.LengthUnits1
  nameWithType.vb: VolumeRate(Of T).LengthUnits1
- uid: Towel.Measurements.VolumeRate`1.LengthUnits2
  name: LengthUnits2
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits2
  commentId: P:Towel.Measurements.VolumeRate`1.LengthUnits2
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits2
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits2
  nameWithType: VolumeRate<T>.LengthUnits2
  nameWithType.vb: VolumeRate(Of T).LengthUnits2
- uid: Towel.Measurements.VolumeRate`1.LengthUnits2*
  name: LengthUnits2
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits2_
  commentId: Overload:Towel.Measurements.VolumeRate`1.LengthUnits2
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits2
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits2
  nameWithType: VolumeRate<T>.LengthUnits2
  nameWithType.vb: VolumeRate(Of T).LengthUnits2
- uid: Towel.Measurements.VolumeRate`1.LengthUnits3
  name: LengthUnits3
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits3
  commentId: P:Towel.Measurements.VolumeRate`1.LengthUnits3
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits3
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits3
  nameWithType: VolumeRate<T>.LengthUnits3
  nameWithType.vb: VolumeRate(Of T).LengthUnits3
- uid: Towel.Measurements.VolumeRate`1.LengthUnits3*
  name: LengthUnits3
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LengthUnits3_
  commentId: Overload:Towel.Measurements.VolumeRate`1.LengthUnits3
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LengthUnits3
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LengthUnits3
  nameWithType: VolumeRate<T>.LengthUnits3
  nameWithType.vb: VolumeRate(Of T).LengthUnits3
- uid: Towel.Measurements.VolumeRate`1.LessThan(Towel.Measurements.VolumeRate{`0})
  name: LessThan(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThan_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.LessThan(Towel.Measurements.VolumeRate{`0})
  name.vb: LessThan(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThan(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThan(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThan(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThan(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.LessThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: LessThan(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThan_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.LessThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: LessThan(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThan(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThan(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThan(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThan(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.LessThan*
  name: LessThan
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThan_
  commentId: Overload:Towel.Measurements.VolumeRate`1.LessThan
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LessThan
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThan
  nameWithType: VolumeRate<T>.LessThan
  nameWithType.vb: VolumeRate(Of T).LessThan
- uid: Towel.Measurements.VolumeRate`1.LessThanOrEqual(Towel.Measurements.VolumeRate{`0})
  name: LessThanOrEqual(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThanOrEqual_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.LessThanOrEqual(Towel.Measurements.VolumeRate{`0})
  name.vb: LessThanOrEqual(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThanOrEqual(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThanOrEqual(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThanOrEqual(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThanOrEqual(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.LessThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: LessThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThanOrEqual_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.LessThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: LessThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThanOrEqual(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThanOrEqual(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.VolumeRate`1.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThanOrEqual
  nameWithType: VolumeRate<T>.LessThanOrEqual
  nameWithType.vb: VolumeRate(Of T).LessThanOrEqual
- uid: Towel.Measurements.VolumeRate`1.Multiply(`0,Towel.Measurements.VolumeRate{`0})
  name: Multiply(T, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply__0_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(`0,Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(T, VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(T, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(T, Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Multiply(T, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(T, VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name: Multiply(AreaDensity<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(AreaDensity(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.AreaDensity(Of T))
  nameWithType: VolumeRate<T>.Multiply(AreaDensity<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(AreaDensity(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Density{`0})
  name: Multiply(Density<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Density{`0})
  name.vb: Multiply(Density(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.Density(Of T))
  nameWithType: VolumeRate<T>.Multiply(Density<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(Density(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Pressure{`0})
  name: Multiply(Pressure<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Pressure{`0})
  name.vb: Multiply(Pressure(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.Pressure(Of T))
  nameWithType: VolumeRate<T>.Multiply(Pressure<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(Pressure(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Time{`0})
  name: Multiply(Time<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.Time{`0})
  name.vb: Multiply(Time(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.Time(Of T))
  nameWithType: VolumeRate<T>.Multiply(Time<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(Time(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},`0)
  name: Multiply(VolumeRate<T>, T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_VolumeRate__0___0_
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},`0)
  name.vb: Multiply(VolumeRate(Of T), T)
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), T)
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, T)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), T)
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(VolumeRate<T>, AreaDensity<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(VolumeRate(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, AreaDensity<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Density{`0})
  name: Multiply(VolumeRate<T>, Density<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(VolumeRate(Of T), Density(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Density(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Density<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Density(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(VolumeRate<T>, Pressure<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(VolumeRate(Of T), Pressure(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Pressure<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Pressure(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Time{`0})
  name: Multiply(VolumeRate<T>, Time<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(VolumeRate(Of T), Time(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Time(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Time<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Time(Of T))
- uid: Towel.Measurements.VolumeRate`1.Multiply*
  name: Multiply
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Multiply_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Multiply
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Multiply
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply
  nameWithType: VolumeRate<T>.Multiply
  nameWithType.vb: VolumeRate(Of T).Multiply
- uid: Towel.Measurements.VolumeRate`1.NotEqual(Towel.Measurements.VolumeRate{`0})
  name: NotEqual(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_NotEqual_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.NotEqual(Towel.Measurements.VolumeRate{`0})
  name.vb: NotEqual(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.NotEqual(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).NotEqual(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.NotEqual(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).NotEqual(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.NotEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: NotEqual(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_NotEqual_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.NotEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: NotEqual(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.NotEqual(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).NotEqual(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.NotEqual(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).NotEqual(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.NotEqual*
  name: NotEqual
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_NotEqual_
  commentId: Overload:Towel.Measurements.VolumeRate`1.NotEqual
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.NotEqual
  fullName.vb: Towel.Measurements.VolumeRate(Of T).NotEqual
  nameWithType: VolumeRate<T>.NotEqual
  nameWithType.vb: VolumeRate(Of T).NotEqual
- uid: Towel.Measurements.VolumeRate`1.op_Addition(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Addition(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Addition_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Addition(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Addition(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Addition(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Addition(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Addition(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Addition(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Addition*
  name: Addition
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Addition_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Addition
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Addition
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Addition
  nameWithType: VolumeRate<T>.Addition
  nameWithType.vb: VolumeRate(Of T).Addition
- uid: Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},`0)
  name: Division(VolumeRate<T>, T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Division_Towel_Measurements_VolumeRate__0___0_
  commentId: M:Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},`0)
  name.vb: Division(VolumeRate(Of T), T)
  fullName: Towel.Measurements.VolumeRate<T>.Division(Towel.Measurements.VolumeRate<T>, T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Division(Towel.Measurements.VolumeRate(Of T), T)
  nameWithType: VolumeRate<T>.Division(VolumeRate<T>, T)
  nameWithType.vb: VolumeRate(Of T).Division(VolumeRate(Of T), T)
- uid: Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Area{`0})
  name: Division(VolumeRate<T>, Area<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Division_Towel_Measurements_VolumeRate__0__Towel_Measurements_Area__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Area{`0})
  name.vb: Division(VolumeRate(Of T), Area(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Division(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Area<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Division(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Area(Of T))
  nameWithType: VolumeRate<T>.Division(VolumeRate<T>, Area<T>)
  nameWithType.vb: VolumeRate(Of T).Division(VolumeRate(Of T), Area(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Speed{`0})
  name: Division(VolumeRate<T>, Speed<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Division_Towel_Measurements_VolumeRate__0__Towel_Measurements_Speed__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Speed{`0})
  name.vb: Division(VolumeRate(Of T), Speed(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Division(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Speed<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Division(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Speed(Of T))
  nameWithType: VolumeRate<T>.Division(VolumeRate<T>, Speed<T>)
  nameWithType.vb: VolumeRate(Of T).Division(VolumeRate(Of T), Speed(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Division(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Division_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Division(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Division(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Division(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Division(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Division(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Division(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Division*
  name: Division
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Division_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Division
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Division
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Division
  nameWithType: VolumeRate<T>.Division
  nameWithType.vb: VolumeRate(Of T).Division
- uid: Towel.Measurements.VolumeRate`1.op_Equality(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Equality(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Equality_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Equality(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Equality(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Equality(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equality(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Equality(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Equality(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Equality*
  name: Equality
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Equality_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Equality
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Equality
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Equality
  nameWithType: VolumeRate<T>.Equality
  nameWithType.vb: VolumeRate(Of T).Equality
- uid: Towel.Measurements.VolumeRate`1.op_GreaterThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: GreaterThan(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_GreaterThan_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_GreaterThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThan(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThan(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThan(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThan(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThan(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_GreaterThan_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThan
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThan
  nameWithType: VolumeRate<T>.GreaterThan
  nameWithType.vb: VolumeRate(Of T).GreaterThan
- uid: Towel.Measurements.VolumeRate`1.op_GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: GreaterThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_GreaterThanOrEqual_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_GreaterThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: GreaterThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThanOrEqual(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThanOrEqual(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.GreaterThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).GreaterThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.GreaterThanOrEqual
  fullName.vb: Towel.Measurements.VolumeRate(Of T).GreaterThanOrEqual
  nameWithType: VolumeRate<T>.GreaterThanOrEqual
  nameWithType.vb: VolumeRate(Of T).GreaterThanOrEqual
- uid: Towel.Measurements.VolumeRate`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits})~Towel.Measurements.VolumeRate{`0}
  name: Implicit((T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits) to VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Implicit_System_ValueTuple__0_Towel_Measurements_MeasurementUnitsSyntaxTypes_VolumeRateBaseUnits___Towel_Measurements_VolumeRate__0_
  commentId: M:Towel.Measurements.VolumeRate`1.op_Implicit(System.ValueTuple{`0,Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits})~Towel.Measurements.VolumeRate{`0}
  name.vb: Widening((T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits) to VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Implicit(System.ValueTuple<T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits> to Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Widening(System.ValueTuple(Of T, Towel.Measurements.MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits) to Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Implicit((T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits) to VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Widening((T, MeasurementUnitsSyntaxTypes.VolumeRateBaseUnits) to VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Implicit*
  name: Implicit
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Implicit_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Measurements.VolumeRate<T>.Implicit
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Widening
  nameWithType: VolumeRate<T>.Implicit
  nameWithType.vb: VolumeRate(Of T).Widening
- uid: Towel.Measurements.VolumeRate`1.op_Inequality(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Inequality(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Inequality_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Inequality(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Inequality(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Inequality(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Inequality(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Inequality(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Inequality(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Inequality*
  name: Inequality
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Inequality_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Inequality
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Inequality
  nameWithType: VolumeRate<T>.Inequality
  nameWithType.vb: VolumeRate(Of T).Inequality
- uid: Towel.Measurements.VolumeRate`1.op_LessThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: LessThan(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_LessThan_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_LessThan(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: LessThan(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThan(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThan(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThan(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThan(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_LessThan*
  name: LessThan
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_LessThan_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LessThan
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThan
  nameWithType: VolumeRate<T>.LessThan
  nameWithType.vb: VolumeRate(Of T).LessThan
- uid: Towel.Measurements.VolumeRate`1.op_LessThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: LessThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_LessThanOrEqual_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_LessThanOrEqual(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: LessThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.LessThanOrEqual(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThanOrEqual(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.LessThanOrEqual(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).LessThanOrEqual(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.LessThanOrEqual
  fullName.vb: Towel.Measurements.VolumeRate(Of T).LessThanOrEqual
  nameWithType: VolumeRate<T>.LessThanOrEqual
  nameWithType.vb: VolumeRate(Of T).LessThanOrEqual
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(`0,Towel.Measurements.VolumeRate{`0})
  name: Multiply(T, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply__0_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(`0,Towel.Measurements.VolumeRate{`0})
  name.vb: Multiply(T, VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(T, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(T, Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Multiply(T, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(T, VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},`0)
  name: Multiply(VolumeRate<T>, T)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_Towel_Measurements_VolumeRate__0___0_
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},`0)
  name.vb: Multiply(VolumeRate(Of T), T)
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, T)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), T)
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, T)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), T)
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.AreaDensity{`0})
  name: Multiply(VolumeRate<T>, AreaDensity<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_AreaDensity__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.AreaDensity{`0})
  name.vb: Multiply(VolumeRate(Of T), AreaDensity(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.AreaDensity<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.AreaDensity(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, AreaDensity<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), AreaDensity(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Density{`0})
  name: Multiply(VolumeRate<T>, Density<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Density__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Density{`0})
  name.vb: Multiply(VolumeRate(Of T), Density(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Density<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Density(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Density<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Density(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Pressure{`0})
  name: Multiply(VolumeRate<T>, Pressure<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Pressure__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Pressure{`0})
  name.vb: Multiply(VolumeRate(Of T), Pressure(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Pressure<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Pressure(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Pressure<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Pressure(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Time{`0})
  name: Multiply(VolumeRate<T>, Time<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_Towel_Measurements_VolumeRate__0__Towel_Measurements_Time__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Multiply(Towel.Measurements.VolumeRate{`0},Towel.Measurements.Time{`0})
  name.vb: Multiply(VolumeRate(Of T), Time(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Multiply(Towel.Measurements.VolumeRate<T>, Towel.Measurements.Time<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.Time(Of T))
  nameWithType: VolumeRate<T>.Multiply(VolumeRate<T>, Time<T>)
  nameWithType.vb: VolumeRate(Of T).Multiply(VolumeRate(Of T), Time(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Multiply*
  name: Multiply
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Multiply_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Multiply
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Multiply
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Multiply
  nameWithType: VolumeRate<T>.Multiply
  nameWithType.vb: VolumeRate(Of T).Multiply
- uid: Towel.Measurements.VolumeRate`1.op_Subtraction(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Subtraction(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Subtraction_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.op_Subtraction(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Subtraction(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Subtraction(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Subtraction(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Subtraction(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Subtraction(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.op_Subtraction*
  name: Subtraction
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_op_Subtraction_
  commentId: Overload:Towel.Measurements.VolumeRate`1.op_Subtraction
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Subtraction
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Subtraction
  nameWithType: VolumeRate<T>.Subtraction
  nameWithType.vb: VolumeRate(Of T).Subtraction
- uid: Towel.Measurements.VolumeRate`1.Subtract(Towel.Measurements.VolumeRate{`0})
  name: Subtract(VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Subtract_Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Subtract(Towel.Measurements.VolumeRate{`0})
  name.vb: Subtract(VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Subtract(Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Subtract(Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Subtract(VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Subtract(VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Subtract(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name: Subtract(VolumeRate<T>, VolumeRate<T>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Subtract_Towel_Measurements_VolumeRate__0__Towel_Measurements_VolumeRate__0__
  commentId: M:Towel.Measurements.VolumeRate`1.Subtract(Towel.Measurements.VolumeRate{`0},Towel.Measurements.VolumeRate{`0})
  name.vb: Subtract(VolumeRate(Of T), VolumeRate(Of T))
  fullName: Towel.Measurements.VolumeRate<T>.Subtract(Towel.Measurements.VolumeRate<T>, Towel.Measurements.VolumeRate<T>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Subtract(Towel.Measurements.VolumeRate(Of T), Towel.Measurements.VolumeRate(Of T))
  nameWithType: VolumeRate<T>.Subtract(VolumeRate<T>, VolumeRate<T>)
  nameWithType.vb: VolumeRate(Of T).Subtract(VolumeRate(Of T), VolumeRate(Of T))
- uid: Towel.Measurements.VolumeRate`1.Subtract*
  name: Subtract
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_Subtract_
  commentId: Overload:Towel.Measurements.VolumeRate`1.Subtract
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.Subtract
  fullName.vb: Towel.Measurements.VolumeRate(Of T).Subtract
  nameWithType: VolumeRate<T>.Subtract
  nameWithType.vb: VolumeRate(Of T).Subtract
- uid: Towel.Measurements.VolumeRate`1.TimeUnits4
  name: TimeUnits4
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_TimeUnits4
  commentId: P:Towel.Measurements.VolumeRate`1.TimeUnits4
  fullName: Towel.Measurements.VolumeRate<T>.TimeUnits4
  fullName.vb: Towel.Measurements.VolumeRate(Of T).TimeUnits4
  nameWithType: VolumeRate<T>.TimeUnits4
  nameWithType.vb: VolumeRate(Of T).TimeUnits4
- uid: Towel.Measurements.VolumeRate`1.TimeUnits4*
  name: TimeUnits4
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_TimeUnits4_
  commentId: Overload:Towel.Measurements.VolumeRate`1.TimeUnits4
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.TimeUnits4
  fullName.vb: Towel.Measurements.VolumeRate(Of T).TimeUnits4
  nameWithType: VolumeRate<T>.TimeUnits4
  nameWithType.vb: VolumeRate(Of T).TimeUnits4
- uid: Towel.Measurements.VolumeRate`1.ToString
  name: ToString()
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_ToString
  commentId: M:Towel.Measurements.VolumeRate`1.ToString
  fullName: Towel.Measurements.VolumeRate<T>.ToString()
  fullName.vb: Towel.Measurements.VolumeRate(Of T).ToString()
  nameWithType: VolumeRate<T>.ToString()
  nameWithType.vb: VolumeRate(Of T).ToString()
- uid: Towel.Measurements.VolumeRate`1.ToString*
  name: ToString
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_ToString_
  commentId: Overload:Towel.Measurements.VolumeRate`1.ToString
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.ToString
  fullName.vb: Towel.Measurements.VolumeRate(Of T).ToString
  nameWithType: VolumeRate<T>.ToString
  nameWithType.vb: VolumeRate(Of T).ToString
- uid: Towel.Measurements.VolumeRate`1.TryParse(System.String,Towel.Measurements.VolumeRate{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name: TryParse(String, out VolumeRate<T>, Func<String, (Boolean Success, T Value)>)
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_TryParse_System_String_Towel_Measurements_VolumeRate__0___Func_System_String_System_ValueTuple_System_Boolean__0___
  commentId: M:Towel.Measurements.VolumeRate`1.TryParse(System.String,Towel.Measurements.VolumeRate{`0}@,Func{System.String,System.ValueTuple{System.Boolean,`0}})
  name.vb: TryParse(String, ByRef VolumeRate(Of T), Func(Of String, (Success As Boolean, Value As T)))
  fullName: Towel.Measurements.VolumeRate<T>.TryParse(System.String, out Towel.Measurements.VolumeRate<T>, Func<System.String, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Towel.Measurements.VolumeRate(Of T).TryParse(System.String, ByRef Towel.Measurements.VolumeRate(Of T), Func(Of System.String, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: VolumeRate<T>.TryParse(String, out VolumeRate<T>, Func<String, (Boolean Success, T Value)>)
  nameWithType.vb: VolumeRate(Of T).TryParse(String, ByRef VolumeRate(Of T), Func(Of String, (Success As Boolean, Value As T)))
- uid: Towel.Measurements.VolumeRate`1.TryParse*
  name: TryParse
  href: api/Towel.Measurements.VolumeRate-1.html#Towel_Measurements_VolumeRate_1_TryParse_
  commentId: Overload:Towel.Measurements.VolumeRate`1.TryParse
  isSpec: "True"
  fullName: Towel.Measurements.VolumeRate<T>.TryParse
  fullName.vb: Towel.Measurements.VolumeRate(Of T).TryParse
  nameWithType: VolumeRate<T>.TryParse
  nameWithType.vb: VolumeRate(Of T).TryParse
- uid: Towel.Meta
  name: Meta
  href: api/Towel.Meta.html
  commentId: T:Towel.Meta
  fullName: Towel.Meta
  nameWithType: Meta
- uid: Towel.Meta.ClearXmlDocumentation
  name: ClearXmlDocumentation()
  href: api/Towel.Meta.html#Towel_Meta_ClearXmlDocumentation
  commentId: M:Towel.Meta.ClearXmlDocumentation
  fullName: Towel.Meta.ClearXmlDocumentation()
  nameWithType: Meta.ClearXmlDocumentation()
- uid: Towel.Meta.ClearXmlDocumentation*
  name: ClearXmlDocumentation
  href: api/Towel.Meta.html#Towel_Meta_ClearXmlDocumentation_
  commentId: Overload:Towel.Meta.ClearXmlDocumentation
  isSpec: "True"
  fullName: Towel.Meta.ClearXmlDocumentation
  nameWithType: Meta.ClearXmlDocumentation
- uid: Towel.Meta.ConvertToCSharpSource(Type,System.Boolean)
  name: ConvertToCSharpSource(Type, Boolean)
  href: api/Towel.Meta.html#Towel_Meta_ConvertToCSharpSource_Type_System_Boolean_
  commentId: M:Towel.Meta.ConvertToCSharpSource(Type,System.Boolean)
  fullName: Towel.Meta.ConvertToCSharpSource(Type, System.Boolean)
  nameWithType: Meta.ConvertToCSharpSource(Type, Boolean)
- uid: Towel.Meta.ConvertToCSharpSource*
  name: ConvertToCSharpSource
  href: api/Towel.Meta.html#Towel_Meta_ConvertToCSharpSource_
  commentId: Overload:Towel.Meta.ConvertToCSharpSource
  isSpec: "True"
  fullName: Towel.Meta.ConvertToCSharpSource
  nameWithType: Meta.ConvertToCSharpSource
- uid: Towel.Meta.GetConstructorInfosWithAttribute*
  name: GetConstructorInfosWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetConstructorInfosWithAttribute_
  commentId: Overload:Towel.Meta.GetConstructorInfosWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetConstructorInfosWithAttribute
  nameWithType: Meta.GetConstructorInfosWithAttribute
- uid: Towel.Meta.GetConstructorInfosWithAttribute``1(Assembly)
  name: GetConstructorInfosWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetConstructorInfosWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetConstructorInfosWithAttribute``1(Assembly)
  name.vb: GetConstructorInfosWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetConstructorInfosWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetConstructorInfosWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetConstructorInfosWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetConstructorInfosWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.GetDerivedTypes*
  name: GetDerivedTypes
  href: api/Towel.Meta.html#Towel_Meta_GetDerivedTypes_
  commentId: Overload:Towel.Meta.GetDerivedTypes
  isSpec: "True"
  fullName: Towel.Meta.GetDerivedTypes
  nameWithType: Meta.GetDerivedTypes
- uid: Towel.Meta.GetDerivedTypes``1(Assembly)
  name: GetDerivedTypes<Base>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetDerivedTypes__1_Assembly_
  commentId: M:Towel.Meta.GetDerivedTypes``1(Assembly)
  name.vb: GetDerivedTypes(Of Base)(Assembly)
  fullName: Towel.Meta.GetDerivedTypes<Base>(Assembly)
  fullName.vb: Towel.Meta.GetDerivedTypes(Of Base)(Assembly)
  nameWithType: Meta.GetDerivedTypes<Base>(Assembly)
  nameWithType.vb: Meta.GetDerivedTypes(Of Base)(Assembly)
- uid: Towel.Meta.GetDirectoryPath(Assembly)
  name: GetDirectoryPath(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetDirectoryPath_Assembly_
  commentId: M:Towel.Meta.GetDirectoryPath(Assembly)
  fullName: Towel.Meta.GetDirectoryPath(Assembly)
  nameWithType: Meta.GetDirectoryPath(Assembly)
- uid: Towel.Meta.GetDirectoryPath*
  name: GetDirectoryPath
  href: api/Towel.Meta.html#Towel_Meta_GetDirectoryPath_
  commentId: Overload:Towel.Meta.GetDirectoryPath
  isSpec: "True"
  fullName: Towel.Meta.GetDirectoryPath
  nameWithType: Meta.GetDirectoryPath
- uid: Towel.Meta.GetDocumentation(ConstructorInfo)
  name: GetDocumentation(ConstructorInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_ConstructorInfo_
  commentId: M:Towel.Meta.GetDocumentation(ConstructorInfo)
  fullName: Towel.Meta.GetDocumentation(ConstructorInfo)
  nameWithType: Meta.GetDocumentation(ConstructorInfo)
- uid: Towel.Meta.GetDocumentation(EventInfo)
  name: GetDocumentation(EventInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_EventInfo_
  commentId: M:Towel.Meta.GetDocumentation(EventInfo)
  fullName: Towel.Meta.GetDocumentation(EventInfo)
  nameWithType: Meta.GetDocumentation(EventInfo)
- uid: Towel.Meta.GetDocumentation(FieldInfo)
  name: GetDocumentation(FieldInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_FieldInfo_
  commentId: M:Towel.Meta.GetDocumentation(FieldInfo)
  fullName: Towel.Meta.GetDocumentation(FieldInfo)
  nameWithType: Meta.GetDocumentation(FieldInfo)
- uid: Towel.Meta.GetDocumentation(MemberInfo)
  name: GetDocumentation(MemberInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_MemberInfo_
  commentId: M:Towel.Meta.GetDocumentation(MemberInfo)
  fullName: Towel.Meta.GetDocumentation(MemberInfo)
  nameWithType: Meta.GetDocumentation(MemberInfo)
- uid: Towel.Meta.GetDocumentation(MethodInfo)
  name: GetDocumentation(MethodInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_MethodInfo_
  commentId: M:Towel.Meta.GetDocumentation(MethodInfo)
  fullName: Towel.Meta.GetDocumentation(MethodInfo)
  nameWithType: Meta.GetDocumentation(MethodInfo)
- uid: Towel.Meta.GetDocumentation(ParameterInfo)
  name: GetDocumentation(ParameterInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_ParameterInfo_
  commentId: M:Towel.Meta.GetDocumentation(ParameterInfo)
  fullName: Towel.Meta.GetDocumentation(ParameterInfo)
  nameWithType: Meta.GetDocumentation(ParameterInfo)
- uid: Towel.Meta.GetDocumentation(PropertyInfo)
  name: GetDocumentation(PropertyInfo)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_PropertyInfo_
  commentId: M:Towel.Meta.GetDocumentation(PropertyInfo)
  fullName: Towel.Meta.GetDocumentation(PropertyInfo)
  nameWithType: Meta.GetDocumentation(PropertyInfo)
- uid: Towel.Meta.GetDocumentation(Type)
  name: GetDocumentation(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_Type_
  commentId: M:Towel.Meta.GetDocumentation(Type)
  fullName: Towel.Meta.GetDocumentation(Type)
  nameWithType: Meta.GetDocumentation(Type)
- uid: Towel.Meta.GetDocumentation*
  name: GetDocumentation
  href: api/Towel.Meta.html#Towel_Meta_GetDocumentation_
  commentId: Overload:Towel.Meta.GetDocumentation
  isSpec: "True"
  fullName: Towel.Meta.GetDocumentation
  nameWithType: Meta.GetDocumentation
- uid: Towel.Meta.GetEnumAttribute*
  name: GetEnumAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetEnumAttribute_
  commentId: Overload:Towel.Meta.GetEnumAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetEnumAttribute
  nameWithType: Meta.GetEnumAttribute
- uid: Towel.Meta.GetEnumAttribute``1(Enum)
  name: GetEnumAttribute<AttributeType>(Enum)
  href: api/Towel.Meta.html#Towel_Meta_GetEnumAttribute__1_Enum_
  commentId: M:Towel.Meta.GetEnumAttribute``1(Enum)
  name.vb: GetEnumAttribute(Of AttributeType)(Enum)
  fullName: Towel.Meta.GetEnumAttribute<AttributeType>(Enum)
  fullName.vb: Towel.Meta.GetEnumAttribute(Of AttributeType)(Enum)
  nameWithType: Meta.GetEnumAttribute<AttributeType>(Enum)
  nameWithType.vb: Meta.GetEnumAttribute(Of AttributeType)(Enum)
- uid: Towel.Meta.GetEnumAttributes*
  name: GetEnumAttributes
  href: api/Towel.Meta.html#Towel_Meta_GetEnumAttributes_
  commentId: Overload:Towel.Meta.GetEnumAttributes
  isSpec: "True"
  fullName: Towel.Meta.GetEnumAttributes
  nameWithType: Meta.GetEnumAttributes
- uid: Towel.Meta.GetEnumAttributes``1(Enum)
  name: GetEnumAttributes<AttributeType>(Enum)
  href: api/Towel.Meta.html#Towel_Meta_GetEnumAttributes__1_Enum_
  commentId: M:Towel.Meta.GetEnumAttributes``1(Enum)
  name.vb: GetEnumAttributes(Of AttributeType)(Enum)
  fullName: Towel.Meta.GetEnumAttributes<AttributeType>(Enum)
  fullName.vb: Towel.Meta.GetEnumAttributes(Of AttributeType)(Enum)
  nameWithType: Meta.GetEnumAttributes<AttributeType>(Enum)
  nameWithType.vb: Meta.GetEnumAttributes(Of AttributeType)(Enum)
- uid: Towel.Meta.GetEventInfosWithAttribute*
  name: GetEventInfosWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetEventInfosWithAttribute_
  commentId: Overload:Towel.Meta.GetEventInfosWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetEventInfosWithAttribute
  nameWithType: Meta.GetEventInfosWithAttribute
- uid: Towel.Meta.GetEventInfosWithAttribute``1(Assembly)
  name: GetEventInfosWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetEventInfosWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetEventInfosWithAttribute``1(Assembly)
  name.vb: GetEventInfosWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetEventInfosWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetEventInfosWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetEventInfosWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetEventInfosWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.GetFactorialMethod(Type)
  name: GetFactorialMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetFactorialMethod_Type_
  commentId: M:Towel.Meta.GetFactorialMethod(Type)
  fullName: Towel.Meta.GetFactorialMethod(Type)
  nameWithType: Meta.GetFactorialMethod(Type)
- uid: Towel.Meta.GetFactorialMethod*
  name: GetFactorialMethod
  href: api/Towel.Meta.html#Towel_Meta_GetFactorialMethod_
  commentId: Overload:Towel.Meta.GetFactorialMethod
  isSpec: "True"
  fullName: Towel.Meta.GetFactorialMethod
  nameWithType: Meta.GetFactorialMethod
- uid: Towel.Meta.GetFactorialMethod``1
  name: GetFactorialMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetFactorialMethod__1
  commentId: M:Towel.Meta.GetFactorialMethod``1
  name.vb: GetFactorialMethod(Of A)()
  fullName: Towel.Meta.GetFactorialMethod<A>()
  fullName.vb: Towel.Meta.GetFactorialMethod(Of A)()
  nameWithType: Meta.GetFactorialMethod<A>()
  nameWithType.vb: Meta.GetFactorialMethod(Of A)()
- uid: Towel.Meta.GetFieldInfosWithAttribute*
  name: GetFieldInfosWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetFieldInfosWithAttribute_
  commentId: Overload:Towel.Meta.GetFieldInfosWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetFieldInfosWithAttribute
  nameWithType: Meta.GetFieldInfosWithAttribute
- uid: Towel.Meta.GetFieldInfosWithAttribute``1(Assembly)
  name: GetFieldInfosWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetFieldInfosWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetFieldInfosWithAttribute``1(Assembly)
  name.vb: GetFieldInfosWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetFieldInfosWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetFieldInfosWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetFieldInfosWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetFieldInfosWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.GetGreaterThanMethod*
  name: GetGreaterThanMethod
  href: api/Towel.Meta.html#Towel_Meta_GetGreaterThanMethod_
  commentId: Overload:Towel.Meta.GetGreaterThanMethod
  isSpec: "True"
  fullName: Towel.Meta.GetGreaterThanMethod
  nameWithType: Meta.GetGreaterThanMethod
- uid: Towel.Meta.GetGreaterThanMethod``3
  name: GetGreaterThanMethod<A, B, C>()
  href: api/Towel.Meta.html#Towel_Meta_GetGreaterThanMethod__3
  commentId: M:Towel.Meta.GetGreaterThanMethod``3
  name.vb: GetGreaterThanMethod(Of A, B, C)()
  fullName: Towel.Meta.GetGreaterThanMethod<A, B, C>()
  fullName.vb: Towel.Meta.GetGreaterThanMethod(Of A, B, C)()
  nameWithType: Meta.GetGreaterThanMethod<A, B, C>()
  nameWithType.vb: Meta.GetGreaterThanMethod(Of A, B, C)()
- uid: Towel.Meta.GetIsEvenMethod(Type)
  name: GetIsEvenMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsEvenMethod_Type_
  commentId: M:Towel.Meta.GetIsEvenMethod(Type)
  fullName: Towel.Meta.GetIsEvenMethod(Type)
  nameWithType: Meta.GetIsEvenMethod(Type)
- uid: Towel.Meta.GetIsEvenMethod*
  name: GetIsEvenMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsEvenMethod_
  commentId: Overload:Towel.Meta.GetIsEvenMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsEvenMethod
  nameWithType: Meta.GetIsEvenMethod
- uid: Towel.Meta.GetIsEvenMethod``1
  name: GetIsEvenMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsEvenMethod__1
  commentId: M:Towel.Meta.GetIsEvenMethod``1
  name.vb: GetIsEvenMethod(Of A)()
  fullName: Towel.Meta.GetIsEvenMethod<A>()
  fullName.vb: Towel.Meta.GetIsEvenMethod(Of A)()
  nameWithType: Meta.GetIsEvenMethod<A>()
  nameWithType.vb: Meta.GetIsEvenMethod(Of A)()
- uid: Towel.Meta.GetIsIntegerMethod(Type)
  name: GetIsIntegerMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsIntegerMethod_Type_
  commentId: M:Towel.Meta.GetIsIntegerMethod(Type)
  fullName: Towel.Meta.GetIsIntegerMethod(Type)
  nameWithType: Meta.GetIsIntegerMethod(Type)
- uid: Towel.Meta.GetIsIntegerMethod*
  name: GetIsIntegerMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsIntegerMethod_
  commentId: Overload:Towel.Meta.GetIsIntegerMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsIntegerMethod
  nameWithType: Meta.GetIsIntegerMethod
- uid: Towel.Meta.GetIsIntegerMethod``1
  name: GetIsIntegerMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsIntegerMethod__1
  commentId: M:Towel.Meta.GetIsIntegerMethod``1
  name.vb: GetIsIntegerMethod(Of A)()
  fullName: Towel.Meta.GetIsIntegerMethod<A>()
  fullName.vb: Towel.Meta.GetIsIntegerMethod(Of A)()
  nameWithType: Meta.GetIsIntegerMethod<A>()
  nameWithType.vb: Meta.GetIsIntegerMethod(Of A)()
- uid: Towel.Meta.GetIsNegativeMethod(Type)
  name: GetIsNegativeMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsNegativeMethod_Type_
  commentId: M:Towel.Meta.GetIsNegativeMethod(Type)
  fullName: Towel.Meta.GetIsNegativeMethod(Type)
  nameWithType: Meta.GetIsNegativeMethod(Type)
- uid: Towel.Meta.GetIsNegativeMethod*
  name: GetIsNegativeMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsNegativeMethod_
  commentId: Overload:Towel.Meta.GetIsNegativeMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsNegativeMethod
  nameWithType: Meta.GetIsNegativeMethod
- uid: Towel.Meta.GetIsNegativeMethod``1
  name: GetIsNegativeMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsNegativeMethod__1
  commentId: M:Towel.Meta.GetIsNegativeMethod``1
  name.vb: GetIsNegativeMethod(Of A)()
  fullName: Towel.Meta.GetIsNegativeMethod<A>()
  fullName.vb: Towel.Meta.GetIsNegativeMethod(Of A)()
  nameWithType: Meta.GetIsNegativeMethod<A>()
  nameWithType.vb: Meta.GetIsNegativeMethod(Of A)()
- uid: Towel.Meta.GetIsNonNegativeMethod(Type)
  name: GetIsNonNegativeMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsNonNegativeMethod_Type_
  commentId: M:Towel.Meta.GetIsNonNegativeMethod(Type)
  fullName: Towel.Meta.GetIsNonNegativeMethod(Type)
  nameWithType: Meta.GetIsNonNegativeMethod(Type)
- uid: Towel.Meta.GetIsNonNegativeMethod*
  name: GetIsNonNegativeMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsNonNegativeMethod_
  commentId: Overload:Towel.Meta.GetIsNonNegativeMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsNonNegativeMethod
  nameWithType: Meta.GetIsNonNegativeMethod
- uid: Towel.Meta.GetIsNonNegativeMethod``1
  name: GetIsNonNegativeMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsNonNegativeMethod__1
  commentId: M:Towel.Meta.GetIsNonNegativeMethod``1
  name.vb: GetIsNonNegativeMethod(Of A)()
  fullName: Towel.Meta.GetIsNonNegativeMethod<A>()
  fullName.vb: Towel.Meta.GetIsNonNegativeMethod(Of A)()
  nameWithType: Meta.GetIsNonNegativeMethod<A>()
  nameWithType.vb: Meta.GetIsNonNegativeMethod(Of A)()
- uid: Towel.Meta.GetIsOddMethod(Type)
  name: GetIsOddMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsOddMethod_Type_
  commentId: M:Towel.Meta.GetIsOddMethod(Type)
  fullName: Towel.Meta.GetIsOddMethod(Type)
  nameWithType: Meta.GetIsOddMethod(Type)
- uid: Towel.Meta.GetIsOddMethod*
  name: GetIsOddMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsOddMethod_
  commentId: Overload:Towel.Meta.GetIsOddMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsOddMethod
  nameWithType: Meta.GetIsOddMethod
- uid: Towel.Meta.GetIsOddMethod``1
  name: GetIsOddMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsOddMethod__1
  commentId: M:Towel.Meta.GetIsOddMethod``1
  name.vb: GetIsOddMethod(Of A)()
  fullName: Towel.Meta.GetIsOddMethod<A>()
  fullName.vb: Towel.Meta.GetIsOddMethod(Of A)()
  nameWithType: Meta.GetIsOddMethod<A>()
  nameWithType.vb: Meta.GetIsOddMethod(Of A)()
- uid: Towel.Meta.GetIsPositiveMethod(Type)
  name: GetIsPositiveMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsPositiveMethod_Type_
  commentId: M:Towel.Meta.GetIsPositiveMethod(Type)
  fullName: Towel.Meta.GetIsPositiveMethod(Type)
  nameWithType: Meta.GetIsPositiveMethod(Type)
- uid: Towel.Meta.GetIsPositiveMethod*
  name: GetIsPositiveMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsPositiveMethod_
  commentId: Overload:Towel.Meta.GetIsPositiveMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsPositiveMethod
  nameWithType: Meta.GetIsPositiveMethod
- uid: Towel.Meta.GetIsPositiveMethod``1
  name: GetIsPositiveMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsPositiveMethod__1
  commentId: M:Towel.Meta.GetIsPositiveMethod``1
  name.vb: GetIsPositiveMethod(Of A)()
  fullName: Towel.Meta.GetIsPositiveMethod<A>()
  fullName.vb: Towel.Meta.GetIsPositiveMethod(Of A)()
  nameWithType: Meta.GetIsPositiveMethod<A>()
  nameWithType.vb: Meta.GetIsPositiveMethod(Of A)()
- uid: Towel.Meta.GetIsPrimeMethod(Type)
  name: GetIsPrimeMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetIsPrimeMethod_Type_
  commentId: M:Towel.Meta.GetIsPrimeMethod(Type)
  fullName: Towel.Meta.GetIsPrimeMethod(Type)
  nameWithType: Meta.GetIsPrimeMethod(Type)
- uid: Towel.Meta.GetIsPrimeMethod*
  name: GetIsPrimeMethod
  href: api/Towel.Meta.html#Towel_Meta_GetIsPrimeMethod_
  commentId: Overload:Towel.Meta.GetIsPrimeMethod
  isSpec: "True"
  fullName: Towel.Meta.GetIsPrimeMethod
  nameWithType: Meta.GetIsPrimeMethod
- uid: Towel.Meta.GetIsPrimeMethod``1
  name: GetIsPrimeMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetIsPrimeMethod__1
  commentId: M:Towel.Meta.GetIsPrimeMethod``1
  name.vb: GetIsPrimeMethod(Of A)()
  fullName: Towel.Meta.GetIsPrimeMethod<A>()
  fullName.vb: Towel.Meta.GetIsPrimeMethod(Of A)()
  nameWithType: Meta.GetIsPrimeMethod<A>()
  nameWithType.vb: Meta.GetIsPrimeMethod(Of A)()
- uid: Towel.Meta.GetLastEnumValue*
  name: GetLastEnumValue
  href: api/Towel.Meta.html#Towel_Meta_GetLastEnumValue_
  commentId: Overload:Towel.Meta.GetLastEnumValue
  isSpec: "True"
  fullName: Towel.Meta.GetLastEnumValue
  nameWithType: Meta.GetLastEnumValue
- uid: Towel.Meta.GetLastEnumValue``1
  name: GetLastEnumValue<ENUM>()
  href: api/Towel.Meta.html#Towel_Meta_GetLastEnumValue__1
  commentId: M:Towel.Meta.GetLastEnumValue``1
  name.vb: GetLastEnumValue(Of ENUM)()
  fullName: Towel.Meta.GetLastEnumValue<ENUM>()
  fullName.vb: Towel.Meta.GetLastEnumValue(Of ENUM)()
  nameWithType: Meta.GetLastEnumValue<ENUM>()
  nameWithType.vb: Meta.GetLastEnumValue(Of ENUM)()
- uid: Towel.Meta.GetLessThanMethod*
  name: GetLessThanMethod
  href: api/Towel.Meta.html#Towel_Meta_GetLessThanMethod_
  commentId: Overload:Towel.Meta.GetLessThanMethod
  isSpec: "True"
  fullName: Towel.Meta.GetLessThanMethod
  nameWithType: Meta.GetLessThanMethod
- uid: Towel.Meta.GetLessThanMethod``3
  name: GetLessThanMethod<A, B, C>()
  href: api/Towel.Meta.html#Towel_Meta_GetLessThanMethod__3
  commentId: M:Towel.Meta.GetLessThanMethod``3
  name.vb: GetLessThanMethod(Of A, B, C)()
  fullName: Towel.Meta.GetLessThanMethod<A, B, C>()
  fullName.vb: Towel.Meta.GetLessThanMethod(Of A, B, C)()
  nameWithType: Meta.GetLessThanMethod<A, B, C>()
  nameWithType.vb: Meta.GetLessThanMethod(Of A, B, C)()
- uid: Towel.Meta.GetMethodInfosWithAttribute*
  name: GetMethodInfosWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetMethodInfosWithAttribute_
  commentId: Overload:Towel.Meta.GetMethodInfosWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetMethodInfosWithAttribute
  nameWithType: Meta.GetMethodInfosWithAttribute
- uid: Towel.Meta.GetMethodInfosWithAttribute``1(Assembly)
  name: GetMethodInfosWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetMethodInfosWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetMethodInfosWithAttribute``1(Assembly)
  name.vb: GetMethodInfosWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetMethodInfosWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetMethodInfosWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetMethodInfosWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetMethodInfosWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.GetPropertyInfosWithAttribute*
  name: GetPropertyInfosWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetPropertyInfosWithAttribute_
  commentId: Overload:Towel.Meta.GetPropertyInfosWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetPropertyInfosWithAttribute
  nameWithType: Meta.GetPropertyInfosWithAttribute
- uid: Towel.Meta.GetPropertyInfosWithAttribute``1(Assembly)
  name: GetPropertyInfosWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetPropertyInfosWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetPropertyInfosWithAttribute``1(Assembly)
  name.vb: GetPropertyInfosWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetPropertyInfosWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetPropertyInfosWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetPropertyInfosWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetPropertyInfosWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.GetTryParseMethod(Type)
  name: GetTryParseMethod(Type)
  href: api/Towel.Meta.html#Towel_Meta_GetTryParseMethod_Type_
  commentId: M:Towel.Meta.GetTryParseMethod(Type)
  fullName: Towel.Meta.GetTryParseMethod(Type)
  nameWithType: Meta.GetTryParseMethod(Type)
- uid: Towel.Meta.GetTryParseMethod*
  name: GetTryParseMethod
  href: api/Towel.Meta.html#Towel_Meta_GetTryParseMethod_
  commentId: Overload:Towel.Meta.GetTryParseMethod
  isSpec: "True"
  fullName: Towel.Meta.GetTryParseMethod
  nameWithType: Meta.GetTryParseMethod
- uid: Towel.Meta.GetTryParseMethod``1
  name: GetTryParseMethod<A>()
  href: api/Towel.Meta.html#Towel_Meta_GetTryParseMethod__1
  commentId: M:Towel.Meta.GetTryParseMethod``1
  name.vb: GetTryParseMethod(Of A)()
  fullName: Towel.Meta.GetTryParseMethod<A>()
  fullName.vb: Towel.Meta.GetTryParseMethod(Of A)()
  nameWithType: Meta.GetTryParseMethod<A>()
  nameWithType.vb: Meta.GetTryParseMethod(Of A)()
- uid: Towel.Meta.GetTypesWithAttribute*
  name: GetTypesWithAttribute
  href: api/Towel.Meta.html#Towel_Meta_GetTypesWithAttribute_
  commentId: Overload:Towel.Meta.GetTypesWithAttribute
  isSpec: "True"
  fullName: Towel.Meta.GetTypesWithAttribute
  nameWithType: Meta.GetTypesWithAttribute
- uid: Towel.Meta.GetTypesWithAttribute``1(Assembly)
  name: GetTypesWithAttribute<AttributeType>(Assembly)
  href: api/Towel.Meta.html#Towel_Meta_GetTypesWithAttribute__1_Assembly_
  commentId: M:Towel.Meta.GetTypesWithAttribute``1(Assembly)
  name.vb: GetTypesWithAttribute(Of AttributeType)(Assembly)
  fullName: Towel.Meta.GetTypesWithAttribute<AttributeType>(Assembly)
  fullName.vb: Towel.Meta.GetTypesWithAttribute(Of AttributeType)(Assembly)
  nameWithType: Meta.GetTypesWithAttribute<AttributeType>(Assembly)
  nameWithType.vb: Meta.GetTypesWithAttribute(Of AttributeType)(Assembly)
- uid: Towel.Meta.HasExplicitCast(Type,Type)
  name: HasExplicitCast(Type, Type)
  href: api/Towel.Meta.html#Towel_Meta_HasExplicitCast_Type_Type_
  commentId: M:Towel.Meta.HasExplicitCast(Type,Type)
  fullName: Towel.Meta.HasExplicitCast(Type, Type)
  nameWithType: Meta.HasExplicitCast(Type, Type)
- uid: Towel.Meta.HasExplicitCast*
  name: HasExplicitCast
  href: api/Towel.Meta.html#Towel_Meta_HasExplicitCast_
  commentId: Overload:Towel.Meta.HasExplicitCast
  isSpec: "True"
  fullName: Towel.Meta.HasExplicitCast
  nameWithType: Meta.HasExplicitCast
- uid: Towel.Meta.HasExplicitCast``2
  name: HasExplicitCast<From, To>()
  href: api/Towel.Meta.html#Towel_Meta_HasExplicitCast__2
  commentId: M:Towel.Meta.HasExplicitCast``2
  name.vb: HasExplicitCast(Of From, To)()
  fullName: Towel.Meta.HasExplicitCast<From, To>()
  fullName.vb: Towel.Meta.HasExplicitCast(Of From, To)()
  nameWithType: Meta.HasExplicitCast<From, To>()
  nameWithType.vb: Meta.HasExplicitCast(Of From, To)()
- uid: Towel.Meta.HasImplicitCast(Type,Type)
  name: HasImplicitCast(Type, Type)
  href: api/Towel.Meta.html#Towel_Meta_HasImplicitCast_Type_Type_
  commentId: M:Towel.Meta.HasImplicitCast(Type,Type)
  fullName: Towel.Meta.HasImplicitCast(Type, Type)
  nameWithType: Meta.HasImplicitCast(Type, Type)
- uid: Towel.Meta.HasImplicitCast*
  name: HasImplicitCast
  href: api/Towel.Meta.html#Towel_Meta_HasImplicitCast_
  commentId: Overload:Towel.Meta.HasImplicitCast
  isSpec: "True"
  fullName: Towel.Meta.HasImplicitCast
  nameWithType: Meta.HasImplicitCast
- uid: Towel.Meta.HasImplicitCast``2
  name: HasImplicitCast<From, To>()
  href: api/Towel.Meta.html#Towel_Meta_HasImplicitCast__2
  commentId: M:Towel.Meta.HasImplicitCast``2
  name.vb: HasImplicitCast(Of From, To)()
  fullName: Towel.Meta.HasImplicitCast<From, To>()
  fullName.vb: Towel.Meta.HasImplicitCast(Of From, To)()
  nameWithType: Meta.HasImplicitCast<From, To>()
  nameWithType.vb: Meta.HasImplicitCast(Of From, To)()
- uid: Towel.Meta.IsLocalFunction(MethodInfo)
  name: IsLocalFunction(MethodInfo)
  href: api/Towel.Meta.html#Towel_Meta_IsLocalFunction_MethodInfo_
  commentId: M:Towel.Meta.IsLocalFunction(MethodInfo)
  fullName: Towel.Meta.IsLocalFunction(MethodInfo)
  nameWithType: Meta.IsLocalFunction(MethodInfo)
- uid: Towel.Meta.IsLocalFunction*
  name: IsLocalFunction
  href: api/Towel.Meta.html#Towel_Meta_IsLocalFunction_
  commentId: Overload:Towel.Meta.IsLocalFunction
  isSpec: "True"
  fullName: Towel.Meta.IsLocalFunction
  nameWithType: Meta.IsLocalFunction
- uid: Towel.Meta.LoadXmlDocumentation(System.String)
  name: LoadXmlDocumentation(String)
  href: api/Towel.Meta.html#Towel_Meta_LoadXmlDocumentation_System_String_
  commentId: M:Towel.Meta.LoadXmlDocumentation(System.String)
  fullName: Towel.Meta.LoadXmlDocumentation(System.String)
  nameWithType: Meta.LoadXmlDocumentation(String)
- uid: Towel.Meta.LoadXmlDocumentation(TextReader)
  name: LoadXmlDocumentation(TextReader)
  href: api/Towel.Meta.html#Towel_Meta_LoadXmlDocumentation_TextReader_
  commentId: M:Towel.Meta.LoadXmlDocumentation(TextReader)
  fullName: Towel.Meta.LoadXmlDocumentation(TextReader)
  nameWithType: Meta.LoadXmlDocumentation(TextReader)
- uid: Towel.Meta.LoadXmlDocumentation*
  name: LoadXmlDocumentation
  href: api/Towel.Meta.html#Towel_Meta_LoadXmlDocumentation_
  commentId: Overload:Towel.Meta.LoadXmlDocumentation
  isSpec: "True"
  fullName: Towel.Meta.LoadXmlDocumentation
  nameWithType: Meta.LoadXmlDocumentation
- uid: Towel.Serialization
  name: Serialization
  href: api/Towel.Serialization.html
  commentId: T:Towel.Serialization
  fullName: Towel.Serialization
  nameWithType: Serialization
- uid: Towel.Serialization.DefaultFromXml*
  name: DefaultFromXml
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultFromXml_
  commentId: Overload:Towel.Serialization.DefaultFromXml
  isSpec: "True"
  fullName: Towel.Serialization.DefaultFromXml
  nameWithType: Serialization.DefaultFromXml
- uid: Towel.Serialization.DefaultFromXml``1(System.String)
  name: DefaultFromXml<T>(String)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultFromXml__1_System_String_
  commentId: M:Towel.Serialization.DefaultFromXml``1(System.String)
  name.vb: DefaultFromXml(Of T)(String)
  fullName: Towel.Serialization.DefaultFromXml<T>(System.String)
  fullName.vb: Towel.Serialization.DefaultFromXml(Of T)(System.String)
  nameWithType: Serialization.DefaultFromXml<T>(String)
  nameWithType.vb: Serialization.DefaultFromXml(Of T)(String)
- uid: Towel.Serialization.DefaultFromXml``1(TextReader)
  name: DefaultFromXml<T>(TextReader)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultFromXml__1_TextReader_
  commentId: M:Towel.Serialization.DefaultFromXml``1(TextReader)
  name.vb: DefaultFromXml(Of T)(TextReader)
  fullName: Towel.Serialization.DefaultFromXml<T>(TextReader)
  fullName.vb: Towel.Serialization.DefaultFromXml(Of T)(TextReader)
  nameWithType: Serialization.DefaultFromXml<T>(TextReader)
  nameWithType.vb: Serialization.DefaultFromXml(Of T)(TextReader)
- uid: Towel.Serialization.DefaultToXml*
  name: DefaultToXml
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultToXml_
  commentId: Overload:Towel.Serialization.DefaultToXml
  isSpec: "True"
  fullName: Towel.Serialization.DefaultToXml
  nameWithType: Serialization.DefaultToXml
- uid: Towel.Serialization.DefaultToXml``1(``0)
  name: DefaultToXml<T>(T)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultToXml__1___0_
  commentId: M:Towel.Serialization.DefaultToXml``1(``0)
  name.vb: DefaultToXml(Of T)(T)
  fullName: Towel.Serialization.DefaultToXml<T>(T)
  fullName.vb: Towel.Serialization.DefaultToXml(Of T)(T)
  nameWithType: Serialization.DefaultToXml<T>(T)
  nameWithType.vb: Serialization.DefaultToXml(Of T)(T)
- uid: Towel.Serialization.DefaultToXml``1(``0,TextWriter)
  name: DefaultToXml<T>(T, TextWriter)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultToXml__1___0_TextWriter_
  commentId: M:Towel.Serialization.DefaultToXml``1(``0,TextWriter)
  name.vb: DefaultToXml(Of T)(T, TextWriter)
  fullName: Towel.Serialization.DefaultToXml<T>(T, TextWriter)
  fullName.vb: Towel.Serialization.DefaultToXml(Of T)(T, TextWriter)
  nameWithType: Serialization.DefaultToXml<T>(T, TextWriter)
  nameWithType.vb: Serialization.DefaultToXml(Of T)(T, TextWriter)
- uid: Towel.Serialization.DefaultToXml``1(``0,TextWriter,XmlWriterSettings)
  name: DefaultToXml<T>(T, TextWriter, XmlWriterSettings)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultToXml__1___0_TextWriter_XmlWriterSettings_
  commentId: M:Towel.Serialization.DefaultToXml``1(``0,TextWriter,XmlWriterSettings)
  name.vb: DefaultToXml(Of T)(T, TextWriter, XmlWriterSettings)
  fullName: Towel.Serialization.DefaultToXml<T>(T, TextWriter, XmlWriterSettings)
  fullName.vb: Towel.Serialization.DefaultToXml(Of T)(T, TextWriter, XmlWriterSettings)
  nameWithType: Serialization.DefaultToXml<T>(T, TextWriter, XmlWriterSettings)
  nameWithType.vb: Serialization.DefaultToXml(Of T)(T, TextWriter, XmlWriterSettings)
- uid: Towel.Serialization.DefaultToXml``1(``0,XmlWriterSettings)
  name: DefaultToXml<T>(T, XmlWriterSettings)
  href: api/Towel.Serialization.html#Towel_Serialization_DefaultToXml__1___0_XmlWriterSettings_
  commentId: M:Towel.Serialization.DefaultToXml``1(``0,XmlWriterSettings)
  name.vb: DefaultToXml(Of T)(T, XmlWriterSettings)
  fullName: Towel.Serialization.DefaultToXml<T>(T, XmlWriterSettings)
  fullName.vb: Towel.Serialization.DefaultToXml(Of T)(T, XmlWriterSettings)
  nameWithType: Serialization.DefaultToXml<T>(T, XmlWriterSettings)
  nameWithType.vb: Serialization.DefaultToXml(Of T)(T, XmlWriterSettings)
- uid: Towel.Serialization.Json
  name: Serialization.Json
  href: api/Towel.Serialization.Json.html
  commentId: T:Towel.Serialization.Json
  fullName: Towel.Serialization.Json
  nameWithType: Serialization.Json
- uid: Towel.Serialization.Json.Delegate
  name: Serialization.Json.Delegate
  href: api/Towel.Serialization.Json.Delegate.html
  commentId: T:Towel.Serialization.Json.Delegate
  fullName: Towel.Serialization.Json.Delegate
  nameWithType: Serialization.Json.Delegate
- uid: Towel.Serialization.Json.Delegate.DeclaringType
  name: DeclaringType
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_DeclaringType
  commentId: P:Towel.Serialization.Json.Delegate.DeclaringType
  fullName: Towel.Serialization.Json.Delegate.DeclaringType
  nameWithType: Serialization.Json.Delegate.DeclaringType
- uid: Towel.Serialization.Json.Delegate.DeclaringType*
  name: DeclaringType
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_DeclaringType_
  commentId: Overload:Towel.Serialization.Json.Delegate.DeclaringType
  isSpec: "True"
  fullName: Towel.Serialization.Json.Delegate.DeclaringType
  nameWithType: Serialization.Json.Delegate.DeclaringType
- uid: Towel.Serialization.Json.Delegate.MethodName
  name: MethodName
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_MethodName
  commentId: P:Towel.Serialization.Json.Delegate.MethodName
  fullName: Towel.Serialization.Json.Delegate.MethodName
  nameWithType: Serialization.Json.Delegate.MethodName
- uid: Towel.Serialization.Json.Delegate.MethodName*
  name: MethodName
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_MethodName_
  commentId: Overload:Towel.Serialization.Json.Delegate.MethodName
  isSpec: "True"
  fullName: Towel.Serialization.Json.Delegate.MethodName
  nameWithType: Serialization.Json.Delegate.MethodName
- uid: Towel.Serialization.Json.Delegate.ParameterTypes
  name: ParameterTypes
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_ParameterTypes
  commentId: P:Towel.Serialization.Json.Delegate.ParameterTypes
  fullName: Towel.Serialization.Json.Delegate.ParameterTypes
  nameWithType: Serialization.Json.Delegate.ParameterTypes
- uid: Towel.Serialization.Json.Delegate.ParameterTypes*
  name: ParameterTypes
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_ParameterTypes_
  commentId: Overload:Towel.Serialization.Json.Delegate.ParameterTypes
  isSpec: "True"
  fullName: Towel.Serialization.Json.Delegate.ParameterTypes
  nameWithType: Serialization.Json.Delegate.ParameterTypes
- uid: Towel.Serialization.Json.Delegate.ReturnType
  name: ReturnType
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_ReturnType
  commentId: P:Towel.Serialization.Json.Delegate.ReturnType
  fullName: Towel.Serialization.Json.Delegate.ReturnType
  nameWithType: Serialization.Json.Delegate.ReturnType
- uid: Towel.Serialization.Json.Delegate.ReturnType*
  name: ReturnType
  href: api/Towel.Serialization.Json.Delegate.html#Towel_Serialization_Json_Delegate_ReturnType_
  commentId: Overload:Towel.Serialization.Json.Delegate.ReturnType
  isSpec: "True"
  fullName: Towel.Serialization.Json.Delegate.ReturnType
  nameWithType: Serialization.Json.Delegate.ReturnType
- uid: Towel.Serialization.StaticDelegateFromJson*
  name: StaticDelegateFromJson
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateFromJson_
  commentId: Overload:Towel.Serialization.StaticDelegateFromJson
  isSpec: "True"
  fullName: Towel.Serialization.StaticDelegateFromJson
  nameWithType: Serialization.StaticDelegateFromJson
- uid: Towel.Serialization.StaticDelegateFromJson``1(System.String)
  name: StaticDelegateFromJson<Delegate>(String)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateFromJson__1_System_String_
  commentId: M:Towel.Serialization.StaticDelegateFromJson``1(System.String)
  name.vb: StaticDelegateFromJson(Of Delegate)(String)
  fullName: Towel.Serialization.StaticDelegateFromJson<Delegate>(System.String)
  fullName.vb: Towel.Serialization.StaticDelegateFromJson(Of Delegate)(System.String)
  nameWithType: Serialization.StaticDelegateFromJson<Delegate>(String)
  nameWithType.vb: Serialization.StaticDelegateFromJson(Of Delegate)(String)
- uid: Towel.Serialization.StaticDelegateFromXml*
  name: StaticDelegateFromXml
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateFromXml_
  commentId: Overload:Towel.Serialization.StaticDelegateFromXml
  isSpec: "True"
  fullName: Towel.Serialization.StaticDelegateFromXml
  nameWithType: Serialization.StaticDelegateFromXml
- uid: Towel.Serialization.StaticDelegateFromXml``1(System.String)
  name: StaticDelegateFromXml<T>(String)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateFromXml__1_System_String_
  commentId: M:Towel.Serialization.StaticDelegateFromXml``1(System.String)
  name.vb: StaticDelegateFromXml(Of T)(String)
  fullName: Towel.Serialization.StaticDelegateFromXml<T>(System.String)
  fullName.vb: Towel.Serialization.StaticDelegateFromXml(Of T)(System.String)
  nameWithType: Serialization.StaticDelegateFromXml<T>(String)
  nameWithType.vb: Serialization.StaticDelegateFromXml(Of T)(String)
- uid: Towel.Serialization.StaticDelegateFromXml``1(TextReader)
  name: StaticDelegateFromXml<Delegate>(TextReader)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateFromXml__1_TextReader_
  commentId: M:Towel.Serialization.StaticDelegateFromXml``1(TextReader)
  name.vb: StaticDelegateFromXml(Of Delegate)(TextReader)
  fullName: Towel.Serialization.StaticDelegateFromXml<Delegate>(TextReader)
  fullName.vb: Towel.Serialization.StaticDelegateFromXml(Of Delegate)(TextReader)
  nameWithType: Serialization.StaticDelegateFromXml<Delegate>(TextReader)
  nameWithType.vb: Serialization.StaticDelegateFromXml(Of Delegate)(TextReader)
- uid: Towel.Serialization.StaticDelegateToJson*
  name: StaticDelegateToJson
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToJson_
  commentId: Overload:Towel.Serialization.StaticDelegateToJson
  isSpec: "True"
  fullName: Towel.Serialization.StaticDelegateToJson
  nameWithType: Serialization.StaticDelegateToJson
- uid: Towel.Serialization.StaticDelegateToJson``1(``0)
  name: StaticDelegateToJson<T>(T)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToJson__1___0_
  commentId: M:Towel.Serialization.StaticDelegateToJson``1(``0)
  name.vb: StaticDelegateToJson(Of T)(T)
  fullName: Towel.Serialization.StaticDelegateToJson<T>(T)
  fullName.vb: Towel.Serialization.StaticDelegateToJson(Of T)(T)
  nameWithType: Serialization.StaticDelegateToJson<T>(T)
  nameWithType.vb: Serialization.StaticDelegateToJson(Of T)(T)
- uid: Towel.Serialization.StaticDelegateToXml*
  name: StaticDelegateToXml
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToXml_
  commentId: Overload:Towel.Serialization.StaticDelegateToXml
  isSpec: "True"
  fullName: Towel.Serialization.StaticDelegateToXml
  nameWithType: Serialization.StaticDelegateToXml
- uid: Towel.Serialization.StaticDelegateToXml``1(``0)
  name: StaticDelegateToXml<T>(T)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToXml__1___0_
  commentId: M:Towel.Serialization.StaticDelegateToXml``1(``0)
  name.vb: StaticDelegateToXml(Of T)(T)
  fullName: Towel.Serialization.StaticDelegateToXml<T>(T)
  fullName.vb: Towel.Serialization.StaticDelegateToXml(Of T)(T)
  nameWithType: Serialization.StaticDelegateToXml<T>(T)
  nameWithType.vb: Serialization.StaticDelegateToXml(Of T)(T)
- uid: Towel.Serialization.StaticDelegateToXml``1(``0,TextWriter)
  name: StaticDelegateToXml<T>(T, TextWriter)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToXml__1___0_TextWriter_
  commentId: M:Towel.Serialization.StaticDelegateToXml``1(``0,TextWriter)
  name.vb: StaticDelegateToXml(Of T)(T, TextWriter)
  fullName: Towel.Serialization.StaticDelegateToXml<T>(T, TextWriter)
  fullName.vb: Towel.Serialization.StaticDelegateToXml(Of T)(T, TextWriter)
  nameWithType: Serialization.StaticDelegateToXml<T>(T, TextWriter)
  nameWithType.vb: Serialization.StaticDelegateToXml(Of T)(T, TextWriter)
- uid: Towel.Serialization.StaticDelegateToXml``1(``0,TextWriter,XmlWriterSettings)
  name: StaticDelegateToXml<T>(T, TextWriter, XmlWriterSettings)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToXml__1___0_TextWriter_XmlWriterSettings_
  commentId: M:Towel.Serialization.StaticDelegateToXml``1(``0,TextWriter,XmlWriterSettings)
  name.vb: StaticDelegateToXml(Of T)(T, TextWriter, XmlWriterSettings)
  fullName: Towel.Serialization.StaticDelegateToXml<T>(T, TextWriter, XmlWriterSettings)
  fullName.vb: Towel.Serialization.StaticDelegateToXml(Of T)(T, TextWriter, XmlWriterSettings)
  nameWithType: Serialization.StaticDelegateToXml<T>(T, TextWriter, XmlWriterSettings)
  nameWithType.vb: Serialization.StaticDelegateToXml(Of T)(T, TextWriter, XmlWriterSettings)
- uid: Towel.Serialization.StaticDelegateToXml``1(``0,XmlWriterSettings)
  name: StaticDelegateToXml<T>(T, XmlWriterSettings)
  href: api/Towel.Serialization.html#Towel_Serialization_StaticDelegateToXml__1___0_XmlWriterSettings_
  commentId: M:Towel.Serialization.StaticDelegateToXml``1(``0,XmlWriterSettings)
  name.vb: StaticDelegateToXml(Of T)(T, XmlWriterSettings)
  fullName: Towel.Serialization.StaticDelegateToXml<T>(T, XmlWriterSettings)
  fullName.vb: Towel.Serialization.StaticDelegateToXml(Of T)(T, XmlWriterSettings)
  nameWithType: Serialization.StaticDelegateToXml<T>(T, XmlWriterSettings)
  nameWithType.vb: Serialization.StaticDelegateToXml(Of T)(T, XmlWriterSettings)
- uid: Towel.Statics
  name: Statics
  href: api/Towel.Statics.html
  commentId: T:Towel.Statics
  fullName: Towel.Statics
  nameWithType: Statics
- uid: Towel.Statics.Ɐ*
  name: Ɐ
  href: api/Towel.Statics.html#Towel_Statics___
  commentId: Overload:Towel.Statics.Ɐ
  isSpec: "True"
  fullName: Towel.Statics.Ɐ
  nameWithType: Statics.Ɐ
- uid: Towel.Statics.Ɐ``1(``0[])
  name: Ɐ<T>(T[])
  href: api/Towel.Statics.html#Towel_Statics____1___0___
  commentId: M:Towel.Statics.Ɐ``1(``0[])
  name.vb: Ɐ(Of T)(T())
  fullName: Towel.Statics.Ɐ<T>(T[])
  fullName.vb: Towel.Statics.Ɐ(Of T)(T())
  nameWithType: Statics.Ɐ<T>(T[])
  nameWithType.vb: Statics.Ɐ(Of T)(T())
- uid: Towel.Statics.AbsoluteValue*
  name: AbsoluteValue
  href: api/Towel.Statics.html#Towel_Statics_AbsoluteValue_
  commentId: Overload:Towel.Statics.AbsoluteValue
  isSpec: "True"
  fullName: Towel.Statics.AbsoluteValue
  nameWithType: Statics.AbsoluteValue
- uid: Towel.Statics.AbsoluteValue``1(``0)
  name: AbsoluteValue<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_AbsoluteValue__1___0_
  commentId: M:Towel.Statics.AbsoluteValue``1(``0)
  name.vb: AbsoluteValue(Of T)(T)
  fullName: Towel.Statics.AbsoluteValue<T>(T)
  fullName.vb: Towel.Statics.AbsoluteValue(Of T)(T)
  nameWithType: Statics.AbsoluteValue<T>(T)
  nameWithType.vb: Statics.AbsoluteValue(Of T)(T)
- uid: Towel.Statics.Action_ReadOnlySpan_Runtime`1
  name: Statics.Action_ReadOnlySpan_Runtime<T>
  href: api/Towel.Statics.Action_ReadOnlySpan_Runtime-1.html
  commentId: T:Towel.Statics.Action_ReadOnlySpan_Runtime`1
  name.vb: Statics.Action_ReadOnlySpan_Runtime(Of T)
  fullName: Towel.Statics.Action_ReadOnlySpan_Runtime<T>
  fullName.vb: Towel.Statics.Action_ReadOnlySpan_Runtime(Of T)
  nameWithType: Statics.Action_ReadOnlySpan_Runtime<T>
  nameWithType.vb: Statics.Action_ReadOnlySpan_Runtime(Of T)
- uid: Towel.Statics.Action_ReadOnlySpan_Runtime`1.Do(ReadOnlySpan{`0})
  name: Do(ReadOnlySpan<T>)
  href: api/Towel.Statics.Action_ReadOnlySpan_Runtime-1.html#Towel_Statics_Action_ReadOnlySpan_Runtime_1_Do_ReadOnlySpan__0__
  commentId: M:Towel.Statics.Action_ReadOnlySpan_Runtime`1.Do(ReadOnlySpan{`0})
  name.vb: Do(ReadOnlySpan(Of T))
  fullName: Towel.Statics.Action_ReadOnlySpan_Runtime<T>.Do(ReadOnlySpan<T>)
  fullName.vb: Towel.Statics.Action_ReadOnlySpan_Runtime(Of T).Do(ReadOnlySpan(Of T))
  nameWithType: Statics.Action_ReadOnlySpan_Runtime<T>.Do(ReadOnlySpan<T>)
  nameWithType.vb: Statics.Action_ReadOnlySpan_Runtime(Of T).Do(ReadOnlySpan(Of T))
- uid: Towel.Statics.Action_ReadOnlySpan_Runtime`1.Do*
  name: Do
  href: api/Towel.Statics.Action_ReadOnlySpan_Runtime-1.html#Towel_Statics_Action_ReadOnlySpan_Runtime_1_Do_
  commentId: Overload:Towel.Statics.Action_ReadOnlySpan_Runtime`1.Do
  isSpec: "True"
  fullName: Towel.Statics.Action_ReadOnlySpan_Runtime<T>.Do
  fullName.vb: Towel.Statics.Action_ReadOnlySpan_Runtime(Of T).Do
  nameWithType: Statics.Action_ReadOnlySpan_Runtime<T>.Do
  nameWithType.vb: Statics.Action_ReadOnlySpan_Runtime(Of T).Do
- uid: Towel.Statics.Action_ReadOnlySpan_Runtime`1.op_Implicit(Towel.Statics.Action_ReadOnlySpan{`0})~Towel.Statics.Action_ReadOnlySpan_Runtime{`0}
  name: Implicit(Statics.Action_ReadOnlySpan<T> to Statics.Action_ReadOnlySpan_Runtime<T>)
  href: api/Towel.Statics.Action_ReadOnlySpan_Runtime-1.html#Towel_Statics_Action_ReadOnlySpan_Runtime_1_op_Implicit_Towel_Statics_Action_ReadOnlySpan__0___Towel_Statics_Action_ReadOnlySpan_Runtime__0_
  commentId: M:Towel.Statics.Action_ReadOnlySpan_Runtime`1.op_Implicit(Towel.Statics.Action_ReadOnlySpan{`0})~Towel.Statics.Action_ReadOnlySpan_Runtime{`0}
  name.vb: Widening(Statics.Action_ReadOnlySpan(Of T) to Statics.Action_ReadOnlySpan_Runtime(Of T))
  fullName: Towel.Statics.Action_ReadOnlySpan_Runtime<T>.Implicit(Towel.Statics.Action_ReadOnlySpan<T> to Towel.Statics.Action_ReadOnlySpan_Runtime<T>)
  fullName.vb: Towel.Statics.Action_ReadOnlySpan_Runtime(Of T).Widening(Towel.Statics.Action_ReadOnlySpan(Of T) to Towel.Statics.Action_ReadOnlySpan_Runtime(Of T))
  nameWithType: Statics.Action_ReadOnlySpan_Runtime<T>.Implicit(Statics.Action_ReadOnlySpan<T> to Statics.Action_ReadOnlySpan_Runtime<T>)
  nameWithType.vb: Statics.Action_ReadOnlySpan_Runtime(Of T).Widening(Statics.Action_ReadOnlySpan(Of T) to Statics.Action_ReadOnlySpan_Runtime(Of T))
- uid: Towel.Statics.Action_ReadOnlySpan_Runtime`1.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.Action_ReadOnlySpan_Runtime-1.html#Towel_Statics_Action_ReadOnlySpan_Runtime_1_op_Implicit_
  commentId: Overload:Towel.Statics.Action_ReadOnlySpan_Runtime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.Action_ReadOnlySpan_Runtime<T>.Implicit
  fullName.vb: Towel.Statics.Action_ReadOnlySpan_Runtime(Of T).Widening
  nameWithType: Statics.Action_ReadOnlySpan_Runtime<T>.Implicit
  nameWithType.vb: Statics.Action_ReadOnlySpan_Runtime(Of T).Widening
- uid: Towel.Statics.Action_ReadOnlySpan`1
  name: Statics.Action_ReadOnlySpan<T>
  href: api/Towel.Statics.Action_ReadOnlySpan-1.html
  commentId: T:Towel.Statics.Action_ReadOnlySpan`1
  name.vb: Statics.Action_ReadOnlySpan(Of T)
  fullName: Towel.Statics.Action_ReadOnlySpan<T>
  fullName.vb: Towel.Statics.Action_ReadOnlySpan(Of T)
  nameWithType: Statics.Action_ReadOnlySpan<T>
  nameWithType.vb: Statics.Action_ReadOnlySpan(Of T)
- uid: Towel.Statics.Addition*
  name: Addition
  href: api/Towel.Statics.html#Towel_Statics_Addition_
  commentId: Overload:Towel.Statics.Addition
  isSpec: "True"
  fullName: Towel.Statics.Addition
  nameWithType: Statics.Addition
- uid: Towel.Statics.Addition``1(``0,``0)
  name: Addition<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Addition__1___0___0_
  commentId: M:Towel.Statics.Addition``1(``0,``0)
  name.vb: Addition(Of T)(T, T)
  fullName: Towel.Statics.Addition<T>(T, T)
  fullName.vb: Towel.Statics.Addition(Of T)(T, T)
  nameWithType: Statics.Addition<T>(T, T)
  nameWithType.vb: Statics.Addition(Of T)(T, T)
- uid: Towel.Statics.Addition``1(``0,``0,``0,``0[])
  name: Addition<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Addition__1___0___0___0___0___
  commentId: M:Towel.Statics.Addition``1(``0,``0,``0,``0[])
  name.vb: Addition(Of T)(T, T, T, T())
  fullName: Towel.Statics.Addition<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Addition(Of T)(T, T, T, T())
  nameWithType: Statics.Addition<T>(T, T, T, T[])
  nameWithType.vb: Statics.Addition(Of T)(T, T, T, T())
- uid: Towel.Statics.Addition``1(Action{Action{``0}})
  name: Addition<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Addition__1_Action_Action___0___
  commentId: M:Towel.Statics.Addition``1(Action{Action{``0}})
  name.vb: Addition(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Addition<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Addition(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Addition<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Addition(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Addition``3(``0,``1)
  name: Addition<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Addition__3___0___1_
  commentId: M:Towel.Statics.Addition``3(``0,``1)
  name.vb: Addition(Of A, B, C)(A, B)
  fullName: Towel.Statics.Addition<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Addition(Of A, B, C)(A, B)
  nameWithType: Statics.Addition<A, B, C>(A, B)
  nameWithType.vb: Statics.Addition(Of A, B, C)(A, B)
- uid: Towel.Statics.BinomialCoefficient*
  name: BinomialCoefficient
  href: api/Towel.Statics.html#Towel_Statics_BinomialCoefficient_
  commentId: Overload:Towel.Statics.BinomialCoefficient
  isSpec: "True"
  fullName: Towel.Statics.BinomialCoefficient
  nameWithType: Statics.BinomialCoefficient
- uid: Towel.Statics.BinomialCoefficient``1(``0,``0)
  name: BinomialCoefficient<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_BinomialCoefficient__1___0___0_
  commentId: M:Towel.Statics.BinomialCoefficient``1(``0,``0)
  name.vb: BinomialCoefficient(Of T)(T, T)
  fullName: Towel.Statics.BinomialCoefficient<T>(T, T)
  fullName.vb: Towel.Statics.BinomialCoefficient(Of T)(T, T)
  nameWithType: Statics.BinomialCoefficient<T>(T, T)
  nameWithType.vb: Statics.BinomialCoefficient(Of T)(T, T)
- uid: Towel.Statics.Break
  name: Break
  href: api/Towel.Statics.html#Towel_Statics_Break
  commentId: F:Towel.Statics.Break
  fullName: Towel.Statics.Break
  nameWithType: Statics.Break
- uid: Towel.Statics.Chance
  name: Chance
  href: api/Towel.Statics.html#Towel_Statics_Chance
  commentId: P:Towel.Statics.Chance
  fullName: Towel.Statics.Chance
  nameWithType: Statics.Chance
- uid: Towel.Statics.Chance*
  name: Chance
  href: api/Towel.Statics.html#Towel_Statics_Chance_
  commentId: Overload:Towel.Statics.Chance
  isSpec: "True"
  fullName: Towel.Statics.Chance
  nameWithType: Statics.Chance
- uid: Towel.Statics.ChanceSyntax
  name: Statics.ChanceSyntax
  href: api/Towel.Statics.ChanceSyntax.html
  commentId: T:Towel.Statics.ChanceSyntax
  fullName: Towel.Statics.ChanceSyntax
  nameWithType: Statics.ChanceSyntax
- uid: Towel.Statics.ChanceSyntax.Algorithm
  name: Algorithm
  href: api/Towel.Statics.ChanceSyntax.html#Towel_Statics_ChanceSyntax_Algorithm
  commentId: F:Towel.Statics.ChanceSyntax.Algorithm
  fullName: Towel.Statics.ChanceSyntax.Algorithm
  nameWithType: Statics.ChanceSyntax.Algorithm
- uid: Towel.Statics.ChanceSyntax.op_Modulus(System.Double,Towel.Statics.ChanceSyntax)
  name: Modulus(Double, Statics.ChanceSyntax)
  href: api/Towel.Statics.ChanceSyntax.html#Towel_Statics_ChanceSyntax_op_Modulus_System_Double_Towel_Statics_ChanceSyntax_
  commentId: M:Towel.Statics.ChanceSyntax.op_Modulus(System.Double,Towel.Statics.ChanceSyntax)
  fullName: Towel.Statics.ChanceSyntax.Modulus(System.Double, Towel.Statics.ChanceSyntax)
  nameWithType: Statics.ChanceSyntax.Modulus(Double, Statics.ChanceSyntax)
- uid: Towel.Statics.ChanceSyntax.op_Modulus*
  name: Modulus
  href: api/Towel.Statics.ChanceSyntax.html#Towel_Statics_ChanceSyntax_op_Modulus_
  commentId: Overload:Towel.Statics.ChanceSyntax.op_Modulus
  isSpec: "True"
  fullName: Towel.Statics.ChanceSyntax.Modulus
  nameWithType: Statics.ChanceSyntax.Modulus
- uid: Towel.Statics.CharEquate
  name: Statics.CharEquate
  href: api/Towel.Statics.CharEquate.html
  commentId: T:Towel.Statics.CharEquate
  fullName: Towel.Statics.CharEquate
  nameWithType: Statics.CharEquate
- uid: Towel.Statics.CharEquate.Do(System.Char,System.Char)
  name: Do(Char, Char)
  href: api/Towel.Statics.CharEquate.html#Towel_Statics_CharEquate_Do_System_Char_System_Char_
  commentId: M:Towel.Statics.CharEquate.Do(System.Char,System.Char)
  fullName: Towel.Statics.CharEquate.Do(System.Char, System.Char)
  nameWithType: Statics.CharEquate.Do(Char, Char)
- uid: Towel.Statics.CharEquate.Do*
  name: Do
  href: api/Towel.Statics.CharEquate.html#Towel_Statics_CharEquate_Do_
  commentId: Overload:Towel.Statics.CharEquate.Do
  isSpec: "True"
  fullName: Towel.Statics.CharEquate.Do
  nameWithType: Statics.CharEquate.Do
- uid: Towel.Statics.Clamp*
  name: Clamp
  href: api/Towel.Statics.html#Towel_Statics_Clamp_
  commentId: Overload:Towel.Statics.Clamp
  isSpec: "True"
  fullName: Towel.Statics.Clamp
  nameWithType: Statics.Clamp
- uid: Towel.Statics.Clamp``1(``0,``0,``0)
  name: Clamp<T>(T, T, T)
  href: api/Towel.Statics.html#Towel_Statics_Clamp__1___0___0___0_
  commentId: M:Towel.Statics.Clamp``1(``0,``0,``0)
  name.vb: Clamp(Of T)(T, T, T)
  fullName: Towel.Statics.Clamp<T>(T, T, T)
  fullName.vb: Towel.Statics.Clamp(Of T)(T, T, T)
  nameWithType: Statics.Clamp<T>(T, T, T)
  nameWithType.vb: Statics.Clamp(Of T)(T, T, T)
- uid: Towel.Statics.Combinations*
  name: Combinations
  href: api/Towel.Statics.html#Towel_Statics_Combinations_
  commentId: Overload:Towel.Statics.Combinations
  isSpec: "True"
  fullName: Towel.Statics.Combinations
  nameWithType: Statics.Combinations
- uid: Towel.Statics.Combinations``1(``0,``0[])
  name: Combinations<T>(T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Combinations__1___0___0___
  commentId: M:Towel.Statics.Combinations``1(``0,``0[])
  name.vb: Combinations(Of T)(T, T())
  fullName: Towel.Statics.Combinations<T>(T, T[])
  fullName.vb: Towel.Statics.Combinations(Of T)(T, T())
  nameWithType: Statics.Combinations<T>(T, T[])
  nameWithType.vb: Statics.Combinations(Of T)(T, T())
- uid: Towel.Statics.Combinations``1(``0[][],Towel.Statics.Action_ReadOnlySpan{``0})
  name: Combinations<T>(T[][], Statics.Action_ReadOnlySpan<T>)
  href: api/Towel.Statics.html#Towel_Statics_Combinations__1___0_____Towel_Statics_Action_ReadOnlySpan___0__
  commentId: M:Towel.Statics.Combinations``1(``0[][],Towel.Statics.Action_ReadOnlySpan{``0})
  name.vb: Combinations(Of T)(T()(), Statics.Action_ReadOnlySpan(Of T))
  fullName: Towel.Statics.Combinations<T>(T[][], Towel.Statics.Action_ReadOnlySpan<T>)
  fullName.vb: Towel.Statics.Combinations(Of T)(T()(), Towel.Statics.Action_ReadOnlySpan(Of T))
  nameWithType: Statics.Combinations<T>(T[][], Statics.Action_ReadOnlySpan<T>)
  nameWithType.vb: Statics.Combinations(Of T)(T()(), Statics.Action_ReadOnlySpan(Of T))
- uid: Towel.Statics.Combinations``1(System.Int32,Towel.Statics.Action_ReadOnlySpan{``0},Func{System.Int32,System.Int32},Func{System.Int32,System.Int32,``0})
  name: Combinations<T>(Int32, Statics.Action_ReadOnlySpan<T>, Func<Int32, Int32>, Func<Int32, Int32, T>)
  href: api/Towel.Statics.html#Towel_Statics_Combinations__1_System_Int32_Towel_Statics_Action_ReadOnlySpan___0__Func_System_Int32_System_Int32__Func_System_Int32_System_Int32___0__
  commentId: M:Towel.Statics.Combinations``1(System.Int32,Towel.Statics.Action_ReadOnlySpan{``0},Func{System.Int32,System.Int32},Func{System.Int32,System.Int32,``0})
  name.vb: Combinations(Of T)(Int32, Statics.Action_ReadOnlySpan(Of T), Func(Of Int32, Int32), Func(Of Int32, Int32, T))
  fullName: Towel.Statics.Combinations<T>(System.Int32, Towel.Statics.Action_ReadOnlySpan<T>, Func<System.Int32, System.Int32>, Func<System.Int32, System.Int32, T>)
  fullName.vb: Towel.Statics.Combinations(Of T)(System.Int32, Towel.Statics.Action_ReadOnlySpan(Of T), Func(Of System.Int32, System.Int32), Func(Of System.Int32, System.Int32, T))
  nameWithType: Statics.Combinations<T>(Int32, Statics.Action_ReadOnlySpan<T>, Func<Int32, Int32>, Func<Int32, Int32, T>)
  nameWithType.vb: Statics.Combinations(Of T)(Int32, Statics.Action_ReadOnlySpan(Of T), Func(Of Int32, Int32), Func(Of Int32, Int32, T))
- uid: Towel.Statics.Combinations``2(``0[][],``1)
  name: Combinations<T, Action>(T[][], Action)
  href: api/Towel.Statics.html#Towel_Statics_Combinations__2___0_______1_
  commentId: M:Towel.Statics.Combinations``2(``0[][],``1)
  name.vb: Combinations(Of T, Action)(T()(), Action)
  fullName: Towel.Statics.Combinations<T, Action>(T[][], Action)
  fullName.vb: Towel.Statics.Combinations(Of T, Action)(T()(), Action)
  nameWithType: Statics.Combinations<T, Action>(T[][], Action)
  nameWithType.vb: Statics.Combinations(Of T, Action)(T()(), Action)
- uid: Towel.Statics.Combinations``4(System.Int32,``1,``2,``3)
  name: Combinations<T, Action, IndexPossibilities, ValueAt>(Int32, Action, IndexPossibilities, ValueAt)
  href: api/Towel.Statics.html#Towel_Statics_Combinations__4_System_Int32___1___2___3_
  commentId: M:Towel.Statics.Combinations``4(System.Int32,``1,``2,``3)
  name.vb: Combinations(Of T, Action, IndexPossibilities, ValueAt)(Int32, Action, IndexPossibilities, ValueAt)
  fullName: Towel.Statics.Combinations<T, Action, IndexPossibilities, ValueAt>(System.Int32, Action, IndexPossibilities, ValueAt)
  fullName.vb: Towel.Statics.Combinations(Of T, Action, IndexPossibilities, ValueAt)(System.Int32, Action, IndexPossibilities, ValueAt)
  nameWithType: Statics.Combinations<T, Action, IndexPossibilities, ValueAt>(Int32, Action, IndexPossibilities, ValueAt)
  nameWithType.vb: Statics.Combinations(Of T, Action, IndexPossibilities, ValueAt)(Int32, Action, IndexPossibilities, ValueAt)
- uid: Towel.Statics.Compare*
  name: Compare
  href: api/Towel.Statics.html#Towel_Statics_Compare_
  commentId: Overload:Towel.Statics.Compare
  isSpec: "True"
  fullName: Towel.Statics.Compare
  nameWithType: Statics.Compare
- uid: Towel.Statics.Compare``1(``0,``0)
  name: Compare<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Compare__1___0___0_
  commentId: M:Towel.Statics.Compare``1(``0,``0)
  name.vb: Compare(Of T)(T, T)
  fullName: Towel.Statics.Compare<T>(T, T)
  fullName.vb: Towel.Statics.Compare(Of T)(T, T)
  nameWithType: Statics.Compare<T>(T, T)
  nameWithType.vb: Statics.Compare(Of T)(T, T)
- uid: Towel.Statics.Continue
  name: Continue
  href: api/Towel.Statics.html#Towel_Statics_Continue
  commentId: F:Towel.Statics.Continue
  fullName: Towel.Statics.Continue
  nameWithType: Statics.Continue
- uid: Towel.Statics.Convert*
  name: Convert
  href: api/Towel.Statics.html#Towel_Statics_Convert_
  commentId: Overload:Towel.Statics.Convert
  isSpec: "True"
  fullName: Towel.Statics.Convert
  nameWithType: Statics.Convert
- uid: Towel.Statics.Convert``2(``0)
  name: Convert<A, B>(A)
  href: api/Towel.Statics.html#Towel_Statics_Convert__2___0_
  commentId: M:Towel.Statics.Convert``2(``0)
  name.vb: Convert(Of A, B)(A)
  fullName: Towel.Statics.Convert<A, B>(A)
  fullName.vb: Towel.Statics.Convert(Of A, B)(A)
  nameWithType: Statics.Convert<A, B>(A)
  nameWithType.vb: Statics.Convert(Of A, B)(A)
- uid: Towel.Statics.CosecantQuadratic*
  name: CosecantQuadratic
  href: api/Towel.Statics.html#Towel_Statics_CosecantQuadratic_
  commentId: Overload:Towel.Statics.CosecantQuadratic
  isSpec: "True"
  fullName: Towel.Statics.CosecantQuadratic
  nameWithType: Statics.CosecantQuadratic
- uid: Towel.Statics.CosecantQuadratic``1(Towel.Measurements.Angle{``0})
  name: CosecantQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CosecantQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CosecantQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: CosecantQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.CosecantQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CosecantQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CosecantQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.CosecantQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.CosecantSystem*
  name: CosecantSystem
  href: api/Towel.Statics.html#Towel_Statics_CosecantSystem_
  commentId: Overload:Towel.Statics.CosecantSystem
  isSpec: "True"
  fullName: Towel.Statics.CosecantSystem
  nameWithType: Statics.CosecantSystem
- uid: Towel.Statics.CosecantSystem``1(Towel.Measurements.Angle{``0})
  name: CosecantSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CosecantSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CosecantSystem``1(Towel.Measurements.Angle{``0})
  name.vb: CosecantSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.CosecantSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CosecantSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CosecantSystem<T>(Angle<T>)
  nameWithType.vb: Statics.CosecantSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.CosineQuadratic*
  name: CosineQuadratic
  href: api/Towel.Statics.html#Towel_Statics_CosineQuadratic_
  commentId: Overload:Towel.Statics.CosineQuadratic
  isSpec: "True"
  fullName: Towel.Statics.CosineQuadratic
  nameWithType: Statics.CosineQuadratic
- uid: Towel.Statics.CosineQuadratic``1(Towel.Measurements.Angle{``0})
  name: CosineQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CosineQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CosineQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: CosineQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.CosineQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CosineQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CosineQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.CosineQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.CosineSystem*
  name: CosineSystem
  href: api/Towel.Statics.html#Towel_Statics_CosineSystem_
  commentId: Overload:Towel.Statics.CosineSystem
  isSpec: "True"
  fullName: Towel.Statics.CosineSystem
  nameWithType: Statics.CosineSystem
- uid: Towel.Statics.CosineSystem``1(Towel.Measurements.Angle{``0})
  name: CosineSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CosineSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CosineSystem``1(Towel.Measurements.Angle{``0})
  name.vb: CosineSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.CosineSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CosineSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CosineSystem<T>(Angle<T>)
  nameWithType.vb: Statics.CosineSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.CosineTaylorSeries*
  name: CosineTaylorSeries
  href: api/Towel.Statics.html#Towel_Statics_CosineTaylorSeries_
  commentId: Overload:Towel.Statics.CosineTaylorSeries
  isSpec: "True"
  fullName: Towel.Statics.CosineTaylorSeries
  nameWithType: Statics.CosineTaylorSeries
- uid: Towel.Statics.CosineTaylorSeries``1(Towel.Measurements.Angle{``0},System.Nullable{Predicate{``0}})
  name: CosineTaylorSeries<T>(Angle<T>, Nullable<Predicate<T>>)
  href: api/Towel.Statics.html#Towel_Statics_CosineTaylorSeries__1_Towel_Measurements_Angle___0__System_Nullable_Predicate___0___
  commentId: M:Towel.Statics.CosineTaylorSeries``1(Towel.Measurements.Angle{``0},System.Nullable{Predicate{``0}})
  name.vb: CosineTaylorSeries(Of T)(Angle(Of T), Nullable(Of Predicate(Of T)))
  fullName: Towel.Statics.CosineTaylorSeries<T>(Towel.Measurements.Angle<T>, System.Nullable<Predicate<T>>)
  fullName.vb: Towel.Statics.CosineTaylorSeries(Of T)(Towel.Measurements.Angle(Of T), System.Nullable(Of Predicate(Of T)))
  nameWithType: Statics.CosineTaylorSeries<T>(Angle<T>, Nullable<Predicate<T>>)
  nameWithType.vb: Statics.CosineTaylorSeries(Of T)(Angle(Of T), Nullable(Of Predicate(Of T)))
- uid: Towel.Statics.CotangentQuadratic*
  name: CotangentQuadratic
  href: api/Towel.Statics.html#Towel_Statics_CotangentQuadratic_
  commentId: Overload:Towel.Statics.CotangentQuadratic
  isSpec: "True"
  fullName: Towel.Statics.CotangentQuadratic
  nameWithType: Statics.CotangentQuadratic
- uid: Towel.Statics.CotangentQuadratic``1(Towel.Measurements.Angle{``0})
  name: CotangentQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CotangentQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CotangentQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: CotangentQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.CotangentQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CotangentQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CotangentQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.CotangentQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.CotangentSystem*
  name: CotangentSystem
  href: api/Towel.Statics.html#Towel_Statics_CotangentSystem_
  commentId: Overload:Towel.Statics.CotangentSystem
  isSpec: "True"
  fullName: Towel.Statics.CotangentSystem
  nameWithType: Statics.CotangentSystem
- uid: Towel.Statics.CotangentSystem``1(Towel.Measurements.Angle{``0})
  name: CotangentSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_CotangentSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.CotangentSystem``1(Towel.Measurements.Angle{``0})
  name.vb: CotangentSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.CotangentSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.CotangentSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.CotangentSystem<T>(Angle<T>)
  nameWithType.vb: Statics.CotangentSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.Default
  name: Default
  href: api/Towel.Statics.html#Towel_Statics_Default
  commentId: F:Towel.Statics.Default
  fullName: Towel.Statics.Default
  nameWithType: Statics.Default
- uid: Towel.Statics.DefaultHash*
  name: DefaultHash
  href: api/Towel.Statics.html#Towel_Statics_DefaultHash_
  commentId: Overload:Towel.Statics.DefaultHash
  isSpec: "True"
  fullName: Towel.Statics.DefaultHash
  nameWithType: Statics.DefaultHash
- uid: Towel.Statics.DefaultHash``1(``0)
  name: DefaultHash<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_DefaultHash__1___0_
  commentId: M:Towel.Statics.DefaultHash``1(``0)
  name.vb: DefaultHash(Of T)(T)
  fullName: Towel.Statics.DefaultHash<T>(T)
  fullName.vb: Towel.Statics.DefaultHash(Of T)(T)
  nameWithType: Statics.DefaultHash<T>(T)
  nameWithType.vb: Statics.DefaultHash(Of T)(T)
- uid: Towel.Statics.Division*
  name: Division
  href: api/Towel.Statics.html#Towel_Statics_Division_
  commentId: Overload:Towel.Statics.Division
  isSpec: "True"
  fullName: Towel.Statics.Division
  nameWithType: Statics.Division
- uid: Towel.Statics.Division``1(``0,``0)
  name: Division<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Division__1___0___0_
  commentId: M:Towel.Statics.Division``1(``0,``0)
  name.vb: Division(Of T)(T, T)
  fullName: Towel.Statics.Division<T>(T, T)
  fullName.vb: Towel.Statics.Division(Of T)(T, T)
  nameWithType: Statics.Division<T>(T, T)
  nameWithType.vb: Statics.Division(Of T)(T, T)
- uid: Towel.Statics.Division``1(``0,``0,``0,``0[])
  name: Division<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Division__1___0___0___0___0___
  commentId: M:Towel.Statics.Division``1(``0,``0,``0,``0[])
  name.vb: Division(Of T)(T, T, T, T())
  fullName: Towel.Statics.Division<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Division(Of T)(T, T, T, T())
  nameWithType: Statics.Division<T>(T, T, T, T[])
  nameWithType.vb: Statics.Division(Of T)(T, T, T, T())
- uid: Towel.Statics.Division``1(Action{Action{``0}})
  name: Division<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Division__1_Action_Action___0___
  commentId: M:Towel.Statics.Division``1(Action{Action{``0}})
  name.vb: Division(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Division<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Division(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Division<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Division(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Division``3(``0,``1)
  name: Division<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Division__3___0___1_
  commentId: M:Towel.Statics.Division``3(``0,``1)
  name.vb: Division(Of A, B, C)(A, B)
  fullName: Towel.Statics.Division<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Division(Of A, B, C)(A, B)
  nameWithType: Statics.Division<A, B, C>(A, B)
  nameWithType.vb: Statics.Division(Of A, B, C)(A, B)
- uid: Towel.Statics.Equal
  name: Equal
  href: api/Towel.Statics.html#Towel_Statics_Equal
  commentId: F:Towel.Statics.Equal
  fullName: Towel.Statics.Equal
  nameWithType: Statics.Equal
- uid: Towel.Statics.EqualToLeniency*
  name: EqualToLeniency
  href: api/Towel.Statics.html#Towel_Statics_EqualToLeniency_
  commentId: Overload:Towel.Statics.EqualToLeniency
  isSpec: "True"
  fullName: Towel.Statics.EqualToLeniency
  nameWithType: Statics.EqualToLeniency
- uid: Towel.Statics.EqualToLeniency``1(``0,``0,``0)
  name: EqualToLeniency<T>(T, T, T)
  href: api/Towel.Statics.html#Towel_Statics_EqualToLeniency__1___0___0___0_
  commentId: M:Towel.Statics.EqualToLeniency``1(``0,``0,``0)
  name.vb: EqualToLeniency(Of T)(T, T, T)
  fullName: Towel.Statics.EqualToLeniency<T>(T, T, T)
  fullName.vb: Towel.Statics.EqualToLeniency(Of T)(T, T, T)
  nameWithType: Statics.EqualToLeniency<T>(T, T, T)
  nameWithType.vb: Statics.EqualToLeniency(Of T)(T, T, T)
- uid: Towel.Statics.Equate*
  name: Equate
  href: api/Towel.Statics.html#Towel_Statics_Equate_
  commentId: Overload:Towel.Statics.Equate
  isSpec: "True"
  fullName: Towel.Statics.Equate
  nameWithType: Statics.Equate
- uid: Towel.Statics.Equate``1(``0,``0)
  name: Equate<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Equate__1___0___0_
  commentId: M:Towel.Statics.Equate``1(``0,``0)
  name.vb: Equate(Of T)(T, T)
  fullName: Towel.Statics.Equate<T>(T, T)
  fullName.vb: Towel.Statics.Equate(Of T)(T, T)
  nameWithType: Statics.Equate<T>(T, T)
  nameWithType.vb: Statics.Equate(Of T)(T, T)
- uid: Towel.Statics.Equate``1(``0,``0,``0[])
  name: Equate<T>(T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Equate__1___0___0___0___
  commentId: M:Towel.Statics.Equate``1(``0,``0,``0[])
  name.vb: Equate(Of T)(T, T, T())
  fullName: Towel.Statics.Equate<T>(T, T, T[])
  fullName.vb: Towel.Statics.Equate(Of T)(T, T, T())
  nameWithType: Statics.Equate<T>(T, T, T[])
  nameWithType.vb: Statics.Equate(Of T)(T, T, T())
- uid: Towel.Statics.Equate``1(Span{``0},Span{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: Equate<T>(Span<T>, Span<T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_Equate__1_Span___0__Span___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.Equate``1(Span{``0},Span{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: Equate(Of T)(Span(Of T), Span(Of T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.Equate<T>(Span<T>, Span<T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.Equate(Of T)(Span(Of T), Span(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.Equate<T>(Span<T>, Span<T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.Equate(Of T)(Span(Of T), Span(Of T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.Equate``1(System.Int32,System.Int32,Span{``0},Span{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: Equate<T>(Int32, Int32, Span<T>, Span<T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_Equate__1_System_Int32_System_Int32_Span___0__Span___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.Equate``1(System.Int32,System.Int32,Span{``0},Span{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: Equate(Of T)(Int32, Int32, Span(Of T), Span(Of T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.Equate<T>(System.Int32, System.Int32, Span<T>, Span<T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.Equate(Of T)(System.Int32, System.Int32, Span(Of T), Span(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.Equate<T>(Int32, Int32, Span<T>, Span<T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.Equate(Of T)(Int32, Int32, Span(Of T), Span(Of T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.Equate``2(Span{``0},Span{``0},``1)
  name: Equate<T, Equate>(Span<T>, Span<T>, Equate)
  href: api/Towel.Statics.html#Towel_Statics_Equate__2_Span___0__Span___0____1_
  commentId: M:Towel.Statics.Equate``2(Span{``0},Span{``0},``1)
  name.vb: Equate(Of T, Equate)(Span(Of T), Span(Of T), Equate)
  fullName: Towel.Statics.Equate<T, Equate>(Span<T>, Span<T>, Equate)
  fullName.vb: Towel.Statics.Equate(Of T, Equate)(Span(Of T), Span(Of T), Equate)
  nameWithType: Statics.Equate<T, Equate>(Span<T>, Span<T>, Equate)
  nameWithType.vb: Statics.Equate(Of T, Equate)(Span(Of T), Span(Of T), Equate)
- uid: Towel.Statics.Equate``2(System.Int32,System.Int32,Span{``0},Span{``0},``1)
  name: Equate<T, Equate>(Int32, Int32, Span<T>, Span<T>, Equate)
  href: api/Towel.Statics.html#Towel_Statics_Equate__2_System_Int32_System_Int32_Span___0__Span___0____1_
  commentId: M:Towel.Statics.Equate``2(System.Int32,System.Int32,Span{``0},Span{``0},``1)
  name.vb: Equate(Of T, Equate)(Int32, Int32, Span(Of T), Span(Of T), Equate)
  fullName: Towel.Statics.Equate<T, Equate>(System.Int32, System.Int32, Span<T>, Span<T>, Equate)
  fullName.vb: Towel.Statics.Equate(Of T, Equate)(System.Int32, System.Int32, Span(Of T), Span(Of T), Equate)
  nameWithType: Statics.Equate<T, Equate>(Int32, Int32, Span<T>, Span<T>, Equate)
  nameWithType.vb: Statics.Equate(Of T, Equate)(Int32, Int32, Span(Of T), Span(Of T), Equate)
- uid: Towel.Statics.Equate``4(System.Int32,System.Int32,``1,``2,``3)
  name: Equate<T, A, B, Equate>(Int32, Int32, A, B, Equate)
  href: api/Towel.Statics.html#Towel_Statics_Equate__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.Equate``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: Equate(Of T, A, B, Equate)(Int32, Int32, A, B, Equate)
  fullName: Towel.Statics.Equate<T, A, B, Equate>(System.Int32, System.Int32, A, B, Equate)
  fullName.vb: Towel.Statics.Equate(Of T, A, B, Equate)(System.Int32, System.Int32, A, B, Equate)
  nameWithType: Statics.Equate<T, A, B, Equate>(Int32, Int32, A, B, Equate)
  nameWithType.vb: Statics.Equate(Of T, A, B, Equate)(Int32, Int32, A, B, Equate)
- uid: Towel.Statics.Exponential*
  name: Exponential
  href: api/Towel.Statics.html#Towel_Statics_Exponential_
  commentId: Overload:Towel.Statics.Exponential
  isSpec: "True"
  fullName: Towel.Statics.Exponential
  nameWithType: Statics.Exponential
- uid: Towel.Statics.Exponential``1(``0)
  name: Exponential<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_Exponential__1___0_
  commentId: M:Towel.Statics.Exponential``1(``0)
  name.vb: Exponential(Of T)(T)
  fullName: Towel.Statics.Exponential<T>(T)
  fullName.vb: Towel.Statics.Exponential(Of T)(T)
  nameWithType: Statics.Exponential<T>(T)
  nameWithType.vb: Statics.Exponential(Of T)(T)
- uid: Towel.Statics.Factorial*
  name: Factorial
  href: api/Towel.Statics.html#Towel_Statics_Factorial_
  commentId: Overload:Towel.Statics.Factorial
  isSpec: "True"
  fullName: Towel.Statics.Factorial
  nameWithType: Statics.Factorial
- uid: Towel.Statics.Factorial``1(``0)
  name: Factorial<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_Factorial__1___0_
  commentId: M:Towel.Statics.Factorial``1(``0)
  name.vb: Factorial(Of T)(T)
  fullName: Towel.Statics.Factorial<T>(T)
  fullName.vb: Towel.Statics.Factorial(Of T)(T)
  nameWithType: Statics.Factorial<T>(T)
  nameWithType.vb: Statics.Factorial(Of T)(T)
- uid: Towel.Statics.FactorPrimes*
  name: FactorPrimes
  href: api/Towel.Statics.html#Towel_Statics_FactorPrimes_
  commentId: Overload:Towel.Statics.FactorPrimes
  isSpec: "True"
  fullName: Towel.Statics.FactorPrimes
  nameWithType: Statics.FactorPrimes
- uid: Towel.Statics.FactorPrimes``1(``0,Action{``0})
  name: FactorPrimes<T>(T, Action<T>)
  href: api/Towel.Statics.html#Towel_Statics_FactorPrimes__1___0_Action___0__
  commentId: M:Towel.Statics.FactorPrimes``1(``0,Action{``0})
  name.vb: FactorPrimes(Of T)(T, Action(Of T))
  fullName: Towel.Statics.FactorPrimes<T>(T, Action<T>)
  fullName.vb: Towel.Statics.FactorPrimes(Of T)(T, Action(Of T))
  nameWithType: Statics.FactorPrimes<T>(T, Action<T>)
  nameWithType.vb: Statics.FactorPrimes(Of T)(T, Action(Of T))
- uid: Towel.Statics.FilterOrdered*
  name: FilterOrdered
  href: api/Towel.Statics.html#Towel_Statics_FilterOrdered_
  commentId: Overload:Towel.Statics.FilterOrdered
  isSpec: "True"
  fullName: Towel.Statics.FilterOrdered
  nameWithType: Statics.FilterOrdered
- uid: Towel.Statics.FilterOrdered``1(ReadOnlySpan{``0},Action{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: FilterOrdered<T>(ReadOnlySpan<T>, Action<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_FilterOrdered__1_ReadOnlySpan___0__Action___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.FilterOrdered``1(ReadOnlySpan{``0},Action{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: FilterOrdered(Of T)(ReadOnlySpan(Of T), Action(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.FilterOrdered<T>(ReadOnlySpan<T>, Action<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.FilterOrdered(Of T)(ReadOnlySpan(Of T), Action(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.FilterOrdered<T>(ReadOnlySpan<T>, Action<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.FilterOrdered(Of T)(ReadOnlySpan(Of T), Action(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.FilterOrdered``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: FilterOrdered<T>(Int32, Int32, Func<Int32, T>, Action<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_FilterOrdered__1_System_Int32_System_Int32_Func_System_Int32___0__Action___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.FilterOrdered``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: FilterOrdered(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.FilterOrdered<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.FilterOrdered(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.FilterOrdered<T>(Int32, Int32, Func<Int32, T>, Action<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.FilterOrdered(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.FilterOrdered``3(ReadOnlySpan{``0},``1,``2)
  name: FilterOrdered<T, Step, Compare>(ReadOnlySpan<T>, Step, Compare)
  href: api/Towel.Statics.html#Towel_Statics_FilterOrdered__3_ReadOnlySpan___0____1___2_
  commentId: M:Towel.Statics.FilterOrdered``3(ReadOnlySpan{``0},``1,``2)
  name.vb: FilterOrdered(Of T, Step, Compare)(ReadOnlySpan(Of T), Step, Compare)
  fullName: Towel.Statics.FilterOrdered<T, Step, Compare>(ReadOnlySpan<T>, Step, Compare)
  fullName.vb: Towel.Statics.FilterOrdered(Of T, Step, Compare)(ReadOnlySpan(Of T), Step, Compare)
  nameWithType: Statics.FilterOrdered<T, Step, Compare>(ReadOnlySpan<T>, Step, Compare)
  nameWithType.vb: Statics.FilterOrdered(Of T, Step, Compare)(ReadOnlySpan(Of T), Step, Compare)
- uid: Towel.Statics.FilterOrdered``4(System.Int32,System.Int32,``1,``2,``3)
  name: FilterOrdered<T, Get, Step, Compare>(Int32, Int32, Get, Step, Compare)
  href: api/Towel.Statics.html#Towel_Statics_FilterOrdered__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.FilterOrdered``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: FilterOrdered(Of T, Get, Step, Compare)(Int32, Int32, Get, Step, Compare)
  fullName: Towel.Statics.FilterOrdered<T, Get, Step, Compare>(System.Int32, System.Int32, Get, Step, Compare)
  fullName.vb: Towel.Statics.FilterOrdered(Of T, Get, Step, Compare)(System.Int32, System.Int32, Get, Step, Compare)
  nameWithType: Statics.FilterOrdered<T, Get, Step, Compare>(Int32, Int32, Get, Step, Compare)
  nameWithType.vb: Statics.FilterOrdered(Of T, Get, Step, Compare)(Int32, Int32, Get, Step, Compare)
- uid: Towel.Statics.GeometricMean*
  name: GeometricMean
  href: api/Towel.Statics.html#Towel_Statics_GeometricMean_
  commentId: Overload:Towel.Statics.GeometricMean
  isSpec: "True"
  fullName: Towel.Statics.GeometricMean
  nameWithType: Statics.GeometricMean
- uid: Towel.Statics.GeometricMean``1(Action{Action{``0}})
  name: GeometricMean<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_GeometricMean__1_Action_Action___0___
  commentId: M:Towel.Statics.GeometricMean``1(Action{Action{``0}})
  name.vb: GeometricMean(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.GeometricMean<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.GeometricMean(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.GeometricMean<T>(Action<Action<T>>)
  nameWithType.vb: Statics.GeometricMean(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Goal
  name: Goal
  href: api/Towel.Statics.html#Towel_Statics_Goal
  commentId: F:Towel.Statics.Goal
  fullName: Towel.Statics.Goal
  nameWithType: Statics.Goal
- uid: Towel.Statics.GraphSearchStatus
  name: Statics.GraphSearchStatus
  href: api/Towel.Statics.GraphSearchStatus.html
  commentId: T:Towel.Statics.GraphSearchStatus
  fullName: Towel.Statics.GraphSearchStatus
  nameWithType: Statics.GraphSearchStatus
- uid: Towel.Statics.GraphSearchStatus.Break
  name: Break
  href: api/Towel.Statics.GraphSearchStatus.html#Towel_Statics_GraphSearchStatus_Break
  commentId: F:Towel.Statics.GraphSearchStatus.Break
  fullName: Towel.Statics.GraphSearchStatus.Break
  nameWithType: Statics.GraphSearchStatus.Break
- uid: Towel.Statics.GraphSearchStatus.Continue
  name: Continue
  href: api/Towel.Statics.GraphSearchStatus.html#Towel_Statics_GraphSearchStatus_Continue
  commentId: F:Towel.Statics.GraphSearchStatus.Continue
  fullName: Towel.Statics.GraphSearchStatus.Continue
  nameWithType: Statics.GraphSearchStatus.Continue
- uid: Towel.Statics.GraphSearchStatus.Goal
  name: Goal
  href: api/Towel.Statics.GraphSearchStatus.html#Towel_Statics_GraphSearchStatus_Goal
  commentId: F:Towel.Statics.GraphSearchStatus.Goal
  fullName: Towel.Statics.GraphSearchStatus.Goal
  nameWithType: Statics.GraphSearchStatus.Goal
- uid: Towel.Statics.GraphSyntax
  name: Statics.GraphSyntax
  href: api/Towel.Statics.GraphSyntax.html
  commentId: T:Towel.Statics.GraphSyntax
  fullName: Towel.Statics.GraphSyntax
  nameWithType: Statics.GraphSyntax
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  name: Statics.GraphSyntax.GraphSearchStatusStruct
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html
  commentId: T:Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.#ctor(Towel.Statics.GraphSearchStatus)
  name: GraphSearchStatusStruct(Statics.GraphSearchStatus)
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct__ctor_Towel_Statics_GraphSearchStatus_
  commentId: M:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.#ctor(Towel.Statics.GraphSearchStatus)
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.GraphSearchStatusStruct(Towel.Statics.GraphSearchStatus)
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.GraphSearchStatusStruct(Statics.GraphSearchStatus)
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.#ctor*
  name: GraphSearchStatusStruct
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct__ctor_
  commentId: Overload:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.#ctor
  isSpec: "True"
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.GraphSearchStatusStruct
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.GraphSearchStatusStruct
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.Statics.GraphSearchStatus)~Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  name: Implicit(Statics.GraphSearchStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct_op_Implicit_Towel_Statics_GraphSearchStatus__Towel_Statics_GraphSyntax_GraphSearchStatusStruct
  commentId: M:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.Statics.GraphSearchStatus)~Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  name.vb: Widening(Statics.GraphSearchStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(Towel.Statics.GraphSearchStatus to Towel.Statics.GraphSyntax.GraphSearchStatusStruct)
  fullName.vb: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Widening(Towel.Statics.GraphSearchStatus to Towel.Statics.GraphSyntax.GraphSearchStatusStruct)
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(Statics.GraphSearchStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  nameWithType.vb: Statics.GraphSyntax.GraphSearchStatusStruct.Widening(Statics.GraphSearchStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.Statics.GraphSyntax.GraphSearchStatusStruct)~Towel.Statics.GraphSearchStatus
  name: Implicit(Statics.GraphSyntax.GraphSearchStatusStruct to Statics.GraphSearchStatus)
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct_op_Implicit_Towel_Statics_GraphSyntax_GraphSearchStatusStruct__Towel_Statics_GraphSearchStatus
  commentId: M:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.Statics.GraphSyntax.GraphSearchStatusStruct)~Towel.Statics.GraphSearchStatus
  name.vb: Widening(Statics.GraphSyntax.GraphSearchStatusStruct to Statics.GraphSearchStatus)
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(Towel.Statics.GraphSyntax.GraphSearchStatusStruct to Towel.Statics.GraphSearchStatus)
  fullName.vb: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Widening(Towel.Statics.GraphSyntax.GraphSearchStatusStruct to Towel.Statics.GraphSearchStatus)
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(Statics.GraphSyntax.GraphSearchStatusStruct to Statics.GraphSearchStatus)
  nameWithType.vb: Statics.GraphSyntax.GraphSearchStatusStruct.Widening(Statics.GraphSyntax.GraphSearchStatusStruct to Statics.GraphSearchStatus)
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.StepStatus)~Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  name: Implicit(StepStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct_op_Implicit_Towel_StepStatus__Towel_Statics_GraphSyntax_GraphSearchStatusStruct
  commentId: M:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit(Towel.StepStatus)~Towel.Statics.GraphSyntax.GraphSearchStatusStruct
  name.vb: Widening(StepStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(Towel.StepStatus to Towel.Statics.GraphSyntax.GraphSearchStatusStruct)
  fullName.vb: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Widening(Towel.StepStatus to Towel.Statics.GraphSyntax.GraphSearchStatusStruct)
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.Implicit(StepStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
  nameWithType.vb: Statics.GraphSyntax.GraphSearchStatusStruct.Widening(StepStatus to Statics.GraphSyntax.GraphSearchStatusStruct)
- uid: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.GraphSyntax.GraphSearchStatusStruct.html#Towel_Statics_GraphSyntax_GraphSearchStatusStruct_op_Implicit_
  commentId: Overload:Towel.Statics.GraphSyntax.GraphSearchStatusStruct.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Implicit
  fullName.vb: Towel.Statics.GraphSyntax.GraphSearchStatusStruct.Widening
  nameWithType: Statics.GraphSyntax.GraphSearchStatusStruct.Implicit
  nameWithType.vb: Statics.GraphSyntax.GraphSearchStatusStruct.Widening
- uid: Towel.Statics.Greater
  name: Greater
  href: api/Towel.Statics.html#Towel_Statics_Greater
  commentId: F:Towel.Statics.Greater
  fullName: Towel.Statics.Greater
  nameWithType: Statics.Greater
- uid: Towel.Statics.GreaterThan*
  name: GreaterThan
  href: api/Towel.Statics.html#Towel_Statics_GreaterThan_
  commentId: Overload:Towel.Statics.GreaterThan
  isSpec: "True"
  fullName: Towel.Statics.GreaterThan
  nameWithType: Statics.GreaterThan
- uid: Towel.Statics.GreaterThan``1(``0,``0)
  name: GreaterThan<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_GreaterThan__1___0___0_
  commentId: M:Towel.Statics.GreaterThan``1(``0,``0)
  name.vb: GreaterThan(Of T)(T, T)
  fullName: Towel.Statics.GreaterThan<T>(T, T)
  fullName.vb: Towel.Statics.GreaterThan(Of T)(T, T)
  nameWithType: Statics.GreaterThan<T>(T, T)
  nameWithType.vb: Statics.GreaterThan(Of T)(T, T)
- uid: Towel.Statics.GreaterThan``3(``0,``1)
  name: GreaterThan<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_GreaterThan__3___0___1_
  commentId: M:Towel.Statics.GreaterThan``3(``0,``1)
  name.vb: GreaterThan(Of A, B, C)(A, B)
  fullName: Towel.Statics.GreaterThan<A, B, C>(A, B)
  fullName.vb: Towel.Statics.GreaterThan(Of A, B, C)(A, B)
  nameWithType: Statics.GreaterThan<A, B, C>(A, B)
  nameWithType.vb: Statics.GreaterThan(Of A, B, C)(A, B)
- uid: Towel.Statics.GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Statics.html#Towel_Statics_GreaterThanOrEqual_
  commentId: Overload:Towel.Statics.GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.GreaterThanOrEqual
  nameWithType: Statics.GreaterThanOrEqual
- uid: Towel.Statics.GreaterThanOrEqual``1(``0,``0)
  name: GreaterThanOrEqual<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_GreaterThanOrEqual__1___0___0_
  commentId: M:Towel.Statics.GreaterThanOrEqual``1(``0,``0)
  name.vb: GreaterThanOrEqual(Of T)(T, T)
  fullName: Towel.Statics.GreaterThanOrEqual<T>(T, T)
  fullName.vb: Towel.Statics.GreaterThanOrEqual(Of T)(T, T)
  nameWithType: Statics.GreaterThanOrEqual<T>(T, T)
  nameWithType.vb: Statics.GreaterThanOrEqual(Of T)(T, T)
- uid: Towel.Statics.GreaterThanOrEqual``3(``0,``1)
  name: GreaterThanOrEqual<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_GreaterThanOrEqual__3___0___1_
  commentId: M:Towel.Statics.GreaterThanOrEqual``3(``0,``1)
  name.vb: GreaterThanOrEqual(Of A, B, C)(A, B)
  fullName: Towel.Statics.GreaterThanOrEqual<A, B, C>(A, B)
  fullName.vb: Towel.Statics.GreaterThanOrEqual(Of A, B, C)(A, B)
  nameWithType: Statics.GreaterThanOrEqual<A, B, C>(A, B)
  nameWithType.vb: Statics.GreaterThanOrEqual(Of A, B, C)(A, B)
- uid: Towel.Statics.GreatestCommonFactor*
  name: GreatestCommonFactor
  href: api/Towel.Statics.html#Towel_Statics_GreatestCommonFactor_
  commentId: Overload:Towel.Statics.GreatestCommonFactor
  isSpec: "True"
  fullName: Towel.Statics.GreatestCommonFactor
  nameWithType: Statics.GreatestCommonFactor
- uid: Towel.Statics.GreatestCommonFactor``1(``0,``0,``0[])
  name: GreatestCommonFactor<T>(T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_GreatestCommonFactor__1___0___0___0___
  commentId: M:Towel.Statics.GreatestCommonFactor``1(``0,``0,``0[])
  name.vb: GreatestCommonFactor(Of T)(T, T, T())
  fullName: Towel.Statics.GreatestCommonFactor<T>(T, T, T[])
  fullName.vb: Towel.Statics.GreatestCommonFactor(Of T)(T, T, T())
  nameWithType: Statics.GreatestCommonFactor<T>(T, T, T[])
  nameWithType.vb: Statics.GreatestCommonFactor(Of T)(T, T, T())
- uid: Towel.Statics.GreatestCommonFactor``1(Action{Action{``0}})
  name: GreatestCommonFactor<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_GreatestCommonFactor__1_Action_Action___0___
  commentId: M:Towel.Statics.GreatestCommonFactor``1(Action{Action{``0}})
  name.vb: GreatestCommonFactor(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.GreatestCommonFactor<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.GreatestCommonFactor(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.GreatestCommonFactor<T>(Action<Action<T>>)
  nameWithType.vb: Statics.GreatestCommonFactor(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.HammingDistance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: HammingDistance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_HammingDistance_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.HammingDistance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: HammingDistance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Towel.Statics.HammingDistance(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.HammingDistance(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: Statics.HammingDistance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Statics.HammingDistance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Towel.Statics.HammingDistance*
  name: HammingDistance
  href: api/Towel.Statics.html#Towel_Statics_HammingDistance_
  commentId: Overload:Towel.Statics.HammingDistance
  isSpec: "True"
  fullName: Towel.Statics.HammingDistance
  nameWithType: Statics.HammingDistance
- uid: Towel.Statics.HammingDistance``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name: HammingDistance<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  href: api/Towel.Statics.html#Towel_Statics_HammingDistance__2_ReadOnlySpan___0__ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.HammingDistance``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name.vb: HammingDistance(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  fullName: Towel.Statics.HammingDistance<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  fullName.vb: Towel.Statics.HammingDistance(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  nameWithType: Statics.HammingDistance<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  nameWithType.vb: Statics.HammingDistance(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
- uid: Towel.Statics.HammingDistance``4(System.Int32,``1,``2,``3)
  name: HammingDistance<T, GetA, GetB, Equals>(Int32, GetA, GetB, Equals)
  href: api/Towel.Statics.html#Towel_Statics_HammingDistance__4_System_Int32___1___2___3_
  commentId: M:Towel.Statics.HammingDistance``4(System.Int32,``1,``2,``3)
  name.vb: HammingDistance(Of T, GetA, GetB, Equals)(Int32, GetA, GetB, Equals)
  fullName: Towel.Statics.HammingDistance<T, GetA, GetB, Equals>(System.Int32, GetA, GetB, Equals)
  fullName.vb: Towel.Statics.HammingDistance(Of T, GetA, GetB, Equals)(System.Int32, GetA, GetB, Equals)
  nameWithType: Statics.HammingDistance<T, GetA, GetB, Equals>(Int32, GetA, GetB, Equals)
  nameWithType.vb: Statics.HammingDistance(Of T, GetA, GetB, Equals)(Int32, GetA, GetB, Equals)
- uid: Towel.Statics.IAction_ReadOnlySpan`1
  name: Statics.IAction_ReadOnlySpan<T>
  href: api/Towel.Statics.IAction_ReadOnlySpan-1.html
  commentId: T:Towel.Statics.IAction_ReadOnlySpan`1
  name.vb: Statics.IAction_ReadOnlySpan(Of T)
  fullName: Towel.Statics.IAction_ReadOnlySpan<T>
  fullName.vb: Towel.Statics.IAction_ReadOnlySpan(Of T)
  nameWithType: Statics.IAction_ReadOnlySpan<T>
  nameWithType.vb: Statics.IAction_ReadOnlySpan(Of T)
- uid: Towel.Statics.IAction_ReadOnlySpan`1.Do(ReadOnlySpan{`0})
  name: Do(ReadOnlySpan<T>)
  href: api/Towel.Statics.IAction_ReadOnlySpan-1.html#Towel_Statics_IAction_ReadOnlySpan_1_Do_ReadOnlySpan__0__
  commentId: M:Towel.Statics.IAction_ReadOnlySpan`1.Do(ReadOnlySpan{`0})
  name.vb: Do(ReadOnlySpan(Of T))
  fullName: Towel.Statics.IAction_ReadOnlySpan<T>.Do(ReadOnlySpan<T>)
  fullName.vb: Towel.Statics.IAction_ReadOnlySpan(Of T).Do(ReadOnlySpan(Of T))
  nameWithType: Statics.IAction_ReadOnlySpan<T>.Do(ReadOnlySpan<T>)
  nameWithType.vb: Statics.IAction_ReadOnlySpan(Of T).Do(ReadOnlySpan(Of T))
- uid: Towel.Statics.IAction_ReadOnlySpan`1.Do*
  name: Do
  href: api/Towel.Statics.IAction_ReadOnlySpan-1.html#Towel_Statics_IAction_ReadOnlySpan_1_Do_
  commentId: Overload:Towel.Statics.IAction_ReadOnlySpan`1.Do
  isSpec: "True"
  fullName: Towel.Statics.IAction_ReadOnlySpan<T>.Do
  fullName.vb: Towel.Statics.IAction_ReadOnlySpan(Of T).Do
  nameWithType: Statics.IAction_ReadOnlySpan<T>.Do
  nameWithType.vb: Statics.IAction_ReadOnlySpan(Of T).Do
- uid: Towel.Statics.Inequality`1
  name: Statics.Inequality<T>
  href: api/Towel.Statics.Inequality-1.html
  commentId: T:Towel.Statics.Inequality`1
  name.vb: Statics.Inequality(Of T)
  fullName: Towel.Statics.Inequality<T>
  fullName.vb: Towel.Statics.Inequality(Of T)
  nameWithType: Statics.Inequality<T>
  nameWithType.vb: Statics.Inequality(Of T)
- uid: Towel.Statics.Inequality`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_Equals_System_Nullable_System_Object__
  commentId: M:Towel.Statics.Inequality`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Towel.Statics.Inequality<T>.Equals(System.Nullable<System.Object>)
  fullName.vb: Towel.Statics.Inequality(Of T).Equals(System.Nullable(Of System.Object))
  nameWithType: Statics.Inequality<T>.Equals(Nullable<Object>)
  nameWithType.vb: Statics.Inequality(Of T).Equals(Nullable(Of Object))
- uid: Towel.Statics.Inequality`1.Equals*
  name: Equals
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_Equals_
  commentId: Overload:Towel.Statics.Inequality`1.Equals
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.Equals
  fullName.vb: Towel.Statics.Inequality(Of T).Equals
  nameWithType: Statics.Inequality<T>.Equals
  nameWithType.vb: Statics.Inequality(Of T).Equals
- uid: Towel.Statics.Inequality`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_GetHashCode
  commentId: M:Towel.Statics.Inequality`1.GetHashCode
  fullName: Towel.Statics.Inequality<T>.GetHashCode()
  fullName.vb: Towel.Statics.Inequality(Of T).GetHashCode()
  nameWithType: Statics.Inequality<T>.GetHashCode()
  nameWithType.vb: Statics.Inequality(Of T).GetHashCode()
- uid: Towel.Statics.Inequality`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_GetHashCode_
  commentId: Overload:Towel.Statics.Inequality`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.GetHashCode
  fullName.vb: Towel.Statics.Inequality(Of T).GetHashCode
  nameWithType: Statics.Inequality<T>.GetHashCode
  nameWithType.vb: Statics.Inequality(Of T).GetHashCode
- uid: Towel.Statics.Inequality`1.op_Equality(Towel.Statics.Inequality{`0},`0)
  name: Equality(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Equality_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_Equality(Towel.Statics.Inequality{`0},`0)
  name.vb: Equality(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.Equality(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).Equality(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.Equality(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).Equality(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_Equality*
  name: Equality
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Equality_
  commentId: Overload:Towel.Statics.Inequality`1.op_Equality
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.Equality
  fullName.vb: Towel.Statics.Inequality(Of T).Equality
  nameWithType: Statics.Inequality<T>.Equality
  nameWithType.vb: Statics.Inequality(Of T).Equality
- uid: Towel.Statics.Inequality`1.op_GreaterThan(Towel.Statics.Inequality{`0},`0)
  name: GreaterThan(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_GreaterThan_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_GreaterThan(Towel.Statics.Inequality{`0},`0)
  name.vb: GreaterThan(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.GreaterThan(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).GreaterThan(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.GreaterThan(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).GreaterThan(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_GreaterThan_
  commentId: Overload:Towel.Statics.Inequality`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.GreaterThan
  fullName.vb: Towel.Statics.Inequality(Of T).GreaterThan
  nameWithType: Statics.Inequality<T>.GreaterThan
  nameWithType.vb: Statics.Inequality(Of T).GreaterThan
- uid: Towel.Statics.Inequality`1.op_GreaterThanOrEqual(Towel.Statics.Inequality{`0},`0)
  name: GreaterThanOrEqual(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_GreaterThanOrEqual_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_GreaterThanOrEqual(Towel.Statics.Inequality{`0},`0)
  name.vb: GreaterThanOrEqual(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.GreaterThanOrEqual(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).GreaterThanOrEqual(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.GreaterThanOrEqual(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).GreaterThanOrEqual(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Statics.Inequality`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.GreaterThanOrEqual
  fullName.vb: Towel.Statics.Inequality(Of T).GreaterThanOrEqual
  nameWithType: Statics.Inequality<T>.GreaterThanOrEqual
  nameWithType.vb: Statics.Inequality(Of T).GreaterThanOrEqual
- uid: Towel.Statics.Inequality`1.op_Implicit(`0)~Towel.Statics.Inequality{`0}
  name: Implicit(T to Statics.Inequality<T>)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Implicit__0__Towel_Statics_Inequality__0_
  commentId: M:Towel.Statics.Inequality`1.op_Implicit(`0)~Towel.Statics.Inequality{`0}
  name.vb: Widening(T to Statics.Inequality(Of T))
  fullName: Towel.Statics.Inequality<T>.Implicit(T to Towel.Statics.Inequality<T>)
  fullName.vb: Towel.Statics.Inequality(Of T).Widening(T to Towel.Statics.Inequality(Of T))
  nameWithType: Statics.Inequality<T>.Implicit(T to Statics.Inequality<T>)
  nameWithType.vb: Statics.Inequality(Of T).Widening(T to Statics.Inequality(Of T))
- uid: Towel.Statics.Inequality`1.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Implicit_
  commentId: Overload:Towel.Statics.Inequality`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.Inequality<T>.Implicit
  fullName.vb: Towel.Statics.Inequality(Of T).Widening
  nameWithType: Statics.Inequality<T>.Implicit
  nameWithType.vb: Statics.Inequality(Of T).Widening
- uid: Towel.Statics.Inequality`1.op_Inequality(Towel.Statics.Inequality{`0},`0)
  name: Inequality(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Inequality_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_Inequality(Towel.Statics.Inequality{`0},`0)
  name.vb: Inequality(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.Inequality(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).Inequality(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.Inequality(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).Inequality(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_Inequality*
  name: Inequality
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_Inequality_
  commentId: Overload:Towel.Statics.Inequality`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.Inequality
  fullName.vb: Towel.Statics.Inequality(Of T).Inequality
  nameWithType: Statics.Inequality<T>.Inequality
  nameWithType.vb: Statics.Inequality(Of T).Inequality
- uid: Towel.Statics.Inequality`1.op_LessThan(Towel.Statics.Inequality{`0},`0)
  name: LessThan(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_LessThan_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_LessThan(Towel.Statics.Inequality{`0},`0)
  name.vb: LessThan(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.LessThan(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).LessThan(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.LessThan(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).LessThan(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_LessThan*
  name: LessThan
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_LessThan_
  commentId: Overload:Towel.Statics.Inequality`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.LessThan
  fullName.vb: Towel.Statics.Inequality(Of T).LessThan
  nameWithType: Statics.Inequality<T>.LessThan
  nameWithType.vb: Statics.Inequality(Of T).LessThan
- uid: Towel.Statics.Inequality`1.op_LessThanOrEqual(Towel.Statics.Inequality{`0},`0)
  name: LessThanOrEqual(Statics.Inequality<T>, T)
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_LessThanOrEqual_Towel_Statics_Inequality__0___0_
  commentId: M:Towel.Statics.Inequality`1.op_LessThanOrEqual(Towel.Statics.Inequality{`0},`0)
  name.vb: LessThanOrEqual(Statics.Inequality(Of T), T)
  fullName: Towel.Statics.Inequality<T>.LessThanOrEqual(Towel.Statics.Inequality<T>, T)
  fullName.vb: Towel.Statics.Inequality(Of T).LessThanOrEqual(Towel.Statics.Inequality(Of T), T)
  nameWithType: Statics.Inequality<T>.LessThanOrEqual(Statics.Inequality<T>, T)
  nameWithType.vb: Statics.Inequality(Of T).LessThanOrEqual(Statics.Inequality(Of T), T)
- uid: Towel.Statics.Inequality`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Statics.Inequality`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.LessThanOrEqual
  fullName.vb: Towel.Statics.Inequality(Of T).LessThanOrEqual
  nameWithType: Statics.Inequality<T>.LessThanOrEqual
  nameWithType.vb: Statics.Inequality(Of T).LessThanOrEqual
- uid: Towel.Statics.Inequality`1.ToString
  name: ToString()
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_ToString
  commentId: M:Towel.Statics.Inequality`1.ToString
  fullName: Towel.Statics.Inequality<T>.ToString()
  fullName.vb: Towel.Statics.Inequality(Of T).ToString()
  nameWithType: Statics.Inequality<T>.ToString()
  nameWithType.vb: Statics.Inequality(Of T).ToString()
- uid: Towel.Statics.Inequality`1.ToString*
  name: ToString
  href: api/Towel.Statics.Inequality-1.html#Towel_Statics_Inequality_1_ToString_
  commentId: Overload:Towel.Statics.Inequality`1.ToString
  isSpec: "True"
  fullName: Towel.Statics.Inequality<T>.ToString
  fullName.vb: Towel.Statics.Inequality(Of T).ToString
  nameWithType: Statics.Inequality<T>.ToString
  nameWithType.vb: Statics.Inequality(Of T).ToString
- uid: Towel.Statics.Inequate*
  name: Inequate
  href: api/Towel.Statics.html#Towel_Statics_Inequate_
  commentId: Overload:Towel.Statics.Inequate
  isSpec: "True"
  fullName: Towel.Statics.Inequate
  nameWithType: Statics.Inequate
- uid: Towel.Statics.Inequate``1(``0,``0)
  name: Inequate<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Inequate__1___0___0_
  commentId: M:Towel.Statics.Inequate``1(``0,``0)
  name.vb: Inequate(Of T)(T, T)
  fullName: Towel.Statics.Inequate<T>(T, T)
  fullName.vb: Towel.Statics.Inequate(Of T)(T, T)
  nameWithType: Statics.Inequate<T>(T, T)
  nameWithType.vb: Statics.Inequate(Of T)(T, T)
- uid: Towel.Statics.Inequate``3(``0,``1)
  name: Inequate<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Inequate__3___0___1_
  commentId: M:Towel.Statics.Inequate``3(``0,``1)
  name.vb: Inequate(Of A, B, C)(A, B)
  fullName: Towel.Statics.Inequate<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Inequate(Of A, B, C)(A, B)
  nameWithType: Statics.Inequate<A, B, C>(A, B)
  nameWithType.vb: Statics.Inequate(Of A, B, C)(A, B)
- uid: Towel.Statics.IntCompare
  name: Statics.IntCompare
  href: api/Towel.Statics.IntCompare.html
  commentId: T:Towel.Statics.IntCompare
  fullName: Towel.Statics.IntCompare
  nameWithType: Statics.IntCompare
- uid: Towel.Statics.IntCompare.Do(System.Int32,System.Int32)
  name: Do(Int32, Int32)
  href: api/Towel.Statics.IntCompare.html#Towel_Statics_IntCompare_Do_System_Int32_System_Int32_
  commentId: M:Towel.Statics.IntCompare.Do(System.Int32,System.Int32)
  fullName: Towel.Statics.IntCompare.Do(System.Int32, System.Int32)
  nameWithType: Statics.IntCompare.Do(Int32, Int32)
- uid: Towel.Statics.IntCompare.Do*
  name: Do
  href: api/Towel.Statics.IntCompare.html#Towel_Statics_IntCompare_Do_
  commentId: Overload:Towel.Statics.IntCompare.Do
  isSpec: "True"
  fullName: Towel.Statics.IntCompare.Do
  nameWithType: Statics.IntCompare.Do
- uid: Towel.Statics.Inversion*
  name: Inversion
  href: api/Towel.Statics.html#Towel_Statics_Inversion_
  commentId: Overload:Towel.Statics.Inversion
  isSpec: "True"
  fullName: Towel.Statics.Inversion
  nameWithType: Statics.Inversion
- uid: Towel.Statics.Inversion``1(``0)
  name: Inversion<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_Inversion__1___0_
  commentId: M:Towel.Statics.Inversion``1(``0)
  name.vb: Inversion(Of T)(T)
  fullName: Towel.Statics.Inversion<T>(T)
  fullName.vb: Towel.Statics.Inversion(Of T)(T)
  nameWithType: Statics.Inversion<T>(T)
  nameWithType.vb: Statics.Inversion(Of T)(T)
- uid: Towel.Statics.IsEven*
  name: IsEven
  href: api/Towel.Statics.html#Towel_Statics_IsEven_
  commentId: Overload:Towel.Statics.IsEven
  isSpec: "True"
  fullName: Towel.Statics.IsEven
  nameWithType: Statics.IsEven
- uid: Towel.Statics.IsEven``1(``0)
  name: IsEven<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsEven__1___0_
  commentId: M:Towel.Statics.IsEven``1(``0)
  name.vb: IsEven(Of T)(T)
  fullName: Towel.Statics.IsEven<T>(T)
  fullName.vb: Towel.Statics.IsEven(Of T)(T)
  nameWithType: Statics.IsEven<T>(T)
  nameWithType.vb: Statics.IsEven(Of T)(T)
- uid: Towel.Statics.IsInteger*
  name: IsInteger
  href: api/Towel.Statics.html#Towel_Statics_IsInteger_
  commentId: Overload:Towel.Statics.IsInteger
  isSpec: "True"
  fullName: Towel.Statics.IsInteger
  nameWithType: Statics.IsInteger
- uid: Towel.Statics.IsInteger``1(``0)
  name: IsInteger<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsInteger__1___0_
  commentId: M:Towel.Statics.IsInteger``1(``0)
  name.vb: IsInteger(Of T)(T)
  fullName: Towel.Statics.IsInteger<T>(T)
  fullName.vb: Towel.Statics.IsInteger(Of T)(T)
  nameWithType: Statics.IsInteger<T>(T)
  nameWithType.vb: Statics.IsInteger(Of T)(T)
- uid: Towel.Statics.IsInterleavedIterative(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: IsInterleavedIterative(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedIterative_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.IsInterleavedIterative(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: IsInterleavedIterative(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Towel.Statics.IsInterleavedIterative(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.IsInterleavedIterative(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: Statics.IsInterleavedIterative(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Statics.IsInterleavedIterative(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Towel.Statics.IsInterleavedIterative*
  name: IsInterleavedIterative
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedIterative_
  commentId: Overload:Towel.Statics.IsInterleavedIterative
  isSpec: "True"
  fullName: Towel.Statics.IsInterleavedIterative
  nameWithType: Statics.IsInterleavedIterative
- uid: Towel.Statics.IsInterleavedIterative``1(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: IsInterleavedIterative<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedIterative__1_ReadOnlySpan___0__ReadOnlySpan___0__ReadOnlySpan___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.IsInterleavedIterative``1(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: IsInterleavedIterative(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.IsInterleavedIterative<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.IsInterleavedIterative(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.IsInterleavedIterative<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.IsInterleavedIterative(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.IsInterleavedIterative``2(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name: IsInterleavedIterative<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedIterative__2_ReadOnlySpan___0__ReadOnlySpan___0__ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.IsInterleavedIterative``2(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name.vb: IsInterleavedIterative(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
  fullName: Towel.Statics.IsInterleavedIterative<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  fullName.vb: Towel.Statics.IsInterleavedIterative(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
  nameWithType: Statics.IsInterleavedIterative<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  nameWithType.vb: Statics.IsInterleavedIterative(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
- uid: Towel.Statics.IsInterleavedRecursive(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: IsInterleavedRecursive(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedRecursive_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.IsInterleavedRecursive(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: IsInterleavedRecursive(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Towel.Statics.IsInterleavedRecursive(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.IsInterleavedRecursive(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: Statics.IsInterleavedRecursive(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Statics.IsInterleavedRecursive(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Towel.Statics.IsInterleavedRecursive*
  name: IsInterleavedRecursive
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedRecursive_
  commentId: Overload:Towel.Statics.IsInterleavedRecursive
  isSpec: "True"
  fullName: Towel.Statics.IsInterleavedRecursive
  nameWithType: Statics.IsInterleavedRecursive
- uid: Towel.Statics.IsInterleavedRecursive``1(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: IsInterleavedRecursive<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedRecursive__1_ReadOnlySpan___0__ReadOnlySpan___0__ReadOnlySpan___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.IsInterleavedRecursive``1(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: IsInterleavedRecursive(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.IsInterleavedRecursive<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.IsInterleavedRecursive(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.IsInterleavedRecursive<T>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.IsInterleavedRecursive(Of T)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.IsInterleavedRecursive``2(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name: IsInterleavedRecursive<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  href: api/Towel.Statics.html#Towel_Statics_IsInterleavedRecursive__2_ReadOnlySpan___0__ReadOnlySpan___0__ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.IsInterleavedRecursive``2(ReadOnlySpan{``0},ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name.vb: IsInterleavedRecursive(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
  fullName: Towel.Statics.IsInterleavedRecursive<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  fullName.vb: Towel.Statics.IsInterleavedRecursive(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
  nameWithType: Statics.IsInterleavedRecursive<T, Equate>(ReadOnlySpan<T>, ReadOnlySpan<T>, ReadOnlySpan<T>, Equate)
  nameWithType.vb: Statics.IsInterleavedRecursive(Of T, Equate)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equate)
- uid: Towel.Statics.IsNegative*
  name: IsNegative
  href: api/Towel.Statics.html#Towel_Statics_IsNegative_
  commentId: Overload:Towel.Statics.IsNegative
  isSpec: "True"
  fullName: Towel.Statics.IsNegative
  nameWithType: Statics.IsNegative
- uid: Towel.Statics.IsNegative``1(``0)
  name: IsNegative<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsNegative__1___0_
  commentId: M:Towel.Statics.IsNegative``1(``0)
  name.vb: IsNegative(Of T)(T)
  fullName: Towel.Statics.IsNegative<T>(T)
  fullName.vb: Towel.Statics.IsNegative(Of T)(T)
  nameWithType: Statics.IsNegative<T>(T)
  nameWithType.vb: Statics.IsNegative(Of T)(T)
- uid: Towel.Statics.IsNonNegative*
  name: IsNonNegative
  href: api/Towel.Statics.html#Towel_Statics_IsNonNegative_
  commentId: Overload:Towel.Statics.IsNonNegative
  isSpec: "True"
  fullName: Towel.Statics.IsNonNegative
  nameWithType: Statics.IsNonNegative
- uid: Towel.Statics.IsNonNegative``1(``0)
  name: IsNonNegative<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsNonNegative__1___0_
  commentId: M:Towel.Statics.IsNonNegative``1(``0)
  name.vb: IsNonNegative(Of T)(T)
  fullName: Towel.Statics.IsNonNegative<T>(T)
  fullName.vb: Towel.Statics.IsNonNegative(Of T)(T)
  nameWithType: Statics.IsNonNegative<T>(T)
  nameWithType.vb: Statics.IsNonNegative(Of T)(T)
- uid: Towel.Statics.IsOdd*
  name: IsOdd
  href: api/Towel.Statics.html#Towel_Statics_IsOdd_
  commentId: Overload:Towel.Statics.IsOdd
  isSpec: "True"
  fullName: Towel.Statics.IsOdd
  nameWithType: Statics.IsOdd
- uid: Towel.Statics.IsOdd``1(``0)
  name: IsOdd<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsOdd__1___0_
  commentId: M:Towel.Statics.IsOdd``1(``0)
  name.vb: IsOdd(Of T)(T)
  fullName: Towel.Statics.IsOdd<T>(T)
  fullName.vb: Towel.Statics.IsOdd(Of T)(T)
  nameWithType: Statics.IsOdd<T>(T)
  nameWithType.vb: Statics.IsOdd(Of T)(T)
- uid: Towel.Statics.IsOrdered*
  name: IsOrdered
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered_
  commentId: Overload:Towel.Statics.IsOrdered
  isSpec: "True"
  fullName: Towel.Statics.IsOrdered
  nameWithType: Statics.IsOrdered
- uid: Towel.Statics.IsOrdered``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: IsOrdered<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__1_ReadOnlySpan___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.IsOrdered``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: IsOrdered(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.IsOrdered<T>(ReadOnlySpan<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.IsOrdered(Of T)(ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.IsOrdered<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.IsOrdered(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.IsOrdered``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: IsOrdered<T>(System.Collections.Generic.IEnumerable<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__1_System_Collections_Generic_IEnumerable___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.IsOrdered``1(System.Collections.Generic.IEnumerable{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: IsOrdered(Of T)(System.Collections.Generic.IEnumerable(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.IsOrdered<T>(System.Collections.Generic.IEnumerable<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.IsOrdered(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.IsOrdered<T>(System.Collections.Generic.IEnumerable<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.IsOrdered(Of T)(System.Collections.Generic.IEnumerable(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.IsOrdered``1(System.Int32,System.Int32,Func{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: IsOrdered<T>(Int32, Int32, Func<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__1_System_Int32_System_Int32_Func_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.IsOrdered``1(System.Int32,System.Int32,Func{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: IsOrdered(Of T)(Int32, Int32, Func(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.IsOrdered<T>(System.Int32, System.Int32, Func<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.IsOrdered(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.IsOrdered<T>(Int32, Int32, Func<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.IsOrdered(Of T)(Int32, Int32, Func(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.IsOrdered``2(ReadOnlySpan{``0},``1)
  name: IsOrdered<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.IsOrdered``2(ReadOnlySpan{``0},``1)
  name.vb: IsOrdered(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.IsOrdered<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.IsOrdered(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.IsOrdered<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.IsOrdered(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.IsOrdered``2(System.Collections.Generic.IEnumerable{``0},``1)
  name: IsOrdered<T, Compare>(System.Collections.Generic.IEnumerable<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__2_System_Collections_Generic_IEnumerable___0____1_
  commentId: M:Towel.Statics.IsOrdered``2(System.Collections.Generic.IEnumerable{``0},``1)
  name.vb: IsOrdered(Of T, Compare)(System.Collections.Generic.IEnumerable(Of T), Compare)
  fullName: Towel.Statics.IsOrdered<T, Compare>(System.Collections.Generic.IEnumerable<T>, Compare)
  fullName.vb: Towel.Statics.IsOrdered(Of T, Compare)(System.Collections.Generic.IEnumerable(Of T), Compare)
  nameWithType: Statics.IsOrdered<T, Compare>(System.Collections.Generic.IEnumerable<T>, Compare)
  nameWithType.vb: Statics.IsOrdered(Of T, Compare)(System.Collections.Generic.IEnumerable(Of T), Compare)
- uid: Towel.Statics.IsOrdered``3(System.Int32,System.Int32,``1,``2)
  name: IsOrdered<T, Compare, Get>(Int32, Int32, Compare, Get)
  href: api/Towel.Statics.html#Towel_Statics_IsOrdered__3_System_Int32_System_Int32___1___2_
  commentId: M:Towel.Statics.IsOrdered``3(System.Int32,System.Int32,``1,``2)
  name.vb: IsOrdered(Of T, Compare, Get)(Int32, Int32, Compare, Get)
  fullName: Towel.Statics.IsOrdered<T, Compare, Get>(System.Int32, System.Int32, Compare, Get)
  fullName.vb: Towel.Statics.IsOrdered(Of T, Compare, Get)(System.Int32, System.Int32, Compare, Get)
  nameWithType: Statics.IsOrdered<T, Compare, Get>(Int32, Int32, Compare, Get)
  nameWithType.vb: Statics.IsOrdered(Of T, Compare, Get)(Int32, Int32, Compare, Get)
- uid: Towel.Statics.IsPalindrome(ReadOnlySpan{System.Char})
  name: IsPalindrome(ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome_ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.IsPalindrome(ReadOnlySpan{System.Char})
  name.vb: IsPalindrome(ReadOnlySpan(Of Char))
  fullName: Towel.Statics.IsPalindrome(ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.IsPalindrome(ReadOnlySpan(Of System.Char))
  nameWithType: Statics.IsPalindrome(ReadOnlySpan<Char>)
  nameWithType.vb: Statics.IsPalindrome(ReadOnlySpan(Of Char))
- uid: Towel.Statics.IsPalindrome*
  name: IsPalindrome
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome_
  commentId: Overload:Towel.Statics.IsPalindrome
  isSpec: "True"
  fullName: Towel.Statics.IsPalindrome
  nameWithType: Statics.IsPalindrome
- uid: Towel.Statics.IsPalindrome``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: IsPalindrome<T>(ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome__1_ReadOnlySpan___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.IsPalindrome``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: IsPalindrome(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.IsPalindrome<T>(ReadOnlySpan<T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.IsPalindrome(Of T)(ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.IsPalindrome<T>(ReadOnlySpan<T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.IsPalindrome(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.IsPalindrome``1(System.Int32,System.Int32,Func{System.Int32,``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name: IsPalindrome<T>(Int32, Int32, Func<Int32, T>, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome__1_System_Int32_System_Int32_Func_System_Int32___0__System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.IsPalindrome``1(System.Int32,System.Int32,Func{System.Int32,``0},System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: IsPalindrome(Of T)(Int32, Int32, Func(Of Int32, T), Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.IsPalindrome<T>(System.Int32, System.Int32, Func<System.Int32, T>, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.IsPalindrome(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.IsPalindrome<T>(Int32, Int32, Func<Int32, T>, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.IsPalindrome(Of T)(Int32, Int32, Func(Of Int32, T), Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.IsPalindrome``2(ReadOnlySpan{``0},``1)
  name: IsPalindrome<T, Equate>(ReadOnlySpan<T>, Equate)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.IsPalindrome``2(ReadOnlySpan{``0},``1)
  name.vb: IsPalindrome(Of T, Equate)(ReadOnlySpan(Of T), Equate)
  fullName: Towel.Statics.IsPalindrome<T, Equate>(ReadOnlySpan<T>, Equate)
  fullName.vb: Towel.Statics.IsPalindrome(Of T, Equate)(ReadOnlySpan(Of T), Equate)
  nameWithType: Statics.IsPalindrome<T, Equate>(ReadOnlySpan<T>, Equate)
  nameWithType.vb: Statics.IsPalindrome(Of T, Equate)(ReadOnlySpan(Of T), Equate)
- uid: Towel.Statics.IsPalindrome``2(System.Int32,System.Int32,``1,System.Nullable{Func{``0,``0,System.Boolean}})
  name: IsPalindrome<T, Get>(Int32, Int32, Get, Nullable<Func<T, T, Boolean>>)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome__2_System_Int32_System_Int32___1_System_Nullable_Func___0___0_System_Boolean___
  commentId: M:Towel.Statics.IsPalindrome``2(System.Int32,System.Int32,``1,System.Nullable{Func{``0,``0,System.Boolean}})
  name.vb: IsPalindrome(Of T, Get)(Int32, Int32, Get, Nullable(Of Func(Of T, T, Boolean)))
  fullName: Towel.Statics.IsPalindrome<T, Get>(System.Int32, System.Int32, Get, System.Nullable<Func<T, T, System.Boolean>>)
  fullName.vb: Towel.Statics.IsPalindrome(Of T, Get)(System.Int32, System.Int32, Get, System.Nullable(Of Func(Of T, T, System.Boolean)))
  nameWithType: Statics.IsPalindrome<T, Get>(Int32, Int32, Get, Nullable<Func<T, T, Boolean>>)
  nameWithType.vb: Statics.IsPalindrome(Of T, Get)(Int32, Int32, Get, Nullable(Of Func(Of T, T, Boolean)))
- uid: Towel.Statics.IsPalindrome``3(System.Int32,System.Int32,``1,``2)
  name: IsPalindrome<T, Get, Equate>(Int32, Int32, Get, Equate)
  href: api/Towel.Statics.html#Towel_Statics_IsPalindrome__3_System_Int32_System_Int32___1___2_
  commentId: M:Towel.Statics.IsPalindrome``3(System.Int32,System.Int32,``1,``2)
  name.vb: IsPalindrome(Of T, Get, Equate)(Int32, Int32, Get, Equate)
  fullName: Towel.Statics.IsPalindrome<T, Get, Equate>(System.Int32, System.Int32, Get, Equate)
  fullName.vb: Towel.Statics.IsPalindrome(Of T, Get, Equate)(System.Int32, System.Int32, Get, Equate)
  nameWithType: Statics.IsPalindrome<T, Get, Equate>(Int32, Int32, Get, Equate)
  nameWithType.vb: Statics.IsPalindrome(Of T, Get, Equate)(Int32, Int32, Get, Equate)
- uid: Towel.Statics.IsPositive*
  name: IsPositive
  href: api/Towel.Statics.html#Towel_Statics_IsPositive_
  commentId: Overload:Towel.Statics.IsPositive
  isSpec: "True"
  fullName: Towel.Statics.IsPositive
  nameWithType: Statics.IsPositive
- uid: Towel.Statics.IsPositive``1(``0)
  name: IsPositive<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsPositive__1___0_
  commentId: M:Towel.Statics.IsPositive``1(``0)
  name.vb: IsPositive(Of T)(T)
  fullName: Towel.Statics.IsPositive<T>(T)
  fullName.vb: Towel.Statics.IsPositive(Of T)(T)
  nameWithType: Statics.IsPositive<T>(T)
  nameWithType.vb: Statics.IsPositive(Of T)(T)
- uid: Towel.Statics.IsPrime*
  name: IsPrime
  href: api/Towel.Statics.html#Towel_Statics_IsPrime_
  commentId: Overload:Towel.Statics.IsPrime
  isSpec: "True"
  fullName: Towel.Statics.IsPrime
  nameWithType: Statics.IsPrime
- uid: Towel.Statics.IsPrime``1(``0)
  name: IsPrime<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_IsPrime__1___0_
  commentId: M:Towel.Statics.IsPrime``1(``0)
  name.vb: IsPrime(Of T)(T)
  fullName: Towel.Statics.IsPrime<T>(T)
  fullName.vb: Towel.Statics.IsPrime(Of T)(T)
  nameWithType: Statics.IsPrime<T>(T)
  nameWithType.vb: Statics.IsPrime(Of T)(T)
- uid: Towel.Statics.Join(Range,Func{System.Int32,System.String},System.String)
  name: Join(Range, Func<Int32, String>, String)
  href: api/Towel.Statics.html#Towel_Statics_Join_Range_Func_System_Int32_System_String__System_String_
  commentId: M:Towel.Statics.Join(Range,Func{System.Int32,System.String},System.String)
  name.vb: Join(Range, Func(Of Int32, String), String)
  fullName: Towel.Statics.Join(Range, Func<System.Int32, System.String>, System.String)
  fullName.vb: Towel.Statics.Join(Range, Func(Of System.Int32, System.String), System.String)
  nameWithType: Statics.Join(Range, Func<Int32, String>, String)
  nameWithType.vb: Statics.Join(Range, Func(Of Int32, String), String)
- uid: Towel.Statics.Join*
  name: Join
  href: api/Towel.Statics.html#Towel_Statics_Join_
  commentId: Overload:Towel.Statics.Join
  isSpec: "True"
  fullName: Towel.Statics.Join
  nameWithType: Statics.Join
- uid: Towel.Statics.LeastCommonMultiple*
  name: LeastCommonMultiple
  href: api/Towel.Statics.html#Towel_Statics_LeastCommonMultiple_
  commentId: Overload:Towel.Statics.LeastCommonMultiple
  isSpec: "True"
  fullName: Towel.Statics.LeastCommonMultiple
  nameWithType: Statics.LeastCommonMultiple
- uid: Towel.Statics.LeastCommonMultiple``1(``0,``0,``0[])
  name: LeastCommonMultiple<T>(T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_LeastCommonMultiple__1___0___0___0___
  commentId: M:Towel.Statics.LeastCommonMultiple``1(``0,``0,``0[])
  name.vb: LeastCommonMultiple(Of T)(T, T, T())
  fullName: Towel.Statics.LeastCommonMultiple<T>(T, T, T[])
  fullName.vb: Towel.Statics.LeastCommonMultiple(Of T)(T, T, T())
  nameWithType: Statics.LeastCommonMultiple<T>(T, T, T[])
  nameWithType.vb: Statics.LeastCommonMultiple(Of T)(T, T, T())
- uid: Towel.Statics.LeastCommonMultiple``1(Action{Action{``0}})
  name: LeastCommonMultiple<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_LeastCommonMultiple__1_Action_Action___0___
  commentId: M:Towel.Statics.LeastCommonMultiple``1(Action{Action{``0}})
  name.vb: LeastCommonMultiple(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.LeastCommonMultiple<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.LeastCommonMultiple(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.LeastCommonMultiple<T>(Action<Action<T>>)
  nameWithType.vb: Statics.LeastCommonMultiple(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Less
  name: Less
  href: api/Towel.Statics.html#Towel_Statics_Less
  commentId: F:Towel.Statics.Less
  fullName: Towel.Statics.Less
  nameWithType: Statics.Less
- uid: Towel.Statics.LessThan*
  name: LessThan
  href: api/Towel.Statics.html#Towel_Statics_LessThan_
  commentId: Overload:Towel.Statics.LessThan
  isSpec: "True"
  fullName: Towel.Statics.LessThan
  nameWithType: Statics.LessThan
- uid: Towel.Statics.LessThan``1(``0,``0)
  name: LessThan<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_LessThan__1___0___0_
  commentId: M:Towel.Statics.LessThan``1(``0,``0)
  name.vb: LessThan(Of T)(T, T)
  fullName: Towel.Statics.LessThan<T>(T, T)
  fullName.vb: Towel.Statics.LessThan(Of T)(T, T)
  nameWithType: Statics.LessThan<T>(T, T)
  nameWithType.vb: Statics.LessThan(Of T)(T, T)
- uid: Towel.Statics.LessThan``3(``0,``1)
  name: LessThan<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_LessThan__3___0___1_
  commentId: M:Towel.Statics.LessThan``3(``0,``1)
  name.vb: LessThan(Of A, B, C)(A, B)
  fullName: Towel.Statics.LessThan<A, B, C>(A, B)
  fullName.vb: Towel.Statics.LessThan(Of A, B, C)(A, B)
  nameWithType: Statics.LessThan<A, B, C>(A, B)
  nameWithType.vb: Statics.LessThan(Of A, B, C)(A, B)
- uid: Towel.Statics.LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Statics.html#Towel_Statics_LessThanOrEqual_
  commentId: Overload:Towel.Statics.LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.LessThanOrEqual
  nameWithType: Statics.LessThanOrEqual
- uid: Towel.Statics.LessThanOrEqual``1(``0,``0)
  name: LessThanOrEqual<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_LessThanOrEqual__1___0___0_
  commentId: M:Towel.Statics.LessThanOrEqual``1(``0,``0)
  name.vb: LessThanOrEqual(Of T)(T, T)
  fullName: Towel.Statics.LessThanOrEqual<T>(T, T)
  fullName.vb: Towel.Statics.LessThanOrEqual(Of T)(T, T)
  nameWithType: Statics.LessThanOrEqual<T>(T, T)
  nameWithType.vb: Statics.LessThanOrEqual(Of T)(T, T)
- uid: Towel.Statics.LessThanOrEqual``3(``0,``1)
  name: LessThanOrEqual<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_LessThanOrEqual__3___0___1_
  commentId: M:Towel.Statics.LessThanOrEqual``3(``0,``1)
  name.vb: LessThanOrEqual(Of A, B, C)(A, B)
  fullName: Towel.Statics.LessThanOrEqual<A, B, C>(A, B)
  fullName.vb: Towel.Statics.LessThanOrEqual(Of A, B, C)(A, B)
  nameWithType: Statics.LessThanOrEqual<A, B, C>(A, B)
  nameWithType.vb: Statics.LessThanOrEqual(Of A, B, C)(A, B)
- uid: Towel.Statics.LevenshteinDistanceIterative(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: LevenshteinDistanceIterative(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceIterative_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.LevenshteinDistanceIterative(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: LevenshteinDistanceIterative(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Towel.Statics.LevenshteinDistanceIterative(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.LevenshteinDistanceIterative(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: Statics.LevenshteinDistanceIterative(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Statics.LevenshteinDistanceIterative(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Towel.Statics.LevenshteinDistanceIterative*
  name: LevenshteinDistanceIterative
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceIterative_
  commentId: Overload:Towel.Statics.LevenshteinDistanceIterative
  isSpec: "True"
  fullName: Towel.Statics.LevenshteinDistanceIterative
  nameWithType: Statics.LevenshteinDistanceIterative
- uid: Towel.Statics.LevenshteinDistanceIterative``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name: LevenshteinDistanceIterative<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceIterative__2_ReadOnlySpan___0__ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.LevenshteinDistanceIterative``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name.vb: LevenshteinDistanceIterative(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  fullName: Towel.Statics.LevenshteinDistanceIterative<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  fullName.vb: Towel.Statics.LevenshteinDistanceIterative(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  nameWithType: Statics.LevenshteinDistanceIterative<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  nameWithType.vb: Statics.LevenshteinDistanceIterative(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
- uid: Towel.Statics.LevenshteinDistanceIterative``4(System.Int32,System.Int32,``1,``2,``3)
  name: LevenshteinDistanceIterative<T, GetA, GetB, Equals>(Int32, Int32, GetA, GetB, Equals)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceIterative__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.LevenshteinDistanceIterative``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: LevenshteinDistanceIterative(Of T, GetA, GetB, Equals)(Int32, Int32, GetA, GetB, Equals)
  fullName: Towel.Statics.LevenshteinDistanceIterative<T, GetA, GetB, Equals>(System.Int32, System.Int32, GetA, GetB, Equals)
  fullName.vb: Towel.Statics.LevenshteinDistanceIterative(Of T, GetA, GetB, Equals)(System.Int32, System.Int32, GetA, GetB, Equals)
  nameWithType: Statics.LevenshteinDistanceIterative<T, GetA, GetB, Equals>(Int32, Int32, GetA, GetB, Equals)
  nameWithType.vb: Statics.LevenshteinDistanceIterative(Of T, GetA, GetB, Equals)(Int32, Int32, GetA, GetB, Equals)
- uid: Towel.Statics.LevenshteinDistanceRecursive(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: LevenshteinDistanceRecursive(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceRecursive_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Towel.Statics.LevenshteinDistanceRecursive(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: LevenshteinDistanceRecursive(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Towel.Statics.LevenshteinDistanceRecursive(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Towel.Statics.LevenshteinDistanceRecursive(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: Statics.LevenshteinDistanceRecursive(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Statics.LevenshteinDistanceRecursive(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Towel.Statics.LevenshteinDistanceRecursive*
  name: LevenshteinDistanceRecursive
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceRecursive_
  commentId: Overload:Towel.Statics.LevenshteinDistanceRecursive
  isSpec: "True"
  fullName: Towel.Statics.LevenshteinDistanceRecursive
  nameWithType: Statics.LevenshteinDistanceRecursive
- uid: Towel.Statics.LevenshteinDistanceRecursive``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name: LevenshteinDistanceRecursive<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceRecursive__2_ReadOnlySpan___0__ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.LevenshteinDistanceRecursive``2(ReadOnlySpan{``0},ReadOnlySpan{``0},``1)
  name.vb: LevenshteinDistanceRecursive(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  fullName: Towel.Statics.LevenshteinDistanceRecursive<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  fullName.vb: Towel.Statics.LevenshteinDistanceRecursive(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
  nameWithType: Statics.LevenshteinDistanceRecursive<T, Equals>(ReadOnlySpan<T>, ReadOnlySpan<T>, Equals)
  nameWithType.vb: Statics.LevenshteinDistanceRecursive(Of T, Equals)(ReadOnlySpan(Of T), ReadOnlySpan(Of T), Equals)
- uid: Towel.Statics.LevenshteinDistanceRecursive``4(System.Int32,System.Int32,``1,``2,``3)
  name: LevenshteinDistanceRecursive<T, GetA, GetB, Equals>(Int32, Int32, GetA, GetB, Equals)
  href: api/Towel.Statics.html#Towel_Statics_LevenshteinDistanceRecursive__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.LevenshteinDistanceRecursive``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: LevenshteinDistanceRecursive(Of T, GetA, GetB, Equals)(Int32, Int32, GetA, GetB, Equals)
  fullName: Towel.Statics.LevenshteinDistanceRecursive<T, GetA, GetB, Equals>(System.Int32, System.Int32, GetA, GetB, Equals)
  fullName.vb: Towel.Statics.LevenshteinDistanceRecursive(Of T, GetA, GetB, Equals)(System.Int32, System.Int32, GetA, GetB, Equals)
  nameWithType: Statics.LevenshteinDistanceRecursive<T, GetA, GetB, Equals>(Int32, Int32, GetA, GetB, Equals)
  nameWithType.vb: Statics.LevenshteinDistanceRecursive(Of T, GetA, GetB, Equals)(Int32, Int32, GetA, GetB, Equals)
- uid: Towel.Statics.LinearInterpolation*
  name: LinearInterpolation
  href: api/Towel.Statics.html#Towel_Statics_LinearInterpolation_
  commentId: Overload:Towel.Statics.LinearInterpolation
  isSpec: "True"
  fullName: Towel.Statics.LinearInterpolation
  nameWithType: Statics.LinearInterpolation
- uid: Towel.Statics.LinearInterpolation``1(``0,``0,``0,``0,``0)
  name: LinearInterpolation<T>(T, T, T, T, T)
  href: api/Towel.Statics.html#Towel_Statics_LinearInterpolation__1___0___0___0___0___0_
  commentId: M:Towel.Statics.LinearInterpolation``1(``0,``0,``0,``0,``0)
  name.vb: LinearInterpolation(Of T)(T, T, T, T, T)
  fullName: Towel.Statics.LinearInterpolation<T>(T, T, T, T, T)
  fullName.vb: Towel.Statics.LinearInterpolation(Of T)(T, T, T, T, T)
  nameWithType: Statics.LinearInterpolation<T>(T, T, T, T, T)
  nameWithType.vb: Statics.LinearInterpolation(Of T)(T, T, T, T, T)
- uid: Towel.Statics.LinearRegression2D*
  name: LinearRegression2D
  href: api/Towel.Statics.html#Towel_Statics_LinearRegression2D_
  commentId: Overload:Towel.Statics.LinearRegression2D
  isSpec: "True"
  fullName: Towel.Statics.LinearRegression2D
  nameWithType: Statics.LinearRegression2D
- uid: Towel.Statics.LinearRegression2D``1(Action{Action{``0,``0}},``0@,``0@)
  name: LinearRegression2D<T>(Action<Action<T, T>>, out T, out T)
  href: api/Towel.Statics.html#Towel_Statics_LinearRegression2D__1_Action_Action___0___0_____0____0__
  commentId: M:Towel.Statics.LinearRegression2D``1(Action{Action{``0,``0}},``0@,``0@)
  name.vb: LinearRegression2D(Of T)(Action(Of Action(Of T, T)), ByRef T, ByRef T)
  fullName: Towel.Statics.LinearRegression2D<T>(Action<Action<T, T>>, out T, out T)
  fullName.vb: Towel.Statics.LinearRegression2D(Of T)(Action(Of Action(Of T, T)), ByRef T, ByRef T)
  nameWithType: Statics.LinearRegression2D<T>(Action<Action<T, T>>, out T, out T)
  nameWithType.vb: Statics.LinearRegression2D(Of T)(Action(Of Action(Of T, T)), ByRef T, ByRef T)
- uid: Towel.Statics.Logarithm*
  name: Logarithm
  href: api/Towel.Statics.html#Towel_Statics_Logarithm_
  commentId: Overload:Towel.Statics.Logarithm
  isSpec: "True"
  fullName: Towel.Statics.Logarithm
  nameWithType: Statics.Logarithm
- uid: Towel.Statics.Logarithm``1(``0,``0)
  name: Logarithm<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Logarithm__1___0___0_
  commentId: M:Towel.Statics.Logarithm``1(``0,``0)
  name.vb: Logarithm(Of T)(T, T)
  fullName: Towel.Statics.Logarithm<T>(T, T)
  fullName.vb: Towel.Statics.Logarithm(Of T)(T, T)
  nameWithType: Statics.Logarithm<T>(T, T)
  nameWithType.vb: Statics.Logarithm(Of T)(T, T)
- uid: Towel.Statics.Maximum*
  name: Maximum
  href: api/Towel.Statics.html#Towel_Statics_Maximum_
  commentId: Overload:Towel.Statics.Maximum
  isSpec: "True"
  fullName: Towel.Statics.Maximum
  nameWithType: Statics.Maximum
- uid: Towel.Statics.Maximum``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: Maximum<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_Maximum__1_ReadOnlySpan___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.Maximum``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: Maximum(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.Maximum<T>(ReadOnlySpan<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.Maximum(Of T)(ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.Maximum<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.Maximum(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.Maximum``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name: Maximum<T>(Nullable<Func<T, T, CompareResult>>, T[])
  href: api/Towel.Statics.html#Towel_Statics_Maximum__1_System_Nullable_Func___0___0_Towel_CompareResult_____0___
  commentId: M:Towel.Statics.Maximum``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name.vb: Maximum(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
  fullName: Towel.Statics.Maximum<T>(System.Nullable<Func<T, T, Towel.CompareResult>>, T[])
  fullName.vb: Towel.Statics.Maximum(Of T)(System.Nullable(Of Func(Of T, T, Towel.CompareResult)), T())
  nameWithType: Statics.Maximum<T>(Nullable<Func<T, T, CompareResult>>, T[])
  nameWithType.vb: Statics.Maximum(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
- uid: Towel.Statics.Maximum``2(ReadOnlySpan{``0},``1)
  name: Maximum<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_Maximum__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.Maximum``2(ReadOnlySpan{``0},``1)
  name.vb: Maximum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.Maximum<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.Maximum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.Maximum<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.Maximum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.MaximumIndex*
  name: MaximumIndex
  href: api/Towel.Statics.html#Towel_Statics_MaximumIndex_
  commentId: Overload:Towel.Statics.MaximumIndex
  isSpec: "True"
  fullName: Towel.Statics.MaximumIndex
  nameWithType: Statics.MaximumIndex
- uid: Towel.Statics.MaximumIndex``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: MaximumIndex<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_MaximumIndex__1_ReadOnlySpan___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.MaximumIndex``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: MaximumIndex(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.MaximumIndex<T>(ReadOnlySpan<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.MaximumIndex(Of T)(ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.MaximumIndex<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.MaximumIndex(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.MaximumIndex``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name: MaximumIndex<T>(Nullable<Func<T, T, CompareResult>>, T[])
  href: api/Towel.Statics.html#Towel_Statics_MaximumIndex__1_System_Nullable_Func___0___0_Towel_CompareResult_____0___
  commentId: M:Towel.Statics.MaximumIndex``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name.vb: MaximumIndex(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
  fullName: Towel.Statics.MaximumIndex<T>(System.Nullable<Func<T, T, Towel.CompareResult>>, T[])
  fullName.vb: Towel.Statics.MaximumIndex(Of T)(System.Nullable(Of Func(Of T, T, Towel.CompareResult)), T())
  nameWithType: Statics.MaximumIndex<T>(Nullable<Func<T, T, CompareResult>>, T[])
  nameWithType.vb: Statics.MaximumIndex(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
- uid: Towel.Statics.MaximumIndex``2(ReadOnlySpan{``0},``1)
  name: MaximumIndex<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_MaximumIndex__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.MaximumIndex``2(ReadOnlySpan{``0},``1)
  name.vb: MaximumIndex(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.MaximumIndex<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.MaximumIndex(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.MaximumIndex<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.MaximumIndex(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.MaximumValue*
  name: MaximumValue
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue_
  commentId: Overload:Towel.Statics.MaximumValue
  isSpec: "True"
  fullName: Towel.Statics.MaximumValue
  nameWithType: Statics.MaximumValue
- uid: Towel.Statics.MaximumValue``1(``0,``0,System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: MaximumValue<T>(T, T, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue__1___0___0_System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.MaximumValue``1(``0,``0,System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: MaximumValue(Of T)(T, T, Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.MaximumValue<T>(T, T, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.MaximumValue(Of T)(T, T, System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.MaximumValue<T>(T, T, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.MaximumValue(Of T)(T, T, Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.MaximumValue``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: MaximumValue<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue__1_ReadOnlySpan___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.MaximumValue``1(ReadOnlySpan{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: MaximumValue(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.MaximumValue<T>(ReadOnlySpan<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.MaximumValue(Of T)(ReadOnlySpan(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.MaximumValue<T>(ReadOnlySpan<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.MaximumValue(Of T)(ReadOnlySpan(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.MaximumValue``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name: MaximumValue<T>(Nullable<Func<T, T, CompareResult>>, T[])
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue__1_System_Nullable_Func___0___0_Towel_CompareResult_____0___
  commentId: M:Towel.Statics.MaximumValue``1(System.Nullable{Func{``0,``0,Towel.CompareResult}},``0[])
  name.vb: MaximumValue(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
  fullName: Towel.Statics.MaximumValue<T>(System.Nullable<Func<T, T, Towel.CompareResult>>, T[])
  fullName.vb: Towel.Statics.MaximumValue(Of T)(System.Nullable(Of Func(Of T, T, Towel.CompareResult)), T())
  nameWithType: Statics.MaximumValue<T>(Nullable<Func<T, T, CompareResult>>, T[])
  nameWithType.vb: Statics.MaximumValue(Of T)(Nullable(Of Func(Of T, T, CompareResult)), T())
- uid: Towel.Statics.MaximumValue``2(``0,``0,``1)
  name: MaximumValue<T, Compare>(T, T, Compare)
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue__2___0___0___1_
  commentId: M:Towel.Statics.MaximumValue``2(``0,``0,``1)
  name.vb: MaximumValue(Of T, Compare)(T, T, Compare)
  fullName: Towel.Statics.MaximumValue<T, Compare>(T, T, Compare)
  fullName.vb: Towel.Statics.MaximumValue(Of T, Compare)(T, T, Compare)
  nameWithType: Statics.MaximumValue<T, Compare>(T, T, Compare)
  nameWithType.vb: Statics.MaximumValue(Of T, Compare)(T, T, Compare)
- uid: Towel.Statics.MaximumValue``2(ReadOnlySpan{``0},``1)
  name: MaximumValue<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_MaximumValue__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.MaximumValue``2(ReadOnlySpan{``0},``1)
  name.vb: MaximumValue(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.MaximumValue<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.MaximumValue(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.MaximumValue<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.MaximumValue(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.Mean*
  name: Mean
  href: api/Towel.Statics.html#Towel_Statics_Mean_
  commentId: Overload:Towel.Statics.Mean
  isSpec: "True"
  fullName: Towel.Statics.Mean
  nameWithType: Statics.Mean
- uid: Towel.Statics.Mean``1(``0,``0[])
  name: Mean<T>(T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Mean__1___0___0___
  commentId: M:Towel.Statics.Mean``1(``0,``0[])
  name.vb: Mean(Of T)(T, T())
  fullName: Towel.Statics.Mean<T>(T, T[])
  fullName.vb: Towel.Statics.Mean(Of T)(T, T())
  nameWithType: Statics.Mean<T>(T, T[])
  nameWithType.vb: Statics.Mean(Of T)(T, T())
- uid: Towel.Statics.Mean``1(Action{Action{``0}})
  name: Mean<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Mean__1_Action_Action___0___
  commentId: M:Towel.Statics.Mean``1(Action{Action{``0}})
  name.vb: Mean(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Mean<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Mean(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Mean<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Mean(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.MeanDeviation*
  name: MeanDeviation
  href: api/Towel.Statics.html#Towel_Statics_MeanDeviation_
  commentId: Overload:Towel.Statics.MeanDeviation
  isSpec: "True"
  fullName: Towel.Statics.MeanDeviation
  nameWithType: Statics.MeanDeviation
- uid: Towel.Statics.MeanDeviation``1(Action{Action{``0}})
  name: MeanDeviation<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_MeanDeviation__1_Action_Action___0___
  commentId: M:Towel.Statics.MeanDeviation``1(Action{Action{``0}})
  name.vb: MeanDeviation(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.MeanDeviation<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.MeanDeviation(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.MeanDeviation<T>(Action<Action<T>>)
  nameWithType.vb: Statics.MeanDeviation(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Median*
  name: Median
  href: api/Towel.Statics.html#Towel_Statics_Median_
  commentId: Overload:Towel.Statics.Median
  isSpec: "True"
  fullName: Towel.Statics.Median
  nameWithType: Statics.Median
- uid: Towel.Statics.Median``1(``0[])
  name: Median<T>(T[])
  href: api/Towel.Statics.html#Towel_Statics_Median__1___0___
  commentId: M:Towel.Statics.Median``1(``0[])
  name.vb: Median(Of T)(T())
  fullName: Towel.Statics.Median<T>(T[])
  fullName.vb: Towel.Statics.Median(Of T)(T())
  nameWithType: Statics.Median<T>(T[])
  nameWithType.vb: Statics.Median(Of T)(T())
- uid: Towel.Statics.Median``1(Action{Action{``0}})
  name: Median<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Median__1_Action_Action___0___
  commentId: M:Towel.Statics.Median``1(Action{Action{``0}})
  name.vb: Median(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Median<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Median(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Median<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Median(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Median``1(Func{``0,``0,Towel.CompareResult},``0[])
  name: Median<T>(Func<T, T, CompareResult>, T[])
  href: api/Towel.Statics.html#Towel_Statics_Median__1_Func___0___0_Towel_CompareResult____0___
  commentId: M:Towel.Statics.Median``1(Func{``0,``0,Towel.CompareResult},``0[])
  name.vb: Median(Of T)(Func(Of T, T, CompareResult), T())
  fullName: Towel.Statics.Median<T>(Func<T, T, Towel.CompareResult>, T[])
  fullName.vb: Towel.Statics.Median(Of T)(Func(Of T, T, Towel.CompareResult), T())
  nameWithType: Statics.Median<T>(Func<T, T, CompareResult>, T[])
  nameWithType.vb: Statics.Median(Of T)(Func(Of T, T, CompareResult), T())
- uid: Towel.Statics.Median``1(Func{``0,``0,Towel.CompareResult},Action{Action{``0}})
  name: Median<T>(Func<T, T, CompareResult>, Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Median__1_Func___0___0_Towel_CompareResult__Action_Action___0___
  commentId: M:Towel.Statics.Median``1(Func{``0,``0,Towel.CompareResult},Action{Action{``0}})
  name.vb: Median(Of T)(Func(Of T, T, CompareResult), Action(Of Action(Of T)))
  fullName: Towel.Statics.Median<T>(Func<T, T, Towel.CompareResult>, Action<Action<T>>)
  fullName.vb: Towel.Statics.Median(Of T)(Func(Of T, T, Towel.CompareResult), Action(Of Action(Of T)))
  nameWithType: Statics.Median<T>(Func<T, T, CompareResult>, Action<Action<T>>)
  nameWithType.vb: Statics.Median(Of T)(Func(Of T, T, CompareResult), Action(Of Action(Of T)))
- uid: Towel.Statics.Minimum(System.Int32,System.Int32,System.Int32)
  name: Minimum(Int32, Int32, Int32)
  href: api/Towel.Statics.html#Towel_Statics_Minimum_System_Int32_System_Int32_System_Int32_
  commentId: M:Towel.Statics.Minimum(System.Int32,System.Int32,System.Int32)
  fullName: Towel.Statics.Minimum(System.Int32, System.Int32, System.Int32)
  nameWithType: Statics.Minimum(Int32, Int32, Int32)
- uid: Towel.Statics.Minimum*
  name: Minimum
  href: api/Towel.Statics.html#Towel_Statics_Minimum_
  commentId: Overload:Towel.Statics.Minimum
  isSpec: "True"
  fullName: Towel.Statics.Minimum
  nameWithType: Statics.Minimum
- uid: Towel.Statics.Minimum``1(``0,``0)
  name: Minimum<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Minimum__1___0___0_
  commentId: M:Towel.Statics.Minimum``1(``0,``0)
  name.vb: Minimum(Of T)(T, T)
  fullName: Towel.Statics.Minimum<T>(T, T)
  fullName.vb: Towel.Statics.Minimum(Of T)(T, T)
  nameWithType: Statics.Minimum<T>(T, T)
  nameWithType.vb: Statics.Minimum(Of T)(T, T)
- uid: Towel.Statics.Minimum``1(``0,``0,``0,``0[])
  name: Minimum<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Minimum__1___0___0___0___0___
  commentId: M:Towel.Statics.Minimum``1(``0,``0,``0,``0[])
  name.vb: Minimum(Of T)(T, T, T, T())
  fullName: Towel.Statics.Minimum<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Minimum(Of T)(T, T, T, T())
  nameWithType: Statics.Minimum<T>(T, T, T, T[])
  nameWithType.vb: Statics.Minimum(Of T)(T, T, T, T())
- uid: Towel.Statics.Minimum``1(Action{Action{``0}})
  name: Minimum<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Minimum__1_Action_Action___0___
  commentId: M:Towel.Statics.Minimum``1(Action{Action{``0}})
  name.vb: Minimum(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Minimum<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Minimum(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Minimum<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Minimum(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Minimum``2(ReadOnlySpan{``0},``1)
  name: Minimum<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_Minimum__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.Minimum``2(ReadOnlySpan{``0},``1)
  name.vb: Minimum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.Minimum<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.Minimum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.Minimum<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.Minimum(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.Mode*
  name: Mode
  href: api/Towel.Statics.html#Towel_Statics_Mode_
  commentId: Overload:Towel.Statics.Mode
  isSpec: "True"
  fullName: Towel.Statics.Mode
  nameWithType: Statics.Mode
- uid: Towel.Statics.Mode``1(Action{``0},``0,``0[])
  name: Mode<T>(Action<T>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Mode__1_Action___0____0___0___
  commentId: M:Towel.Statics.Mode``1(Action{``0},``0,``0[])
  name.vb: Mode(Of T)(Action(Of T), T, T())
  fullName: Towel.Statics.Mode<T>(Action<T>, T, T[])
  fullName.vb: Towel.Statics.Mode(Of T)(Action(Of T), T, T())
  nameWithType: Statics.Mode<T>(Action<T>, T, T[])
  nameWithType.vb: Statics.Mode(Of T)(Action(Of T), T, T())
- uid: Towel.Statics.Mode``1(Action{``0},Func{``0,``0,System.Boolean},``0,``0[])
  name: Mode<T>(Action<T>, Func<T, T, Boolean>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Mode__1_Action___0__Func___0___0_System_Boolean____0___0___
  commentId: M:Towel.Statics.Mode``1(Action{``0},Func{``0,``0,System.Boolean},``0,``0[])
  name.vb: Mode(Of T)(Action(Of T), Func(Of T, T, Boolean), T, T())
  fullName: Towel.Statics.Mode<T>(Action<T>, Func<T, T, System.Boolean>, T, T[])
  fullName.vb: Towel.Statics.Mode(Of T)(Action(Of T), Func(Of T, T, System.Boolean), T, T())
  nameWithType: Statics.Mode<T>(Action<T>, Func<T, T, Boolean>, T, T[])
  nameWithType.vb: Statics.Mode(Of T)(Action(Of T), Func(Of T, T, Boolean), T, T())
- uid: Towel.Statics.Mode``1(Action{``0},Func{``0,``0,System.Boolean},Func{``0,System.Int32},``0,``0[])
  name: Mode<T>(Action<T>, Func<T, T, Boolean>, Func<T, Int32>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Mode__1_Action___0__Func___0___0_System_Boolean__Func___0_System_Int32____0___0___
  commentId: M:Towel.Statics.Mode``1(Action{``0},Func{``0,``0,System.Boolean},Func{``0,System.Int32},``0,``0[])
  name.vb: Mode(Of T)(Action(Of T), Func(Of T, T, Boolean), Func(Of T, Int32), T, T())
  fullName: Towel.Statics.Mode<T>(Action<T>, Func<T, T, System.Boolean>, Func<T, System.Int32>, T, T[])
  fullName.vb: Towel.Statics.Mode(Of T)(Action(Of T), Func(Of T, T, System.Boolean), Func(Of T, System.Int32), T, T())
  nameWithType: Statics.Mode<T>(Action<T>, Func<T, T, Boolean>, Func<T, Int32>, T, T[])
  nameWithType.vb: Statics.Mode(Of T)(Action(Of T), Func(Of T, T, Boolean), Func(Of T, Int32), T, T())
- uid: Towel.Statics.Mode``1(Action{``0},Func{``0,System.Int32},``0,``0[])
  name: Mode<T>(Action<T>, Func<T, Int32>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Mode__1_Action___0__Func___0_System_Int32____0___0___
  commentId: M:Towel.Statics.Mode``1(Action{``0},Func{``0,System.Int32},``0,``0[])
  name.vb: Mode(Of T)(Action(Of T), Func(Of T, Int32), T, T())
  fullName: Towel.Statics.Mode<T>(Action<T>, Func<T, System.Int32>, T, T[])
  fullName.vb: Towel.Statics.Mode(Of T)(Action(Of T), Func(Of T, System.Int32), T, T())
  nameWithType: Statics.Mode<T>(Action<T>, Func<T, Int32>, T, T[])
  nameWithType.vb: Statics.Mode(Of T)(Action(Of T), Func(Of T, Int32), T, T())
- uid: Towel.Statics.Mode``1(Action{Action{``0}},Action{``0},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name: Mode<T>(Action<Action<T>>, Action<T>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.Statics.html#Towel_Statics_Mode__1_Action_Action___0___Action___0__System_Nullable_Func___0___0_System_Boolean___System_Nullable_Func___0_System_Int32___
  commentId: M:Towel.Statics.Mode``1(Action{Action{``0}},Action{``0},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name.vb: Mode(Of T)(Action(Of Action(Of T)), Action(Of T), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.Statics.Mode<T>(Action<Action<T>>, Action<T>, System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.Statics.Mode(Of T)(Action(Of Action(Of T)), Action(Of T), System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: Statics.Mode<T>(Action<Action<T>>, Action<T>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: Statics.Mode(Of T)(Action(Of Action(Of T)), Action(Of T), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.Statics.Multiplication*
  name: Multiplication
  href: api/Towel.Statics.html#Towel_Statics_Multiplication_
  commentId: Overload:Towel.Statics.Multiplication
  isSpec: "True"
  fullName: Towel.Statics.Multiplication
  nameWithType: Statics.Multiplication
- uid: Towel.Statics.Multiplication``1(``0,``0)
  name: Multiplication<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Multiplication__1___0___0_
  commentId: M:Towel.Statics.Multiplication``1(``0,``0)
  name.vb: Multiplication(Of T)(T, T)
  fullName: Towel.Statics.Multiplication<T>(T, T)
  fullName.vb: Towel.Statics.Multiplication(Of T)(T, T)
  nameWithType: Statics.Multiplication<T>(T, T)
  nameWithType.vb: Statics.Multiplication(Of T)(T, T)
- uid: Towel.Statics.Multiplication``1(``0,``0,``0,``0[])
  name: Multiplication<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Multiplication__1___0___0___0___0___
  commentId: M:Towel.Statics.Multiplication``1(``0,``0,``0,``0[])
  name.vb: Multiplication(Of T)(T, T, T, T())
  fullName: Towel.Statics.Multiplication<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Multiplication(Of T)(T, T, T, T())
  nameWithType: Statics.Multiplication<T>(T, T, T, T[])
  nameWithType.vb: Statics.Multiplication(Of T)(T, T, T, T())
- uid: Towel.Statics.Multiplication``1(Action{Action{``0}})
  name: Multiplication<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Multiplication__1_Action_Action___0___
  commentId: M:Towel.Statics.Multiplication``1(Action{Action{``0}})
  name.vb: Multiplication(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Multiplication<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Multiplication(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Multiplication<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Multiplication(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Multiplication``3(``0,``1)
  name: Multiplication<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Multiplication__3___0___1_
  commentId: M:Towel.Statics.Multiplication``3(``0,``1)
  name.vb: Multiplication(Of A, B, C)(A, B)
  fullName: Towel.Statics.Multiplication<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Multiplication(Of A, B, C)(A, B)
  nameWithType: Statics.Multiplication<A, B, C>(A, B)
  nameWithType.vb: Statics.Multiplication(Of A, B, C)(A, B)
- uid: Towel.Statics.NaturalLogarithm*
  name: NaturalLogarithm
  href: api/Towel.Statics.html#Towel_Statics_NaturalLogarithm_
  commentId: Overload:Towel.Statics.NaturalLogarithm
  isSpec: "True"
  fullName: Towel.Statics.NaturalLogarithm
  nameWithType: Statics.NaturalLogarithm
- uid: Towel.Statics.NaturalLogarithm``1(``0)
  name: NaturalLogarithm<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_NaturalLogarithm__1___0_
  commentId: M:Towel.Statics.NaturalLogarithm``1(``0)
  name.vb: NaturalLogarithm(Of T)(T)
  fullName: Towel.Statics.NaturalLogarithm<T>(T)
  fullName.vb: Towel.Statics.NaturalLogarithm(Of T)(T)
  nameWithType: Statics.NaturalLogarithm<T>(T)
  nameWithType.vb: Statics.NaturalLogarithm(Of T)(T)
- uid: Towel.Statics.Negation*
  name: Negation
  href: api/Towel.Statics.html#Towel_Statics_Negation_
  commentId: Overload:Towel.Statics.Negation
  isSpec: "True"
  fullName: Towel.Statics.Negation
  nameWithType: Statics.Negation
- uid: Towel.Statics.Negation``1(``0)
  name: Negation<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_Negation__1___0_
  commentId: M:Towel.Statics.Negation``1(``0)
  name.vb: Negation(Of T)(T)
  fullName: Towel.Statics.Negation<T>(T)
  fullName.vb: Towel.Statics.Negation(Of T)(T)
  nameWithType: Statics.Negation<T>(T)
  nameWithType.vb: Statics.Negation(Of T)(T)
- uid: Towel.Statics.Negation``2(``0)
  name: Negation<A, B>(A)
  href: api/Towel.Statics.html#Towel_Statics_Negation__2___0_
  commentId: M:Towel.Statics.Negation``2(``0)
  name.vb: Negation(Of A, B)(A)
  fullName: Towel.Statics.Negation<A, B>(A)
  fullName.vb: Towel.Statics.Negation(Of A, B)(A)
  nameWithType: Statics.Negation<A, B>(A)
  nameWithType.vb: Statics.Negation(Of A, B)(A)
- uid: Towel.Statics.NextUnique*
  name: NextUnique
  href: api/Towel.Statics.html#Towel_Statics_NextUnique_
  commentId: Overload:Towel.Statics.NextUnique
  isSpec: "True"
  fullName: Towel.Statics.NextUnique
  nameWithType: Statics.NextUnique
- uid: Towel.Statics.NextUnique``2(System.Int32,System.Int32,System.Int32,``1,``0)
  name: NextUnique<Step, Random>(Int32, Int32, Int32, Random, Step)
  href: api/Towel.Statics.html#Towel_Statics_NextUnique__2_System_Int32_System_Int32_System_Int32___1___0_
  commentId: M:Towel.Statics.NextUnique``2(System.Int32,System.Int32,System.Int32,``1,``0)
  name.vb: NextUnique(Of Step, Random)(Int32, Int32, Int32, Random, Step)
  fullName: Towel.Statics.NextUnique<Step, Random>(System.Int32, System.Int32, System.Int32, Random, Step)
  fullName.vb: Towel.Statics.NextUnique(Of Step, Random)(System.Int32, System.Int32, System.Int32, Random, Step)
  nameWithType: Statics.NextUnique<Step, Random>(Int32, Int32, Int32, Random, Step)
  nameWithType.vb: Statics.NextUnique(Of Step, Random)(Int32, Int32, Int32, Random, Step)
- uid: Towel.Statics.NextUniqueRollTracking*
  name: NextUniqueRollTracking
  href: api/Towel.Statics.html#Towel_Statics_NextUniqueRollTracking_
  commentId: Overload:Towel.Statics.NextUniqueRollTracking
  isSpec: "True"
  fullName: Towel.Statics.NextUniqueRollTracking
  nameWithType: Statics.NextUniqueRollTracking
- uid: Towel.Statics.NextUniqueRollTracking``2(System.Int32,System.Int32,System.Int32,``1,``0)
  name: NextUniqueRollTracking<Step, Random>(Int32, Int32, Int32, Random, Step)
  href: api/Towel.Statics.html#Towel_Statics_NextUniqueRollTracking__2_System_Int32_System_Int32_System_Int32___1___0_
  commentId: M:Towel.Statics.NextUniqueRollTracking``2(System.Int32,System.Int32,System.Int32,``1,``0)
  name.vb: NextUniqueRollTracking(Of Step, Random)(Int32, Int32, Int32, Random, Step)
  fullName: Towel.Statics.NextUniqueRollTracking<Step, Random>(System.Int32, System.Int32, System.Int32, Random, Step)
  fullName.vb: Towel.Statics.NextUniqueRollTracking(Of Step, Random)(System.Int32, System.Int32, System.Int32, Random, Step)
  nameWithType: Statics.NextUniqueRollTracking<Step, Random>(Int32, Int32, Int32, Random, Step)
  nameWithType.vb: Statics.NextUniqueRollTracking(Of Step, Random)(Int32, Int32, Int32, Random, Step)
- uid: Towel.Statics.None
  name: None
  href: api/Towel.Statics.html#Towel_Statics_None
  commentId: F:Towel.Statics.None
  fullName: Towel.Statics.None
  nameWithType: Statics.None
- uid: Towel.Statics.Occurences*
  name: Occurences
  href: api/Towel.Statics.html#Towel_Statics_Occurences_
  commentId: Overload:Towel.Statics.Occurences
  isSpec: "True"
  fullName: Towel.Statics.Occurences
  nameWithType: Statics.Occurences
- uid: Towel.Statics.Occurences``1(``0,``0[])
  name: Occurences<T>(T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Occurences__1___0___0___
  commentId: M:Towel.Statics.Occurences``1(``0,``0[])
  name.vb: Occurences(Of T)(T, T())
  fullName: Towel.Statics.Occurences<T>(T, T[])
  fullName.vb: Towel.Statics.Occurences(Of T)(T, T())
  nameWithType: Statics.Occurences<T>(T, T[])
  nameWithType.vb: Statics.Occurences(Of T)(T, T())
- uid: Towel.Statics.Occurences``1(Action{Action{``0}},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name: Occurences<T>(Action<Action<T>>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  href: api/Towel.Statics.html#Towel_Statics_Occurences__1_Action_Action___0___System_Nullable_Func___0___0_System_Boolean___System_Nullable_Func___0_System_Int32___
  commentId: M:Towel.Statics.Occurences``1(Action{Action{``0}},System.Nullable{Func{``0,``0,System.Boolean}},System.Nullable{Func{``0,System.Int32}})
  name.vb: Occurences(Of T)(Action(Of Action(Of T)), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
  fullName: Towel.Statics.Occurences<T>(Action<Action<T>>, System.Nullable<Func<T, T, System.Boolean>>, System.Nullable<Func<T, System.Int32>>)
  fullName.vb: Towel.Statics.Occurences(Of T)(Action(Of Action(Of T)), System.Nullable(Of Func(Of T, T, System.Boolean)), System.Nullable(Of Func(Of T, System.Int32)))
  nameWithType: Statics.Occurences<T>(Action<Action<T>>, Nullable<Func<T, T, Boolean>>, Nullable<Func<T, Int32>>)
  nameWithType.vb: Statics.Occurences(Of T)(Action(Of Action(Of T)), Nullable(Of Func(Of T, T, Boolean)), Nullable(Of Func(Of T, Int32)))
- uid: Towel.Statics.Occurences``1(Func{``0,``0,System.Boolean},``0,``0[])
  name: Occurences<T>(Func<T, T, Boolean>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Occurences__1_Func___0___0_System_Boolean____0___0___
  commentId: M:Towel.Statics.Occurences``1(Func{``0,``0,System.Boolean},``0,``0[])
  name.vb: Occurences(Of T)(Func(Of T, T, Boolean), T, T())
  fullName: Towel.Statics.Occurences<T>(Func<T, T, System.Boolean>, T, T[])
  fullName.vb: Towel.Statics.Occurences(Of T)(Func(Of T, T, System.Boolean), T, T())
  nameWithType: Statics.Occurences<T>(Func<T, T, Boolean>, T, T[])
  nameWithType.vb: Statics.Occurences(Of T)(Func(Of T, T, Boolean), T, T())
- uid: Towel.Statics.Occurences``1(Func{``0,``0,System.Boolean},Func{``0,System.Int32},``0,``0[])
  name: Occurences<T>(Func<T, T, Boolean>, Func<T, Int32>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Occurences__1_Func___0___0_System_Boolean__Func___0_System_Int32____0___0___
  commentId: M:Towel.Statics.Occurences``1(Func{``0,``0,System.Boolean},Func{``0,System.Int32},``0,``0[])
  name.vb: Occurences(Of T)(Func(Of T, T, Boolean), Func(Of T, Int32), T, T())
  fullName: Towel.Statics.Occurences<T>(Func<T, T, System.Boolean>, Func<T, System.Int32>, T, T[])
  fullName.vb: Towel.Statics.Occurences(Of T)(Func(Of T, T, System.Boolean), Func(Of T, System.Int32), T, T())
  nameWithType: Statics.Occurences<T>(Func<T, T, Boolean>, Func<T, Int32>, T, T[])
  nameWithType.vb: Statics.Occurences(Of T)(Func(Of T, T, Boolean), Func(Of T, Int32), T, T())
- uid: Towel.Statics.Occurences``1(Func{``0,System.Int32},``0,``0[])
  name: Occurences<T>(Func<T, Int32>, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Occurences__1_Func___0_System_Int32____0___0___
  commentId: M:Towel.Statics.Occurences``1(Func{``0,System.Int32},``0,``0[])
  name.vb: Occurences(Of T)(Func(Of T, Int32), T, T())
  fullName: Towel.Statics.Occurences<T>(Func<T, System.Int32>, T, T[])
  fullName.vb: Towel.Statics.Occurences(Of T)(Func(Of T, System.Int32), T, T())
  nameWithType: Statics.Occurences<T>(Func<T, Int32>, T, T[])
  nameWithType.vb: Statics.Occurences(Of T)(Func(Of T, Int32), T, T())
- uid: Towel.Statics.OperatorValidated
  name: Statics.OperatorValidated
  href: api/Towel.Statics.OperatorValidated.html
  commentId: T:Towel.Statics.OperatorValidated
  fullName: Towel.Statics.OperatorValidated
  nameWithType: Statics.OperatorValidated
- uid: Towel.Statics.OperatorValidated.Inequality`1
  name: Statics.OperatorValidated.Inequality<T>
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html
  commentId: T:Towel.Statics.OperatorValidated.Inequality`1
  name.vb: Statics.OperatorValidated.Inequality(Of T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T)
  nameWithType: Statics.OperatorValidated.Inequality<T>
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_Equals_System_Nullable_System_Object__
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Equals(System.Nullable<System.Object>)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Equals(System.Nullable(Of System.Object))
  nameWithType: Statics.OperatorValidated.Inequality<T>.Equals(Nullable<Object>)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Equals(Nullable(Of Object))
- uid: Towel.Statics.OperatorValidated.Inequality`1.Equals*
  name: Equals
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_Equals_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.Equals
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Equals
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Equals
  nameWithType: Statics.OperatorValidated.Inequality<T>.Equals
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Equals
- uid: Towel.Statics.OperatorValidated.Inequality`1.GetHashCode
  name: GetHashCode()
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_GetHashCode
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.GetHashCode
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GetHashCode()
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GetHashCode()
  nameWithType: Statics.OperatorValidated.Inequality<T>.GetHashCode()
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GetHashCode()
- uid: Towel.Statics.OperatorValidated.Inequality`1.GetHashCode*
  name: GetHashCode
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_GetHashCode_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.GetHashCode
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GetHashCode
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GetHashCode
  nameWithType: Statics.OperatorValidated.Inequality<T>.GetHashCode
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GetHashCode
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Equality(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: Equality(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Equality_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_Equality(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: Equality(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Equality(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Equality(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.Equality(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Equality(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Equality*
  name: Equality
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Equality_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_Equality
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Equality
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Equality
  nameWithType: Statics.OperatorValidated.Inequality<T>.Equality
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Equality
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThan(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: GreaterThan(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_GreaterThan_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThan(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: GreaterThan(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GreaterThan(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GreaterThan(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.GreaterThan(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GreaterThan(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThan*
  name: GreaterThan
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_GreaterThan_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThan
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GreaterThan
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GreaterThan
  nameWithType: Statics.OperatorValidated.Inequality<T>.GreaterThan
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GreaterThan
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThanOrEqual(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: GreaterThanOrEqual(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_GreaterThanOrEqual_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThanOrEqual(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: GreaterThanOrEqual(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GreaterThanOrEqual(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GreaterThanOrEqual(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.GreaterThanOrEqual(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GreaterThanOrEqual(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_GreaterThanOrEqual_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.GreaterThanOrEqual
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).GreaterThanOrEqual
  nameWithType: Statics.OperatorValidated.Inequality<T>.GreaterThanOrEqual
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).GreaterThanOrEqual
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Implicit(Towel.Statics.OperatorValidated.Inequality{`0})~System.Boolean
  name: Implicit(Statics.OperatorValidated.Inequality<T> to Boolean)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Implicit_Towel_Statics_OperatorValidated_Inequality__0___System_Boolean
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_Implicit(Towel.Statics.OperatorValidated.Inequality{`0})~System.Boolean
  name.vb: Widening(Statics.OperatorValidated.Inequality(Of T) to Boolean)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Implicit(Towel.Statics.OperatorValidated.Inequality<T> to System.Boolean)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Widening(Towel.Statics.OperatorValidated.Inequality(Of T) to System.Boolean)
  nameWithType: Statics.OperatorValidated.Inequality<T>.Implicit(Statics.OperatorValidated.Inequality<T> to Boolean)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Widening(Statics.OperatorValidated.Inequality(Of T) to Boolean)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Implicit_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Implicit
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Widening
  nameWithType: Statics.OperatorValidated.Inequality<T>.Implicit
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Widening
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Inequality(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: Inequality(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Inequality_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_Inequality(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: Inequality(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Inequality(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Inequality(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.Inequality(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Inequality(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_Inequality*
  name: Inequality
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_Inequality_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_Inequality
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.Inequality
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).Inequality
  nameWithType: Statics.OperatorValidated.Inequality<T>.Inequality
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).Inequality
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_LessThan(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: LessThan(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_LessThan_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_LessThan(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: LessThan(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.LessThan(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).LessThan(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.LessThan(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).LessThan(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_LessThan*
  name: LessThan
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_LessThan_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_LessThan
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.LessThan
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).LessThan
  nameWithType: Statics.OperatorValidated.Inequality<T>.LessThan
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).LessThan
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_LessThanOrEqual(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name: LessThanOrEqual(Statics.OperatorValidated.Inequality<T>, T)
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_LessThanOrEqual_Towel_Statics_OperatorValidated_Inequality__0___0_
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.op_LessThanOrEqual(Towel.Statics.OperatorValidated.Inequality{`0},`0)
  name.vb: LessThanOrEqual(Statics.OperatorValidated.Inequality(Of T), T)
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.LessThanOrEqual(Towel.Statics.OperatorValidated.Inequality<T>, T)
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).LessThanOrEqual(Towel.Statics.OperatorValidated.Inequality(Of T), T)
  nameWithType: Statics.OperatorValidated.Inequality<T>.LessThanOrEqual(Statics.OperatorValidated.Inequality<T>, T)
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).LessThanOrEqual(Statics.OperatorValidated.Inequality(Of T), T)
- uid: Towel.Statics.OperatorValidated.Inequality`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_op_LessThanOrEqual_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.LessThanOrEqual
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).LessThanOrEqual
  nameWithType: Statics.OperatorValidated.Inequality<T>.LessThanOrEqual
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).LessThanOrEqual
- uid: Towel.Statics.OperatorValidated.Inequality`1.ToString
  name: ToString()
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_ToString
  commentId: M:Towel.Statics.OperatorValidated.Inequality`1.ToString
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.ToString()
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).ToString()
  nameWithType: Statics.OperatorValidated.Inequality<T>.ToString()
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).ToString()
- uid: Towel.Statics.OperatorValidated.Inequality`1.ToString*
  name: ToString
  href: api/Towel.Statics.OperatorValidated.Inequality-1.html#Towel_Statics_OperatorValidated_Inequality_1_ToString_
  commentId: Overload:Towel.Statics.OperatorValidated.Inequality`1.ToString
  isSpec: "True"
  fullName: Towel.Statics.OperatorValidated.Inequality<T>.ToString
  fullName.vb: Towel.Statics.OperatorValidated.Inequality(Of T).ToString
  nameWithType: Statics.OperatorValidated.Inequality<T>.ToString
  nameWithType.vb: Statics.OperatorValidated.Inequality(Of T).ToString
- uid: Towel.Statics.PermuteIterative*
  name: PermuteIterative
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative_
  commentId: Overload:Towel.Statics.PermuteIterative
  isSpec: "True"
  fullName: Towel.Statics.PermuteIterative
  nameWithType: Statics.PermuteIterative
- uid: Towel.Statics.PermuteIterative``1(Span{``0},Action)
  name: PermuteIterative<T>(Span<T>, Action)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__1_Span___0__Action_
  commentId: M:Towel.Statics.PermuteIterative``1(Span{``0},Action)
  name.vb: PermuteIterative(Of T)(Span(Of T), Action)
  fullName: Towel.Statics.PermuteIterative<T>(Span<T>, Action)
  fullName.vb: Towel.Statics.PermuteIterative(Of T)(Span(Of T), Action)
  nameWithType: Statics.PermuteIterative<T>(Span<T>, Action)
  nameWithType.vb: Statics.PermuteIterative(Of T)(Span(Of T), Action)
- uid: Towel.Statics.PermuteIterative``1(System.Int32,System.Int32,Action,Func{System.Int32,``0},Action{System.Int32,``0})
  name: PermuteIterative<T>(Int32, Int32, Action, Func<Int32, T>, Action<Int32, T>)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__1_System_Int32_System_Int32_Action_Func_System_Int32___0__Action_System_Int32___0__
  commentId: M:Towel.Statics.PermuteIterative``1(System.Int32,System.Int32,Action,Func{System.Int32,``0},Action{System.Int32,``0})
  name.vb: PermuteIterative(Of T)(Int32, Int32, Action, Func(Of Int32, T), Action(Of Int32, T))
  fullName: Towel.Statics.PermuteIterative<T>(System.Int32, System.Int32, Action, Func<System.Int32, T>, Action<System.Int32, T>)
  fullName.vb: Towel.Statics.PermuteIterative(Of T)(System.Int32, System.Int32, Action, Func(Of System.Int32, T), Action(Of System.Int32, T))
  nameWithType: Statics.PermuteIterative<T>(Int32, Int32, Action, Func<Int32, T>, Action<Int32, T>)
  nameWithType.vb: Statics.PermuteIterative(Of T)(Int32, Int32, Action, Func(Of Int32, T), Action(Of Int32, T))
- uid: Towel.Statics.PermuteIterative``1(System.Int32,System.Int32,Action,Func{Towel.StepStatus},Func{System.Int32,``0},Action{System.Int32,``0})
  name: PermuteIterative<T>(Int32, Int32, Action, Func<StepStatus>, Func<Int32, T>, Action<Int32, T>)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__1_System_Int32_System_Int32_Action_Func_Towel_StepStatus__Func_System_Int32___0__Action_System_Int32___0__
  commentId: M:Towel.Statics.PermuteIterative``1(System.Int32,System.Int32,Action,Func{Towel.StepStatus},Func{System.Int32,``0},Action{System.Int32,``0})
  name.vb: PermuteIterative(Of T)(Int32, Int32, Action, Func(Of StepStatus), Func(Of Int32, T), Action(Of Int32, T))
  fullName: Towel.Statics.PermuteIterative<T>(System.Int32, System.Int32, Action, Func<Towel.StepStatus>, Func<System.Int32, T>, Action<System.Int32, T>)
  fullName.vb: Towel.Statics.PermuteIterative(Of T)(System.Int32, System.Int32, Action, Func(Of Towel.StepStatus), Func(Of System.Int32, T), Action(Of System.Int32, T))
  nameWithType: Statics.PermuteIterative<T>(Int32, Int32, Action, Func<StepStatus>, Func<Int32, T>, Action<Int32, T>)
  nameWithType.vb: Statics.PermuteIterative(Of T)(Int32, Int32, Action, Func(Of StepStatus), Func(Of Int32, T), Action(Of Int32, T))
- uid: Towel.Statics.PermuteIterative``2(Span{``0},``1)
  name: PermuteIterative<T, Action>(Span<T>, Action)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__2_Span___0____1_
  commentId: M:Towel.Statics.PermuteIterative``2(Span{``0},``1)
  name.vb: PermuteIterative(Of T, Action)(Span(Of T), Action)
  fullName: Towel.Statics.PermuteIterative<T, Action>(Span<T>, Action)
  fullName.vb: Towel.Statics.PermuteIterative(Of T, Action)(Span(Of T), Action)
  nameWithType: Statics.PermuteIterative<T, Action>(Span<T>, Action)
  nameWithType.vb: Statics.PermuteIterative(Of T, Action)(Span(Of T), Action)
- uid: Towel.Statics.PermuteIterative``2(Span{``0},Action,``1)
  name: PermuteIterative<T, Status>(Span<T>, Action, Status)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__2_Span___0__Action___1_
  commentId: M:Towel.Statics.PermuteIterative``2(Span{``0},Action,``1)
  name.vb: PermuteIterative(Of T, Status)(Span(Of T), Action, Status)
  fullName: Towel.Statics.PermuteIterative<T, Status>(Span<T>, Action, Status)
  fullName.vb: Towel.Statics.PermuteIterative(Of T, Status)(Span(Of T), Action, Status)
  nameWithType: Statics.PermuteIterative<T, Status>(Span<T>, Action, Status)
  nameWithType.vb: Statics.PermuteIterative(Of T, Status)(Span(Of T), Action, Status)
- uid: Towel.Statics.PermuteIterative``3(Span{``0},``1,``2)
  name: PermuteIterative<T, Action, Status>(Span<T>, Action, Status)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__3_Span___0____1___2_
  commentId: M:Towel.Statics.PermuteIterative``3(Span{``0},``1,``2)
  name.vb: PermuteIterative(Of T, Action, Status)(Span(Of T), Action, Status)
  fullName: Towel.Statics.PermuteIterative<T, Action, Status>(Span<T>, Action, Status)
  fullName.vb: Towel.Statics.PermuteIterative(Of T, Action, Status)(Span(Of T), Action, Status)
  nameWithType: Statics.PermuteIterative<T, Action, Status>(Span<T>, Action, Status)
  nameWithType.vb: Statics.PermuteIterative(Of T, Action, Status)(Span(Of T), Action, Status)
- uid: Towel.Statics.PermuteIterative``4(System.Int32,System.Int32,``1,``2,``3)
  name: PermuteIterative<T, Action, Get, Set>(Int32, Int32, Action, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.PermuteIterative``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: PermuteIterative(Of T, Action, Get, Set)(Int32, Int32, Action, Get, Set)
  fullName: Towel.Statics.PermuteIterative<T, Action, Get, Set>(System.Int32, System.Int32, Action, Get, Set)
  fullName.vb: Towel.Statics.PermuteIterative(Of T, Action, Get, Set)(System.Int32, System.Int32, Action, Get, Set)
  nameWithType: Statics.PermuteIterative<T, Action, Get, Set>(Int32, Int32, Action, Get, Set)
  nameWithType.vb: Statics.PermuteIterative(Of T, Action, Get, Set)(Int32, Int32, Action, Get, Set)
- uid: Towel.Statics.PermuteIterative``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name: PermuteIterative<T, Action, Status, Get, Set>(Int32, Int32, Action, Status, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_PermuteIterative__5_System_Int32_System_Int32___1___2___3___4_
  commentId: M:Towel.Statics.PermuteIterative``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name.vb: PermuteIterative(Of T, Action, Status, Get, Set)(Int32, Int32, Action, Status, Get, Set)
  fullName: Towel.Statics.PermuteIterative<T, Action, Status, Get, Set>(System.Int32, System.Int32, Action, Status, Get, Set)
  fullName.vb: Towel.Statics.PermuteIterative(Of T, Action, Status, Get, Set)(System.Int32, System.Int32, Action, Status, Get, Set)
  nameWithType: Statics.PermuteIterative<T, Action, Status, Get, Set>(Int32, Int32, Action, Status, Get, Set)
  nameWithType.vb: Statics.PermuteIterative(Of T, Action, Status, Get, Set)(Int32, Int32, Action, Status, Get, Set)
- uid: Towel.Statics.PermuteRecursive*
  name: PermuteRecursive
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive_
  commentId: Overload:Towel.Statics.PermuteRecursive
  isSpec: "True"
  fullName: Towel.Statics.PermuteRecursive
  nameWithType: Statics.PermuteRecursive
- uid: Towel.Statics.PermuteRecursive``1(Span{``0},Action)
  name: PermuteRecursive<T>(Span<T>, Action)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__1_Span___0__Action_
  commentId: M:Towel.Statics.PermuteRecursive``1(Span{``0},Action)
  name.vb: PermuteRecursive(Of T)(Span(Of T), Action)
  fullName: Towel.Statics.PermuteRecursive<T>(Span<T>, Action)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T)(Span(Of T), Action)
  nameWithType: Statics.PermuteRecursive<T>(Span<T>, Action)
  nameWithType.vb: Statics.PermuteRecursive(Of T)(Span(Of T), Action)
- uid: Towel.Statics.PermuteRecursive``1(System.Int32,System.Int32,Action,Func{System.Int32,``0},Action{System.Int32,``0})
  name: PermuteRecursive<T>(Int32, Int32, Action, Func<Int32, T>, Action<Int32, T>)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__1_System_Int32_System_Int32_Action_Func_System_Int32___0__Action_System_Int32___0__
  commentId: M:Towel.Statics.PermuteRecursive``1(System.Int32,System.Int32,Action,Func{System.Int32,``0},Action{System.Int32,``0})
  name.vb: PermuteRecursive(Of T)(Int32, Int32, Action, Func(Of Int32, T), Action(Of Int32, T))
  fullName: Towel.Statics.PermuteRecursive<T>(System.Int32, System.Int32, Action, Func<System.Int32, T>, Action<System.Int32, T>)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T)(System.Int32, System.Int32, Action, Func(Of System.Int32, T), Action(Of System.Int32, T))
  nameWithType: Statics.PermuteRecursive<T>(Int32, Int32, Action, Func<Int32, T>, Action<Int32, T>)
  nameWithType.vb: Statics.PermuteRecursive(Of T)(Int32, Int32, Action, Func(Of Int32, T), Action(Of Int32, T))
- uid: Towel.Statics.PermuteRecursive``1(System.Int32,System.Int32,Action,Func{Towel.StepStatus},Func{System.Int32,``0},Action{System.Int32,``0})
  name: PermuteRecursive<T>(Int32, Int32, Action, Func<StepStatus>, Func<Int32, T>, Action<Int32, T>)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__1_System_Int32_System_Int32_Action_Func_Towel_StepStatus__Func_System_Int32___0__Action_System_Int32___0__
  commentId: M:Towel.Statics.PermuteRecursive``1(System.Int32,System.Int32,Action,Func{Towel.StepStatus},Func{System.Int32,``0},Action{System.Int32,``0})
  name.vb: PermuteRecursive(Of T)(Int32, Int32, Action, Func(Of StepStatus), Func(Of Int32, T), Action(Of Int32, T))
  fullName: Towel.Statics.PermuteRecursive<T>(System.Int32, System.Int32, Action, Func<Towel.StepStatus>, Func<System.Int32, T>, Action<System.Int32, T>)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T)(System.Int32, System.Int32, Action, Func(Of Towel.StepStatus), Func(Of System.Int32, T), Action(Of System.Int32, T))
  nameWithType: Statics.PermuteRecursive<T>(Int32, Int32, Action, Func<StepStatus>, Func<Int32, T>, Action<Int32, T>)
  nameWithType.vb: Statics.PermuteRecursive(Of T)(Int32, Int32, Action, Func(Of StepStatus), Func(Of Int32, T), Action(Of Int32, T))
- uid: Towel.Statics.PermuteRecursive``2(Span{``0},``1)
  name: PermuteRecursive<T, Action>(Span<T>, Action)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__2_Span___0____1_
  commentId: M:Towel.Statics.PermuteRecursive``2(Span{``0},``1)
  name.vb: PermuteRecursive(Of T, Action)(Span(Of T), Action)
  fullName: Towel.Statics.PermuteRecursive<T, Action>(Span<T>, Action)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T, Action)(Span(Of T), Action)
  nameWithType: Statics.PermuteRecursive<T, Action>(Span<T>, Action)
  nameWithType.vb: Statics.PermuteRecursive(Of T, Action)(Span(Of T), Action)
- uid: Towel.Statics.PermuteRecursive``2(Span{``0},Action,``1)
  name: PermuteRecursive<T, Status>(Span<T>, Action, Status)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__2_Span___0__Action___1_
  commentId: M:Towel.Statics.PermuteRecursive``2(Span{``0},Action,``1)
  name.vb: PermuteRecursive(Of T, Status)(Span(Of T), Action, Status)
  fullName: Towel.Statics.PermuteRecursive<T, Status>(Span<T>, Action, Status)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T, Status)(Span(Of T), Action, Status)
  nameWithType: Statics.PermuteRecursive<T, Status>(Span<T>, Action, Status)
  nameWithType.vb: Statics.PermuteRecursive(Of T, Status)(Span(Of T), Action, Status)
- uid: Towel.Statics.PermuteRecursive``3(Span{``0},``1,``2)
  name: PermuteRecursive<T, Action, Status>(Span<T>, Action, Status)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__3_Span___0____1___2_
  commentId: M:Towel.Statics.PermuteRecursive``3(Span{``0},``1,``2)
  name.vb: PermuteRecursive(Of T, Action, Status)(Span(Of T), Action, Status)
  fullName: Towel.Statics.PermuteRecursive<T, Action, Status>(Span<T>, Action, Status)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T, Action, Status)(Span(Of T), Action, Status)
  nameWithType: Statics.PermuteRecursive<T, Action, Status>(Span<T>, Action, Status)
  nameWithType.vb: Statics.PermuteRecursive(Of T, Action, Status)(Span(Of T), Action, Status)
- uid: Towel.Statics.PermuteRecursive``4(System.Int32,System.Int32,``1,``2,``3)
  name: PermuteRecursive<T, Action, Get, Set>(Int32, Int32, Action, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.PermuteRecursive``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: PermuteRecursive(Of T, Action, Get, Set)(Int32, Int32, Action, Get, Set)
  fullName: Towel.Statics.PermuteRecursive<T, Action, Get, Set>(System.Int32, System.Int32, Action, Get, Set)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T, Action, Get, Set)(System.Int32, System.Int32, Action, Get, Set)
  nameWithType: Statics.PermuteRecursive<T, Action, Get, Set>(Int32, Int32, Action, Get, Set)
  nameWithType.vb: Statics.PermuteRecursive(Of T, Action, Get, Set)(Int32, Int32, Action, Get, Set)
- uid: Towel.Statics.PermuteRecursive``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name: PermuteRecursive<T, Action, Status, Get, Set>(Int32, Int32, Action, Status, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_PermuteRecursive__5_System_Int32_System_Int32___1___2___3___4_
  commentId: M:Towel.Statics.PermuteRecursive``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name.vb: PermuteRecursive(Of T, Action, Status, Get, Set)(Int32, Int32, Action, Status, Get, Set)
  fullName: Towel.Statics.PermuteRecursive<T, Action, Status, Get, Set>(System.Int32, System.Int32, Action, Status, Get, Set)
  fullName.vb: Towel.Statics.PermuteRecursive(Of T, Action, Status, Get, Set)(System.Int32, System.Int32, Action, Status, Get, Set)
  nameWithType: Statics.PermuteRecursive<T, Action, Status, Get, Set>(Int32, Int32, Action, Status, Get, Set)
  nameWithType.vb: Statics.PermuteRecursive(Of T, Action, Status, Get, Set)(Int32, Int32, Action, Status, Get, Set)
- uid: Towel.Statics.Power*
  name: Power
  href: api/Towel.Statics.html#Towel_Statics_Power_
  commentId: Overload:Towel.Statics.Power
  isSpec: "True"
  fullName: Towel.Statics.Power
  nameWithType: Statics.Power
- uid: Towel.Statics.Power``1(``0,``0)
  name: Power<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Power__1___0___0_
  commentId: M:Towel.Statics.Power``1(``0,``0)
  name.vb: Power(Of T)(T, T)
  fullName: Towel.Statics.Power<T>(T, T)
  fullName.vb: Towel.Statics.Power(Of T)(T, T)
  nameWithType: Statics.Power<T>(T, T)
  nameWithType.vb: Statics.Power(Of T)(T, T)
- uid: Towel.Statics.Power``1(``0,``0,``0,``0[])
  name: Power<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Power__1___0___0___0___0___
  commentId: M:Towel.Statics.Power``1(``0,``0,``0,``0[])
  name.vb: Power(Of T)(T, T, T, T())
  fullName: Towel.Statics.Power<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Power(Of T)(T, T, T, T())
  nameWithType: Statics.Power<T>(T, T, T, T[])
  nameWithType.vb: Statics.Power(Of T)(T, T, T, T())
- uid: Towel.Statics.Power``1(Action{Action{``0}})
  name: Power<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Power__1_Action_Action___0___
  commentId: M:Towel.Statics.Power``1(Action{Action{``0}})
  name.vb: Power(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Power<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Power(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Power<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Power(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Quantiles*
  name: Quantiles
  href: api/Towel.Statics.html#Towel_Statics_Quantiles_
  commentId: Overload:Towel.Statics.Quantiles
  isSpec: "True"
  fullName: Towel.Statics.Quantiles
  nameWithType: Statics.Quantiles
- uid: Towel.Statics.Quantiles``1(System.Int32,Action{Action{``0}})
  name: Quantiles<T>(Int32, Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Quantiles__1_System_Int32_Action_Action___0___
  commentId: M:Towel.Statics.Quantiles``1(System.Int32,Action{Action{``0}})
  name.vb: Quantiles(Of T)(Int32, Action(Of Action(Of T)))
  fullName: Towel.Statics.Quantiles<T>(System.Int32, Action<Action<T>>)
  fullName.vb: Towel.Statics.Quantiles(Of T)(System.Int32, Action(Of Action(Of T)))
  nameWithType: Statics.Quantiles<T>(Int32, Action<Action<T>>)
  nameWithType.vb: Statics.Quantiles(Of T)(Int32, Action(Of Action(Of T)))
- uid: Towel.Statics.RandomNextIntMinValueIntMaxValue
  name: Statics.RandomNextIntMinValueIntMaxValue
  href: api/Towel.Statics.RandomNextIntMinValueIntMaxValue.html
  commentId: T:Towel.Statics.RandomNextIntMinValueIntMaxValue
  fullName: Towel.Statics.RandomNextIntMinValueIntMaxValue
  nameWithType: Statics.RandomNextIntMinValueIntMaxValue
- uid: Towel.Statics.RandomNextIntMinValueIntMaxValue.Do(System.Int32,System.Int32)
  name: Do(Int32, Int32)
  href: api/Towel.Statics.RandomNextIntMinValueIntMaxValue.html#Towel_Statics_RandomNextIntMinValueIntMaxValue_Do_System_Int32_System_Int32_
  commentId: M:Towel.Statics.RandomNextIntMinValueIntMaxValue.Do(System.Int32,System.Int32)
  fullName: Towel.Statics.RandomNextIntMinValueIntMaxValue.Do(System.Int32, System.Int32)
  nameWithType: Statics.RandomNextIntMinValueIntMaxValue.Do(Int32, Int32)
- uid: Towel.Statics.RandomNextIntMinValueIntMaxValue.Do*
  name: Do
  href: api/Towel.Statics.RandomNextIntMinValueIntMaxValue.html#Towel_Statics_RandomNextIntMinValueIntMaxValue_Do_
  commentId: Overload:Towel.Statics.RandomNextIntMinValueIntMaxValue.Do
  isSpec: "True"
  fullName: Towel.Statics.RandomNextIntMinValueIntMaxValue.Do
  nameWithType: Statics.RandomNextIntMinValueIntMaxValue.Do
- uid: Towel.Statics.RandomNextIntMinValueIntMaxValue.op_Implicit(Random)~Towel.Statics.RandomNextIntMinValueIntMaxValue
  name: Implicit(Random to Statics.RandomNextIntMinValueIntMaxValue)
  href: api/Towel.Statics.RandomNextIntMinValueIntMaxValue.html#Towel_Statics_RandomNextIntMinValueIntMaxValue_op_Implicit_Random__Towel_Statics_RandomNextIntMinValueIntMaxValue
  commentId: M:Towel.Statics.RandomNextIntMinValueIntMaxValue.op_Implicit(Random)~Towel.Statics.RandomNextIntMinValueIntMaxValue
  name.vb: Widening(Random to Statics.RandomNextIntMinValueIntMaxValue)
  fullName: Towel.Statics.RandomNextIntMinValueIntMaxValue.Implicit(Random to Towel.Statics.RandomNextIntMinValueIntMaxValue)
  fullName.vb: Towel.Statics.RandomNextIntMinValueIntMaxValue.Widening(Random to Towel.Statics.RandomNextIntMinValueIntMaxValue)
  nameWithType: Statics.RandomNextIntMinValueIntMaxValue.Implicit(Random to Statics.RandomNextIntMinValueIntMaxValue)
  nameWithType.vb: Statics.RandomNextIntMinValueIntMaxValue.Widening(Random to Statics.RandomNextIntMinValueIntMaxValue)
- uid: Towel.Statics.RandomNextIntMinValueIntMaxValue.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.RandomNextIntMinValueIntMaxValue.html#Towel_Statics_RandomNextIntMinValueIntMaxValue_op_Implicit_
  commentId: Overload:Towel.Statics.RandomNextIntMinValueIntMaxValue.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.RandomNextIntMinValueIntMaxValue.Implicit
  fullName.vb: Towel.Statics.RandomNextIntMinValueIntMaxValue.Widening
  nameWithType: Statics.RandomNextIntMinValueIntMaxValue.Implicit
  nameWithType.vb: Statics.RandomNextIntMinValueIntMaxValue.Widening
- uid: Towel.Statics.Range*
  name: Range
  href: api/Towel.Statics.html#Towel_Statics_Range_
  commentId: Overload:Towel.Statics.Range
  isSpec: "True"
  fullName: Towel.Statics.Range
  nameWithType: Statics.Range
- uid: Towel.Statics.Range``1(``0@,``0@,Action{Action{``0}})
  name: Range<T>(out T, out T, Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Range__1___0____0__Action_Action___0___
  commentId: M:Towel.Statics.Range``1(``0@,``0@,Action{Action{``0}})
  name.vb: Range(Of T)(ByRef T, ByRef T, Action(Of Action(Of T)))
  fullName: Towel.Statics.Range<T>(out T, out T, Action<Action<T>>)
  fullName.vb: Towel.Statics.Range(Of T)(ByRef T, ByRef T, Action(Of Action(Of T)))
  nameWithType: Statics.Range<T>(out T, out T, Action<Action<T>>)
  nameWithType.vb: Statics.Range(Of T)(ByRef T, ByRef T, Action(Of Action(Of T)))
- uid: Towel.Statics.Range``1(Action{Action{``0}},``0@,``0@)
  name: Range<T>(Action<Action<T>>, out T, out T)
  href: api/Towel.Statics.html#Towel_Statics_Range__1_Action_Action___0_____0____0__
  commentId: M:Towel.Statics.Range``1(Action{Action{``0}},``0@,``0@)
  name.vb: Range(Of T)(Action(Of Action(Of T)), ByRef T, ByRef T)
  fullName: Towel.Statics.Range<T>(Action<Action<T>>, out T, out T)
  fullName.vb: Towel.Statics.Range(Of T)(Action(Of Action(Of T)), ByRef T, ByRef T)
  nameWithType: Statics.Range<T>(Action<Action<T>>, out T, out T)
  nameWithType.vb: Statics.Range(Of T)(Action(Of Action(Of T)), ByRef T, ByRef T)
- uid: Towel.Statics.Range``2(ReadOnlySpan{``0},``1)
  name: Range<T, Compare>(ReadOnlySpan<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_Range__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.Range``2(ReadOnlySpan{``0},``1)
  name.vb: Range(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  fullName: Towel.Statics.Range<T, Compare>(ReadOnlySpan<T>, Compare)
  fullName.vb: Towel.Statics.Range(Of T, Compare)(ReadOnlySpan(Of T), Compare)
  nameWithType: Statics.Range<T, Compare>(ReadOnlySpan<T>, Compare)
  nameWithType.vb: Statics.Range(Of T, Compare)(ReadOnlySpan(Of T), Compare)
- uid: Towel.Statics.Remainder*
  name: Remainder
  href: api/Towel.Statics.html#Towel_Statics_Remainder_
  commentId: Overload:Towel.Statics.Remainder
  isSpec: "True"
  fullName: Towel.Statics.Remainder
  nameWithType: Statics.Remainder
- uid: Towel.Statics.Remainder``1(``0,``0)
  name: Remainder<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Remainder__1___0___0_
  commentId: M:Towel.Statics.Remainder``1(``0,``0)
  name.vb: Remainder(Of T)(T, T)
  fullName: Towel.Statics.Remainder<T>(T, T)
  fullName.vb: Towel.Statics.Remainder(Of T)(T, T)
  nameWithType: Statics.Remainder<T>(T, T)
  nameWithType.vb: Statics.Remainder(Of T)(T, T)
- uid: Towel.Statics.Remainder``1(``0,``0,``0,``0[])
  name: Remainder<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Remainder__1___0___0___0___0___
  commentId: M:Towel.Statics.Remainder``1(``0,``0,``0,``0[])
  name.vb: Remainder(Of T)(T, T, T, T())
  fullName: Towel.Statics.Remainder<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Remainder(Of T)(T, T, T, T())
  nameWithType: Statics.Remainder<T>(T, T, T, T[])
  nameWithType.vb: Statics.Remainder(Of T)(T, T, T, T())
- uid: Towel.Statics.Remainder``1(Action{Action{``0}})
  name: Remainder<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Remainder__1_Action_Action___0___
  commentId: M:Towel.Statics.Remainder``1(Action{Action{``0}})
  name.vb: Remainder(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Remainder<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Remainder(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Remainder<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Remainder(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Remainder``3(``0,``1)
  name: Remainder<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Remainder__3___0___1_
  commentId: M:Towel.Statics.Remainder``3(``0,``1)
  name.vb: Remainder(Of A, B, C)(A, B)
  fullName: Towel.Statics.Remainder<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Remainder(Of A, B, C)(A, B)
  nameWithType: Statics.Remainder<A, B, C>(A, B)
  nameWithType.vb: Statics.Remainder(Of A, B, C)(A, B)
- uid: Towel.Statics.Root*
  name: Root
  href: api/Towel.Statics.html#Towel_Statics_Root_
  commentId: Overload:Towel.Statics.Root
  isSpec: "True"
  fullName: Towel.Statics.Root
  nameWithType: Statics.Root
- uid: Towel.Statics.Root``1(``0,``0)
  name: Root<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Root__1___0___0_
  commentId: M:Towel.Statics.Root``1(``0,``0)
  name.vb: Root(Of T)(T, T)
  fullName: Towel.Statics.Root<T>(T, T)
  fullName.vb: Towel.Statics.Root(Of T)(T, T)
  nameWithType: Statics.Root<T>(T, T)
  nameWithType.vb: Statics.Root(Of T)(T, T)
- uid: Towel.Statics.SearchBinary*
  name: SearchBinary
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary_
  commentId: Overload:Towel.Statics.SearchBinary
  isSpec: "True"
  fullName: Towel.Statics.SearchBinary
  nameWithType: Statics.SearchBinary
- uid: Towel.Statics.SearchBinary``1(ReadOnlySpan{``0},``0,System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SearchBinary<T>(ReadOnlySpan<T>, T, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__1_ReadOnlySpan___0____0_System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SearchBinary``1(ReadOnlySpan{``0},``0,System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SearchBinary(Of T)(ReadOnlySpan(Of T), T, Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SearchBinary<T>(ReadOnlySpan<T>, T, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SearchBinary(Of T)(ReadOnlySpan(Of T), T, System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SearchBinary<T>(ReadOnlySpan<T>, T, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SearchBinary(Of T)(ReadOnlySpan(Of T), T, Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SearchBinary``1(ReadOnlySpan{``0},Func{``0,Towel.CompareResult})
  name: SearchBinary<T>(ReadOnlySpan<T>, Func<T, CompareResult>)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__1_ReadOnlySpan___0__Func___0_Towel_CompareResult__
  commentId: M:Towel.Statics.SearchBinary``1(ReadOnlySpan{``0},Func{``0,Towel.CompareResult})
  name.vb: SearchBinary(Of T)(ReadOnlySpan(Of T), Func(Of T, CompareResult))
  fullName: Towel.Statics.SearchBinary<T>(ReadOnlySpan<T>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.Statics.SearchBinary(Of T)(ReadOnlySpan(Of T), Func(Of T, Towel.CompareResult))
  nameWithType: Statics.SearchBinary<T>(ReadOnlySpan<T>, Func<T, CompareResult>)
  nameWithType.vb: Statics.SearchBinary(Of T)(ReadOnlySpan(Of T), Func(Of T, CompareResult))
- uid: Towel.Statics.SearchBinary``1(System.Int32,Func{System.Int32,``0},Func{``0,Towel.CompareResult})
  name: SearchBinary<T>(Int32, Func<Int32, T>, Func<T, CompareResult>)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__1_System_Int32_Func_System_Int32___0__Func___0_Towel_CompareResult__
  commentId: M:Towel.Statics.SearchBinary``1(System.Int32,Func{System.Int32,``0},Func{``0,Towel.CompareResult})
  name.vb: SearchBinary(Of T)(Int32, Func(Of Int32, T), Func(Of T, CompareResult))
  fullName: Towel.Statics.SearchBinary<T>(System.Int32, Func<System.Int32, T>, Func<T, Towel.CompareResult>)
  fullName.vb: Towel.Statics.SearchBinary(Of T)(System.Int32, Func(Of System.Int32, T), Func(Of T, Towel.CompareResult))
  nameWithType: Statics.SearchBinary<T>(Int32, Func<Int32, T>, Func<T, CompareResult>)
  nameWithType.vb: Statics.SearchBinary(Of T)(Int32, Func(Of Int32, T), Func(Of T, CompareResult))
- uid: Towel.Statics.SearchBinary``2(ReadOnlySpan{``0},``0,``1)
  name: SearchBinary<T, Compare>(ReadOnlySpan<T>, T, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__2_ReadOnlySpan___0____0___1_
  commentId: M:Towel.Statics.SearchBinary``2(ReadOnlySpan{``0},``0,``1)
  name.vb: SearchBinary(Of T, Compare)(ReadOnlySpan(Of T), T, Compare)
  fullName: Towel.Statics.SearchBinary<T, Compare>(ReadOnlySpan<T>, T, Compare)
  fullName.vb: Towel.Statics.SearchBinary(Of T, Compare)(ReadOnlySpan(Of T), T, Compare)
  nameWithType: Statics.SearchBinary<T, Compare>(ReadOnlySpan<T>, T, Compare)
  nameWithType.vb: Statics.SearchBinary(Of T, Compare)(ReadOnlySpan(Of T), T, Compare)
- uid: Towel.Statics.SearchBinary``2(ReadOnlySpan{``0},``1)
  name: SearchBinary<T, Sift>(ReadOnlySpan<T>, Sift)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__2_ReadOnlySpan___0____1_
  commentId: M:Towel.Statics.SearchBinary``2(ReadOnlySpan{``0},``1)
  name.vb: SearchBinary(Of T, Sift)(ReadOnlySpan(Of T), Sift)
  fullName: Towel.Statics.SearchBinary<T, Sift>(ReadOnlySpan<T>, Sift)
  fullName.vb: Towel.Statics.SearchBinary(Of T, Sift)(ReadOnlySpan(Of T), Sift)
  nameWithType: Statics.SearchBinary<T, Sift>(ReadOnlySpan<T>, Sift)
  nameWithType.vb: Statics.SearchBinary(Of T, Sift)(ReadOnlySpan(Of T), Sift)
- uid: Towel.Statics.SearchBinary``3(System.Int32,System.Int32,``1,``2)
  name: SearchBinary<T, Get, Sift>(Int32, Int32, Get, Sift)
  href: api/Towel.Statics.html#Towel_Statics_SearchBinary__3_System_Int32_System_Int32___1___2_
  commentId: M:Towel.Statics.SearchBinary``3(System.Int32,System.Int32,``1,``2)
  name.vb: SearchBinary(Of T, Get, Sift)(Int32, Int32, Get, Sift)
  fullName: Towel.Statics.SearchBinary<T, Get, Sift>(System.Int32, System.Int32, Get, Sift)
  fullName.vb: Towel.Statics.SearchBinary(Of T, Get, Sift)(System.Int32, System.Int32, Get, Sift)
  nameWithType: Statics.SearchBinary<T, Get, Sift>(Int32, Int32, Get, Sift)
  nameWithType.vb: Statics.SearchBinary(Of T, Get, Sift)(Int32, Int32, Get, Sift)
- uid: Towel.Statics.SearchCheck`1
  name: Statics.SearchCheck<Node>
  href: api/Towel.Statics.SearchCheck-1.html
  commentId: T:Towel.Statics.SearchCheck`1
  name.vb: Statics.SearchCheck(Of Node)
  fullName: Towel.Statics.SearchCheck<Node>
  fullName.vb: Towel.Statics.SearchCheck(Of Node)
  nameWithType: Statics.SearchCheck<Node>
  nameWithType.vb: Statics.SearchCheck(Of Node)
- uid: Towel.Statics.SearchCost`2
  name: Statics.SearchCost<Node, Numeric>
  href: api/Towel.Statics.SearchCost-2.html
  commentId: T:Towel.Statics.SearchCost`2
  name.vb: Statics.SearchCost(Of Node, Numeric)
  fullName: Towel.Statics.SearchCost<Node, Numeric>
  fullName.vb: Towel.Statics.SearchCost(Of Node, Numeric)
  nameWithType: Statics.SearchCost<Node, Numeric>
  nameWithType.vb: Statics.SearchCost(Of Node, Numeric)
- uid: Towel.Statics.SearchGoal`1
  name: Statics.SearchGoal<Node>
  href: api/Towel.Statics.SearchGoal-1.html
  commentId: T:Towel.Statics.SearchGoal`1
  name.vb: Statics.SearchGoal(Of Node)
  fullName: Towel.Statics.SearchGoal<Node>
  fullName.vb: Towel.Statics.SearchGoal(Of Node)
  nameWithType: Statics.SearchGoal<Node>
  nameWithType.vb: Statics.SearchGoal(Of Node)
- uid: Towel.Statics.SearchGraph*
  name: SearchGraph
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph_
  commentId: Overload:Towel.Statics.SearchGraph
  isSpec: "True"
  fullName: Towel.Statics.SearchGraph
  nameWithType: Statics.SearchGraph
- uid: Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},``0)
  name: SearchGraph<Node>(Node, IGraph<Node>, Node)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_DataStructures_IGraph___0____0_
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},``0)
  name.vb: SearchGraph(Of Node)(Node, IGraph(Of Node), Node)
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.DataStructures.IGraph<Node>, Node)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.DataStructures.IGraph(Of Node), Node)
  nameWithType: Statics.SearchGraph<Node>(Node, IGraph<Node>, Node)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, IGraph(Of Node), Node)
- uid: Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},``0,Func{``0,``0,System.Boolean})
  name: SearchGraph<Node>(Node, IGraph<Node>, Node, Func<Node, Node, Boolean>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_DataStructures_IGraph___0____0_Func___0___0_System_Boolean__
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},``0,Func{``0,``0,System.Boolean})
  name.vb: SearchGraph(Of Node)(Node, IGraph(Of Node), Node, Func(Of Node, Node, Boolean))
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.DataStructures.IGraph<Node>, Node, Func<Node, Node, System.Boolean>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.DataStructures.IGraph(Of Node), Node, Func(Of Node, Node, System.Boolean))
  nameWithType: Statics.SearchGraph<Node>(Node, IGraph<Node>, Node, Func<Node, Node, Boolean>)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, IGraph(Of Node), Node, Func(Of Node, Node, Boolean))
- uid: Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchGoal{``0})
  name: SearchGraph<Node>(Node, IGraph<Node>, Statics.SearchGoal<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchGoal___0__
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchGoal{``0})
  name.vb: SearchGraph(Of Node)(Node, IGraph(Of Node), Statics.SearchGoal(Of Node))
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchGoal<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchGoal(Of Node))
  nameWithType: Statics.SearchGraph<Node>(Node, IGraph<Node>, Statics.SearchGoal<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, IGraph(Of Node), Statics.SearchGoal(Of Node))
- uid: Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},``0)
  name: SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Node)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_Statics_SearchNeighbors___0____0_
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},``0)
  name.vb: SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Node)
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.Statics.SearchNeighbors<Node>, Node)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.Statics.SearchNeighbors(Of Node), Node)
  nameWithType: Statics.SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Node)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Node)
- uid: Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},``0,Func{``0,``0,System.Boolean})
  name: SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Node, Func<Node, Node, Boolean>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_Statics_SearchNeighbors___0____0_Func___0___0_System_Boolean__
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},``0,Func{``0,``0,System.Boolean})
  name.vb: SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Node, Func(Of Node, Node, Boolean))
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.Statics.SearchNeighbors<Node>, Node, Func<Node, Node, System.Boolean>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.Statics.SearchNeighbors(Of Node), Node, Func(Of Node, Node, System.Boolean))
  nameWithType: Statics.SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Node, Func<Node, Node, Boolean>)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Node, Func(Of Node, Node, Boolean))
- uid: Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchCheck{``0})
  name: SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Statics.SearchCheck<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchCheck___0__
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchCheck{``0})
  name.vb: SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchCheck(Of Node))
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchCheck<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchCheck(Of Node))
  nameWithType: Statics.SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Statics.SearchCheck<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchCheck(Of Node))
- uid: Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchGoal{``0})
  name: SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Statics.SearchGoal<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__1___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchGoal___0__
  commentId: M:Towel.Statics.SearchGraph``1(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchGoal{``0})
  name.vb: SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchGoal(Of Node))
  fullName: Towel.Statics.SearchGraph<Node>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchGoal<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchGoal(Of Node))
  nameWithType: Statics.SearchGraph<Node>(Node, Statics.SearchNeighbors<Node>, Statics.SearchGoal<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchGoal(Of Node))
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},``0)
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Node)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1____0_
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},``0)
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Node)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Node)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Node)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},``0,Func{``0,``0,System.Boolean})
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, Boolean>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1____0_Func___0___0_System_Boolean__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},``0,Func{``0,``0,System.Boolean})
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, Boolean))
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, System.Boolean>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, System.Boolean))
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, Boolean>)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, Boolean))
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,``1@)
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1____0___1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,Func{``0,``0,System.Boolean},``1@)
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, Boolean>, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1____0_Func___0___0_System_Boolean____1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,Func{``0,``0,System.Boolean},``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, Boolean), ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, System.Boolean>, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, System.Boolean), ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, Boolean>, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, Boolean), ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchGoal{``0},``1@)
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchGoal<Node>, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1__Towel_Statics_SearchGoal___0____1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchGoal{``0},``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchGoal(Of Node), ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Towel.Statics.SearchGoal<Node>, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Towel.Statics.SearchGoal(Of Node), ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchGoal<Node>, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchGoal(Of Node), ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchGoal{``0})
  name: SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchGoal<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_DataStructures_IGraph___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchGoal___0__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.DataStructures.IGraph{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchGoal{``0})
  name.vb: SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchGoal(Of Node))
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.DataStructures.IGraph<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchGoal<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.DataStructures.IGraph(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchGoal(Of Node))
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, IGraph<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchGoal<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, IGraph(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchGoal(Of Node))
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},``0)
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Node)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1____0_
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},``0)
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Node)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Node)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Node)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},``0,Func{``0,``0,System.Boolean})
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, Boolean>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1____0_Func___0___0_System_Boolean__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},``0,Func{``0,``0,System.Boolean})
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, Boolean))
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, System.Boolean>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, System.Boolean))
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Node, Func<Node, Node, Boolean>)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Node, Func(Of Node, Node, Boolean))
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCheck{``0})
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCheck<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCheck___0__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCheck{``0})
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCheck(Of Node))
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCheck<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCheck(Of Node))
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCheck<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCheck(Of Node))
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,``1@)
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1____0___1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,Func{``0,``0,System.Boolean},``1@)
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, Boolean>, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1____0_Func___0___0_System_Boolean____1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},``0,Func{``0,``0,System.Boolean},``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, Boolean), ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, System.Boolean>, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, System.Boolean), ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Node, Func<Node, Node, Boolean>, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Node, Func(Of Node, Node, Boolean), ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchCheck{``0},``1@)
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchCheck<Node>, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1__Towel_Statics_SearchCheck___0____1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchCheck{``0},``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchCheck(Of Node), ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Towel.Statics.SearchCheck<Node>, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Towel.Statics.SearchCheck(Of Node), ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchCheck<Node>, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchCheck(Of Node), ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchGoal{``0},``1@)
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchGoal<Node>, out Numeric)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchCost___0___1__Towel_Statics_SearchGoal___0____1__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchCost{``0,``1},Towel.Statics.SearchGoal{``0},``1@)
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchGoal(Of Node), ByRef Numeric)
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchCost<Node, Numeric>, Towel.Statics.SearchGoal<Node>, out Numeric)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchCost(Of Node, Numeric), Towel.Statics.SearchGoal(Of Node), ByRef Numeric)
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchCost<Node, Numeric>, Statics.SearchGoal<Node>, out Numeric)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchCost(Of Node, Numeric), Statics.SearchGoal(Of Node), ByRef Numeric)
- uid: Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchGoal{``0})
  name: SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchGoal<Node>)
  href: api/Towel.Statics.html#Towel_Statics_SearchGraph__2___0_Towel_Statics_SearchNeighbors___0__Towel_Statics_SearchHeuristic___0___1__Towel_Statics_SearchGoal___0__
  commentId: M:Towel.Statics.SearchGraph``2(``0,Towel.Statics.SearchNeighbors{``0},Towel.Statics.SearchHeuristic{``0,``1},Towel.Statics.SearchGoal{``0})
  name.vb: SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchGoal(Of Node))
  fullName: Towel.Statics.SearchGraph<Node, Numeric>(Node, Towel.Statics.SearchNeighbors<Node>, Towel.Statics.SearchHeuristic<Node, Numeric>, Towel.Statics.SearchGoal<Node>)
  fullName.vb: Towel.Statics.SearchGraph(Of Node, Numeric)(Node, Towel.Statics.SearchNeighbors(Of Node), Towel.Statics.SearchHeuristic(Of Node, Numeric), Towel.Statics.SearchGoal(Of Node))
  nameWithType: Statics.SearchGraph<Node, Numeric>(Node, Statics.SearchNeighbors<Node>, Statics.SearchHeuristic<Node, Numeric>, Statics.SearchGoal<Node>)
  nameWithType.vb: Statics.SearchGraph(Of Node, Numeric)(Node, Statics.SearchNeighbors(Of Node), Statics.SearchHeuristic(Of Node, Numeric), Statics.SearchGoal(Of Node))
- uid: Towel.Statics.SearchHeuristic`2
  name: Statics.SearchHeuristic<Node, Numeric>
  href: api/Towel.Statics.SearchHeuristic-2.html
  commentId: T:Towel.Statics.SearchHeuristic`2
  name.vb: Statics.SearchHeuristic(Of Node, Numeric)
  fullName: Towel.Statics.SearchHeuristic<Node, Numeric>
  fullName.vb: Towel.Statics.SearchHeuristic(Of Node, Numeric)
  nameWithType: Statics.SearchHeuristic<Node, Numeric>
  nameWithType.vb: Statics.SearchHeuristic(Of Node, Numeric)
- uid: Towel.Statics.SearchNeighbors`1
  name: Statics.SearchNeighbors<Node>
  href: api/Towel.Statics.SearchNeighbors-1.html
  commentId: T:Towel.Statics.SearchNeighbors`1
  name.vb: Statics.SearchNeighbors(Of Node)
  fullName: Towel.Statics.SearchNeighbors<Node>
  fullName.vb: Towel.Statics.SearchNeighbors(Of Node)
  nameWithType: Statics.SearchNeighbors<Node>
  nameWithType.vb: Statics.SearchNeighbors(Of Node)
- uid: Towel.Statics.SecantQuadratic*
  name: SecantQuadratic
  href: api/Towel.Statics.html#Towel_Statics_SecantQuadratic_
  commentId: Overload:Towel.Statics.SecantQuadratic
  isSpec: "True"
  fullName: Towel.Statics.SecantQuadratic
  nameWithType: Statics.SecantQuadratic
- uid: Towel.Statics.SecantQuadratic``1(Towel.Measurements.Angle{``0})
  name: SecantQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_SecantQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.SecantQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: SecantQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.SecantQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.SecantQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.SecantQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.SecantQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.SecantSystem*
  name: SecantSystem
  href: api/Towel.Statics.html#Towel_Statics_SecantSystem_
  commentId: Overload:Towel.Statics.SecantSystem
  isSpec: "True"
  fullName: Towel.Statics.SecantSystem
  nameWithType: Statics.SecantSystem
- uid: Towel.Statics.SecantSystem``1(Towel.Measurements.Angle{``0})
  name: SecantSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_SecantSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.SecantSystem``1(Towel.Measurements.Angle{``0})
  name.vb: SecantSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.SecantSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.SecantSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.SecantSystem<T>(Angle<T>)
  nameWithType.vb: Statics.SecantSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.Shuffle*
  name: Shuffle
  href: api/Towel.Statics.html#Towel_Statics_Shuffle_
  commentId: Overload:Towel.Statics.Shuffle
  isSpec: "True"
  fullName: Towel.Statics.Shuffle
  nameWithType: Statics.Shuffle
- uid: Towel.Statics.Shuffle``1(Span{``0},System.Nullable{Random})
  name: Shuffle<T>(Span<T>, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_Shuffle__1_Span___0__System_Nullable_Random__
  commentId: M:Towel.Statics.Shuffle``1(Span{``0},System.Nullable{Random})
  name.vb: Shuffle(Of T)(Span(Of T), Nullable(Of Random))
  fullName: Towel.Statics.Shuffle<T>(Span<T>, System.Nullable<Random>)
  fullName.vb: Towel.Statics.Shuffle(Of T)(Span(Of T), System.Nullable(Of Random))
  nameWithType: Statics.Shuffle<T>(Span<T>, Nullable<Random>)
  nameWithType.vb: Statics.Shuffle(Of T)(Span(Of T), Nullable(Of Random))
- uid: Towel.Statics.Shuffle``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Random})
  name: Shuffle<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_Shuffle__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Random__
  commentId: M:Towel.Statics.Shuffle``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Random})
  name.vb: Shuffle(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Random))
  fullName: Towel.Statics.Shuffle<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Random>)
  fullName.vb: Towel.Statics.Shuffle(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Random))
  nameWithType: Statics.Shuffle<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Random>)
  nameWithType.vb: Statics.Shuffle(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Random))
- uid: Towel.Statics.Shuffle``2(Span{``0},``1)
  name: Shuffle<T, Random>(Span<T>, Random)
  href: api/Towel.Statics.html#Towel_Statics_Shuffle__2_Span___0____1_
  commentId: M:Towel.Statics.Shuffle``2(Span{``0},``1)
  name.vb: Shuffle(Of T, Random)(Span(Of T), Random)
  fullName: Towel.Statics.Shuffle<T, Random>(Span<T>, Random)
  fullName.vb: Towel.Statics.Shuffle(Of T, Random)(Span(Of T), Random)
  nameWithType: Statics.Shuffle<T, Random>(Span<T>, Random)
  nameWithType.vb: Statics.Shuffle(Of T, Random)(Span(Of T), Random)
- uid: Towel.Statics.Shuffle``3(System.Int32,System.Int32,``1,``2,System.Nullable{Random})
  name: Shuffle<T, Get, Set>(Int32, Int32, Get, Set, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_Shuffle__3_System_Int32_System_Int32___1___2_System_Nullable_Random__
  commentId: M:Towel.Statics.Shuffle``3(System.Int32,System.Int32,``1,``2,System.Nullable{Random})
  name.vb: Shuffle(Of T, Get, Set)(Int32, Int32, Get, Set, Nullable(Of Random))
  fullName: Towel.Statics.Shuffle<T, Get, Set>(System.Int32, System.Int32, Get, Set, System.Nullable<Random>)
  fullName.vb: Towel.Statics.Shuffle(Of T, Get, Set)(System.Int32, System.Int32, Get, Set, System.Nullable(Of Random))
  nameWithType: Statics.Shuffle<T, Get, Set>(Int32, Int32, Get, Set, Nullable<Random>)
  nameWithType.vb: Statics.Shuffle(Of T, Get, Set)(Int32, Int32, Get, Set, Nullable(Of Random))
- uid: Towel.Statics.Shuffle``4(System.Int32,System.Int32,``1,``2,``3)
  name: Shuffle<T, Get, Set, Random>(Int32, Int32, Get, Set, Random)
  href: api/Towel.Statics.html#Towel_Statics_Shuffle__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.Shuffle``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: Shuffle(Of T, Get, Set, Random)(Int32, Int32, Get, Set, Random)
  fullName: Towel.Statics.Shuffle<T, Get, Set, Random>(System.Int32, System.Int32, Get, Set, Random)
  fullName.vb: Towel.Statics.Shuffle(Of T, Get, Set, Random)(System.Int32, System.Int32, Get, Set, Random)
  nameWithType: Statics.Shuffle<T, Get, Set, Random>(Int32, Int32, Get, Set, Random)
  nameWithType.vb: Statics.Shuffle(Of T, Get, Set, Random)(Int32, Int32, Get, Set, Random)
- uid: Towel.Statics.SiftFromCompareAndValue`2
  name: Statics.SiftFromCompareAndValue<T, Compare>
  href: api/Towel.Statics.SiftFromCompareAndValue-2.html
  commentId: T:Towel.Statics.SiftFromCompareAndValue`2
  name.vb: Statics.SiftFromCompareAndValue(Of T, Compare)
  fullName: Towel.Statics.SiftFromCompareAndValue<T, Compare>
  fullName.vb: Towel.Statics.SiftFromCompareAndValue(Of T, Compare)
  nameWithType: Statics.SiftFromCompareAndValue<T, Compare>
  nameWithType.vb: Statics.SiftFromCompareAndValue(Of T, Compare)
- uid: Towel.Statics.SiftFromCompareAndValue`2.#ctor(`0,`1)
  name: SiftFromCompareAndValue(T, Compare)
  href: api/Towel.Statics.SiftFromCompareAndValue-2.html#Towel_Statics_SiftFromCompareAndValue_2__ctor__0__1_
  commentId: M:Towel.Statics.SiftFromCompareAndValue`2.#ctor(`0,`1)
  fullName: Towel.Statics.SiftFromCompareAndValue<T, Compare>.SiftFromCompareAndValue(T, Compare)
  fullName.vb: Towel.Statics.SiftFromCompareAndValue(Of T, Compare).SiftFromCompareAndValue(T, Compare)
  nameWithType: Statics.SiftFromCompareAndValue<T, Compare>.SiftFromCompareAndValue(T, Compare)
  nameWithType.vb: Statics.SiftFromCompareAndValue(Of T, Compare).SiftFromCompareAndValue(T, Compare)
- uid: Towel.Statics.SiftFromCompareAndValue`2.#ctor*
  name: SiftFromCompareAndValue
  href: api/Towel.Statics.SiftFromCompareAndValue-2.html#Towel_Statics_SiftFromCompareAndValue_2__ctor_
  commentId: Overload:Towel.Statics.SiftFromCompareAndValue`2.#ctor
  isSpec: "True"
  fullName: Towel.Statics.SiftFromCompareAndValue<T, Compare>.SiftFromCompareAndValue
  fullName.vb: Towel.Statics.SiftFromCompareAndValue(Of T, Compare).SiftFromCompareAndValue
  nameWithType: Statics.SiftFromCompareAndValue<T, Compare>.SiftFromCompareAndValue
  nameWithType.vb: Statics.SiftFromCompareAndValue(Of T, Compare).SiftFromCompareAndValue
- uid: Towel.Statics.SiftFromCompareAndValue`2.Do(`0)
  name: Do(T)
  href: api/Towel.Statics.SiftFromCompareAndValue-2.html#Towel_Statics_SiftFromCompareAndValue_2_Do__0_
  commentId: M:Towel.Statics.SiftFromCompareAndValue`2.Do(`0)
  fullName: Towel.Statics.SiftFromCompareAndValue<T, Compare>.Do(T)
  fullName.vb: Towel.Statics.SiftFromCompareAndValue(Of T, Compare).Do(T)
  nameWithType: Statics.SiftFromCompareAndValue<T, Compare>.Do(T)
  nameWithType.vb: Statics.SiftFromCompareAndValue(Of T, Compare).Do(T)
- uid: Towel.Statics.SiftFromCompareAndValue`2.Do*
  name: Do
  href: api/Towel.Statics.SiftFromCompareAndValue-2.html#Towel_Statics_SiftFromCompareAndValue_2_Do_
  commentId: Overload:Towel.Statics.SiftFromCompareAndValue`2.Do
  isSpec: "True"
  fullName: Towel.Statics.SiftFromCompareAndValue<T, Compare>.Do
  fullName.vb: Towel.Statics.SiftFromCompareAndValue(Of T, Compare).Do
  nameWithType: Statics.SiftFromCompareAndValue<T, Compare>.Do
  nameWithType.vb: Statics.SiftFromCompareAndValue(Of T, Compare).Do
- uid: Towel.Statics.SineQuadratic*
  name: SineQuadratic
  href: api/Towel.Statics.html#Towel_Statics_SineQuadratic_
  commentId: Overload:Towel.Statics.SineQuadratic
  isSpec: "True"
  fullName: Towel.Statics.SineQuadratic
  nameWithType: Statics.SineQuadratic
- uid: Towel.Statics.SineQuadratic``1(Towel.Measurements.Angle{``0})
  name: SineQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_SineQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.SineQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: SineQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.SineQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.SineQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.SineQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.SineQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.SineSystem*
  name: SineSystem
  href: api/Towel.Statics.html#Towel_Statics_SineSystem_
  commentId: Overload:Towel.Statics.SineSystem
  isSpec: "True"
  fullName: Towel.Statics.SineSystem
  nameWithType: Statics.SineSystem
- uid: Towel.Statics.SineSystem``1(Towel.Measurements.Angle{``0})
  name: SineSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_SineSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.SineSystem``1(Towel.Measurements.Angle{``0})
  name.vb: SineSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.SineSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.SineSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.SineSystem<T>(Angle<T>)
  nameWithType.vb: Statics.SineSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.SineTaylorSeries*
  name: SineTaylorSeries
  href: api/Towel.Statics.html#Towel_Statics_SineTaylorSeries_
  commentId: Overload:Towel.Statics.SineTaylorSeries
  isSpec: "True"
  fullName: Towel.Statics.SineTaylorSeries
  nameWithType: Statics.SineTaylorSeries
- uid: Towel.Statics.SineTaylorSeries``1(Towel.Measurements.Angle{``0},System.Nullable{Predicate{``0}})
  name: SineTaylorSeries<T>(Angle<T>, Nullable<Predicate<T>>)
  href: api/Towel.Statics.html#Towel_Statics_SineTaylorSeries__1_Towel_Measurements_Angle___0__System_Nullable_Predicate___0___
  commentId: M:Towel.Statics.SineTaylorSeries``1(Towel.Measurements.Angle{``0},System.Nullable{Predicate{``0}})
  name.vb: SineTaylorSeries(Of T)(Angle(Of T), Nullable(Of Predicate(Of T)))
  fullName: Towel.Statics.SineTaylorSeries<T>(Towel.Measurements.Angle<T>, System.Nullable<Predicate<T>>)
  fullName.vb: Towel.Statics.SineTaylorSeries(Of T)(Towel.Measurements.Angle(Of T), System.Nullable(Of Predicate(Of T)))
  nameWithType: Statics.SineTaylorSeries<T>(Angle<T>, Nullable<Predicate<T>>)
  nameWithType.vb: Statics.SineTaylorSeries(Of T)(Angle(Of T), Nullable(Of Predicate(Of T)))
- uid: Towel.Statics.SortBogo*
  name: SortBogo
  href: api/Towel.Statics.html#Towel_Statics_SortBogo_
  commentId: Overload:Towel.Statics.SortBogo
  isSpec: "True"
  fullName: Towel.Statics.SortBogo
  nameWithType: Statics.SortBogo
- uid: Towel.Statics.SortBogo``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}},System.Nullable{Random})
  name: SortBogo<T>(Span<T>, Nullable<Func<T, T, CompareResult>>, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___System_Nullable_Random__
  commentId: M:Towel.Statics.SortBogo``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}},System.Nullable{Random})
  name.vb: SortBogo(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Random))
  fullName: Towel.Statics.SortBogo<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>, System.Nullable<Random>)
  fullName.vb: Towel.Statics.SortBogo(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)), System.Nullable(Of Random))
  nameWithType: Statics.SortBogo<T>(Span<T>, Nullable<Func<T, T, CompareResult>>, Nullable<Random>)
  nameWithType.vb: Statics.SortBogo(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Random))
- uid: Towel.Statics.SortBogo``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}},System.Nullable{Random})
  name: SortBogo<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___System_Nullable_Random__
  commentId: M:Towel.Statics.SortBogo``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}},System.Nullable{Random})
  name.vb: SortBogo(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Random))
  fullName: Towel.Statics.SortBogo<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>, System.Nullable<Random>)
  fullName.vb: Towel.Statics.SortBogo(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)), System.Nullable(Of Random))
  nameWithType: Statics.SortBogo<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>, Nullable<Random>)
  nameWithType.vb: Statics.SortBogo(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)), Nullable(Of Random))
- uid: Towel.Statics.SortBogo``2(Span{``0},``1,System.Nullable{Random})
  name: SortBogo<T, Compare>(Span<T>, Compare, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__2_Span___0____1_System_Nullable_Random__
  commentId: M:Towel.Statics.SortBogo``2(Span{``0},``1,System.Nullable{Random})
  name.vb: SortBogo(Of T, Compare)(Span(Of T), Compare, Nullable(Of Random))
  fullName: Towel.Statics.SortBogo<T, Compare>(Span<T>, Compare, System.Nullable<Random>)
  fullName.vb: Towel.Statics.SortBogo(Of T, Compare)(Span(Of T), Compare, System.Nullable(Of Random))
  nameWithType: Statics.SortBogo<T, Compare>(Span<T>, Compare, Nullable<Random>)
  nameWithType.vb: Statics.SortBogo(Of T, Compare)(Span(Of T), Compare, Nullable(Of Random))
- uid: Towel.Statics.SortBogo``3(Span{``0},``1,``2)
  name: SortBogo<T, Compare, Random>(Span<T>, Compare, Random)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__3_Span___0____1___2_
  commentId: M:Towel.Statics.SortBogo``3(Span{``0},``1,``2)
  name.vb: SortBogo(Of T, Compare, Random)(Span(Of T), Compare, Random)
  fullName: Towel.Statics.SortBogo<T, Compare, Random>(Span<T>, Compare, Random)
  fullName.vb: Towel.Statics.SortBogo(Of T, Compare, Random)(Span(Of T), Compare, Random)
  nameWithType: Statics.SortBogo<T, Compare, Random>(Span<T>, Compare, Random)
  nameWithType.vb: Statics.SortBogo(Of T, Compare, Random)(Span(Of T), Compare, Random)
- uid: Towel.Statics.SortBogo``4(System.Int32,System.Int32,``1,``2,``3,System.Nullable{Random})
  name: SortBogo<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set, Nullable<Random>)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__4_System_Int32_System_Int32___1___2___3_System_Nullable_Random__
  commentId: M:Towel.Statics.SortBogo``4(System.Int32,System.Int32,``1,``2,``3,System.Nullable{Random})
  name.vb: SortBogo(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set, Nullable(Of Random))
  fullName: Towel.Statics.SortBogo<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set, System.Nullable<Random>)
  fullName.vb: Towel.Statics.SortBogo(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set, System.Nullable(Of Random))
  nameWithType: Statics.SortBogo<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set, Nullable<Random>)
  nameWithType.vb: Statics.SortBogo(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set, Nullable(Of Random))
- uid: Towel.Statics.SortBogo``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name: SortBogo<T, Compare, Get, Set, Random>(Int32, Int32, Compare, Get, Set, Random)
  href: api/Towel.Statics.html#Towel_Statics_SortBogo__5_System_Int32_System_Int32___1___2___3___4_
  commentId: M:Towel.Statics.SortBogo``5(System.Int32,System.Int32,``1,``2,``3,``4)
  name.vb: SortBogo(Of T, Compare, Get, Set, Random)(Int32, Int32, Compare, Get, Set, Random)
  fullName: Towel.Statics.SortBogo<T, Compare, Get, Set, Random>(System.Int32, System.Int32, Compare, Get, Set, Random)
  fullName.vb: Towel.Statics.SortBogo(Of T, Compare, Get, Set, Random)(System.Int32, System.Int32, Compare, Get, Set, Random)
  nameWithType: Statics.SortBogo<T, Compare, Get, Set, Random>(Int32, Int32, Compare, Get, Set, Random)
  nameWithType.vb: Statics.SortBogo(Of T, Compare, Get, Set, Random)(Int32, Int32, Compare, Get, Set, Random)
- uid: Towel.Statics.SortBubble*
  name: SortBubble
  href: api/Towel.Statics.html#Towel_Statics_SortBubble_
  commentId: Overload:Towel.Statics.SortBubble
  isSpec: "True"
  fullName: Towel.Statics.SortBubble
  nameWithType: Statics.SortBubble
- uid: Towel.Statics.SortBubble``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortBubble<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortBubble__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortBubble``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortBubble(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortBubble<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortBubble(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortBubble<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortBubble(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortBubble``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortBubble<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortBubble__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortBubble``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortBubble(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortBubble<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortBubble(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortBubble<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortBubble(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortBubble``2(Span{``0},``1)
  name: SortBubble<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortBubble__2_Span___0____1_
  commentId: M:Towel.Statics.SortBubble``2(Span{``0},``1)
  name.vb: SortBubble(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortBubble<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortBubble(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortBubble<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortBubble(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortBubble``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortBubble<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortBubble__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortBubble``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortBubble(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortBubble<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortBubble(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortBubble<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortBubble(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortCocktail*
  name: SortCocktail
  href: api/Towel.Statics.html#Towel_Statics_SortCocktail_
  commentId: Overload:Towel.Statics.SortCocktail
  isSpec: "True"
  fullName: Towel.Statics.SortCocktail
  nameWithType: Statics.SortCocktail
- uid: Towel.Statics.SortCocktail``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortCocktail<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortCocktail__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortCocktail``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortCocktail(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortCocktail<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortCocktail(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortCocktail<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortCocktail(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortCocktail``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortCocktail<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortCocktail__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortCocktail``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortCocktail(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortCocktail<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortCocktail(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortCocktail<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortCocktail(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortCocktail``2(Span{``0},``1)
  name: SortCocktail<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortCocktail__2_Span___0____1_
  commentId: M:Towel.Statics.SortCocktail``2(Span{``0},``1)
  name.vb: SortCocktail(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortCocktail<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortCocktail(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortCocktail<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortCocktail(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortCocktail``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortCocktail<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortCocktail__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortCocktail``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortCocktail(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortCocktail<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortCocktail(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortCocktail<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortCocktail(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortComb*
  name: SortComb
  href: api/Towel.Statics.html#Towel_Statics_SortComb_
  commentId: Overload:Towel.Statics.SortComb
  isSpec: "True"
  fullName: Towel.Statics.SortComb
  nameWithType: Statics.SortComb
- uid: Towel.Statics.SortComb``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortComb<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortComb__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortComb``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortComb(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortComb<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortComb(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortComb<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortComb(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortComb``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortComb<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortComb__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortComb``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortComb(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortComb<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortComb(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortComb<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortComb(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortComb``2(Span{``0},``1)
  name: SortComb<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortComb__2_Span___0____1_
  commentId: M:Towel.Statics.SortComb``2(Span{``0},``1)
  name.vb: SortComb(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortComb<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortComb(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortComb<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortComb(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortComb``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortComb<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortComb__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortComb``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortComb(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortComb<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortComb(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortComb<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortComb(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortCycle*
  name: SortCycle
  href: api/Towel.Statics.html#Towel_Statics_SortCycle_
  commentId: Overload:Towel.Statics.SortCycle
  isSpec: "True"
  fullName: Towel.Statics.SortCycle
  nameWithType: Statics.SortCycle
- uid: Towel.Statics.SortCycle``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortCycle<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortCycle__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortCycle``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortCycle(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortCycle<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortCycle(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortCycle<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortCycle(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortCycle``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortCycle<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortCycle__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortCycle``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortCycle(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortCycle<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortCycle(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortCycle<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortCycle(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortCycle``2(Span{``0},``1)
  name: SortCycle<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortCycle__2_Span___0____1_
  commentId: M:Towel.Statics.SortCycle``2(Span{``0},``1)
  name.vb: SortCycle(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortCycle<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortCycle(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortCycle<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortCycle(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortCycle``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortCycle<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortCycle__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortCycle``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortCycle(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortCycle<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortCycle(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortCycle<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortCycle(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortGnome*
  name: SortGnome
  href: api/Towel.Statics.html#Towel_Statics_SortGnome_
  commentId: Overload:Towel.Statics.SortGnome
  isSpec: "True"
  fullName: Towel.Statics.SortGnome
  nameWithType: Statics.SortGnome
- uid: Towel.Statics.SortGnome``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortGnome<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortGnome__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortGnome``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortGnome(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortGnome<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortGnome(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortGnome<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortGnome(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortGnome``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortGnome<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortGnome__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortGnome``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortGnome(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortGnome<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortGnome(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortGnome<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortGnome(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortGnome``2(Span{``0},``1)
  name: SortGnome<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortGnome__2_Span___0____1_
  commentId: M:Towel.Statics.SortGnome``2(Span{``0},``1)
  name.vb: SortGnome(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortGnome<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortGnome(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortGnome<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortGnome(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortGnome``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortGnome<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortGnome__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortGnome``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortGnome(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortGnome<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortGnome(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortGnome<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortGnome(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortHeap*
  name: SortHeap
  href: api/Towel.Statics.html#Towel_Statics_SortHeap_
  commentId: Overload:Towel.Statics.SortHeap
  isSpec: "True"
  fullName: Towel.Statics.SortHeap
  nameWithType: Statics.SortHeap
- uid: Towel.Statics.SortHeap``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortHeap<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortHeap__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortHeap``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortHeap(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortHeap<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortHeap(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortHeap<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortHeap(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortHeap``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortHeap<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortHeap__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortHeap``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortHeap(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortHeap<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortHeap(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortHeap<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortHeap(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortHeap``2(Span{``0},``1)
  name: SortHeap<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortHeap__2_Span___0____1_
  commentId: M:Towel.Statics.SortHeap``2(Span{``0},``1)
  name.vb: SortHeap(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortHeap<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortHeap(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortHeap<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortHeap(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortHeap``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortHeap<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortHeap__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortHeap``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortHeap(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortHeap<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortHeap(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortHeap<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortHeap(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortInsertion*
  name: SortInsertion
  href: api/Towel.Statics.html#Towel_Statics_SortInsertion_
  commentId: Overload:Towel.Statics.SortInsertion
  isSpec: "True"
  fullName: Towel.Statics.SortInsertion
  nameWithType: Statics.SortInsertion
- uid: Towel.Statics.SortInsertion``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortInsertion<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortInsertion__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortInsertion``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortInsertion(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortInsertion<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortInsertion(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortInsertion<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortInsertion(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortInsertion``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortInsertion<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortInsertion__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortInsertion``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortInsertion(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortInsertion<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortInsertion(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortInsertion<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortInsertion(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortInsertion``2(Span{``0},``1)
  name: SortInsertion<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortInsertion__2_Span___0____1_
  commentId: M:Towel.Statics.SortInsertion``2(Span{``0},``1)
  name.vb: SortInsertion(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortInsertion<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortInsertion(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortInsertion<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortInsertion(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortInsertion``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortInsertion<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortInsertion__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortInsertion``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortInsertion(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortInsertion<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortInsertion(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortInsertion<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortInsertion(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortMerge*
  name: SortMerge
  href: api/Towel.Statics.html#Towel_Statics_SortMerge_
  commentId: Overload:Towel.Statics.SortMerge
  isSpec: "True"
  fullName: Towel.Statics.SortMerge
  nameWithType: Statics.SortMerge
- uid: Towel.Statics.SortMerge``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortMerge<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortMerge__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortMerge``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortMerge(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortMerge<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortMerge(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortMerge<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortMerge(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortMerge``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortMerge<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortMerge__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortMerge``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortMerge(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortMerge<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortMerge(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortMerge<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortMerge(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortMerge``2(Span{``0},``1)
  name: SortMerge<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortMerge__2_Span___0____1_
  commentId: M:Towel.Statics.SortMerge``2(Span{``0},``1)
  name.vb: SortMerge(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortMerge<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortMerge(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortMerge<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortMerge(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortMerge``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortMerge<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortMerge__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortMerge``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortMerge(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortMerge<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortMerge(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortMerge<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortMerge(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortOddEven*
  name: SortOddEven
  href: api/Towel.Statics.html#Towel_Statics_SortOddEven_
  commentId: Overload:Towel.Statics.SortOddEven
  isSpec: "True"
  fullName: Towel.Statics.SortOddEven
  nameWithType: Statics.SortOddEven
- uid: Towel.Statics.SortOddEven``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortOddEven<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortOddEven__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortOddEven``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortOddEven(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortOddEven<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortOddEven(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortOddEven<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortOddEven(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortOddEven``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortOddEven<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortOddEven__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortOddEven``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortOddEven(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortOddEven<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortOddEven(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortOddEven<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortOddEven(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortOddEven``2(Span{``0},``1)
  name: SortOddEven<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortOddEven__2_Span___0____1_
  commentId: M:Towel.Statics.SortOddEven``2(Span{``0},``1)
  name.vb: SortOddEven(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortOddEven<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortOddEven(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortOddEven<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortOddEven(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortOddEven``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortOddEven<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortOddEven__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortOddEven``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortOddEven(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortOddEven<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortOddEven(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortOddEven<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortOddEven(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortPancake*
  name: SortPancake
  href: api/Towel.Statics.html#Towel_Statics_SortPancake_
  commentId: Overload:Towel.Statics.SortPancake
  isSpec: "True"
  fullName: Towel.Statics.SortPancake
  nameWithType: Statics.SortPancake
- uid: Towel.Statics.SortPancake``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortPancake<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortPancake__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortPancake``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortPancake(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortPancake<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortPancake(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortPancake<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortPancake(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortPancake``2(Span{``0},``1)
  name: SortPancake<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortPancake__2_Span___0____1_
  commentId: M:Towel.Statics.SortPancake``2(Span{``0},``1)
  name.vb: SortPancake(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortPancake<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortPancake(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortPancake<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortPancake(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortQuick*
  name: SortQuick
  href: api/Towel.Statics.html#Towel_Statics_SortQuick_
  commentId: Overload:Towel.Statics.SortQuick
  isSpec: "True"
  fullName: Towel.Statics.SortQuick
  nameWithType: Statics.SortQuick
- uid: Towel.Statics.SortQuick``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortQuick<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortQuick__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortQuick``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortQuick(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortQuick<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortQuick(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortQuick<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortQuick(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortQuick``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortQuick<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortQuick__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortQuick``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortQuick(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortQuick<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortQuick(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortQuick<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortQuick(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortQuick``2(Span{``0},``1)
  name: SortQuick<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortQuick__2_Span___0____1_
  commentId: M:Towel.Statics.SortQuick``2(Span{``0},``1)
  name.vb: SortQuick(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortQuick<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortQuick(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortQuick<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortQuick(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortQuick``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortQuick<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortQuick__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortQuick``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortQuick(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortQuick<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortQuick(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortQuick<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortQuick(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortSelection*
  name: SortSelection
  href: api/Towel.Statics.html#Towel_Statics_SortSelection_
  commentId: Overload:Towel.Statics.SortSelection
  isSpec: "True"
  fullName: Towel.Statics.SortSelection
  nameWithType: Statics.SortSelection
- uid: Towel.Statics.SortSelection``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortSelection<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortSelection__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortSelection``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortSelection(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortSelection<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortSelection(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortSelection<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortSelection(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortSelection``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortSelection<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortSelection__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortSelection``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortSelection(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortSelection<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortSelection(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortSelection<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortSelection(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortSelection``2(Span{``0},``1)
  name: SortSelection<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortSelection__2_Span___0____1_
  commentId: M:Towel.Statics.SortSelection``2(Span{``0},``1)
  name.vb: SortSelection(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortSelection<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortSelection(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortSelection<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortSelection(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortSelection``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortSelection<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortSelection__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortSelection``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortSelection(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortSelection<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortSelection(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortSelection<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortSelection(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortShell*
  name: SortShell
  href: api/Towel.Statics.html#Towel_Statics_SortShell_
  commentId: Overload:Towel.Statics.SortShell
  isSpec: "True"
  fullName: Towel.Statics.SortShell
  nameWithType: Statics.SortShell
- uid: Towel.Statics.SortShell``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortShell<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortShell__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortShell``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortShell(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortShell<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortShell(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortShell<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortShell(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortShell``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortShell<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortShell__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortShell``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortShell(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortShell<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortShell(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortShell<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortShell(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortShell``2(Span{``0},``1)
  name: SortShell<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortShell__2_Span___0____1_
  commentId: M:Towel.Statics.SortShell``2(Span{``0},``1)
  name.vb: SortShell(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortShell<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortShell(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortShell<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortShell(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortShell``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortShell<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortShell__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortShell``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortShell(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortShell<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortShell(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortShell<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortShell(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortSlow*
  name: SortSlow
  href: api/Towel.Statics.html#Towel_Statics_SortSlow_
  commentId: Overload:Towel.Statics.SortSlow
  isSpec: "True"
  fullName: Towel.Statics.SortSlow
  nameWithType: Statics.SortSlow
- uid: Towel.Statics.SortSlow``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortSlow<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortSlow__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortSlow``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortSlow(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortSlow<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortSlow(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortSlow<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortSlow(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortSlow``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortSlow<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortSlow__1_System_Int32_System_Int32_Func_System_Int32___0__Action_System_Int32___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortSlow``1(System.Int32,System.Int32,Func{System.Int32,``0},Action{System.Int32,``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortSlow(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortSlow<T>(System.Int32, System.Int32, Func<System.Int32, T>, Action<System.Int32, T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortSlow(Of T)(System.Int32, System.Int32, Func(Of System.Int32, T), Action(Of System.Int32, T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortSlow<T>(Int32, Int32, Func<Int32, T>, Action<Int32, T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortSlow(Of T)(Int32, Int32, Func(Of Int32, T), Action(Of Int32, T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortSlow``2(Span{``0},``1)
  name: SortSlow<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortSlow__2_Span___0____1_
  commentId: M:Towel.Statics.SortSlow``2(Span{``0},``1)
  name.vb: SortSlow(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortSlow<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortSlow(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortSlow<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortSlow(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.SortSlow``4(System.Int32,System.Int32,``1,``2,``3)
  name: SortSlow<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  href: api/Towel.Statics.html#Towel_Statics_SortSlow__4_System_Int32_System_Int32___1___2___3_
  commentId: M:Towel.Statics.SortSlow``4(System.Int32,System.Int32,``1,``2,``3)
  name.vb: SortSlow(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
  fullName: Towel.Statics.SortSlow<T, Compare, Get, Set>(System.Int32, System.Int32, Compare, Get, Set)
  fullName.vb: Towel.Statics.SortSlow(Of T, Compare, Get, Set)(System.Int32, System.Int32, Compare, Get, Set)
  nameWithType: Statics.SortSlow<T, Compare, Get, Set>(Int32, Int32, Compare, Get, Set)
  nameWithType.vb: Statics.SortSlow(Of T, Compare, Get, Set)(Int32, Int32, Compare, Get, Set)
- uid: Towel.Statics.SortStooge*
  name: SortStooge
  href: api/Towel.Statics.html#Towel_Statics_SortStooge_
  commentId: Overload:Towel.Statics.SortStooge
  isSpec: "True"
  fullName: Towel.Statics.SortStooge
  nameWithType: Statics.SortStooge
- uid: Towel.Statics.SortStooge``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name: SortStooge<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  href: api/Towel.Statics.html#Towel_Statics_SortStooge__1_Span___0__System_Nullable_Func___0___0_Towel_CompareResult___
  commentId: M:Towel.Statics.SortStooge``1(Span{``0},System.Nullable{Func{``0,``0,Towel.CompareResult}})
  name.vb: SortStooge(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
  fullName: Towel.Statics.SortStooge<T>(Span<T>, System.Nullable<Func<T, T, Towel.CompareResult>>)
  fullName.vb: Towel.Statics.SortStooge(Of T)(Span(Of T), System.Nullable(Of Func(Of T, T, Towel.CompareResult)))
  nameWithType: Statics.SortStooge<T>(Span<T>, Nullable<Func<T, T, CompareResult>>)
  nameWithType.vb: Statics.SortStooge(Of T)(Span(Of T), Nullable(Of Func(Of T, T, CompareResult)))
- uid: Towel.Statics.SortStooge``2(Span{``0},``1)
  name: SortStooge<T, Compare>(Span<T>, Compare)
  href: api/Towel.Statics.html#Towel_Statics_SortStooge__2_Span___0____1_
  commentId: M:Towel.Statics.SortStooge``2(Span{``0},``1)
  name.vb: SortStooge(Of T, Compare)(Span(Of T), Compare)
  fullName: Towel.Statics.SortStooge<T, Compare>(Span<T>, Compare)
  fullName.vb: Towel.Statics.SortStooge(Of T, Compare)(Span(Of T), Compare)
  nameWithType: Statics.SortStooge<T, Compare>(Span<T>, Compare)
  nameWithType.vb: Statics.SortStooge(Of T, Compare)(Span(Of T), Compare)
- uid: Towel.Statics.sourcefilepath(System.String)
  name: sourcefilepath(String)
  href: api/Towel.Statics.html#Towel_Statics_sourcefilepath_System_String_
  commentId: M:Towel.Statics.sourcefilepath(System.String)
  fullName: Towel.Statics.sourcefilepath(System.String)
  nameWithType: Statics.sourcefilepath(String)
- uid: Towel.Statics.sourcefilepath*
  name: sourcefilepath
  href: api/Towel.Statics.html#Towel_Statics_sourcefilepath_
  commentId: Overload:Towel.Statics.sourcefilepath
  isSpec: "True"
  fullName: Towel.Statics.sourcefilepath
  nameWithType: Statics.sourcefilepath
- uid: Towel.Statics.sourcelinenumber(System.Int32)
  name: sourcelinenumber(Int32)
  href: api/Towel.Statics.html#Towel_Statics_sourcelinenumber_System_Int32_
  commentId: M:Towel.Statics.sourcelinenumber(System.Int32)
  fullName: Towel.Statics.sourcelinenumber(System.Int32)
  nameWithType: Statics.sourcelinenumber(Int32)
- uid: Towel.Statics.sourcelinenumber*
  name: sourcelinenumber
  href: api/Towel.Statics.html#Towel_Statics_sourcelinenumber_
  commentId: Overload:Towel.Statics.sourcelinenumber
  isSpec: "True"
  fullName: Towel.Statics.sourcelinenumber
  nameWithType: Statics.sourcelinenumber
- uid: Towel.Statics.sourcemembername(System.String)
  name: sourcemembername(String)
  href: api/Towel.Statics.html#Towel_Statics_sourcemembername_System_String_
  commentId: M:Towel.Statics.sourcemembername(System.String)
  fullName: Towel.Statics.sourcemembername(System.String)
  nameWithType: Statics.sourcemembername(String)
- uid: Towel.Statics.sourcemembername*
  name: sourcemembername
  href: api/Towel.Statics.html#Towel_Statics_sourcemembername_
  commentId: Overload:Towel.Statics.sourcemembername
  isSpec: "True"
  fullName: Towel.Statics.sourcemembername
  nameWithType: Statics.sourcemembername
- uid: Towel.Statics.SquareRoot*
  name: SquareRoot
  href: api/Towel.Statics.html#Towel_Statics_SquareRoot_
  commentId: Overload:Towel.Statics.SquareRoot
  isSpec: "True"
  fullName: Towel.Statics.SquareRoot
  nameWithType: Statics.SquareRoot
- uid: Towel.Statics.SquareRoot``1(``0)
  name: SquareRoot<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_SquareRoot__1___0_
  commentId: M:Towel.Statics.SquareRoot``1(``0)
  name.vb: SquareRoot(Of T)(T)
  fullName: Towel.Statics.SquareRoot<T>(T)
  fullName.vb: Towel.Statics.SquareRoot(Of T)(T)
  nameWithType: Statics.SquareRoot<T>(T)
  nameWithType.vb: Statics.SquareRoot(Of T)(T)
- uid: Towel.Statics.StandardDeviation*
  name: StandardDeviation
  href: api/Towel.Statics.html#Towel_Statics_StandardDeviation_
  commentId: Overload:Towel.Statics.StandardDeviation
  isSpec: "True"
  fullName: Towel.Statics.StandardDeviation
  nameWithType: Statics.StandardDeviation
- uid: Towel.Statics.StandardDeviation``1(Action{Action{``0}})
  name: StandardDeviation<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_StandardDeviation__1_Action_Action___0___
  commentId: M:Towel.Statics.StandardDeviation``1(Action{Action{``0}})
  name.vb: StandardDeviation(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.StandardDeviation<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.StandardDeviation(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.StandardDeviation<T>(Action<Action<T>>)
  nameWithType.vb: Statics.StandardDeviation(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.StepStatusContinue
  name: Statics.StepStatusContinue
  href: api/Towel.Statics.StepStatusContinue.html
  commentId: T:Towel.Statics.StepStatusContinue
  fullName: Towel.Statics.StepStatusContinue
  nameWithType: Statics.StepStatusContinue
- uid: Towel.Statics.StepStatusContinue.Do
  name: Do()
  href: api/Towel.Statics.StepStatusContinue.html#Towel_Statics_StepStatusContinue_Do
  commentId: M:Towel.Statics.StepStatusContinue.Do
  fullName: Towel.Statics.StepStatusContinue.Do()
  nameWithType: Statics.StepStatusContinue.Do()
- uid: Towel.Statics.StepStatusContinue.Do*
  name: Do
  href: api/Towel.Statics.StepStatusContinue.html#Towel_Statics_StepStatusContinue_Do_
  commentId: Overload:Towel.Statics.StepStatusContinue.Do
  isSpec: "True"
  fullName: Towel.Statics.StepStatusContinue.Do
  nameWithType: Statics.StepStatusContinue.Do
- uid: Towel.Statics.Subtraction*
  name: Subtraction
  href: api/Towel.Statics.html#Towel_Statics_Subtraction_
  commentId: Overload:Towel.Statics.Subtraction
  isSpec: "True"
  fullName: Towel.Statics.Subtraction
  nameWithType: Statics.Subtraction
- uid: Towel.Statics.Subtraction``1(``0,``0)
  name: Subtraction<T>(T, T)
  href: api/Towel.Statics.html#Towel_Statics_Subtraction__1___0___0_
  commentId: M:Towel.Statics.Subtraction``1(``0,``0)
  name.vb: Subtraction(Of T)(T, T)
  fullName: Towel.Statics.Subtraction<T>(T, T)
  fullName.vb: Towel.Statics.Subtraction(Of T)(T, T)
  nameWithType: Statics.Subtraction<T>(T, T)
  nameWithType.vb: Statics.Subtraction(Of T)(T, T)
- uid: Towel.Statics.Subtraction``1(``0,``0,``0,``0[])
  name: Subtraction<T>(T, T, T, T[])
  href: api/Towel.Statics.html#Towel_Statics_Subtraction__1___0___0___0___0___
  commentId: M:Towel.Statics.Subtraction``1(``0,``0,``0,``0[])
  name.vb: Subtraction(Of T)(T, T, T, T())
  fullName: Towel.Statics.Subtraction<T>(T, T, T, T[])
  fullName.vb: Towel.Statics.Subtraction(Of T)(T, T, T, T())
  nameWithType: Statics.Subtraction<T>(T, T, T, T[])
  nameWithType.vb: Statics.Subtraction(Of T)(T, T, T, T())
- uid: Towel.Statics.Subtraction``1(Action{Action{``0}})
  name: Subtraction<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Subtraction__1_Action_Action___0___
  commentId: M:Towel.Statics.Subtraction``1(Action{Action{``0}})
  name.vb: Subtraction(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Subtraction<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Subtraction(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Subtraction<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Subtraction(Of T)(Action(Of Action(Of T)))
- uid: Towel.Statics.Subtraction``3(``0,``1)
  name: Subtraction<A, B, C>(A, B)
  href: api/Towel.Statics.html#Towel_Statics_Subtraction__3___0___1_
  commentId: M:Towel.Statics.Subtraction``3(``0,``1)
  name.vb: Subtraction(Of A, B, C)(A, B)
  fullName: Towel.Statics.Subtraction<A, B, C>(A, B)
  fullName.vb: Towel.Statics.Subtraction(Of A, B, C)(A, B)
  nameWithType: Statics.Subtraction<A, B, C>(A, B)
  nameWithType.vb: Statics.Subtraction(Of A, B, C)(A, B)
- uid: Towel.Statics.Swap*
  name: Swap
  href: api/Towel.Statics.html#Towel_Statics_Swap_
  commentId: Overload:Towel.Statics.Swap
  isSpec: "True"
  fullName: Towel.Statics.Swap
  nameWithType: Statics.Swap
- uid: Towel.Statics.Swap``1(``0@,``0@)
  name: Swap<T>(ref T, ref T)
  href: api/Towel.Statics.html#Towel_Statics_Swap__1___0____0__
  commentId: M:Towel.Statics.Swap``1(``0@,``0@)
  name.vb: Swap(Of T)(ByRef T, ByRef T)
  fullName: Towel.Statics.Swap<T>(ref T, ref T)
  fullName.vb: Towel.Statics.Swap(Of T)(ByRef T, ByRef T)
  nameWithType: Statics.Swap<T>(ref T, ref T)
  nameWithType.vb: Statics.Swap(Of T)(ByRef T, ByRef T)
- uid: Towel.Statics.Switch(System.ValueTuple{Towel.Statics.SwitchSyntax.Condition,Action}[])
  name: Switch((Statics.SwitchSyntax.Condition, Action)[])
  href: api/Towel.Statics.html#Towel_Statics_Switch_System_ValueTuple_Towel_Statics_SwitchSyntax_Condition_Action____
  commentId: M:Towel.Statics.Switch(System.ValueTuple{Towel.Statics.SwitchSyntax.Condition,Action}[])
  name.vb: Switch((Statics.SwitchSyntax.Condition, Action)())
  fullName: Towel.Statics.Switch(System.ValueTuple<Towel.Statics.SwitchSyntax.Condition, Action>[])
  fullName.vb: Towel.Statics.Switch(System.ValueTuple(Of Towel.Statics.SwitchSyntax.Condition, Action)())
  nameWithType: Statics.Switch((Statics.SwitchSyntax.Condition, Action)[])
  nameWithType.vb: Statics.Switch((Statics.SwitchSyntax.Condition, Action)())
- uid: Towel.Statics.Switch*
  name: Switch
  href: api/Towel.Statics.html#Towel_Statics_Switch_
  commentId: Overload:Towel.Statics.Switch
  isSpec: "True"
  fullName: Towel.Statics.Switch
  nameWithType: Statics.Switch
- uid: Towel.Statics.Switch``1(``0)
  name: Switch<T>(T)
  href: api/Towel.Statics.html#Towel_Statics_Switch__1___0_
  commentId: M:Towel.Statics.Switch``1(``0)
  name.vb: Switch(Of T)(T)
  fullName: Towel.Statics.Switch<T>(T)
  fullName.vb: Towel.Statics.Switch(Of T)(T)
  nameWithType: Statics.Switch<T>(T)
  nameWithType.vb: Statics.Switch(Of T)(T)
- uid: Towel.Statics.SwitchSyntax
  name: Statics.SwitchSyntax
  href: api/Towel.Statics.SwitchSyntax.html
  commentId: T:Towel.Statics.SwitchSyntax
  fullName: Towel.Statics.SwitchSyntax
  nameWithType: Statics.SwitchSyntax
- uid: Towel.Statics.SwitchSyntax.Condition
  name: Statics.SwitchSyntax.Condition
  href: api/Towel.Statics.SwitchSyntax.Condition.html
  commentId: T:Towel.Statics.SwitchSyntax.Condition
  fullName: Towel.Statics.SwitchSyntax.Condition
  nameWithType: Statics.SwitchSyntax.Condition
- uid: Towel.Statics.SwitchSyntax.Condition.op_Implicit(System.Boolean)~Towel.Statics.SwitchSyntax.Condition
  name: Implicit(Boolean to Statics.SwitchSyntax.Condition)
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_op_Implicit_System_Boolean__Towel_Statics_SwitchSyntax_Condition
  commentId: M:Towel.Statics.SwitchSyntax.Condition.op_Implicit(System.Boolean)~Towel.Statics.SwitchSyntax.Condition
  name.vb: Widening(Boolean to Statics.SwitchSyntax.Condition)
  fullName: Towel.Statics.SwitchSyntax.Condition.Implicit(System.Boolean to Towel.Statics.SwitchSyntax.Condition)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition.Widening(System.Boolean to Towel.Statics.SwitchSyntax.Condition)
  nameWithType: Statics.SwitchSyntax.Condition.Implicit(Boolean to Statics.SwitchSyntax.Condition)
  nameWithType.vb: Statics.SwitchSyntax.Condition.Widening(Boolean to Statics.SwitchSyntax.Condition)
- uid: Towel.Statics.SwitchSyntax.Condition.op_Implicit(Towel.Statics.SwitchSyntax.Condition)~System.Boolean
  name: Implicit(Statics.SwitchSyntax.Condition to Boolean)
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_op_Implicit_Towel_Statics_SwitchSyntax_Condition__System_Boolean
  commentId: M:Towel.Statics.SwitchSyntax.Condition.op_Implicit(Towel.Statics.SwitchSyntax.Condition)~System.Boolean
  name.vb: Widening(Statics.SwitchSyntax.Condition to Boolean)
  fullName: Towel.Statics.SwitchSyntax.Condition.Implicit(Towel.Statics.SwitchSyntax.Condition to System.Boolean)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition.Widening(Towel.Statics.SwitchSyntax.Condition to System.Boolean)
  nameWithType: Statics.SwitchSyntax.Condition.Implicit(Statics.SwitchSyntax.Condition to Boolean)
  nameWithType.vb: Statics.SwitchSyntax.Condition.Widening(Statics.SwitchSyntax.Condition to Boolean)
- uid: Towel.Statics.SwitchSyntax.Condition.op_Implicit(Towel.Statics.SwitchSyntax.Keyword)~Towel.Statics.SwitchSyntax.Condition
  name: Implicit(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition)
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_op_Implicit_Towel_Statics_SwitchSyntax_Keyword__Towel_Statics_SwitchSyntax_Condition
  commentId: M:Towel.Statics.SwitchSyntax.Condition.op_Implicit(Towel.Statics.SwitchSyntax.Keyword)~Towel.Statics.SwitchSyntax.Condition
  name.vb: Widening(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition)
  fullName: Towel.Statics.SwitchSyntax.Condition.Implicit(Towel.Statics.SwitchSyntax.Keyword to Towel.Statics.SwitchSyntax.Condition)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition.Widening(Towel.Statics.SwitchSyntax.Keyword to Towel.Statics.SwitchSyntax.Condition)
  nameWithType: Statics.SwitchSyntax.Condition.Implicit(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition)
  nameWithType.vb: Statics.SwitchSyntax.Condition.Widening(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition)
- uid: Towel.Statics.SwitchSyntax.Condition.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_op_Implicit_
  commentId: Overload:Towel.Statics.SwitchSyntax.Condition.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.SwitchSyntax.Condition.Implicit
  fullName.vb: Towel.Statics.SwitchSyntax.Condition.Widening
  nameWithType: Statics.SwitchSyntax.Condition.Implicit
  nameWithType.vb: Statics.SwitchSyntax.Condition.Widening
- uid: Towel.Statics.SwitchSyntax.Condition.Resolve
  name: Resolve()
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_Resolve
  commentId: M:Towel.Statics.SwitchSyntax.Condition.Resolve
  fullName: Towel.Statics.SwitchSyntax.Condition.Resolve()
  nameWithType: Statics.SwitchSyntax.Condition.Resolve()
- uid: Towel.Statics.SwitchSyntax.Condition.Resolve*
  name: Resolve
  href: api/Towel.Statics.SwitchSyntax.Condition.html#Towel_Statics_SwitchSyntax_Condition_Resolve_
  commentId: Overload:Towel.Statics.SwitchSyntax.Condition.Resolve
  isSpec: "True"
  fullName: Towel.Statics.SwitchSyntax.Condition.Resolve
  nameWithType: Statics.SwitchSyntax.Condition.Resolve
- uid: Towel.Statics.SwitchSyntax.Condition`1
  name: Statics.SwitchSyntax.Condition<T>
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html
  commentId: T:Towel.Statics.SwitchSyntax.Condition`1
  name.vb: Statics.SwitchSyntax.Condition(Of T)
  fullName: Towel.Statics.SwitchSyntax.Condition<T>
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T)
  nameWithType: Statics.SwitchSyntax.Condition<T>
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T)
- uid: Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(`0)~Towel.Statics.SwitchSyntax.Condition{`0}
  name: Implicit(T to Statics.SwitchSyntax.Condition<T>)
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_op_Implicit__0__Towel_Statics_SwitchSyntax_Condition__0_
  commentId: M:Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(`0)~Towel.Statics.SwitchSyntax.Condition{`0}
  name.vb: Widening(T to Statics.SwitchSyntax.Condition(Of T))
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Implicit(T to Towel.Statics.SwitchSyntax.Condition<T>)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Widening(T to Towel.Statics.SwitchSyntax.Condition(Of T))
  nameWithType: Statics.SwitchSyntax.Condition<T>.Implicit(T to Statics.SwitchSyntax.Condition<T>)
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Widening(T to Statics.SwitchSyntax.Condition(Of T))
- uid: Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(System.Boolean)~Towel.Statics.SwitchSyntax.Condition{`0}
  name: Implicit(Boolean to Statics.SwitchSyntax.Condition<T>)
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_op_Implicit_System_Boolean__Towel_Statics_SwitchSyntax_Condition__0_
  commentId: M:Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(System.Boolean)~Towel.Statics.SwitchSyntax.Condition{`0}
  name.vb: Widening(Boolean to Statics.SwitchSyntax.Condition(Of T))
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Implicit(System.Boolean to Towel.Statics.SwitchSyntax.Condition<T>)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Widening(System.Boolean to Towel.Statics.SwitchSyntax.Condition(Of T))
  nameWithType: Statics.SwitchSyntax.Condition<T>.Implicit(Boolean to Statics.SwitchSyntax.Condition<T>)
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Widening(Boolean to Statics.SwitchSyntax.Condition(Of T))
- uid: Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(Towel.Statics.SwitchSyntax.Keyword)~Towel.Statics.SwitchSyntax.Condition{`0}
  name: Implicit(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition<T>)
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_op_Implicit_Towel_Statics_SwitchSyntax_Keyword__Towel_Statics_SwitchSyntax_Condition__0_
  commentId: M:Towel.Statics.SwitchSyntax.Condition`1.op_Implicit(Towel.Statics.SwitchSyntax.Keyword)~Towel.Statics.SwitchSyntax.Condition{`0}
  name.vb: Widening(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition(Of T))
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Implicit(Towel.Statics.SwitchSyntax.Keyword to Towel.Statics.SwitchSyntax.Condition<T>)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Widening(Towel.Statics.SwitchSyntax.Keyword to Towel.Statics.SwitchSyntax.Condition(Of T))
  nameWithType: Statics.SwitchSyntax.Condition<T>.Implicit(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition<T>)
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Widening(Statics.SwitchSyntax.Keyword to Statics.SwitchSyntax.Condition(Of T))
- uid: Towel.Statics.SwitchSyntax.Condition`1.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_op_Implicit_
  commentId: Overload:Towel.Statics.SwitchSyntax.Condition`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Implicit
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Widening
  nameWithType: Statics.SwitchSyntax.Condition<T>.Implicit
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Widening
- uid: Towel.Statics.SwitchSyntax.Condition`1.Resolve(`0)
  name: Resolve(T)
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_Resolve__0_
  commentId: M:Towel.Statics.SwitchSyntax.Condition`1.Resolve(`0)
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Resolve(T)
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Resolve(T)
  nameWithType: Statics.SwitchSyntax.Condition<T>.Resolve(T)
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Resolve(T)
- uid: Towel.Statics.SwitchSyntax.Condition`1.Resolve*
  name: Resolve
  href: api/Towel.Statics.SwitchSyntax.Condition-1.html#Towel_Statics_SwitchSyntax_Condition_1_Resolve_
  commentId: Overload:Towel.Statics.SwitchSyntax.Condition`1.Resolve
  isSpec: "True"
  fullName: Towel.Statics.SwitchSyntax.Condition<T>.Resolve
  fullName.vb: Towel.Statics.SwitchSyntax.Condition(Of T).Resolve
  nameWithType: Statics.SwitchSyntax.Condition<T>.Resolve
  nameWithType.vb: Statics.SwitchSyntax.Condition(Of T).Resolve
- uid: Towel.Statics.SwitchSyntax.Keyword
  name: Statics.SwitchSyntax.Keyword
  href: api/Towel.Statics.SwitchSyntax.Keyword.html
  commentId: T:Towel.Statics.SwitchSyntax.Keyword
  fullName: Towel.Statics.SwitchSyntax.Keyword
  nameWithType: Statics.SwitchSyntax.Keyword
- uid: Towel.Statics.SwitchSyntax.Keyword.Default
  name: Default
  href: api/Towel.Statics.SwitchSyntax.Keyword.html#Towel_Statics_SwitchSyntax_Keyword_Default
  commentId: F:Towel.Statics.SwitchSyntax.Keyword.Default
  fullName: Towel.Statics.SwitchSyntax.Keyword.Default
  nameWithType: Statics.SwitchSyntax.Keyword.Default
- uid: Towel.Statics.SwitchSyntax.ParamsAction`2
  name: Statics.SwitchSyntax.ParamsAction<A, B>
  href: api/Towel.Statics.SwitchSyntax.ParamsAction-2.html
  commentId: T:Towel.Statics.SwitchSyntax.ParamsAction`2
  name.vb: Statics.SwitchSyntax.ParamsAction(Of A, B)
  fullName: Towel.Statics.SwitchSyntax.ParamsAction<A, B>
  fullName.vb: Towel.Statics.SwitchSyntax.ParamsAction(Of A, B)
  nameWithType: Statics.SwitchSyntax.ParamsAction<A, B>
  nameWithType.vb: Statics.SwitchSyntax.ParamsAction(Of A, B)
- uid: Towel.Statics.TangentQuadratic*
  name: TangentQuadratic
  href: api/Towel.Statics.html#Towel_Statics_TangentQuadratic_
  commentId: Overload:Towel.Statics.TangentQuadratic
  isSpec: "True"
  fullName: Towel.Statics.TangentQuadratic
  nameWithType: Statics.TangentQuadratic
- uid: Towel.Statics.TangentQuadratic``1(Towel.Measurements.Angle{``0})
  name: TangentQuadratic<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_TangentQuadratic__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.TangentQuadratic``1(Towel.Measurements.Angle{``0})
  name.vb: TangentQuadratic(Of T)(Angle(Of T))
  fullName: Towel.Statics.TangentQuadratic<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.TangentQuadratic(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.TangentQuadratic<T>(Angle<T>)
  nameWithType.vb: Statics.TangentQuadratic(Of T)(Angle(Of T))
- uid: Towel.Statics.TangentSystem*
  name: TangentSystem
  href: api/Towel.Statics.html#Towel_Statics_TangentSystem_
  commentId: Overload:Towel.Statics.TangentSystem
  isSpec: "True"
  fullName: Towel.Statics.TangentSystem
  nameWithType: Statics.TangentSystem
- uid: Towel.Statics.TangentSystem``1(Towel.Measurements.Angle{``0})
  name: TangentSystem<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_TangentSystem__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.TangentSystem``1(Towel.Measurements.Angle{``0})
  name.vb: TangentSystem(Of T)(Angle(Of T))
  fullName: Towel.Statics.TangentSystem<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.TangentSystem(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.TangentSystem<T>(Angle<T>)
  nameWithType.vb: Statics.TangentSystem(Of T)(Angle(Of T))
- uid: Towel.Statics.TangentTaylorSeries*
  name: TangentTaylorSeries
  href: api/Towel.Statics.html#Towel_Statics_TangentTaylorSeries_
  commentId: Overload:Towel.Statics.TangentTaylorSeries
  isSpec: "True"
  fullName: Towel.Statics.TangentTaylorSeries
  nameWithType: Statics.TangentTaylorSeries
- uid: Towel.Statics.TangentTaylorSeries``1(Towel.Measurements.Angle{``0})
  name: TangentTaylorSeries<T>(Angle<T>)
  href: api/Towel.Statics.html#Towel_Statics_TangentTaylorSeries__1_Towel_Measurements_Angle___0__
  commentId: M:Towel.Statics.TangentTaylorSeries``1(Towel.Measurements.Angle{``0})
  name.vb: TangentTaylorSeries(Of T)(Angle(Of T))
  fullName: Towel.Statics.TangentTaylorSeries<T>(Towel.Measurements.Angle<T>)
  fullName.vb: Towel.Statics.TangentTaylorSeries(Of T)(Towel.Measurements.Angle(Of T))
  nameWithType: Statics.TangentTaylorSeries<T>(Angle<T>)
  nameWithType.vb: Statics.TangentTaylorSeries(Of T)(Angle(Of T))
- uid: Towel.Statics.TryParse*
  name: TryParse
  href: api/Towel.Statics.html#Towel_Statics_TryParse_
  commentId: Overload:Towel.Statics.TryParse
  isSpec: "True"
  fullName: Towel.Statics.TryParse
  nameWithType: Statics.TryParse
- uid: Towel.Statics.TryParse``1(System.String)
  name: TryParse<A>(String)
  href: api/Towel.Statics.html#Towel_Statics_TryParse__1_System_String_
  commentId: M:Towel.Statics.TryParse``1(System.String)
  name.vb: TryParse(Of A)(String)
  fullName: Towel.Statics.TryParse<A>(System.String)
  fullName.vb: Towel.Statics.TryParse(Of A)(System.String)
  nameWithType: Statics.TryParse<A>(String)
  nameWithType.vb: Statics.TryParse(Of A)(String)
- uid: Towel.Statics.TryParseRomanNumeral(System.String)
  name: TryParseRomanNumeral(String)
  href: api/Towel.Statics.html#Towel_Statics_TryParseRomanNumeral_System_String_
  commentId: M:Towel.Statics.TryParseRomanNumeral(System.String)
  fullName: Towel.Statics.TryParseRomanNumeral(System.String)
  nameWithType: Statics.TryParseRomanNumeral(String)
- uid: Towel.Statics.TryParseRomanNumeral*
  name: TryParseRomanNumeral
  href: api/Towel.Statics.html#Towel_Statics_TryParseRomanNumeral_
  commentId: Overload:Towel.Statics.TryParseRomanNumeral
  isSpec: "True"
  fullName: Towel.Statics.TryParseRomanNumeral
  nameWithType: Statics.TryParseRomanNumeral
- uid: Towel.Statics.UniversalQuantification`1
  name: Statics.UniversalQuantification<T>
  href: api/Towel.Statics.UniversalQuantification-1.html
  commentId: T:Towel.Statics.UniversalQuantification`1
  name.vb: Statics.UniversalQuantification(Of T)
  fullName: Towel.Statics.UniversalQuantification<T>
  fullName.vb: Towel.Statics.UniversalQuantification(Of T)
  nameWithType: Statics.UniversalQuantification<T>
  nameWithType.vb: Statics.UniversalQuantification(Of T)
- uid: Towel.Statics.UniversalQuantification`1.Add(`0)
  name: Add(T)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Add__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.Add(`0)
  fullName: Towel.Statics.UniversalQuantification<T>.Add(T)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Add(T)
  nameWithType: Statics.UniversalQuantification<T>.Add(T)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Add(T)
- uid: Towel.Statics.UniversalQuantification`1.Add*
  name: Add
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Add_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Add
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Add
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Add
  nameWithType: Statics.UniversalQuantification<T>.Add
  nameWithType.vb: Statics.UniversalQuantification(Of T).Add
- uid: Towel.Statics.UniversalQuantification`1.Clear
  name: Clear()
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Clear
  commentId: M:Towel.Statics.UniversalQuantification`1.Clear
  fullName: Towel.Statics.UniversalQuantification<T>.Clear()
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Clear()
  nameWithType: Statics.UniversalQuantification<T>.Clear()
  nameWithType.vb: Statics.UniversalQuantification(Of T).Clear()
- uid: Towel.Statics.UniversalQuantification`1.Clear*
  name: Clear
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Clear_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Clear
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Clear
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Clear
  nameWithType: Statics.UniversalQuantification<T>.Clear
  nameWithType.vb: Statics.UniversalQuantification(Of T).Clear
- uid: Towel.Statics.UniversalQuantification`1.Contains(`0)
  name: Contains(T)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Contains__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.Contains(`0)
  fullName: Towel.Statics.UniversalQuantification<T>.Contains(T)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Contains(T)
  nameWithType: Statics.UniversalQuantification<T>.Contains(T)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Contains(T)
- uid: Towel.Statics.UniversalQuantification`1.Contains*
  name: Contains
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Contains_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Contains
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Contains
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Contains
  nameWithType: Statics.UniversalQuantification<T>.Contains
  nameWithType.vb: Statics.UniversalQuantification(Of T).Contains
- uid: Towel.Statics.UniversalQuantification`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_CopyTo__0___System_Int32_
  commentId: M:Towel.Statics.UniversalQuantification`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: Towel.Statics.UniversalQuantification<T>.CopyTo(T[], System.Int32)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).CopyTo(T(), System.Int32)
  nameWithType: Statics.UniversalQuantification<T>.CopyTo(T[], Int32)
  nameWithType.vb: Statics.UniversalQuantification(Of T).CopyTo(T(), Int32)
- uid: Towel.Statics.UniversalQuantification`1.CopyTo*
  name: CopyTo
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_CopyTo_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.CopyTo
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.CopyTo
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).CopyTo
  nameWithType: Statics.UniversalQuantification<T>.CopyTo
  nameWithType.vb: Statics.UniversalQuantification(Of T).CopyTo
- uid: Towel.Statics.UniversalQuantification`1.Count
  name: Count
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Count
  commentId: P:Towel.Statics.UniversalQuantification`1.Count
  fullName: Towel.Statics.UniversalQuantification<T>.Count
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Count
  nameWithType: Statics.UniversalQuantification<T>.Count
  nameWithType.vb: Statics.UniversalQuantification(Of T).Count
- uid: Towel.Statics.UniversalQuantification`1.Count*
  name: Count
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Count_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Count
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Count
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Count
  nameWithType: Statics.UniversalQuantification<T>.Count
  nameWithType.vb: Statics.UniversalQuantification(Of T).Count
- uid: Towel.Statics.UniversalQuantification`1.GetEnumerator
  name: GetEnumerator()
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_GetEnumerator
  commentId: M:Towel.Statics.UniversalQuantification`1.GetEnumerator
  fullName: Towel.Statics.UniversalQuantification<T>.GetEnumerator()
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).GetEnumerator()
  nameWithType: Statics.UniversalQuantification<T>.GetEnumerator()
  nameWithType.vb: Statics.UniversalQuantification(Of T).GetEnumerator()
- uid: Towel.Statics.UniversalQuantification`1.GetEnumerator*
  name: GetEnumerator
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_GetEnumerator_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.GetEnumerator
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.GetEnumerator
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).GetEnumerator
  nameWithType: Statics.UniversalQuantification<T>.GetEnumerator
  nameWithType.vb: Statics.UniversalQuantification(Of T).GetEnumerator
- uid: Towel.Statics.UniversalQuantification`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_IndexOf__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.IndexOf(`0)
  fullName: Towel.Statics.UniversalQuantification<T>.IndexOf(T)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).IndexOf(T)
  nameWithType: Statics.UniversalQuantification<T>.IndexOf(T)
  nameWithType.vb: Statics.UniversalQuantification(Of T).IndexOf(T)
- uid: Towel.Statics.UniversalQuantification`1.IndexOf*
  name: IndexOf
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_IndexOf_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.IndexOf
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.IndexOf
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).IndexOf
  nameWithType: Statics.UniversalQuantification<T>.IndexOf
  nameWithType.vb: Statics.UniversalQuantification(Of T).IndexOf
- uid: Towel.Statics.UniversalQuantification`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Insert_System_Int32__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.Insert(System.Int32,`0)
  fullName: Towel.Statics.UniversalQuantification<T>.Insert(System.Int32, T)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Insert(System.Int32, T)
  nameWithType: Statics.UniversalQuantification<T>.Insert(Int32, T)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Insert(Int32, T)
- uid: Towel.Statics.UniversalQuantification`1.Insert*
  name: Insert
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Insert_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Insert
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Insert
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Insert
  nameWithType: Statics.UniversalQuantification<T>.Insert
  nameWithType.vb: Statics.UniversalQuantification(Of T).Insert
- uid: Towel.Statics.UniversalQuantification`1.IsReadOnly
  name: IsReadOnly
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_IsReadOnly
  commentId: P:Towel.Statics.UniversalQuantification`1.IsReadOnly
  fullName: Towel.Statics.UniversalQuantification<T>.IsReadOnly
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).IsReadOnly
  nameWithType: Statics.UniversalQuantification<T>.IsReadOnly
  nameWithType.vb: Statics.UniversalQuantification(Of T).IsReadOnly
- uid: Towel.Statics.UniversalQuantification`1.IsReadOnly*
  name: IsReadOnly
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_IsReadOnly_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.IsReadOnly
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.IsReadOnly
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).IsReadOnly
  nameWithType: Statics.UniversalQuantification<T>.IsReadOnly
  nameWithType.vb: Statics.UniversalQuantification(Of T).IsReadOnly
- uid: Towel.Statics.UniversalQuantification`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Item_System_Int32_
  commentId: P:Towel.Statics.UniversalQuantification`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Towel.Statics.UniversalQuantification<T>.Item[System.Int32]
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Item(System.Int32)
  nameWithType: Statics.UniversalQuantification<T>.Item[Int32]
  nameWithType.vb: Statics.UniversalQuantification(Of T).Item(Int32)
- uid: Towel.Statics.UniversalQuantification`1.Item*
  name: Item
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Item_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Item
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Item
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Item
  nameWithType: Statics.UniversalQuantification<T>.Item
  nameWithType.vb: Statics.UniversalQuantification(Of T).Item
- uid: Towel.Statics.UniversalQuantification`1.Length
  name: Length
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Length
  commentId: P:Towel.Statics.UniversalQuantification`1.Length
  fullName: Towel.Statics.UniversalQuantification<T>.Length
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Length
  nameWithType: Statics.UniversalQuantification<T>.Length
  nameWithType.vb: Statics.UniversalQuantification(Of T).Length
- uid: Towel.Statics.UniversalQuantification`1.Length*
  name: Length
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Length_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Length
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Length
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Length
  nameWithType: Statics.UniversalQuantification<T>.Length
  nameWithType.vb: Statics.UniversalQuantification(Of T).Length
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~`0[]
  name: Implicit(Statics.UniversalQuantification<T> to T[])
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0____0__
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~`0[]
  name.vb: Widening(Statics.UniversalQuantification(Of T) to T())
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to T[])
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to T())
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to T[])
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to T())
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Action{Action{`0}}
  name: Implicit(Statics.UniversalQuantification<T> to Action<Action<T>>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Action_Action__0__
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Action{Action{`0}}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to Action(Of Action(Of T)))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Action<Action<T>>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Action(Of Action(Of T)))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to Action<Action<T>>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to Action(Of Action(Of T)))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Func{Func{`0,Towel.StepStatus},Towel.StepStatus}
  name: Implicit(Statics.UniversalQuantification<T> to Func<Func<T, StepStatus>, StepStatus>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Func_Func__0_Towel_StepStatus__Towel_StepStatus_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Func{Func{`0,Towel.StepStatus},Towel.StepStatus}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to Func(Of Func(Of T, StepStatus), StepStatus))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Func<Func<T, Towel.StepStatus>, Towel.StepStatus>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Func(Of Func(Of T, Towel.StepStatus), Towel.StepStatus))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to Func<Func<T, StepStatus>, StepStatus>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to Func(Of Func(Of T, StepStatus), StepStatus))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Memory{`0}
  name: Implicit(Statics.UniversalQuantification<T> to Memory<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Memory__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Memory{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to Memory(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Memory<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Memory(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to Memory<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to Memory(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~ReadOnlyMemory{`0}
  name: Implicit(Statics.UniversalQuantification<T> to ReadOnlyMemory<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___ReadOnlyMemory__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~ReadOnlyMemory{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to ReadOnlyMemory(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to ReadOnlyMemory<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to ReadOnlyMemory(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to ReadOnlyMemory<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to ReadOnlyMemory(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~ReadOnlySpan{`0}
  name: Implicit(Statics.UniversalQuantification<T> to ReadOnlySpan<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___ReadOnlySpan__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~ReadOnlySpan{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to ReadOnlySpan(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to ReadOnlySpan<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to ReadOnlySpan(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to ReadOnlySpan<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to ReadOnlySpan(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Span{`0}
  name: Implicit(Statics.UniversalQuantification<T> to Span<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Span__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Span{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to Span(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Span<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Span(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to Span<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to Span(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.HashSet{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.HashSet<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_HashSet__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.HashSet{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.HashSet(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.HashSet<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.HashSet(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.HashSet<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.HashSet(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.LinkedList{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.LinkedList<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_LinkedList__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.LinkedList{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.LinkedList(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.LinkedList<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.LinkedList(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.LinkedList<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.LinkedList(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.List{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.List<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_List__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.List{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.List(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.List<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.List(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.List<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.List(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.Queue{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.Queue<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_Queue__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.Queue{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.Queue(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.Queue<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.Queue(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.Queue<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.Queue(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.SortedSet{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.SortedSet<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_SortedSet__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.SortedSet{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.SortedSet(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.SortedSet<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.SortedSet(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.SortedSet<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.SortedSet(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.Stack{`0}
  name: Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.Stack<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___System_Collections_Generic_Stack__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~System.Collections.Generic.Stack{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.Stack(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to System.Collections.Generic.Stack<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to System.Collections.Generic.Stack(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to System.Collections.Generic.Stack<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to System.Collections.Generic.Stack(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.Array{`0}
  name: Implicit(Statics.UniversalQuantification<T> to Array<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Towel_DataStructures_Array__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.Array{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to Array(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Towel.DataStructures.Array<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Towel.DataStructures.Array(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to Array<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to Array(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.ListArray{`0}
  name: Implicit(Statics.UniversalQuantification<T> to ListArray<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Towel_DataStructures_ListArray__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.ListArray{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to ListArray(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Towel.DataStructures.ListArray<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Towel.DataStructures.ListArray(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to ListArray<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to ListArray(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.StackArray{`0}
  name: Implicit(Statics.UniversalQuantification<T> to StackArray<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Towel_DataStructures_StackArray__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.DataStructures.StackArray{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to StackArray(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Towel.DataStructures.StackArray<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Towel.DataStructures.StackArray(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to StackArray<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to StackArray(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.StepperRef{`0}
  name: Implicit(Statics.UniversalQuantification<T> to StepperRef<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Towel_StepperRef__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.StepperRef{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to StepperRef(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Towel.StepperRef<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Towel.StepperRef(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to StepperRef<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to StepperRef(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.StepperRefBreak{`0}
  name: Implicit(Statics.UniversalQuantification<T> to StepperRefBreak<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_Towel_Statics_UniversalQuantification__0___Towel_StepperRefBreak__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.op_Implicit(Towel.Statics.UniversalQuantification{`0})~Towel.StepperRefBreak{`0}
  name.vb: Widening(Statics.UniversalQuantification(Of T) to StepperRefBreak(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit(Towel.Statics.UniversalQuantification<T> to Towel.StepperRefBreak<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening(Towel.Statics.UniversalQuantification(Of T) to Towel.StepperRefBreak(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Implicit(Statics.UniversalQuantification<T> to StepperRefBreak<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening(Statics.UniversalQuantification(Of T) to StepperRefBreak(Of T))
- uid: Towel.Statics.UniversalQuantification`1.op_Implicit*
  name: Implicit
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_op_Implicit_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.Statics.UniversalQuantification<T>.Implicit
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Widening
  nameWithType: Statics.UniversalQuantification<T>.Implicit
  nameWithType.vb: Statics.UniversalQuantification(Of T).Widening
- uid: Towel.Statics.UniversalQuantification`1.Remove(`0)
  name: Remove(T)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Remove__0_
  commentId: M:Towel.Statics.UniversalQuantification`1.Remove(`0)
  fullName: Towel.Statics.UniversalQuantification<T>.Remove(T)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Remove(T)
  nameWithType: Statics.UniversalQuantification<T>.Remove(T)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Remove(T)
- uid: Towel.Statics.UniversalQuantification`1.Remove*
  name: Remove
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Remove_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Remove
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Remove
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Remove
  nameWithType: Statics.UniversalQuantification<T>.Remove
  nameWithType.vb: Statics.UniversalQuantification(Of T).Remove
- uid: Towel.Statics.UniversalQuantification`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_RemoveAt_System_Int32_
  commentId: M:Towel.Statics.UniversalQuantification`1.RemoveAt(System.Int32)
  fullName: Towel.Statics.UniversalQuantification<T>.RemoveAt(System.Int32)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).RemoveAt(System.Int32)
  nameWithType: Statics.UniversalQuantification<T>.RemoveAt(Int32)
  nameWithType.vb: Statics.UniversalQuantification(Of T).RemoveAt(Int32)
- uid: Towel.Statics.UniversalQuantification`1.RemoveAt*
  name: RemoveAt
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_RemoveAt_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.RemoveAt
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.RemoveAt
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).RemoveAt
  nameWithType: Statics.UniversalQuantification<T>.RemoveAt
  nameWithType.vb: Statics.UniversalQuantification(Of T).RemoveAt
- uid: Towel.Statics.UniversalQuantification`1.Stepper(Action{`0})
  name: Stepper(Action<T>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Stepper_Action__0__
  commentId: M:Towel.Statics.UniversalQuantification`1.Stepper(Action{`0})
  name.vb: Stepper(Action(Of T))
  fullName: Towel.Statics.UniversalQuantification<T>.Stepper(Action<T>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Stepper(Action(Of T))
  nameWithType: Statics.UniversalQuantification<T>.Stepper(Action<T>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Stepper(Action(Of T))
- uid: Towel.Statics.UniversalQuantification`1.Stepper(Func{`0,Towel.StepStatus})
  name: Stepper(Func<T, StepStatus>)
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Stepper_Func__0_Towel_StepStatus__
  commentId: M:Towel.Statics.UniversalQuantification`1.Stepper(Func{`0,Towel.StepStatus})
  name.vb: Stepper(Func(Of T, StepStatus))
  fullName: Towel.Statics.UniversalQuantification<T>.Stepper(Func<T, Towel.StepStatus>)
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Stepper(Func(Of T, Towel.StepStatus))
  nameWithType: Statics.UniversalQuantification<T>.Stepper(Func<T, StepStatus>)
  nameWithType.vb: Statics.UniversalQuantification(Of T).Stepper(Func(Of T, StepStatus))
- uid: Towel.Statics.UniversalQuantification`1.Stepper*
  name: Stepper
  href: api/Towel.Statics.UniversalQuantification-1.html#Towel_Statics_UniversalQuantification_1_Stepper_
  commentId: Overload:Towel.Statics.UniversalQuantification`1.Stepper
  isSpec: "True"
  fullName: Towel.Statics.UniversalQuantification<T>.Stepper
  fullName.vb: Towel.Statics.UniversalQuantification(Of T).Stepper
  nameWithType: Statics.UniversalQuantification<T>.Stepper
  nameWithType.vb: Statics.UniversalQuantification(Of T).Stepper
- uid: Towel.Statics.Variance*
  name: Variance
  href: api/Towel.Statics.html#Towel_Statics_Variance_
  commentId: Overload:Towel.Statics.Variance
  isSpec: "True"
  fullName: Towel.Statics.Variance
  nameWithType: Statics.Variance
- uid: Towel.Statics.Variance``1(Action{Action{``0}})
  name: Variance<T>(Action<Action<T>>)
  href: api/Towel.Statics.html#Towel_Statics_Variance__1_Action_Action___0___
  commentId: M:Towel.Statics.Variance``1(Action{Action{``0}})
  name.vb: Variance(Of T)(Action(Of Action(Of T)))
  fullName: Towel.Statics.Variance<T>(Action<Action<T>>)
  fullName.vb: Towel.Statics.Variance(Of T)(Action(Of Action(Of T)))
  nameWithType: Statics.Variance<T>(Action<Action<T>>)
  nameWithType.vb: Statics.Variance(Of T)(Action(Of Action(Of T)))
- uid: Towel.StepBreakFromAction`2
  name: StepBreakFromAction<T, Step>
  href: api/Towel.StepBreakFromAction-2.html
  commentId: T:Towel.StepBreakFromAction`2
  name.vb: StepBreakFromAction(Of T, Step)
  fullName: Towel.StepBreakFromAction<T, Step>
  fullName.vb: Towel.StepBreakFromAction(Of T, Step)
  nameWithType: StepBreakFromAction<T, Step>
  nameWithType.vb: StepBreakFromAction(Of T, Step)
- uid: Towel.StepBreakFromAction`2.Do(`0)
  name: Do(T)
  href: api/Towel.StepBreakFromAction-2.html#Towel_StepBreakFromAction_2_Do__0_
  commentId: M:Towel.StepBreakFromAction`2.Do(`0)
  fullName: Towel.StepBreakFromAction<T, Step>.Do(T)
  fullName.vb: Towel.StepBreakFromAction(Of T, Step).Do(T)
  nameWithType: StepBreakFromAction<T, Step>.Do(T)
  nameWithType.vb: StepBreakFromAction(Of T, Step).Do(T)
- uid: Towel.StepBreakFromAction`2.Do*
  name: Do
  href: api/Towel.StepBreakFromAction-2.html#Towel_StepBreakFromAction_2_Do_
  commentId: Overload:Towel.StepBreakFromAction`2.Do
  isSpec: "True"
  fullName: Towel.StepBreakFromAction<T, Step>.Do
  fullName.vb: Towel.StepBreakFromAction(Of T, Step).Do
  nameWithType: StepBreakFromAction<T, Step>.Do
  nameWithType.vb: StepBreakFromAction(Of T, Step).Do
- uid: Towel.StepBreakFromAction`2.op_Implicit(`1)~Towel.StepBreakFromAction{`0,`1}
  name: Implicit(Step to StepBreakFromAction<T, Step>)
  href: api/Towel.StepBreakFromAction-2.html#Towel_StepBreakFromAction_2_op_Implicit__1__Towel_StepBreakFromAction__0__1_
  commentId: M:Towel.StepBreakFromAction`2.op_Implicit(`1)~Towel.StepBreakFromAction{`0,`1}
  name.vb: Widening(Step to StepBreakFromAction(Of T, Step))
  fullName: Towel.StepBreakFromAction<T, Step>.Implicit(Step to Towel.StepBreakFromAction<T, Step>)
  fullName.vb: Towel.StepBreakFromAction(Of T, Step).Widening(Step to Towel.StepBreakFromAction(Of T, Step))
  nameWithType: StepBreakFromAction<T, Step>.Implicit(Step to StepBreakFromAction<T, Step>)
  nameWithType.vb: StepBreakFromAction(Of T, Step).Widening(Step to StepBreakFromAction(Of T, Step))
- uid: Towel.StepBreakFromAction`2.op_Implicit*
  name: Implicit
  href: api/Towel.StepBreakFromAction-2.html#Towel_StepBreakFromAction_2_op_Implicit_
  commentId: Overload:Towel.StepBreakFromAction`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepBreakFromAction<T, Step>.Implicit
  fullName.vb: Towel.StepBreakFromAction(Of T, Step).Widening
  nameWithType: StepBreakFromAction<T, Step>.Implicit
  nameWithType.vb: StepBreakFromAction(Of T, Step).Widening
- uid: Towel.StepBreakRuntime`1
  name: StepBreakRuntime<T>
  href: api/Towel.StepBreakRuntime-1.html
  commentId: T:Towel.StepBreakRuntime`1
  name.vb: StepBreakRuntime(Of T)
  fullName: Towel.StepBreakRuntime<T>
  fullName.vb: Towel.StepBreakRuntime(Of T)
  nameWithType: StepBreakRuntime<T>
  nameWithType.vb: StepBreakRuntime(Of T)
- uid: Towel.StepBreakRuntime`1.Do(`0)
  name: Do(T)
  href: api/Towel.StepBreakRuntime-1.html#Towel_StepBreakRuntime_1_Do__0_
  commentId: M:Towel.StepBreakRuntime`1.Do(`0)
  fullName: Towel.StepBreakRuntime<T>.Do(T)
  fullName.vb: Towel.StepBreakRuntime(Of T).Do(T)
  nameWithType: StepBreakRuntime<T>.Do(T)
  nameWithType.vb: StepBreakRuntime(Of T).Do(T)
- uid: Towel.StepBreakRuntime`1.Do*
  name: Do
  href: api/Towel.StepBreakRuntime-1.html#Towel_StepBreakRuntime_1_Do_
  commentId: Overload:Towel.StepBreakRuntime`1.Do
  isSpec: "True"
  fullName: Towel.StepBreakRuntime<T>.Do
  fullName.vb: Towel.StepBreakRuntime(Of T).Do
  nameWithType: StepBreakRuntime<T>.Do
  nameWithType.vb: StepBreakRuntime(Of T).Do
- uid: Towel.StepBreakRuntime`1.op_Implicit(Func{`0,Towel.StepStatus})~Towel.StepBreakRuntime{`0}
  name: Implicit(Func<T, StepStatus> to StepBreakRuntime<T>)
  href: api/Towel.StepBreakRuntime-1.html#Towel_StepBreakRuntime_1_op_Implicit_Func__0_Towel_StepStatus___Towel_StepBreakRuntime__0_
  commentId: M:Towel.StepBreakRuntime`1.op_Implicit(Func{`0,Towel.StepStatus})~Towel.StepBreakRuntime{`0}
  name.vb: Widening(Func(Of T, StepStatus) to StepBreakRuntime(Of T))
  fullName: Towel.StepBreakRuntime<T>.Implicit(Func<T, Towel.StepStatus> to Towel.StepBreakRuntime<T>)
  fullName.vb: Towel.StepBreakRuntime(Of T).Widening(Func(Of T, Towel.StepStatus) to Towel.StepBreakRuntime(Of T))
  nameWithType: StepBreakRuntime<T>.Implicit(Func<T, StepStatus> to StepBreakRuntime<T>)
  nameWithType.vb: StepBreakRuntime(Of T).Widening(Func(Of T, StepStatus) to StepBreakRuntime(Of T))
- uid: Towel.StepBreakRuntime`1.op_Implicit*
  name: Implicit
  href: api/Towel.StepBreakRuntime-1.html#Towel_StepBreakRuntime_1_op_Implicit_
  commentId: Overload:Towel.StepBreakRuntime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepBreakRuntime<T>.Implicit
  fullName.vb: Towel.StepBreakRuntime(Of T).Widening
  nameWithType: StepBreakRuntime<T>.Implicit
  nameWithType.vb: StepBreakRuntime(Of T).Widening
- uid: Towel.StepFromStepRef`2
  name: StepFromStepRef<T, StepRef>
  href: api/Towel.StepFromStepRef-2.html
  commentId: T:Towel.StepFromStepRef`2
  name.vb: StepFromStepRef(Of T, StepRef)
  fullName: Towel.StepFromStepRef<T, StepRef>
  fullName.vb: Towel.StepFromStepRef(Of T, StepRef)
  nameWithType: StepFromStepRef<T, StepRef>
  nameWithType.vb: StepFromStepRef(Of T, StepRef)
- uid: Towel.StepFromStepRef`2.Do(`0)
  name: Do(T)
  href: api/Towel.StepFromStepRef-2.html#Towel_StepFromStepRef_2_Do__0_
  commentId: M:Towel.StepFromStepRef`2.Do(`0)
  fullName: Towel.StepFromStepRef<T, StepRef>.Do(T)
  fullName.vb: Towel.StepFromStepRef(Of T, StepRef).Do(T)
  nameWithType: StepFromStepRef<T, StepRef>.Do(T)
  nameWithType.vb: StepFromStepRef(Of T, StepRef).Do(T)
- uid: Towel.StepFromStepRef`2.Do*
  name: Do
  href: api/Towel.StepFromStepRef-2.html#Towel_StepFromStepRef_2_Do_
  commentId: Overload:Towel.StepFromStepRef`2.Do
  isSpec: "True"
  fullName: Towel.StepFromStepRef<T, StepRef>.Do
  fullName.vb: Towel.StepFromStepRef(Of T, StepRef).Do
  nameWithType: StepFromStepRef<T, StepRef>.Do
  nameWithType.vb: StepFromStepRef(Of T, StepRef).Do
- uid: Towel.StepFromStepRef`2.op_Implicit(`1)~Towel.StepFromStepRef{`0,`1}
  name: Implicit(StepRef to StepFromStepRef<T, StepRef>)
  href: api/Towel.StepFromStepRef-2.html#Towel_StepFromStepRef_2_op_Implicit__1__Towel_StepFromStepRef__0__1_
  commentId: M:Towel.StepFromStepRef`2.op_Implicit(`1)~Towel.StepFromStepRef{`0,`1}
  name.vb: Widening(StepRef to StepFromStepRef(Of T, StepRef))
  fullName: Towel.StepFromStepRef<T, StepRef>.Implicit(StepRef to Towel.StepFromStepRef<T, StepRef>)
  fullName.vb: Towel.StepFromStepRef(Of T, StepRef).Widening(StepRef to Towel.StepFromStepRef(Of T, StepRef))
  nameWithType: StepFromStepRef<T, StepRef>.Implicit(StepRef to StepFromStepRef<T, StepRef>)
  nameWithType.vb: StepFromStepRef(Of T, StepRef).Widening(StepRef to StepFromStepRef(Of T, StepRef))
- uid: Towel.StepFromStepRef`2.op_Implicit*
  name: Implicit
  href: api/Towel.StepFromStepRef-2.html#Towel_StepFromStepRef_2_op_Implicit_
  commentId: Overload:Towel.StepFromStepRef`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepFromStepRef<T, StepRef>.Implicit
  fullName.vb: Towel.StepFromStepRef(Of T, StepRef).Widening
  nameWithType: StepFromStepRef<T, StepRef>.Implicit
  nameWithType.vb: StepFromStepRef(Of T, StepRef).Widening
- uid: Towel.StepperRef`1
  name: StepperRef<T>
  href: api/Towel.StepperRef-1.html
  commentId: T:Towel.StepperRef`1
  name.vb: StepperRef(Of T)
  fullName: Towel.StepperRef<T>
  fullName.vb: Towel.StepperRef(Of T)
  nameWithType: StepperRef<T>
  nameWithType.vb: StepperRef(Of T)
- uid: Towel.StepperRefBreak`1
  name: StepperRefBreak<T>
  href: api/Towel.StepperRefBreak-1.html
  commentId: T:Towel.StepperRefBreak`1
  name.vb: StepperRefBreak(Of T)
  fullName: Towel.StepperRefBreak<T>
  fullName.vb: Towel.StepperRefBreak(Of T)
  nameWithType: StepperRefBreak<T>
  nameWithType.vb: StepperRefBreak(Of T)
- uid: Towel.StepRef`1
  name: StepRef<T>
  href: api/Towel.StepRef-1.html
  commentId: T:Towel.StepRef`1
  name.vb: StepRef(Of T)
  fullName: Towel.StepRef<T>
  fullName.vb: Towel.StepRef(Of T)
  nameWithType: StepRef<T>
  nameWithType.vb: StepRef(Of T)
- uid: Towel.StepRefBreak`1
  name: StepRefBreak<T>
  href: api/Towel.StepRefBreak-1.html
  commentId: T:Towel.StepRefBreak`1
  name.vb: StepRefBreak(Of T)
  fullName: Towel.StepRefBreak<T>
  fullName.vb: Towel.StepRefBreak(Of T)
  nameWithType: StepRefBreak<T>
  nameWithType.vb: StepRefBreak(Of T)
- uid: Towel.StepRefBreakFromStepBreak`2
  name: StepRefBreakFromStepBreak<T, Step>
  href: api/Towel.StepRefBreakFromStepBreak-2.html
  commentId: T:Towel.StepRefBreakFromStepBreak`2
  name.vb: StepRefBreakFromStepBreak(Of T, Step)
  fullName: Towel.StepRefBreakFromStepBreak<T, Step>
  fullName.vb: Towel.StepRefBreakFromStepBreak(Of T, Step)
  nameWithType: StepRefBreakFromStepBreak<T, Step>
  nameWithType.vb: StepRefBreakFromStepBreak(Of T, Step)
- uid: Towel.StepRefBreakFromStepBreak`2.Do(`0@)
  name: Do(ref T)
  href: api/Towel.StepRefBreakFromStepBreak-2.html#Towel_StepRefBreakFromStepBreak_2_Do__0__
  commentId: M:Towel.StepRefBreakFromStepBreak`2.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.StepRefBreakFromStepBreak<T, Step>.Do(ref T)
  fullName.vb: Towel.StepRefBreakFromStepBreak(Of T, Step).Do(ByRef T)
  nameWithType: StepRefBreakFromStepBreak<T, Step>.Do(ref T)
  nameWithType.vb: StepRefBreakFromStepBreak(Of T, Step).Do(ByRef T)
- uid: Towel.StepRefBreakFromStepBreak`2.Do*
  name: Do
  href: api/Towel.StepRefBreakFromStepBreak-2.html#Towel_StepRefBreakFromStepBreak_2_Do_
  commentId: Overload:Towel.StepRefBreakFromStepBreak`2.Do
  isSpec: "True"
  fullName: Towel.StepRefBreakFromStepBreak<T, Step>.Do
  fullName.vb: Towel.StepRefBreakFromStepBreak(Of T, Step).Do
  nameWithType: StepRefBreakFromStepBreak<T, Step>.Do
  nameWithType.vb: StepRefBreakFromStepBreak(Of T, Step).Do
- uid: Towel.StepRefBreakFromStepBreak`2.op_Implicit(`1)~Towel.StepRefBreakFromStepBreak{`0,`1}
  name: Implicit(Step to StepRefBreakFromStepBreak<T, Step>)
  href: api/Towel.StepRefBreakFromStepBreak-2.html#Towel_StepRefBreakFromStepBreak_2_op_Implicit__1__Towel_StepRefBreakFromStepBreak__0__1_
  commentId: M:Towel.StepRefBreakFromStepBreak`2.op_Implicit(`1)~Towel.StepRefBreakFromStepBreak{`0,`1}
  name.vb: Widening(Step to StepRefBreakFromStepBreak(Of T, Step))
  fullName: Towel.StepRefBreakFromStepBreak<T, Step>.Implicit(Step to Towel.StepRefBreakFromStepBreak<T, Step>)
  fullName.vb: Towel.StepRefBreakFromStepBreak(Of T, Step).Widening(Step to Towel.StepRefBreakFromStepBreak(Of T, Step))
  nameWithType: StepRefBreakFromStepBreak<T, Step>.Implicit(Step to StepRefBreakFromStepBreak<T, Step>)
  nameWithType.vb: StepRefBreakFromStepBreak(Of T, Step).Widening(Step to StepRefBreakFromStepBreak(Of T, Step))
- uid: Towel.StepRefBreakFromStepBreak`2.op_Implicit*
  name: Implicit
  href: api/Towel.StepRefBreakFromStepBreak-2.html#Towel_StepRefBreakFromStepBreak_2_op_Implicit_
  commentId: Overload:Towel.StepRefBreakFromStepBreak`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepRefBreakFromStepBreak<T, Step>.Implicit
  fullName.vb: Towel.StepRefBreakFromStepBreak(Of T, Step).Widening
  nameWithType: StepRefBreakFromStepBreak<T, Step>.Implicit
  nameWithType.vb: StepRefBreakFromStepBreak(Of T, Step).Widening
- uid: Towel.StepRefBreakFromStepRef`2
  name: StepRefBreakFromStepRef<T, Step>
  href: api/Towel.StepRefBreakFromStepRef-2.html
  commentId: T:Towel.StepRefBreakFromStepRef`2
  name.vb: StepRefBreakFromStepRef(Of T, Step)
  fullName: Towel.StepRefBreakFromStepRef<T, Step>
  fullName.vb: Towel.StepRefBreakFromStepRef(Of T, Step)
  nameWithType: StepRefBreakFromStepRef<T, Step>
  nameWithType.vb: StepRefBreakFromStepRef(Of T, Step)
- uid: Towel.StepRefBreakFromStepRef`2.Do(`0@)
  name: Do(ref T)
  href: api/Towel.StepRefBreakFromStepRef-2.html#Towel_StepRefBreakFromStepRef_2_Do__0__
  commentId: M:Towel.StepRefBreakFromStepRef`2.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.StepRefBreakFromStepRef<T, Step>.Do(ref T)
  fullName.vb: Towel.StepRefBreakFromStepRef(Of T, Step).Do(ByRef T)
  nameWithType: StepRefBreakFromStepRef<T, Step>.Do(ref T)
  nameWithType.vb: StepRefBreakFromStepRef(Of T, Step).Do(ByRef T)
- uid: Towel.StepRefBreakFromStepRef`2.Do*
  name: Do
  href: api/Towel.StepRefBreakFromStepRef-2.html#Towel_StepRefBreakFromStepRef_2_Do_
  commentId: Overload:Towel.StepRefBreakFromStepRef`2.Do
  isSpec: "True"
  fullName: Towel.StepRefBreakFromStepRef<T, Step>.Do
  fullName.vb: Towel.StepRefBreakFromStepRef(Of T, Step).Do
  nameWithType: StepRefBreakFromStepRef<T, Step>.Do
  nameWithType.vb: StepRefBreakFromStepRef(Of T, Step).Do
- uid: Towel.StepRefBreakFromStepRef`2.op_Implicit(`1)~Towel.StepRefBreakFromStepRef{`0,`1}
  name: Implicit(Step to StepRefBreakFromStepRef<T, Step>)
  href: api/Towel.StepRefBreakFromStepRef-2.html#Towel_StepRefBreakFromStepRef_2_op_Implicit__1__Towel_StepRefBreakFromStepRef__0__1_
  commentId: M:Towel.StepRefBreakFromStepRef`2.op_Implicit(`1)~Towel.StepRefBreakFromStepRef{`0,`1}
  name.vb: Widening(Step to StepRefBreakFromStepRef(Of T, Step))
  fullName: Towel.StepRefBreakFromStepRef<T, Step>.Implicit(Step to Towel.StepRefBreakFromStepRef<T, Step>)
  fullName.vb: Towel.StepRefBreakFromStepRef(Of T, Step).Widening(Step to Towel.StepRefBreakFromStepRef(Of T, Step))
  nameWithType: StepRefBreakFromStepRef<T, Step>.Implicit(Step to StepRefBreakFromStepRef<T, Step>)
  nameWithType.vb: StepRefBreakFromStepRef(Of T, Step).Widening(Step to StepRefBreakFromStepRef(Of T, Step))
- uid: Towel.StepRefBreakFromStepRef`2.op_Implicit*
  name: Implicit
  href: api/Towel.StepRefBreakFromStepRef-2.html#Towel_StepRefBreakFromStepRef_2_op_Implicit_
  commentId: Overload:Towel.StepRefBreakFromStepRef`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepRefBreakFromStepRef<T, Step>.Implicit
  fullName.vb: Towel.StepRefBreakFromStepRef(Of T, Step).Widening
  nameWithType: StepRefBreakFromStepRef<T, Step>.Implicit
  nameWithType.vb: StepRefBreakFromStepRef(Of T, Step).Widening
- uid: Towel.StepRefBreakRuntime`1
  name: StepRefBreakRuntime<T>
  href: api/Towel.StepRefBreakRuntime-1.html
  commentId: T:Towel.StepRefBreakRuntime`1
  name.vb: StepRefBreakRuntime(Of T)
  fullName: Towel.StepRefBreakRuntime<T>
  fullName.vb: Towel.StepRefBreakRuntime(Of T)
  nameWithType: StepRefBreakRuntime<T>
  nameWithType.vb: StepRefBreakRuntime(Of T)
- uid: Towel.StepRefBreakRuntime`1.Do(`0@)
  name: Do(ref T)
  href: api/Towel.StepRefBreakRuntime-1.html#Towel_StepRefBreakRuntime_1_Do__0__
  commentId: M:Towel.StepRefBreakRuntime`1.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.StepRefBreakRuntime<T>.Do(ref T)
  fullName.vb: Towel.StepRefBreakRuntime(Of T).Do(ByRef T)
  nameWithType: StepRefBreakRuntime<T>.Do(ref T)
  nameWithType.vb: StepRefBreakRuntime(Of T).Do(ByRef T)
- uid: Towel.StepRefBreakRuntime`1.Do*
  name: Do
  href: api/Towel.StepRefBreakRuntime-1.html#Towel_StepRefBreakRuntime_1_Do_
  commentId: Overload:Towel.StepRefBreakRuntime`1.Do
  isSpec: "True"
  fullName: Towel.StepRefBreakRuntime<T>.Do
  fullName.vb: Towel.StepRefBreakRuntime(Of T).Do
  nameWithType: StepRefBreakRuntime<T>.Do
  nameWithType.vb: StepRefBreakRuntime(Of T).Do
- uid: Towel.StepRefBreakRuntime`1.op_Implicit(Towel.StepRefBreak{`0})~Towel.StepRefBreakRuntime{`0}
  name: Implicit(StepRefBreak<T> to StepRefBreakRuntime<T>)
  href: api/Towel.StepRefBreakRuntime-1.html#Towel_StepRefBreakRuntime_1_op_Implicit_Towel_StepRefBreak__0___Towel_StepRefBreakRuntime__0_
  commentId: M:Towel.StepRefBreakRuntime`1.op_Implicit(Towel.StepRefBreak{`0})~Towel.StepRefBreakRuntime{`0}
  name.vb: Widening(StepRefBreak(Of T) to StepRefBreakRuntime(Of T))
  fullName: Towel.StepRefBreakRuntime<T>.Implicit(Towel.StepRefBreak<T> to Towel.StepRefBreakRuntime<T>)
  fullName.vb: Towel.StepRefBreakRuntime(Of T).Widening(Towel.StepRefBreak(Of T) to Towel.StepRefBreakRuntime(Of T))
  nameWithType: StepRefBreakRuntime<T>.Implicit(StepRefBreak<T> to StepRefBreakRuntime<T>)
  nameWithType.vb: StepRefBreakRuntime(Of T).Widening(StepRefBreak(Of T) to StepRefBreakRuntime(Of T))
- uid: Towel.StepRefBreakRuntime`1.op_Implicit*
  name: Implicit
  href: api/Towel.StepRefBreakRuntime-1.html#Towel_StepRefBreakRuntime_1_op_Implicit_
  commentId: Overload:Towel.StepRefBreakRuntime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepRefBreakRuntime<T>.Implicit
  fullName.vb: Towel.StepRefBreakRuntime(Of T).Widening
  nameWithType: StepRefBreakRuntime<T>.Implicit
  nameWithType.vb: StepRefBreakRuntime(Of T).Widening
- uid: Towel.StepRefRuntime`1
  name: StepRefRuntime<T>
  href: api/Towel.StepRefRuntime-1.html
  commentId: T:Towel.StepRefRuntime`1
  name.vb: StepRefRuntime(Of T)
  fullName: Towel.StepRefRuntime<T>
  fullName.vb: Towel.StepRefRuntime(Of T)
  nameWithType: StepRefRuntime<T>
  nameWithType.vb: StepRefRuntime(Of T)
- uid: Towel.StepRefRuntime`1.Do(`0@)
  name: Do(ref T)
  href: api/Towel.StepRefRuntime-1.html#Towel_StepRefRuntime_1_Do__0__
  commentId: M:Towel.StepRefRuntime`1.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.StepRefRuntime<T>.Do(ref T)
  fullName.vb: Towel.StepRefRuntime(Of T).Do(ByRef T)
  nameWithType: StepRefRuntime<T>.Do(ref T)
  nameWithType.vb: StepRefRuntime(Of T).Do(ByRef T)
- uid: Towel.StepRefRuntime`1.Do*
  name: Do
  href: api/Towel.StepRefRuntime-1.html#Towel_StepRefRuntime_1_Do_
  commentId: Overload:Towel.StepRefRuntime`1.Do
  isSpec: "True"
  fullName: Towel.StepRefRuntime<T>.Do
  fullName.vb: Towel.StepRefRuntime(Of T).Do
  nameWithType: StepRefRuntime<T>.Do
  nameWithType.vb: StepRefRuntime(Of T).Do
- uid: Towel.StepRefRuntime`1.op_Implicit(Towel.StepRef{`0})~Towel.StepRefRuntime{`0}
  name: Implicit(StepRef<T> to StepRefRuntime<T>)
  href: api/Towel.StepRefRuntime-1.html#Towel_StepRefRuntime_1_op_Implicit_Towel_StepRef__0___Towel_StepRefRuntime__0_
  commentId: M:Towel.StepRefRuntime`1.op_Implicit(Towel.StepRef{`0})~Towel.StepRefRuntime{`0}
  name.vb: Widening(StepRef(Of T) to StepRefRuntime(Of T))
  fullName: Towel.StepRefRuntime<T>.Implicit(Towel.StepRef<T> to Towel.StepRefRuntime<T>)
  fullName.vb: Towel.StepRefRuntime(Of T).Widening(Towel.StepRef(Of T) to Towel.StepRefRuntime(Of T))
  nameWithType: StepRefRuntime<T>.Implicit(StepRef<T> to StepRefRuntime<T>)
  nameWithType.vb: StepRefRuntime(Of T).Widening(StepRef(Of T) to StepRefRuntime(Of T))
- uid: Towel.StepRefRuntime`1.op_Implicit*
  name: Implicit
  href: api/Towel.StepRefRuntime-1.html#Towel_StepRefRuntime_1_op_Implicit_
  commentId: Overload:Towel.StepRefRuntime`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepRefRuntime<T>.Implicit
  fullName.vb: Towel.StepRefRuntime(Of T).Widening
  nameWithType: StepRefRuntime<T>.Implicit
  nameWithType.vb: StepRefRuntime(Of T).Widening
- uid: Towel.StepStatus
  name: StepStatus
  href: api/Towel.StepStatus.html
  commentId: T:Towel.StepStatus
  fullName: Towel.StepStatus
  nameWithType: StepStatus
- uid: Towel.StepStatus.Break
  name: Break
  href: api/Towel.StepStatus.html#Towel_StepStatus_Break
  commentId: F:Towel.StepStatus.Break
  fullName: Towel.StepStatus.Break
  nameWithType: StepStatus.Break
- uid: Towel.StepStatus.Continue
  name: Continue
  href: api/Towel.StepStatus.html#Towel_StepStatus_Continue
  commentId: F:Towel.StepStatus.Continue
  fullName: Towel.StepStatus.Continue
  nameWithType: StepStatus.Continue
- uid: Towel.StepToStepRef`2
  name: StepToStepRef<T, Step>
  href: api/Towel.StepToStepRef-2.html
  commentId: T:Towel.StepToStepRef`2
  name.vb: StepToStepRef(Of T, Step)
  fullName: Towel.StepToStepRef<T, Step>
  fullName.vb: Towel.StepToStepRef(Of T, Step)
  nameWithType: StepToStepRef<T, Step>
  nameWithType.vb: StepToStepRef(Of T, Step)
- uid: Towel.StepToStepRef`2.Do(`0@)
  name: Do(ref T)
  href: api/Towel.StepToStepRef-2.html#Towel_StepToStepRef_2_Do__0__
  commentId: M:Towel.StepToStepRef`2.Do(`0@)
  name.vb: Do(ByRef T)
  fullName: Towel.StepToStepRef<T, Step>.Do(ref T)
  fullName.vb: Towel.StepToStepRef(Of T, Step).Do(ByRef T)
  nameWithType: StepToStepRef<T, Step>.Do(ref T)
  nameWithType.vb: StepToStepRef(Of T, Step).Do(ByRef T)
- uid: Towel.StepToStepRef`2.Do*
  name: Do
  href: api/Towel.StepToStepRef-2.html#Towel_StepToStepRef_2_Do_
  commentId: Overload:Towel.StepToStepRef`2.Do
  isSpec: "True"
  fullName: Towel.StepToStepRef<T, Step>.Do
  fullName.vb: Towel.StepToStepRef(Of T, Step).Do
  nameWithType: StepToStepRef<T, Step>.Do
  nameWithType.vb: StepToStepRef(Of T, Step).Do
- uid: Towel.StepToStepRef`2.op_Implicit(`1)~Towel.StepToStepRef{`0,`1}
  name: Implicit(Step to StepToStepRef<T, Step>)
  href: api/Towel.StepToStepRef-2.html#Towel_StepToStepRef_2_op_Implicit__1__Towel_StepToStepRef__0__1_
  commentId: M:Towel.StepToStepRef`2.op_Implicit(`1)~Towel.StepToStepRef{`0,`1}
  name.vb: Widening(Step to StepToStepRef(Of T, Step))
  fullName: Towel.StepToStepRef<T, Step>.Implicit(Step to Towel.StepToStepRef<T, Step>)
  fullName.vb: Towel.StepToStepRef(Of T, Step).Widening(Step to Towel.StepToStepRef(Of T, Step))
  nameWithType: StepToStepRef<T, Step>.Implicit(Step to StepToStepRef<T, Step>)
  nameWithType.vb: StepToStepRef(Of T, Step).Widening(Step to StepToStepRef(Of T, Step))
- uid: Towel.StepToStepRef`2.op_Implicit*
  name: Implicit
  href: api/Towel.StepToStepRef-2.html#Towel_StepToStepRef_2_op_Implicit_
  commentId: Overload:Towel.StepToStepRef`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Towel.StepToStepRef<T, Step>.Implicit
  fullName.vb: Towel.StepToStepRef(Of T, Step).Widening
  nameWithType: StepToStepRef<T, Step>.Implicit
  nameWithType.vb: StepToStepRef(Of T, Step).Widening
- uid: Towel.TagAttribute
  name: TagAttribute
  href: api/Towel.TagAttribute.html
  commentId: T:Towel.TagAttribute
  fullName: Towel.TagAttribute
  nameWithType: TagAttribute
- uid: Towel.TagAttribute.#ctor(System.Object,System.Object)
  name: TagAttribute(Object, Object)
  href: api/Towel.TagAttribute.html#Towel_TagAttribute__ctor_System_Object_System_Object_
  commentId: M:Towel.TagAttribute.#ctor(System.Object,System.Object)
  fullName: Towel.TagAttribute.TagAttribute(System.Object, System.Object)
  nameWithType: TagAttribute.TagAttribute(Object, Object)
- uid: Towel.TagAttribute.#ctor*
  name: TagAttribute
  href: api/Towel.TagAttribute.html#Towel_TagAttribute__ctor_
  commentId: Overload:Towel.TagAttribute.#ctor
  isSpec: "True"
  fullName: Towel.TagAttribute.TagAttribute
  nameWithType: TagAttribute.TagAttribute
- uid: Towel.TagAttributeExtensions
  name: TagAttributeExtensions
  href: api/Towel.TagAttributeExtensions.html
  commentId: T:Towel.TagAttributeExtensions
  fullName: Towel.TagAttributeExtensions
  nameWithType: TagAttributeExtensions
- uid: Towel.TagAttributeExtensions.GetTag(MemberInfo,System.Object)
  name: GetTag(MemberInfo, Object)
  href: api/Towel.TagAttributeExtensions.html#Towel_TagAttributeExtensions_GetTag_MemberInfo_System_Object_
  commentId: M:Towel.TagAttributeExtensions.GetTag(MemberInfo,System.Object)
  fullName: Towel.TagAttributeExtensions.GetTag(MemberInfo, System.Object)
  nameWithType: TagAttributeExtensions.GetTag(MemberInfo, Object)
- uid: Towel.TagAttributeExtensions.GetTag(ParameterInfo,System.Object)
  name: GetTag(ParameterInfo, Object)
  href: api/Towel.TagAttributeExtensions.html#Towel_TagAttributeExtensions_GetTag_ParameterInfo_System_Object_
  commentId: M:Towel.TagAttributeExtensions.GetTag(ParameterInfo,System.Object)
  fullName: Towel.TagAttributeExtensions.GetTag(ParameterInfo, System.Object)
  nameWithType: TagAttributeExtensions.GetTag(ParameterInfo, Object)
- uid: Towel.TagAttributeExtensions.GetTag*
  name: GetTag
  href: api/Towel.TagAttributeExtensions.html#Towel_TagAttributeExtensions_GetTag_
  commentId: Overload:Towel.TagAttributeExtensions.GetTag
  isSpec: "True"
  fullName: Towel.TagAttributeExtensions.GetTag
  nameWithType: TagAttributeExtensions.GetTag
- uid: Towel.TowelBugException
  name: TowelBugException
  href: api/Towel.TowelBugException.html
  commentId: T:Towel.TowelBugException
  fullName: Towel.TowelBugException
  nameWithType: TowelBugException
- uid: Towel.TowelBugException.#ctor(System.String)
  name: TowelBugException(String)
  href: api/Towel.TowelBugException.html#Towel_TowelBugException__ctor_System_String_
  commentId: M:Towel.TowelBugException.#ctor(System.String)
  fullName: Towel.TowelBugException.TowelBugException(System.String)
  nameWithType: TowelBugException.TowelBugException(String)
- uid: Towel.TowelBugException.#ctor(System.String,Exception)
  name: TowelBugException(String, Exception)
  href: api/Towel.TowelBugException.html#Towel_TowelBugException__ctor_System_String_Exception_
  commentId: M:Towel.TowelBugException.#ctor(System.String,Exception)
  fullName: Towel.TowelBugException.TowelBugException(System.String, Exception)
  nameWithType: TowelBugException.TowelBugException(String, Exception)
- uid: Towel.TowelBugException.#ctor*
  name: TowelBugException
  href: api/Towel.TowelBugException.html#Towel_TowelBugException__ctor_
  commentId: Overload:Towel.TowelBugException.#ctor
  isSpec: "True"
  fullName: Towel.TowelBugException.TowelBugException
  nameWithType: TowelBugException.TowelBugException
